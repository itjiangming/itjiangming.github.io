(window.webpackJsonp=window.webpackJsonp||[]).push([[0],[]]);!function(t){function e(e){for(var r,a,s=e[0],c=e[1],l=e[2],p=0,d=[];p<s.length;p++)a=s[p],Object.prototype.hasOwnProperty.call(o,a)&&o[a]&&d.push(o[a][0]),o[a]=0;for(r in c)Object.prototype.hasOwnProperty.call(c,r)&&(t[r]=c[r]);for(u&&u(e);d.length;)d.shift()();return i.push.apply(i,l||[]),n()}function n(){for(var t,e=0;e<i.length;e++){for(var n=i[e],r=!0,s=1;s<n.length;s++){var c=n[s];0!==o[c]&&(r=!1)}r&&(i.splice(e--,1),t=a(a.s=n[0]))}return t}var r={},o={2:0},i=[];function a(e){if(r[e])return r[e].exports;var n=r[e]={i:e,l:!1,exports:{}};return t[e].call(n.exports,n,n.exports,a),n.l=!0,n.exports}a.e=function(t){var e=[],n=o[t];if(0!==n)if(n)e.push(n[2]);else{var r=new Promise((function(e,r){n=o[t]=[e,r]}));e.push(n[2]=r);var i,s=document.createElement("script");s.charset="utf-8",s.timeout=120,a.nc&&s.setAttribute("nonce",a.nc),s.src=function(t){return a.p+"assets/js/"+({}[t]||t)+"."+{1:"a0448a14",3:"5ac42903",4:"c7e0c139",5:"d069bf1e",6:"5c525374",7:"c073155c",8:"5b350b68",9:"138c8d64",10:"475bb374",11:"027c91f1",12:"9522502e",13:"5f44a0f0",14:"c3351711",15:"6becf818",16:"3553b6b8",17:"d57c8e6a",18:"583d6136",19:"3e766c38",20:"1ce0925b",21:"123447c2",22:"f8a77195",23:"16b15ec0",24:"98b17535",25:"fefdf5d0",26:"8c78a62f",27:"fc925b24",28:"063aac64",29:"ecf8fb91",30:"321735a8",31:"25fb421b",32:"b95b960d",33:"fc1c96e0",34:"80e33b63",35:"54b1ce8d",36:"58aa07b8",37:"53187451",38:"113cc1b9",39:"737ef66a",40:"fbb897dc",41:"93cbb5ad",42:"37160152",43:"0f584c6c",44:"68af5a6d",45:"7ea5fbd5"}[t]+".js"}(t);var c=new Error;i=function(e){s.onerror=s.onload=null,clearTimeout(l);var n=o[t];if(0!==n){if(n){var r=e&&("load"===e.type?"missing":e.type),i=e&&e.target&&e.target.src;c.message="Loading chunk "+t+" failed.\n("+r+": "+i+")",c.name="ChunkLoadError",c.type=r,c.request=i,n[1](c)}o[t]=void 0}};var l=setTimeout((function(){i({type:"timeout",target:s})}),12e4);s.onerror=s.onload=i,document.head.appendChild(s)}return Promise.all(e)},a.m=t,a.c=r,a.d=function(t,e,n){a.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:n})},a.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},a.t=function(t,e){if(1&e&&(t=a(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var n=Object.create(null);if(a.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var r in t)a.d(n,r,function(e){return t[e]}.bind(null,r));return n},a.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return a.d(e,"a",e),e},a.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},a.p="/",a.oe=function(t){throw console.error(t),t};var s=window.webpackJsonp=window.webpackJsonp||[],c=s.push.bind(s);s.push=e,s=s.slice();for(var l=0;l<s.length;l++)e(s[l]);var u=c;i.push([240,0]),n()}([function(t,e,n){"use strict";n.r(e);
/*!
 * Vue.js v2.6.12
 * (c) 2014-2020 Evan You
 * Released under the MIT License.
 */
var r=Object.freeze({});function o(t){return null==t}function i(t){return null!=t}function a(t){return!0===t}function s(t){return"string"==typeof t||"number"==typeof t||"symbol"==typeof t||"boolean"==typeof t}function c(t){return null!==t&&"object"==typeof t}var l=Object.prototype.toString;function u(t){return"[object Object]"===l.call(t)}function p(t){return"[object RegExp]"===l.call(t)}function d(t){var e=parseFloat(String(t));return e>=0&&Math.floor(e)===e&&isFinite(t)}function h(t){return i(t)&&"function"==typeof t.then&&"function"==typeof t.catch}function f(t){return null==t?"":Array.isArray(t)||u(t)&&t.toString===l?JSON.stringify(t,null,2):String(t)}function v(t){var e=parseFloat(t);return isNaN(e)?t:e}function b(t,e){for(var n=Object.create(null),r=t.split(","),o=0;o<r.length;o++)n[r[o]]=!0;return e?function(t){return n[t.toLowerCase()]}:function(t){return n[t]}}b("slot,component",!0);var m=b("key,ref,slot,slot-scope,is");function g(t,e){if(t.length){var n=t.indexOf(e);if(n>-1)return t.splice(n,1)}}var y=Object.prototype.hasOwnProperty;function _(t,e){return y.call(t,e)}function x(t){var e=Object.create(null);return function(n){return e[n]||(e[n]=t(n))}}var w=/-(\w)/g,S=x((function(t){return t.replace(w,(function(t,e){return e?e.toUpperCase():""}))})),O=x((function(t){return t.charAt(0).toUpperCase()+t.slice(1)})),$=/\B([A-Z])/g,T=x((function(t){return t.replace($,"-$1").toLowerCase()}));var E=Function.prototype.bind?function(t,e){return t.bind(e)}:function(t,e){function n(n){var r=arguments.length;return r?r>1?t.apply(e,arguments):t.call(e,n):t.call(e)}return n._length=t.length,n};function C(t,e){e=e||0;for(var n=t.length-e,r=new Array(n);n--;)r[n]=t[n+e];return r}function I(t,e){for(var n in e)t[n]=e[n];return t}function A(t){for(var e={},n=0;n<t.length;n++)t[n]&&I(e,t[n]);return e}function k(t,e,n){}var L=function(t,e,n){return!1},P=function(t){return t};function M(t,e){if(t===e)return!0;var n=c(t),r=c(e);if(!n||!r)return!n&&!r&&String(t)===String(e);try{var o=Array.isArray(t),i=Array.isArray(e);if(o&&i)return t.length===e.length&&t.every((function(t,n){return M(t,e[n])}));if(t instanceof Date&&e instanceof Date)return t.getTime()===e.getTime();if(o||i)return!1;var a=Object.keys(t),s=Object.keys(e);return a.length===s.length&&a.every((function(n){return M(t[n],e[n])}))}catch(t){return!1}}function N(t,e){for(var n=0;n<t.length;n++)if(M(t[n],e))return n;return-1}function D(t){var e=!1;return function(){e||(e=!0,t.apply(this,arguments))}}var j=["component","directive","filter"],R=["beforeCreate","created","beforeMount","mounted","beforeUpdate","updated","beforeDestroy","destroyed","activated","deactivated","errorCaptured","serverPrefetch"],F={optionMergeStrategies:Object.create(null),silent:!1,productionTip:!1,devtools:!1,performance:!1,errorHandler:null,warnHandler:null,ignoredElements:[],keyCodes:Object.create(null),isReservedTag:L,isReservedAttr:L,isUnknownElement:L,getTagNamespace:k,parsePlatformTagName:P,mustUseProp:L,async:!0,_lifecycleHooks:R},U=/a-zA-Z\u00B7\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u037D\u037F-\u1FFF\u200C-\u200D\u203F-\u2040\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD/;function B(t,e,n,r){Object.defineProperty(t,e,{value:n,enumerable:!!r,writable:!0,configurable:!0})}var z=new RegExp("[^"+U.source+".$_\\d]");var G,V="__proto__"in{},J="undefined"!=typeof window,H="undefined"!=typeof WXEnvironment&&!!WXEnvironment.platform,W=H&&WXEnvironment.platform.toLowerCase(),q=J&&window.navigator.userAgent.toLowerCase(),Y=q&&/msie|trident/.test(q),X=q&&q.indexOf("msie 9.0")>0,Q=q&&q.indexOf("edge/")>0,K=(q&&q.indexOf("android"),q&&/iphone|ipad|ipod|ios/.test(q)||"ios"===W),Z=(q&&/chrome\/\d+/.test(q),q&&/phantomjs/.test(q),q&&q.match(/firefox\/(\d+)/)),tt={}.watch,et=!1;if(J)try{var nt={};Object.defineProperty(nt,"passive",{get:function(){et=!0}}),window.addEventListener("test-passive",null,nt)}catch(t){}var rt=function(){return void 0===G&&(G=!J&&!H&&"undefined"!=typeof global&&(global.process&&"server"===global.process.env.VUE_ENV)),G},ot=J&&window.__VUE_DEVTOOLS_GLOBAL_HOOK__;function it(t){return"function"==typeof t&&/native code/.test(t.toString())}var at,st="undefined"!=typeof Symbol&&it(Symbol)&&"undefined"!=typeof Reflect&&it(Reflect.ownKeys);at="undefined"!=typeof Set&&it(Set)?Set:function(){function t(){this.set=Object.create(null)}return t.prototype.has=function(t){return!0===this.set[t]},t.prototype.add=function(t){this.set[t]=!0},t.prototype.clear=function(){this.set=Object.create(null)},t}();var ct=k,lt=0,ut=function(){this.id=lt++,this.subs=[]};ut.prototype.addSub=function(t){this.subs.push(t)},ut.prototype.removeSub=function(t){g(this.subs,t)},ut.prototype.depend=function(){ut.target&&ut.target.addDep(this)},ut.prototype.notify=function(){var t=this.subs.slice();for(var e=0,n=t.length;e<n;e++)t[e].update()},ut.target=null;var pt=[];function dt(t){pt.push(t),ut.target=t}function ht(){pt.pop(),ut.target=pt[pt.length-1]}var ft=function(t,e,n,r,o,i,a,s){this.tag=t,this.data=e,this.children=n,this.text=r,this.elm=o,this.ns=void 0,this.context=i,this.fnContext=void 0,this.fnOptions=void 0,this.fnScopeId=void 0,this.key=e&&e.key,this.componentOptions=a,this.componentInstance=void 0,this.parent=void 0,this.raw=!1,this.isStatic=!1,this.isRootInsert=!0,this.isComment=!1,this.isCloned=!1,this.isOnce=!1,this.asyncFactory=s,this.asyncMeta=void 0,this.isAsyncPlaceholder=!1},vt={child:{configurable:!0}};vt.child.get=function(){return this.componentInstance},Object.defineProperties(ft.prototype,vt);var bt=function(t){void 0===t&&(t="");var e=new ft;return e.text=t,e.isComment=!0,e};function mt(t){return new ft(void 0,void 0,void 0,String(t))}function gt(t){var e=new ft(t.tag,t.data,t.children&&t.children.slice(),t.text,t.elm,t.context,t.componentOptions,t.asyncFactory);return e.ns=t.ns,e.isStatic=t.isStatic,e.key=t.key,e.isComment=t.isComment,e.fnContext=t.fnContext,e.fnOptions=t.fnOptions,e.fnScopeId=t.fnScopeId,e.asyncMeta=t.asyncMeta,e.isCloned=!0,e}var yt=Array.prototype,_t=Object.create(yt);["push","pop","shift","unshift","splice","sort","reverse"].forEach((function(t){var e=yt[t];B(_t,t,(function(){for(var n=[],r=arguments.length;r--;)n[r]=arguments[r];var o,i=e.apply(this,n),a=this.__ob__;switch(t){case"push":case"unshift":o=n;break;case"splice":o=n.slice(2)}return o&&a.observeArray(o),a.dep.notify(),i}))}));var xt=Object.getOwnPropertyNames(_t),wt=!0;function St(t){wt=t}var Ot=function(t){this.value=t,this.dep=new ut,this.vmCount=0,B(t,"__ob__",this),Array.isArray(t)?(V?function(t,e){t.__proto__=e}(t,_t):function(t,e,n){for(var r=0,o=n.length;r<o;r++){var i=n[r];B(t,i,e[i])}}(t,_t,xt),this.observeArray(t)):this.walk(t)};function $t(t,e){var n;if(c(t)&&!(t instanceof ft))return _(t,"__ob__")&&t.__ob__ instanceof Ot?n=t.__ob__:wt&&!rt()&&(Array.isArray(t)||u(t))&&Object.isExtensible(t)&&!t._isVue&&(n=new Ot(t)),e&&n&&n.vmCount++,n}function Tt(t,e,n,r,o){var i=new ut,a=Object.getOwnPropertyDescriptor(t,e);if(!a||!1!==a.configurable){var s=a&&a.get,c=a&&a.set;s&&!c||2!==arguments.length||(n=t[e]);var l=!o&&$t(n);Object.defineProperty(t,e,{enumerable:!0,configurable:!0,get:function(){var e=s?s.call(t):n;return ut.target&&(i.depend(),l&&(l.dep.depend(),Array.isArray(e)&&It(e))),e},set:function(e){var r=s?s.call(t):n;e===r||e!=e&&r!=r||s&&!c||(c?c.call(t,e):n=e,l=!o&&$t(e),i.notify())}})}}function Et(t,e,n){if(Array.isArray(t)&&d(e))return t.length=Math.max(t.length,e),t.splice(e,1,n),n;if(e in t&&!(e in Object.prototype))return t[e]=n,n;var r=t.__ob__;return t._isVue||r&&r.vmCount?n:r?(Tt(r.value,e,n),r.dep.notify(),n):(t[e]=n,n)}function Ct(t,e){if(Array.isArray(t)&&d(e))t.splice(e,1);else{var n=t.__ob__;t._isVue||n&&n.vmCount||_(t,e)&&(delete t[e],n&&n.dep.notify())}}function It(t){for(var e=void 0,n=0,r=t.length;n<r;n++)(e=t[n])&&e.__ob__&&e.__ob__.dep.depend(),Array.isArray(e)&&It(e)}Ot.prototype.walk=function(t){for(var e=Object.keys(t),n=0;n<e.length;n++)Tt(t,e[n])},Ot.prototype.observeArray=function(t){for(var e=0,n=t.length;e<n;e++)$t(t[e])};var At=F.optionMergeStrategies;function kt(t,e){if(!e)return t;for(var n,r,o,i=st?Reflect.ownKeys(e):Object.keys(e),a=0;a<i.length;a++)"__ob__"!==(n=i[a])&&(r=t[n],o=e[n],_(t,n)?r!==o&&u(r)&&u(o)&&kt(r,o):Et(t,n,o));return t}function Lt(t,e,n){return n?function(){var r="function"==typeof e?e.call(n,n):e,o="function"==typeof t?t.call(n,n):t;return r?kt(r,o):o}:e?t?function(){return kt("function"==typeof e?e.call(this,this):e,"function"==typeof t?t.call(this,this):t)}:e:t}function Pt(t,e){var n=e?t?t.concat(e):Array.isArray(e)?e:[e]:t;return n?function(t){for(var e=[],n=0;n<t.length;n++)-1===e.indexOf(t[n])&&e.push(t[n]);return e}(n):n}function Mt(t,e,n,r){var o=Object.create(t||null);return e?I(o,e):o}At.data=function(t,e,n){return n?Lt(t,e,n):e&&"function"!=typeof e?t:Lt(t,e)},R.forEach((function(t){At[t]=Pt})),j.forEach((function(t){At[t+"s"]=Mt})),At.watch=function(t,e,n,r){if(t===tt&&(t=void 0),e===tt&&(e=void 0),!e)return Object.create(t||null);if(!t)return e;var o={};for(var i in I(o,t),e){var a=o[i],s=e[i];a&&!Array.isArray(a)&&(a=[a]),o[i]=a?a.concat(s):Array.isArray(s)?s:[s]}return o},At.props=At.methods=At.inject=At.computed=function(t,e,n,r){if(!t)return e;var o=Object.create(null);return I(o,t),e&&I(o,e),o},At.provide=Lt;var Nt=function(t,e){return void 0===e?t:e};function Dt(t,e,n){if("function"==typeof e&&(e=e.options),function(t,e){var n=t.props;if(n){var r,o,i={};if(Array.isArray(n))for(r=n.length;r--;)"string"==typeof(o=n[r])&&(i[S(o)]={type:null});else if(u(n))for(var a in n)o=n[a],i[S(a)]=u(o)?o:{type:o};else 0;t.props=i}}(e),function(t,e){var n=t.inject;if(n){var r=t.inject={};if(Array.isArray(n))for(var o=0;o<n.length;o++)r[n[o]]={from:n[o]};else if(u(n))for(var i in n){var a=n[i];r[i]=u(a)?I({from:i},a):{from:a}}else 0}}(e),function(t){var e=t.directives;if(e)for(var n in e){var r=e[n];"function"==typeof r&&(e[n]={bind:r,update:r})}}(e),!e._base&&(e.extends&&(t=Dt(t,e.extends,n)),e.mixins))for(var r=0,o=e.mixins.length;r<o;r++)t=Dt(t,e.mixins[r],n);var i,a={};for(i in t)s(i);for(i in e)_(t,i)||s(i);function s(r){var o=At[r]||Nt;a[r]=o(t[r],e[r],n,r)}return a}function jt(t,e,n,r){if("string"==typeof n){var o=t[e];if(_(o,n))return o[n];var i=S(n);if(_(o,i))return o[i];var a=O(i);return _(o,a)?o[a]:o[n]||o[i]||o[a]}}function Rt(t,e,n,r){var o=e[t],i=!_(n,t),a=n[t],s=Bt(Boolean,o.type);if(s>-1)if(i&&!_(o,"default"))a=!1;else if(""===a||a===T(t)){var c=Bt(String,o.type);(c<0||s<c)&&(a=!0)}if(void 0===a){a=function(t,e,n){if(!_(e,"default"))return;var r=e.default;0;if(t&&t.$options.propsData&&void 0===t.$options.propsData[n]&&void 0!==t._props[n])return t._props[n];return"function"==typeof r&&"Function"!==Ft(e.type)?r.call(t):r}(r,o,t);var l=wt;St(!0),$t(a),St(l)}return a}function Ft(t){var e=t&&t.toString().match(/^\s*function (\w+)/);return e?e[1]:""}function Ut(t,e){return Ft(t)===Ft(e)}function Bt(t,e){if(!Array.isArray(e))return Ut(e,t)?0:-1;for(var n=0,r=e.length;n<r;n++)if(Ut(e[n],t))return n;return-1}function zt(t,e,n){dt();try{if(e)for(var r=e;r=r.$parent;){var o=r.$options.errorCaptured;if(o)for(var i=0;i<o.length;i++)try{if(!1===o[i].call(r,t,e,n))return}catch(t){Vt(t,r,"errorCaptured hook")}}Vt(t,e,n)}finally{ht()}}function Gt(t,e,n,r,o){var i;try{(i=n?t.apply(e,n):t.call(e))&&!i._isVue&&h(i)&&!i._handled&&(i.catch((function(t){return zt(t,r,o+" (Promise/async)")})),i._handled=!0)}catch(t){zt(t,r,o)}return i}function Vt(t,e,n){if(F.errorHandler)try{return F.errorHandler.call(null,t,e,n)}catch(e){e!==t&&Jt(e,null,"config.errorHandler")}Jt(t,e,n)}function Jt(t,e,n){if(!J&&!H||"undefined"==typeof console)throw t;console.error(t)}var Ht,Wt=!1,qt=[],Yt=!1;function Xt(){Yt=!1;var t=qt.slice(0);qt.length=0;for(var e=0;e<t.length;e++)t[e]()}if("undefined"!=typeof Promise&&it(Promise)){var Qt=Promise.resolve();Ht=function(){Qt.then(Xt),K&&setTimeout(k)},Wt=!0}else if(Y||"undefined"==typeof MutationObserver||!it(MutationObserver)&&"[object MutationObserverConstructor]"!==MutationObserver.toString())Ht="undefined"!=typeof setImmediate&&it(setImmediate)?function(){setImmediate(Xt)}:function(){setTimeout(Xt,0)};else{var Kt=1,Zt=new MutationObserver(Xt),te=document.createTextNode(String(Kt));Zt.observe(te,{characterData:!0}),Ht=function(){Kt=(Kt+1)%2,te.data=String(Kt)},Wt=!0}function ee(t,e){var n;if(qt.push((function(){if(t)try{t.call(e)}catch(t){zt(t,e,"nextTick")}else n&&n(e)})),Yt||(Yt=!0,Ht()),!t&&"undefined"!=typeof Promise)return new Promise((function(t){n=t}))}var ne=new at;function re(t){!function t(e,n){var r,o,i=Array.isArray(e);if(!i&&!c(e)||Object.isFrozen(e)||e instanceof ft)return;if(e.__ob__){var a=e.__ob__.dep.id;if(n.has(a))return;n.add(a)}if(i)for(r=e.length;r--;)t(e[r],n);else for(o=Object.keys(e),r=o.length;r--;)t(e[o[r]],n)}(t,ne),ne.clear()}var oe=x((function(t){var e="&"===t.charAt(0),n="~"===(t=e?t.slice(1):t).charAt(0),r="!"===(t=n?t.slice(1):t).charAt(0);return{name:t=r?t.slice(1):t,once:n,capture:r,passive:e}}));function ie(t,e){function n(){var t=arguments,r=n.fns;if(!Array.isArray(r))return Gt(r,null,arguments,e,"v-on handler");for(var o=r.slice(),i=0;i<o.length;i++)Gt(o[i],null,t,e,"v-on handler")}return n.fns=t,n}function ae(t,e,n,r,i,s){var c,l,u,p;for(c in t)l=t[c],u=e[c],p=oe(c),o(l)||(o(u)?(o(l.fns)&&(l=t[c]=ie(l,s)),a(p.once)&&(l=t[c]=i(p.name,l,p.capture)),n(p.name,l,p.capture,p.passive,p.params)):l!==u&&(u.fns=l,t[c]=u));for(c in e)o(t[c])&&r((p=oe(c)).name,e[c],p.capture)}function se(t,e,n){var r;t instanceof ft&&(t=t.data.hook||(t.data.hook={}));var s=t[e];function c(){n.apply(this,arguments),g(r.fns,c)}o(s)?r=ie([c]):i(s.fns)&&a(s.merged)?(r=s).fns.push(c):r=ie([s,c]),r.merged=!0,t[e]=r}function ce(t,e,n,r,o){if(i(e)){if(_(e,n))return t[n]=e[n],o||delete e[n],!0;if(_(e,r))return t[n]=e[r],o||delete e[r],!0}return!1}function le(t){return s(t)?[mt(t)]:Array.isArray(t)?function t(e,n){var r,c,l,u,p=[];for(r=0;r<e.length;r++)o(c=e[r])||"boolean"==typeof c||(l=p.length-1,u=p[l],Array.isArray(c)?c.length>0&&(ue((c=t(c,(n||"")+"_"+r))[0])&&ue(u)&&(p[l]=mt(u.text+c[0].text),c.shift()),p.push.apply(p,c)):s(c)?ue(u)?p[l]=mt(u.text+c):""!==c&&p.push(mt(c)):ue(c)&&ue(u)?p[l]=mt(u.text+c.text):(a(e._isVList)&&i(c.tag)&&o(c.key)&&i(n)&&(c.key="__vlist"+n+"_"+r+"__"),p.push(c)));return p}(t):void 0}function ue(t){return i(t)&&i(t.text)&&!1===t.isComment}function pe(t,e){if(t){for(var n=Object.create(null),r=st?Reflect.ownKeys(t):Object.keys(t),o=0;o<r.length;o++){var i=r[o];if("__ob__"!==i){for(var a=t[i].from,s=e;s;){if(s._provided&&_(s._provided,a)){n[i]=s._provided[a];break}s=s.$parent}if(!s)if("default"in t[i]){var c=t[i].default;n[i]="function"==typeof c?c.call(e):c}else 0}}return n}}function de(t,e){if(!t||!t.length)return{};for(var n={},r=0,o=t.length;r<o;r++){var i=t[r],a=i.data;if(a&&a.attrs&&a.attrs.slot&&delete a.attrs.slot,i.context!==e&&i.fnContext!==e||!a||null==a.slot)(n.default||(n.default=[])).push(i);else{var s=a.slot,c=n[s]||(n[s]=[]);"template"===i.tag?c.push.apply(c,i.children||[]):c.push(i)}}for(var l in n)n[l].every(he)&&delete n[l];return n}function he(t){return t.isComment&&!t.asyncFactory||" "===t.text}function fe(t,e,n){var o,i=Object.keys(e).length>0,a=t?!!t.$stable:!i,s=t&&t.$key;if(t){if(t._normalized)return t._normalized;if(a&&n&&n!==r&&s===n.$key&&!i&&!n.$hasNormal)return n;for(var c in o={},t)t[c]&&"$"!==c[0]&&(o[c]=ve(e,c,t[c]))}else o={};for(var l in e)l in o||(o[l]=be(e,l));return t&&Object.isExtensible(t)&&(t._normalized=o),B(o,"$stable",a),B(o,"$key",s),B(o,"$hasNormal",i),o}function ve(t,e,n){var r=function(){var t=arguments.length?n.apply(null,arguments):n({});return(t=t&&"object"==typeof t&&!Array.isArray(t)?[t]:le(t))&&(0===t.length||1===t.length&&t[0].isComment)?void 0:t};return n.proxy&&Object.defineProperty(t,e,{get:r,enumerable:!0,configurable:!0}),r}function be(t,e){return function(){return t[e]}}function me(t,e){var n,r,o,a,s;if(Array.isArray(t)||"string"==typeof t)for(n=new Array(t.length),r=0,o=t.length;r<o;r++)n[r]=e(t[r],r);else if("number"==typeof t)for(n=new Array(t),r=0;r<t;r++)n[r]=e(r+1,r);else if(c(t))if(st&&t[Symbol.iterator]){n=[];for(var l=t[Symbol.iterator](),u=l.next();!u.done;)n.push(e(u.value,n.length)),u=l.next()}else for(a=Object.keys(t),n=new Array(a.length),r=0,o=a.length;r<o;r++)s=a[r],n[r]=e(t[s],s,r);return i(n)||(n=[]),n._isVList=!0,n}function ge(t,e,n,r){var o,i=this.$scopedSlots[t];i?(n=n||{},r&&(n=I(I({},r),n)),o=i(n)||e):o=this.$slots[t]||e;var a=n&&n.slot;return a?this.$createElement("template",{slot:a},o):o}function ye(t){return jt(this.$options,"filters",t)||P}function _e(t,e){return Array.isArray(t)?-1===t.indexOf(e):t!==e}function xe(t,e,n,r,o){var i=F.keyCodes[e]||n;return o&&r&&!F.keyCodes[e]?_e(o,r):i?_e(i,t):r?T(r)!==e:void 0}function we(t,e,n,r,o){if(n)if(c(n)){var i;Array.isArray(n)&&(n=A(n));var a=function(a){if("class"===a||"style"===a||m(a))i=t;else{var s=t.attrs&&t.attrs.type;i=r||F.mustUseProp(e,s,a)?t.domProps||(t.domProps={}):t.attrs||(t.attrs={})}var c=S(a),l=T(a);c in i||l in i||(i[a]=n[a],o&&((t.on||(t.on={}))["update:"+a]=function(t){n[a]=t}))};for(var s in n)a(s)}else;return t}function Se(t,e){var n=this._staticTrees||(this._staticTrees=[]),r=n[t];return r&&!e||$e(r=n[t]=this.$options.staticRenderFns[t].call(this._renderProxy,null,this),"__static__"+t,!1),r}function Oe(t,e,n){return $e(t,"__once__"+e+(n?"_"+n:""),!0),t}function $e(t,e,n){if(Array.isArray(t))for(var r=0;r<t.length;r++)t[r]&&"string"!=typeof t[r]&&Te(t[r],e+"_"+r,n);else Te(t,e,n)}function Te(t,e,n){t.isStatic=!0,t.key=e,t.isOnce=n}function Ee(t,e){if(e)if(u(e)){var n=t.on=t.on?I({},t.on):{};for(var r in e){var o=n[r],i=e[r];n[r]=o?[].concat(o,i):i}}else;return t}function Ce(t,e,n,r){e=e||{$stable:!n};for(var o=0;o<t.length;o++){var i=t[o];Array.isArray(i)?Ce(i,e,n):i&&(i.proxy&&(i.fn.proxy=!0),e[i.key]=i.fn)}return r&&(e.$key=r),e}function Ie(t,e){for(var n=0;n<e.length;n+=2){var r=e[n];"string"==typeof r&&r&&(t[e[n]]=e[n+1])}return t}function Ae(t,e){return"string"==typeof t?e+t:t}function ke(t){t._o=Oe,t._n=v,t._s=f,t._l=me,t._t=ge,t._q=M,t._i=N,t._m=Se,t._f=ye,t._k=xe,t._b=we,t._v=mt,t._e=bt,t._u=Ce,t._g=Ee,t._d=Ie,t._p=Ae}function Le(t,e,n,o,i){var s,c=this,l=i.options;_(o,"_uid")?(s=Object.create(o))._original=o:(s=o,o=o._original);var u=a(l._compiled),p=!u;this.data=t,this.props=e,this.children=n,this.parent=o,this.listeners=t.on||r,this.injections=pe(l.inject,o),this.slots=function(){return c.$slots||fe(t.scopedSlots,c.$slots=de(n,o)),c.$slots},Object.defineProperty(this,"scopedSlots",{enumerable:!0,get:function(){return fe(t.scopedSlots,this.slots())}}),u&&(this.$options=l,this.$slots=this.slots(),this.$scopedSlots=fe(t.scopedSlots,this.$slots)),l._scopeId?this._c=function(t,e,n,r){var i=Fe(s,t,e,n,r,p);return i&&!Array.isArray(i)&&(i.fnScopeId=l._scopeId,i.fnContext=o),i}:this._c=function(t,e,n,r){return Fe(s,t,e,n,r,p)}}function Pe(t,e,n,r,o){var i=gt(t);return i.fnContext=n,i.fnOptions=r,e.slot&&((i.data||(i.data={})).slot=e.slot),i}function Me(t,e){for(var n in e)t[S(n)]=e[n]}ke(Le.prototype);var Ne={init:function(t,e){if(t.componentInstance&&!t.componentInstance._isDestroyed&&t.data.keepAlive){var n=t;Ne.prepatch(n,n)}else{(t.componentInstance=function(t,e){var n={_isComponent:!0,_parentVnode:t,parent:e},r=t.data.inlineTemplate;i(r)&&(n.render=r.render,n.staticRenderFns=r.staticRenderFns);return new t.componentOptions.Ctor(n)}(t,Ye)).$mount(e?t.elm:void 0,e)}},prepatch:function(t,e){var n=e.componentOptions;!function(t,e,n,o,i){0;var a=o.data.scopedSlots,s=t.$scopedSlots,c=!!(a&&!a.$stable||s!==r&&!s.$stable||a&&t.$scopedSlots.$key!==a.$key),l=!!(i||t.$options._renderChildren||c);t.$options._parentVnode=o,t.$vnode=o,t._vnode&&(t._vnode.parent=o);if(t.$options._renderChildren=i,t.$attrs=o.data.attrs||r,t.$listeners=n||r,e&&t.$options.props){St(!1);for(var u=t._props,p=t.$options._propKeys||[],d=0;d<p.length;d++){var h=p[d],f=t.$options.props;u[h]=Rt(h,f,e,t)}St(!0),t.$options.propsData=e}n=n||r;var v=t.$options._parentListeners;t.$options._parentListeners=n,qe(t,n,v),l&&(t.$slots=de(i,o.context),t.$forceUpdate());0}(e.componentInstance=t.componentInstance,n.propsData,n.listeners,e,n.children)},insert:function(t){var e,n=t.context,r=t.componentInstance;r._isMounted||(r._isMounted=!0,Ze(r,"mounted")),t.data.keepAlive&&(n._isMounted?((e=r)._inactive=!1,en.push(e)):Ke(r,!0))},destroy:function(t){var e=t.componentInstance;e._isDestroyed||(t.data.keepAlive?function t(e,n){if(n&&(e._directInactive=!0,Qe(e)))return;if(!e._inactive){e._inactive=!0;for(var r=0;r<e.$children.length;r++)t(e.$children[r]);Ze(e,"deactivated")}}(e,!0):e.$destroy())}},De=Object.keys(Ne);function je(t,e,n,s,l){if(!o(t)){var u=n.$options._base;if(c(t)&&(t=u.extend(t)),"function"==typeof t){var p;if(o(t.cid)&&void 0===(t=function(t,e){if(a(t.error)&&i(t.errorComp))return t.errorComp;if(i(t.resolved))return t.resolved;var n=Be;n&&i(t.owners)&&-1===t.owners.indexOf(n)&&t.owners.push(n);if(a(t.loading)&&i(t.loadingComp))return t.loadingComp;if(n&&!i(t.owners)){var r=t.owners=[n],s=!0,l=null,u=null;n.$on("hook:destroyed",(function(){return g(r,n)}));var p=function(t){for(var e=0,n=r.length;e<n;e++)r[e].$forceUpdate();t&&(r.length=0,null!==l&&(clearTimeout(l),l=null),null!==u&&(clearTimeout(u),u=null))},d=D((function(n){t.resolved=ze(n,e),s?r.length=0:p(!0)})),f=D((function(e){i(t.errorComp)&&(t.error=!0,p(!0))})),v=t(d,f);return c(v)&&(h(v)?o(t.resolved)&&v.then(d,f):h(v.component)&&(v.component.then(d,f),i(v.error)&&(t.errorComp=ze(v.error,e)),i(v.loading)&&(t.loadingComp=ze(v.loading,e),0===v.delay?t.loading=!0:l=setTimeout((function(){l=null,o(t.resolved)&&o(t.error)&&(t.loading=!0,p(!1))}),v.delay||200)),i(v.timeout)&&(u=setTimeout((function(){u=null,o(t.resolved)&&f(null)}),v.timeout)))),s=!1,t.loading?t.loadingComp:t.resolved}}(p=t,u)))return function(t,e,n,r,o){var i=bt();return i.asyncFactory=t,i.asyncMeta={data:e,context:n,children:r,tag:o},i}(p,e,n,s,l);e=e||{},wn(t),i(e.model)&&function(t,e){var n=t.model&&t.model.prop||"value",r=t.model&&t.model.event||"input";(e.attrs||(e.attrs={}))[n]=e.model.value;var o=e.on||(e.on={}),a=o[r],s=e.model.callback;i(a)?(Array.isArray(a)?-1===a.indexOf(s):a!==s)&&(o[r]=[s].concat(a)):o[r]=s}(t.options,e);var d=function(t,e,n){var r=e.options.props;if(!o(r)){var a={},s=t.attrs,c=t.props;if(i(s)||i(c))for(var l in r){var u=T(l);ce(a,c,l,u,!0)||ce(a,s,l,u,!1)}return a}}(e,t);if(a(t.options.functional))return function(t,e,n,o,a){var s=t.options,c={},l=s.props;if(i(l))for(var u in l)c[u]=Rt(u,l,e||r);else i(n.attrs)&&Me(c,n.attrs),i(n.props)&&Me(c,n.props);var p=new Le(n,c,a,o,t),d=s.render.call(null,p._c,p);if(d instanceof ft)return Pe(d,n,p.parent,s,p);if(Array.isArray(d)){for(var h=le(d)||[],f=new Array(h.length),v=0;v<h.length;v++)f[v]=Pe(h[v],n,p.parent,s,p);return f}}(t,d,e,n,s);var f=e.on;if(e.on=e.nativeOn,a(t.options.abstract)){var v=e.slot;e={},v&&(e.slot=v)}!function(t){for(var e=t.hook||(t.hook={}),n=0;n<De.length;n++){var r=De[n],o=e[r],i=Ne[r];o===i||o&&o._merged||(e[r]=o?Re(i,o):i)}}(e);var b=t.options.name||l;return new ft("vue-component-"+t.cid+(b?"-"+b:""),e,void 0,void 0,void 0,n,{Ctor:t,propsData:d,listeners:f,tag:l,children:s},p)}}}function Re(t,e){var n=function(n,r){t(n,r),e(n,r)};return n._merged=!0,n}function Fe(t,e,n,r,l,u){return(Array.isArray(n)||s(n))&&(l=r,r=n,n=void 0),a(u)&&(l=2),function(t,e,n,r,s){if(i(n)&&i(n.__ob__))return bt();i(n)&&i(n.is)&&(e=n.is);if(!e)return bt();0;Array.isArray(r)&&"function"==typeof r[0]&&((n=n||{}).scopedSlots={default:r[0]},r.length=0);2===s?r=le(r):1===s&&(r=function(t){for(var e=0;e<t.length;e++)if(Array.isArray(t[e]))return Array.prototype.concat.apply([],t);return t}(r));var l,u;if("string"==typeof e){var p;u=t.$vnode&&t.$vnode.ns||F.getTagNamespace(e),l=F.isReservedTag(e)?new ft(F.parsePlatformTagName(e),n,r,void 0,void 0,t):n&&n.pre||!i(p=jt(t.$options,"components",e))?new ft(e,n,r,void 0,void 0,t):je(p,n,t,r,e)}else l=je(e,n,t,r);return Array.isArray(l)?l:i(l)?(i(u)&&function t(e,n,r){e.ns=n,"foreignObject"===e.tag&&(n=void 0,r=!0);if(i(e.children))for(var s=0,c=e.children.length;s<c;s++){var l=e.children[s];i(l.tag)&&(o(l.ns)||a(r)&&"svg"!==l.tag)&&t(l,n,r)}}(l,u),i(n)&&function(t){c(t.style)&&re(t.style);c(t.class)&&re(t.class)}(n),l):bt()}(t,e,n,r,l)}var Ue,Be=null;function ze(t,e){return(t.__esModule||st&&"Module"===t[Symbol.toStringTag])&&(t=t.default),c(t)?e.extend(t):t}function Ge(t){return t.isComment&&t.asyncFactory}function Ve(t){if(Array.isArray(t))for(var e=0;e<t.length;e++){var n=t[e];if(i(n)&&(i(n.componentOptions)||Ge(n)))return n}}function Je(t,e){Ue.$on(t,e)}function He(t,e){Ue.$off(t,e)}function We(t,e){var n=Ue;return function r(){var o=e.apply(null,arguments);null!==o&&n.$off(t,r)}}function qe(t,e,n){Ue=t,ae(e,n||{},Je,He,We,t),Ue=void 0}var Ye=null;function Xe(t){var e=Ye;return Ye=t,function(){Ye=e}}function Qe(t){for(;t&&(t=t.$parent);)if(t._inactive)return!0;return!1}function Ke(t,e){if(e){if(t._directInactive=!1,Qe(t))return}else if(t._directInactive)return;if(t._inactive||null===t._inactive){t._inactive=!1;for(var n=0;n<t.$children.length;n++)Ke(t.$children[n]);Ze(t,"activated")}}function Ze(t,e){dt();var n=t.$options[e],r=e+" hook";if(n)for(var o=0,i=n.length;o<i;o++)Gt(n[o],t,null,t,r);t._hasHookEvent&&t.$emit("hook:"+e),ht()}var tn=[],en=[],nn={},rn=!1,on=!1,an=0;var sn=0,cn=Date.now;if(J&&!Y){var ln=window.performance;ln&&"function"==typeof ln.now&&cn()>document.createEvent("Event").timeStamp&&(cn=function(){return ln.now()})}function un(){var t,e;for(sn=cn(),on=!0,tn.sort((function(t,e){return t.id-e.id})),an=0;an<tn.length;an++)(t=tn[an]).before&&t.before(),e=t.id,nn[e]=null,t.run();var n=en.slice(),r=tn.slice();an=tn.length=en.length=0,nn={},rn=on=!1,function(t){for(var e=0;e<t.length;e++)t[e]._inactive=!0,Ke(t[e],!0)}(n),function(t){var e=t.length;for(;e--;){var n=t[e],r=n.vm;r._watcher===n&&r._isMounted&&!r._isDestroyed&&Ze(r,"updated")}}(r),ot&&F.devtools&&ot.emit("flush")}var pn=0,dn=function(t,e,n,r,o){this.vm=t,o&&(t._watcher=this),t._watchers.push(this),r?(this.deep=!!r.deep,this.user=!!r.user,this.lazy=!!r.lazy,this.sync=!!r.sync,this.before=r.before):this.deep=this.user=this.lazy=this.sync=!1,this.cb=n,this.id=++pn,this.active=!0,this.dirty=this.lazy,this.deps=[],this.newDeps=[],this.depIds=new at,this.newDepIds=new at,this.expression="","function"==typeof e?this.getter=e:(this.getter=function(t){if(!z.test(t)){var e=t.split(".");return function(t){for(var n=0;n<e.length;n++){if(!t)return;t=t[e[n]]}return t}}}(e),this.getter||(this.getter=k)),this.value=this.lazy?void 0:this.get()};dn.prototype.get=function(){var t;dt(this);var e=this.vm;try{t=this.getter.call(e,e)}catch(t){if(!this.user)throw t;zt(t,e,'getter for watcher "'+this.expression+'"')}finally{this.deep&&re(t),ht(),this.cleanupDeps()}return t},dn.prototype.addDep=function(t){var e=t.id;this.newDepIds.has(e)||(this.newDepIds.add(e),this.newDeps.push(t),this.depIds.has(e)||t.addSub(this))},dn.prototype.cleanupDeps=function(){for(var t=this.deps.length;t--;){var e=this.deps[t];this.newDepIds.has(e.id)||e.removeSub(this)}var n=this.depIds;this.depIds=this.newDepIds,this.newDepIds=n,this.newDepIds.clear(),n=this.deps,this.deps=this.newDeps,this.newDeps=n,this.newDeps.length=0},dn.prototype.update=function(){this.lazy?this.dirty=!0:this.sync?this.run():function(t){var e=t.id;if(null==nn[e]){if(nn[e]=!0,on){for(var n=tn.length-1;n>an&&tn[n].id>t.id;)n--;tn.splice(n+1,0,t)}else tn.push(t);rn||(rn=!0,ee(un))}}(this)},dn.prototype.run=function(){if(this.active){var t=this.get();if(t!==this.value||c(t)||this.deep){var e=this.value;if(this.value=t,this.user)try{this.cb.call(this.vm,t,e)}catch(t){zt(t,this.vm,'callback for watcher "'+this.expression+'"')}else this.cb.call(this.vm,t,e)}}},dn.prototype.evaluate=function(){this.value=this.get(),this.dirty=!1},dn.prototype.depend=function(){for(var t=this.deps.length;t--;)this.deps[t].depend()},dn.prototype.teardown=function(){if(this.active){this.vm._isBeingDestroyed||g(this.vm._watchers,this);for(var t=this.deps.length;t--;)this.deps[t].removeSub(this);this.active=!1}};var hn={enumerable:!0,configurable:!0,get:k,set:k};function fn(t,e,n){hn.get=function(){return this[e][n]},hn.set=function(t){this[e][n]=t},Object.defineProperty(t,n,hn)}function vn(t){t._watchers=[];var e=t.$options;e.props&&function(t,e){var n=t.$options.propsData||{},r=t._props={},o=t.$options._propKeys=[];t.$parent&&St(!1);var i=function(i){o.push(i);var a=Rt(i,e,n,t);Tt(r,i,a),i in t||fn(t,"_props",i)};for(var a in e)i(a);St(!0)}(t,e.props),e.methods&&function(t,e){t.$options.props;for(var n in e)t[n]="function"!=typeof e[n]?k:E(e[n],t)}(t,e.methods),e.data?function(t){var e=t.$options.data;u(e=t._data="function"==typeof e?function(t,e){dt();try{return t.call(e,e)}catch(t){return zt(t,e,"data()"),{}}finally{ht()}}(e,t):e||{})||(e={});var n=Object.keys(e),r=t.$options.props,o=(t.$options.methods,n.length);for(;o--;){var i=n[o];0,r&&_(r,i)||(a=void 0,36!==(a=(i+"").charCodeAt(0))&&95!==a&&fn(t,"_data",i))}var a;$t(e,!0)}(t):$t(t._data={},!0),e.computed&&function(t,e){var n=t._computedWatchers=Object.create(null),r=rt();for(var o in e){var i=e[o],a="function"==typeof i?i:i.get;0,r||(n[o]=new dn(t,a||k,k,bn)),o in t||mn(t,o,i)}}(t,e.computed),e.watch&&e.watch!==tt&&function(t,e){for(var n in e){var r=e[n];if(Array.isArray(r))for(var o=0;o<r.length;o++)_n(t,n,r[o]);else _n(t,n,r)}}(t,e.watch)}var bn={lazy:!0};function mn(t,e,n){var r=!rt();"function"==typeof n?(hn.get=r?gn(e):yn(n),hn.set=k):(hn.get=n.get?r&&!1!==n.cache?gn(e):yn(n.get):k,hn.set=n.set||k),Object.defineProperty(t,e,hn)}function gn(t){return function(){var e=this._computedWatchers&&this._computedWatchers[t];if(e)return e.dirty&&e.evaluate(),ut.target&&e.depend(),e.value}}function yn(t){return function(){return t.call(this,this)}}function _n(t,e,n,r){return u(n)&&(r=n,n=n.handler),"string"==typeof n&&(n=t[n]),t.$watch(e,n,r)}var xn=0;function wn(t){var e=t.options;if(t.super){var n=wn(t.super);if(n!==t.superOptions){t.superOptions=n;var r=function(t){var e,n=t.options,r=t.sealedOptions;for(var o in n)n[o]!==r[o]&&(e||(e={}),e[o]=n[o]);return e}(t);r&&I(t.extendOptions,r),(e=t.options=Dt(n,t.extendOptions)).name&&(e.components[e.name]=t)}}return e}function Sn(t){this._init(t)}function On(t){t.cid=0;var e=1;t.extend=function(t){t=t||{};var n=this,r=n.cid,o=t._Ctor||(t._Ctor={});if(o[r])return o[r];var i=t.name||n.options.name;var a=function(t){this._init(t)};return(a.prototype=Object.create(n.prototype)).constructor=a,a.cid=e++,a.options=Dt(n.options,t),a.super=n,a.options.props&&function(t){var e=t.options.props;for(var n in e)fn(t.prototype,"_props",n)}(a),a.options.computed&&function(t){var e=t.options.computed;for(var n in e)mn(t.prototype,n,e[n])}(a),a.extend=n.extend,a.mixin=n.mixin,a.use=n.use,j.forEach((function(t){a[t]=n[t]})),i&&(a.options.components[i]=a),a.superOptions=n.options,a.extendOptions=t,a.sealedOptions=I({},a.options),o[r]=a,a}}function $n(t){return t&&(t.Ctor.options.name||t.tag)}function Tn(t,e){return Array.isArray(t)?t.indexOf(e)>-1:"string"==typeof t?t.split(",").indexOf(e)>-1:!!p(t)&&t.test(e)}function En(t,e){var n=t.cache,r=t.keys,o=t._vnode;for(var i in n){var a=n[i];if(a){var s=$n(a.componentOptions);s&&!e(s)&&Cn(n,i,r,o)}}}function Cn(t,e,n,r){var o=t[e];!o||r&&o.tag===r.tag||o.componentInstance.$destroy(),t[e]=null,g(n,e)}!function(t){t.prototype._init=function(t){var e=this;e._uid=xn++,e._isVue=!0,t&&t._isComponent?function(t,e){var n=t.$options=Object.create(t.constructor.options),r=e._parentVnode;n.parent=e.parent,n._parentVnode=r;var o=r.componentOptions;n.propsData=o.propsData,n._parentListeners=o.listeners,n._renderChildren=o.children,n._componentTag=o.tag,e.render&&(n.render=e.render,n.staticRenderFns=e.staticRenderFns)}(e,t):e.$options=Dt(wn(e.constructor),t||{},e),e._renderProxy=e,e._self=e,function(t){var e=t.$options,n=e.parent;if(n&&!e.abstract){for(;n.$options.abstract&&n.$parent;)n=n.$parent;n.$children.push(t)}t.$parent=n,t.$root=n?n.$root:t,t.$children=[],t.$refs={},t._watcher=null,t._inactive=null,t._directInactive=!1,t._isMounted=!1,t._isDestroyed=!1,t._isBeingDestroyed=!1}(e),function(t){t._events=Object.create(null),t._hasHookEvent=!1;var e=t.$options._parentListeners;e&&qe(t,e)}(e),function(t){t._vnode=null,t._staticTrees=null;var e=t.$options,n=t.$vnode=e._parentVnode,o=n&&n.context;t.$slots=de(e._renderChildren,o),t.$scopedSlots=r,t._c=function(e,n,r,o){return Fe(t,e,n,r,o,!1)},t.$createElement=function(e,n,r,o){return Fe(t,e,n,r,o,!0)};var i=n&&n.data;Tt(t,"$attrs",i&&i.attrs||r,null,!0),Tt(t,"$listeners",e._parentListeners||r,null,!0)}(e),Ze(e,"beforeCreate"),function(t){var e=pe(t.$options.inject,t);e&&(St(!1),Object.keys(e).forEach((function(n){Tt(t,n,e[n])})),St(!0))}(e),vn(e),function(t){var e=t.$options.provide;e&&(t._provided="function"==typeof e?e.call(t):e)}(e),Ze(e,"created"),e.$options.el&&e.$mount(e.$options.el)}}(Sn),function(t){var e={get:function(){return this._data}},n={get:function(){return this._props}};Object.defineProperty(t.prototype,"$data",e),Object.defineProperty(t.prototype,"$props",n),t.prototype.$set=Et,t.prototype.$delete=Ct,t.prototype.$watch=function(t,e,n){if(u(e))return _n(this,t,e,n);(n=n||{}).user=!0;var r=new dn(this,t,e,n);if(n.immediate)try{e.call(this,r.value)}catch(t){zt(t,this,'callback for immediate watcher "'+r.expression+'"')}return function(){r.teardown()}}}(Sn),function(t){var e=/^hook:/;t.prototype.$on=function(t,n){var r=this;if(Array.isArray(t))for(var o=0,i=t.length;o<i;o++)r.$on(t[o],n);else(r._events[t]||(r._events[t]=[])).push(n),e.test(t)&&(r._hasHookEvent=!0);return r},t.prototype.$once=function(t,e){var n=this;function r(){n.$off(t,r),e.apply(n,arguments)}return r.fn=e,n.$on(t,r),n},t.prototype.$off=function(t,e){var n=this;if(!arguments.length)return n._events=Object.create(null),n;if(Array.isArray(t)){for(var r=0,o=t.length;r<o;r++)n.$off(t[r],e);return n}var i,a=n._events[t];if(!a)return n;if(!e)return n._events[t]=null,n;for(var s=a.length;s--;)if((i=a[s])===e||i.fn===e){a.splice(s,1);break}return n},t.prototype.$emit=function(t){var e=this,n=e._events[t];if(n){n=n.length>1?C(n):n;for(var r=C(arguments,1),o='event handler for "'+t+'"',i=0,a=n.length;i<a;i++)Gt(n[i],e,r,e,o)}return e}}(Sn),function(t){t.prototype._update=function(t,e){var n=this,r=n.$el,o=n._vnode,i=Xe(n);n._vnode=t,n.$el=o?n.__patch__(o,t):n.__patch__(n.$el,t,e,!1),i(),r&&(r.__vue__=null),n.$el&&(n.$el.__vue__=n),n.$vnode&&n.$parent&&n.$vnode===n.$parent._vnode&&(n.$parent.$el=n.$el)},t.prototype.$forceUpdate=function(){this._watcher&&this._watcher.update()},t.prototype.$destroy=function(){var t=this;if(!t._isBeingDestroyed){Ze(t,"beforeDestroy"),t._isBeingDestroyed=!0;var e=t.$parent;!e||e._isBeingDestroyed||t.$options.abstract||g(e.$children,t),t._watcher&&t._watcher.teardown();for(var n=t._watchers.length;n--;)t._watchers[n].teardown();t._data.__ob__&&t._data.__ob__.vmCount--,t._isDestroyed=!0,t.__patch__(t._vnode,null),Ze(t,"destroyed"),t.$off(),t.$el&&(t.$el.__vue__=null),t.$vnode&&(t.$vnode.parent=null)}}}(Sn),function(t){ke(t.prototype),t.prototype.$nextTick=function(t){return ee(t,this)},t.prototype._render=function(){var t,e=this,n=e.$options,r=n.render,o=n._parentVnode;o&&(e.$scopedSlots=fe(o.data.scopedSlots,e.$slots,e.$scopedSlots)),e.$vnode=o;try{Be=e,t=r.call(e._renderProxy,e.$createElement)}catch(n){zt(n,e,"render"),t=e._vnode}finally{Be=null}return Array.isArray(t)&&1===t.length&&(t=t[0]),t instanceof ft||(t=bt()),t.parent=o,t}}(Sn);var In=[String,RegExp,Array],An={KeepAlive:{name:"keep-alive",abstract:!0,props:{include:In,exclude:In,max:[String,Number]},created:function(){this.cache=Object.create(null),this.keys=[]},destroyed:function(){for(var t in this.cache)Cn(this.cache,t,this.keys)},mounted:function(){var t=this;this.$watch("include",(function(e){En(t,(function(t){return Tn(e,t)}))})),this.$watch("exclude",(function(e){En(t,(function(t){return!Tn(e,t)}))}))},render:function(){var t=this.$slots.default,e=Ve(t),n=e&&e.componentOptions;if(n){var r=$n(n),o=this.include,i=this.exclude;if(o&&(!r||!Tn(o,r))||i&&r&&Tn(i,r))return e;var a=this.cache,s=this.keys,c=null==e.key?n.Ctor.cid+(n.tag?"::"+n.tag:""):e.key;a[c]?(e.componentInstance=a[c].componentInstance,g(s,c),s.push(c)):(a[c]=e,s.push(c),this.max&&s.length>parseInt(this.max)&&Cn(a,s[0],s,this._vnode)),e.data.keepAlive=!0}return e||t&&t[0]}}};!function(t){var e={get:function(){return F}};Object.defineProperty(t,"config",e),t.util={warn:ct,extend:I,mergeOptions:Dt,defineReactive:Tt},t.set=Et,t.delete=Ct,t.nextTick=ee,t.observable=function(t){return $t(t),t},t.options=Object.create(null),j.forEach((function(e){t.options[e+"s"]=Object.create(null)})),t.options._base=t,I(t.options.components,An),function(t){t.use=function(t){var e=this._installedPlugins||(this._installedPlugins=[]);if(e.indexOf(t)>-1)return this;var n=C(arguments,1);return n.unshift(this),"function"==typeof t.install?t.install.apply(t,n):"function"==typeof t&&t.apply(null,n),e.push(t),this}}(t),function(t){t.mixin=function(t){return this.options=Dt(this.options,t),this}}(t),On(t),function(t){j.forEach((function(e){t[e]=function(t,n){return n?("component"===e&&u(n)&&(n.name=n.name||t,n=this.options._base.extend(n)),"directive"===e&&"function"==typeof n&&(n={bind:n,update:n}),this.options[e+"s"][t]=n,n):this.options[e+"s"][t]}}))}(t)}(Sn),Object.defineProperty(Sn.prototype,"$isServer",{get:rt}),Object.defineProperty(Sn.prototype,"$ssrContext",{get:function(){return this.$vnode&&this.$vnode.ssrContext}}),Object.defineProperty(Sn,"FunctionalRenderContext",{value:Le}),Sn.version="2.6.12";var kn=b("style,class"),Ln=b("input,textarea,option,select,progress"),Pn=b("contenteditable,draggable,spellcheck"),Mn=b("events,caret,typing,plaintext-only"),Nn=b("allowfullscreen,async,autofocus,autoplay,checked,compact,controls,declare,default,defaultchecked,defaultmuted,defaultselected,defer,disabled,enabled,formnovalidate,hidden,indeterminate,inert,ismap,itemscope,loop,multiple,muted,nohref,noresize,noshade,novalidate,nowrap,open,pauseonexit,readonly,required,reversed,scoped,seamless,selected,sortable,translate,truespeed,typemustmatch,visible"),Dn="http://www.w3.org/1999/xlink",jn=function(t){return":"===t.charAt(5)&&"xlink"===t.slice(0,5)},Rn=function(t){return jn(t)?t.slice(6,t.length):""},Fn=function(t){return null==t||!1===t};function Un(t){for(var e=t.data,n=t,r=t;i(r.componentInstance);)(r=r.componentInstance._vnode)&&r.data&&(e=Bn(r.data,e));for(;i(n=n.parent);)n&&n.data&&(e=Bn(e,n.data));return function(t,e){if(i(t)||i(e))return zn(t,Gn(e));return""}(e.staticClass,e.class)}function Bn(t,e){return{staticClass:zn(t.staticClass,e.staticClass),class:i(t.class)?[t.class,e.class]:e.class}}function zn(t,e){return t?e?t+" "+e:t:e||""}function Gn(t){return Array.isArray(t)?function(t){for(var e,n="",r=0,o=t.length;r<o;r++)i(e=Gn(t[r]))&&""!==e&&(n&&(n+=" "),n+=e);return n}(t):c(t)?function(t){var e="";for(var n in t)t[n]&&(e&&(e+=" "),e+=n);return e}(t):"string"==typeof t?t:""}var Vn={svg:"http://www.w3.org/2000/svg",math:"http://www.w3.org/1998/Math/MathML"},Jn=b("html,body,base,head,link,meta,style,title,address,article,aside,footer,header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,div,dd,dl,dt,figcaption,figure,picture,hr,img,li,main,ol,p,pre,ul,a,b,abbr,bdi,bdo,br,cite,code,data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,s,samp,small,span,strong,sub,sup,time,u,var,wbr,area,audio,map,track,video,embed,object,param,source,canvas,script,noscript,del,ins,caption,col,colgroup,table,thead,tbody,td,th,tr,button,datalist,fieldset,form,input,label,legend,meter,optgroup,option,output,progress,select,textarea,details,dialog,menu,menuitem,summary,content,element,shadow,template,blockquote,iframe,tfoot"),Hn=b("svg,animate,circle,clippath,cursor,defs,desc,ellipse,filter,font-face,foreignObject,g,glyph,image,line,marker,mask,missing-glyph,path,pattern,polygon,polyline,rect,switch,symbol,text,textpath,tspan,use,view",!0),Wn=function(t){return Jn(t)||Hn(t)};var qn=Object.create(null);var Yn=b("text,number,password,search,email,tel,url");var Xn=Object.freeze({createElement:function(t,e){var n=document.createElement(t);return"select"!==t||e.data&&e.data.attrs&&void 0!==e.data.attrs.multiple&&n.setAttribute("multiple","multiple"),n},createElementNS:function(t,e){return document.createElementNS(Vn[t],e)},createTextNode:function(t){return document.createTextNode(t)},createComment:function(t){return document.createComment(t)},insertBefore:function(t,e,n){t.insertBefore(e,n)},removeChild:function(t,e){t.removeChild(e)},appendChild:function(t,e){t.appendChild(e)},parentNode:function(t){return t.parentNode},nextSibling:function(t){return t.nextSibling},tagName:function(t){return t.tagName},setTextContent:function(t,e){t.textContent=e},setStyleScope:function(t,e){t.setAttribute(e,"")}}),Qn={create:function(t,e){Kn(e)},update:function(t,e){t.data.ref!==e.data.ref&&(Kn(t,!0),Kn(e))},destroy:function(t){Kn(t,!0)}};function Kn(t,e){var n=t.data.ref;if(i(n)){var r=t.context,o=t.componentInstance||t.elm,a=r.$refs;e?Array.isArray(a[n])?g(a[n],o):a[n]===o&&(a[n]=void 0):t.data.refInFor?Array.isArray(a[n])?a[n].indexOf(o)<0&&a[n].push(o):a[n]=[o]:a[n]=o}}var Zn=new ft("",{},[]),tr=["create","activate","update","remove","destroy"];function er(t,e){return t.key===e.key&&(t.tag===e.tag&&t.isComment===e.isComment&&i(t.data)===i(e.data)&&function(t,e){if("input"!==t.tag)return!0;var n,r=i(n=t.data)&&i(n=n.attrs)&&n.type,o=i(n=e.data)&&i(n=n.attrs)&&n.type;return r===o||Yn(r)&&Yn(o)}(t,e)||a(t.isAsyncPlaceholder)&&t.asyncFactory===e.asyncFactory&&o(e.asyncFactory.error))}function nr(t,e,n){var r,o,a={};for(r=e;r<=n;++r)i(o=t[r].key)&&(a[o]=r);return a}var rr={create:or,update:or,destroy:function(t){or(t,Zn)}};function or(t,e){(t.data.directives||e.data.directives)&&function(t,e){var n,r,o,i=t===Zn,a=e===Zn,s=ar(t.data.directives,t.context),c=ar(e.data.directives,e.context),l=[],u=[];for(n in c)r=s[n],o=c[n],r?(o.oldValue=r.value,o.oldArg=r.arg,cr(o,"update",e,t),o.def&&o.def.componentUpdated&&u.push(o)):(cr(o,"bind",e,t),o.def&&o.def.inserted&&l.push(o));if(l.length){var p=function(){for(var n=0;n<l.length;n++)cr(l[n],"inserted",e,t)};i?se(e,"insert",p):p()}u.length&&se(e,"postpatch",(function(){for(var n=0;n<u.length;n++)cr(u[n],"componentUpdated",e,t)}));if(!i)for(n in s)c[n]||cr(s[n],"unbind",t,t,a)}(t,e)}var ir=Object.create(null);function ar(t,e){var n,r,o=Object.create(null);if(!t)return o;for(n=0;n<t.length;n++)(r=t[n]).modifiers||(r.modifiers=ir),o[sr(r)]=r,r.def=jt(e.$options,"directives",r.name);return o}function sr(t){return t.rawName||t.name+"."+Object.keys(t.modifiers||{}).join(".")}function cr(t,e,n,r,o){var i=t.def&&t.def[e];if(i)try{i(n.elm,t,n,r,o)}catch(r){zt(r,n.context,"directive "+t.name+" "+e+" hook")}}var lr=[Qn,rr];function ur(t,e){var n=e.componentOptions;if(!(i(n)&&!1===n.Ctor.options.inheritAttrs||o(t.data.attrs)&&o(e.data.attrs))){var r,a,s=e.elm,c=t.data.attrs||{},l=e.data.attrs||{};for(r in i(l.__ob__)&&(l=e.data.attrs=I({},l)),l)a=l[r],c[r]!==a&&pr(s,r,a);for(r in(Y||Q)&&l.value!==c.value&&pr(s,"value",l.value),c)o(l[r])&&(jn(r)?s.removeAttributeNS(Dn,Rn(r)):Pn(r)||s.removeAttribute(r))}}function pr(t,e,n){t.tagName.indexOf("-")>-1?dr(t,e,n):Nn(e)?Fn(n)?t.removeAttribute(e):(n="allowfullscreen"===e&&"EMBED"===t.tagName?"true":e,t.setAttribute(e,n)):Pn(e)?t.setAttribute(e,function(t,e){return Fn(e)||"false"===e?"false":"contenteditable"===t&&Mn(e)?e:"true"}(e,n)):jn(e)?Fn(n)?t.removeAttributeNS(Dn,Rn(e)):t.setAttributeNS(Dn,e,n):dr(t,e,n)}function dr(t,e,n){if(Fn(n))t.removeAttribute(e);else{if(Y&&!X&&"TEXTAREA"===t.tagName&&"placeholder"===e&&""!==n&&!t.__ieph){var r=function(e){e.stopImmediatePropagation(),t.removeEventListener("input",r)};t.addEventListener("input",r),t.__ieph=!0}t.setAttribute(e,n)}}var hr={create:ur,update:ur};function fr(t,e){var n=e.elm,r=e.data,a=t.data;if(!(o(r.staticClass)&&o(r.class)&&(o(a)||o(a.staticClass)&&o(a.class)))){var s=Un(e),c=n._transitionClasses;i(c)&&(s=zn(s,Gn(c))),s!==n._prevClass&&(n.setAttribute("class",s),n._prevClass=s)}}var vr,br={create:fr,update:fr};function mr(t,e,n){var r=vr;return function o(){var i=e.apply(null,arguments);null!==i&&_r(t,o,n,r)}}var gr=Wt&&!(Z&&Number(Z[1])<=53);function yr(t,e,n,r){if(gr){var o=sn,i=e;e=i._wrapper=function(t){if(t.target===t.currentTarget||t.timeStamp>=o||t.timeStamp<=0||t.target.ownerDocument!==document)return i.apply(this,arguments)}}vr.addEventListener(t,e,et?{capture:n,passive:r}:n)}function _r(t,e,n,r){(r||vr).removeEventListener(t,e._wrapper||e,n)}function xr(t,e){if(!o(t.data.on)||!o(e.data.on)){var n=e.data.on||{},r=t.data.on||{};vr=e.elm,function(t){if(i(t.__r)){var e=Y?"change":"input";t[e]=[].concat(t.__r,t[e]||[]),delete t.__r}i(t.__c)&&(t.change=[].concat(t.__c,t.change||[]),delete t.__c)}(n),ae(n,r,yr,_r,mr,e.context),vr=void 0}}var wr,Sr={create:xr,update:xr};function Or(t,e){if(!o(t.data.domProps)||!o(e.data.domProps)){var n,r,a=e.elm,s=t.data.domProps||{},c=e.data.domProps||{};for(n in i(c.__ob__)&&(c=e.data.domProps=I({},c)),s)n in c||(a[n]="");for(n in c){if(r=c[n],"textContent"===n||"innerHTML"===n){if(e.children&&(e.children.length=0),r===s[n])continue;1===a.childNodes.length&&a.removeChild(a.childNodes[0])}if("value"===n&&"PROGRESS"!==a.tagName){a._value=r;var l=o(r)?"":String(r);$r(a,l)&&(a.value=l)}else if("innerHTML"===n&&Hn(a.tagName)&&o(a.innerHTML)){(wr=wr||document.createElement("div")).innerHTML="<svg>"+r+"</svg>";for(var u=wr.firstChild;a.firstChild;)a.removeChild(a.firstChild);for(;u.firstChild;)a.appendChild(u.firstChild)}else if(r!==s[n])try{a[n]=r}catch(t){}}}}function $r(t,e){return!t.composing&&("OPTION"===t.tagName||function(t,e){var n=!0;try{n=document.activeElement!==t}catch(t){}return n&&t.value!==e}(t,e)||function(t,e){var n=t.value,r=t._vModifiers;if(i(r)){if(r.number)return v(n)!==v(e);if(r.trim)return n.trim()!==e.trim()}return n!==e}(t,e))}var Tr={create:Or,update:Or},Er=x((function(t){var e={},n=/:(.+)/;return t.split(/;(?![^(]*\))/g).forEach((function(t){if(t){var r=t.split(n);r.length>1&&(e[r[0].trim()]=r[1].trim())}})),e}));function Cr(t){var e=Ir(t.style);return t.staticStyle?I(t.staticStyle,e):e}function Ir(t){return Array.isArray(t)?A(t):"string"==typeof t?Er(t):t}var Ar,kr=/^--/,Lr=/\s*!important$/,Pr=function(t,e,n){if(kr.test(e))t.style.setProperty(e,n);else if(Lr.test(n))t.style.setProperty(T(e),n.replace(Lr,""),"important");else{var r=Nr(e);if(Array.isArray(n))for(var o=0,i=n.length;o<i;o++)t.style[r]=n[o];else t.style[r]=n}},Mr=["Webkit","Moz","ms"],Nr=x((function(t){if(Ar=Ar||document.createElement("div").style,"filter"!==(t=S(t))&&t in Ar)return t;for(var e=t.charAt(0).toUpperCase()+t.slice(1),n=0;n<Mr.length;n++){var r=Mr[n]+e;if(r in Ar)return r}}));function Dr(t,e){var n=e.data,r=t.data;if(!(o(n.staticStyle)&&o(n.style)&&o(r.staticStyle)&&o(r.style))){var a,s,c=e.elm,l=r.staticStyle,u=r.normalizedStyle||r.style||{},p=l||u,d=Ir(e.data.style)||{};e.data.normalizedStyle=i(d.__ob__)?I({},d):d;var h=function(t,e){var n,r={};if(e)for(var o=t;o.componentInstance;)(o=o.componentInstance._vnode)&&o.data&&(n=Cr(o.data))&&I(r,n);(n=Cr(t.data))&&I(r,n);for(var i=t;i=i.parent;)i.data&&(n=Cr(i.data))&&I(r,n);return r}(e,!0);for(s in p)o(h[s])&&Pr(c,s,"");for(s in h)(a=h[s])!==p[s]&&Pr(c,s,null==a?"":a)}}var jr={create:Dr,update:Dr},Rr=/\s+/;function Fr(t,e){if(e&&(e=e.trim()))if(t.classList)e.indexOf(" ")>-1?e.split(Rr).forEach((function(e){return t.classList.add(e)})):t.classList.add(e);else{var n=" "+(t.getAttribute("class")||"")+" ";n.indexOf(" "+e+" ")<0&&t.setAttribute("class",(n+e).trim())}}function Ur(t,e){if(e&&(e=e.trim()))if(t.classList)e.indexOf(" ")>-1?e.split(Rr).forEach((function(e){return t.classList.remove(e)})):t.classList.remove(e),t.classList.length||t.removeAttribute("class");else{for(var n=" "+(t.getAttribute("class")||"")+" ",r=" "+e+" ";n.indexOf(r)>=0;)n=n.replace(r," ");(n=n.trim())?t.setAttribute("class",n):t.removeAttribute("class")}}function Br(t){if(t){if("object"==typeof t){var e={};return!1!==t.css&&I(e,zr(t.name||"v")),I(e,t),e}return"string"==typeof t?zr(t):void 0}}var zr=x((function(t){return{enterClass:t+"-enter",enterToClass:t+"-enter-to",enterActiveClass:t+"-enter-active",leaveClass:t+"-leave",leaveToClass:t+"-leave-to",leaveActiveClass:t+"-leave-active"}})),Gr=J&&!X,Vr="transition",Jr="transitionend",Hr="animation",Wr="animationend";Gr&&(void 0===window.ontransitionend&&void 0!==window.onwebkittransitionend&&(Vr="WebkitTransition",Jr="webkitTransitionEnd"),void 0===window.onanimationend&&void 0!==window.onwebkitanimationend&&(Hr="WebkitAnimation",Wr="webkitAnimationEnd"));var qr=J?window.requestAnimationFrame?window.requestAnimationFrame.bind(window):setTimeout:function(t){return t()};function Yr(t){qr((function(){qr(t)}))}function Xr(t,e){var n=t._transitionClasses||(t._transitionClasses=[]);n.indexOf(e)<0&&(n.push(e),Fr(t,e))}function Qr(t,e){t._transitionClasses&&g(t._transitionClasses,e),Ur(t,e)}function Kr(t,e,n){var r=to(t,e),o=r.type,i=r.timeout,a=r.propCount;if(!o)return n();var s="transition"===o?Jr:Wr,c=0,l=function(){t.removeEventListener(s,u),n()},u=function(e){e.target===t&&++c>=a&&l()};setTimeout((function(){c<a&&l()}),i+1),t.addEventListener(s,u)}var Zr=/\b(transform|all)(,|$)/;function to(t,e){var n,r=window.getComputedStyle(t),o=(r[Vr+"Delay"]||"").split(", "),i=(r[Vr+"Duration"]||"").split(", "),a=eo(o,i),s=(r[Hr+"Delay"]||"").split(", "),c=(r[Hr+"Duration"]||"").split(", "),l=eo(s,c),u=0,p=0;return"transition"===e?a>0&&(n="transition",u=a,p=i.length):"animation"===e?l>0&&(n="animation",u=l,p=c.length):p=(n=(u=Math.max(a,l))>0?a>l?"transition":"animation":null)?"transition"===n?i.length:c.length:0,{type:n,timeout:u,propCount:p,hasTransform:"transition"===n&&Zr.test(r[Vr+"Property"])}}function eo(t,e){for(;t.length<e.length;)t=t.concat(t);return Math.max.apply(null,e.map((function(e,n){return no(e)+no(t[n])})))}function no(t){return 1e3*Number(t.slice(0,-1).replace(",","."))}function ro(t,e){var n=t.elm;i(n._leaveCb)&&(n._leaveCb.cancelled=!0,n._leaveCb());var r=Br(t.data.transition);if(!o(r)&&!i(n._enterCb)&&1===n.nodeType){for(var a=r.css,s=r.type,l=r.enterClass,u=r.enterToClass,p=r.enterActiveClass,d=r.appearClass,h=r.appearToClass,f=r.appearActiveClass,b=r.beforeEnter,m=r.enter,g=r.afterEnter,y=r.enterCancelled,_=r.beforeAppear,x=r.appear,w=r.afterAppear,S=r.appearCancelled,O=r.duration,$=Ye,T=Ye.$vnode;T&&T.parent;)$=T.context,T=T.parent;var E=!$._isMounted||!t.isRootInsert;if(!E||x||""===x){var C=E&&d?d:l,I=E&&f?f:p,A=E&&h?h:u,k=E&&_||b,L=E&&"function"==typeof x?x:m,P=E&&w||g,M=E&&S||y,N=v(c(O)?O.enter:O);0;var j=!1!==a&&!X,R=ao(L),F=n._enterCb=D((function(){j&&(Qr(n,A),Qr(n,I)),F.cancelled?(j&&Qr(n,C),M&&M(n)):P&&P(n),n._enterCb=null}));t.data.show||se(t,"insert",(function(){var e=n.parentNode,r=e&&e._pending&&e._pending[t.key];r&&r.tag===t.tag&&r.elm._leaveCb&&r.elm._leaveCb(),L&&L(n,F)})),k&&k(n),j&&(Xr(n,C),Xr(n,I),Yr((function(){Qr(n,C),F.cancelled||(Xr(n,A),R||(io(N)?setTimeout(F,N):Kr(n,s,F)))}))),t.data.show&&(e&&e(),L&&L(n,F)),j||R||F()}}}function oo(t,e){var n=t.elm;i(n._enterCb)&&(n._enterCb.cancelled=!0,n._enterCb());var r=Br(t.data.transition);if(o(r)||1!==n.nodeType)return e();if(!i(n._leaveCb)){var a=r.css,s=r.type,l=r.leaveClass,u=r.leaveToClass,p=r.leaveActiveClass,d=r.beforeLeave,h=r.leave,f=r.afterLeave,b=r.leaveCancelled,m=r.delayLeave,g=r.duration,y=!1!==a&&!X,_=ao(h),x=v(c(g)?g.leave:g);0;var w=n._leaveCb=D((function(){n.parentNode&&n.parentNode._pending&&(n.parentNode._pending[t.key]=null),y&&(Qr(n,u),Qr(n,p)),w.cancelled?(y&&Qr(n,l),b&&b(n)):(e(),f&&f(n)),n._leaveCb=null}));m?m(S):S()}function S(){w.cancelled||(!t.data.show&&n.parentNode&&((n.parentNode._pending||(n.parentNode._pending={}))[t.key]=t),d&&d(n),y&&(Xr(n,l),Xr(n,p),Yr((function(){Qr(n,l),w.cancelled||(Xr(n,u),_||(io(x)?setTimeout(w,x):Kr(n,s,w)))}))),h&&h(n,w),y||_||w())}}function io(t){return"number"==typeof t&&!isNaN(t)}function ao(t){if(o(t))return!1;var e=t.fns;return i(e)?ao(Array.isArray(e)?e[0]:e):(t._length||t.length)>1}function so(t,e){!0!==e.data.show&&ro(e)}var co=function(t){var e,n,r={},c=t.modules,l=t.nodeOps;for(e=0;e<tr.length;++e)for(r[tr[e]]=[],n=0;n<c.length;++n)i(c[n][tr[e]])&&r[tr[e]].push(c[n][tr[e]]);function u(t){var e=l.parentNode(t);i(e)&&l.removeChild(e,t)}function p(t,e,n,o,s,c,u){if(i(t.elm)&&i(c)&&(t=c[u]=gt(t)),t.isRootInsert=!s,!function(t,e,n,o){var s=t.data;if(i(s)){var c=i(t.componentInstance)&&s.keepAlive;if(i(s=s.hook)&&i(s=s.init)&&s(t,!1),i(t.componentInstance))return d(t,e),h(n,t.elm,o),a(c)&&function(t,e,n,o){var a,s=t;for(;s.componentInstance;)if(s=s.componentInstance._vnode,i(a=s.data)&&i(a=a.transition)){for(a=0;a<r.activate.length;++a)r.activate[a](Zn,s);e.push(s);break}h(n,t.elm,o)}(t,e,n,o),!0}}(t,e,n,o)){var p=t.data,v=t.children,b=t.tag;i(b)?(t.elm=t.ns?l.createElementNS(t.ns,b):l.createElement(b,t),g(t),f(t,v,e),i(p)&&m(t,e),h(n,t.elm,o)):a(t.isComment)?(t.elm=l.createComment(t.text),h(n,t.elm,o)):(t.elm=l.createTextNode(t.text),h(n,t.elm,o))}}function d(t,e){i(t.data.pendingInsert)&&(e.push.apply(e,t.data.pendingInsert),t.data.pendingInsert=null),t.elm=t.componentInstance.$el,v(t)?(m(t,e),g(t)):(Kn(t),e.push(t))}function h(t,e,n){i(t)&&(i(n)?l.parentNode(n)===t&&l.insertBefore(t,e,n):l.appendChild(t,e))}function f(t,e,n){if(Array.isArray(e)){0;for(var r=0;r<e.length;++r)p(e[r],n,t.elm,null,!0,e,r)}else s(t.text)&&l.appendChild(t.elm,l.createTextNode(String(t.text)))}function v(t){for(;t.componentInstance;)t=t.componentInstance._vnode;return i(t.tag)}function m(t,n){for(var o=0;o<r.create.length;++o)r.create[o](Zn,t);i(e=t.data.hook)&&(i(e.create)&&e.create(Zn,t),i(e.insert)&&n.push(t))}function g(t){var e;if(i(e=t.fnScopeId))l.setStyleScope(t.elm,e);else for(var n=t;n;)i(e=n.context)&&i(e=e.$options._scopeId)&&l.setStyleScope(t.elm,e),n=n.parent;i(e=Ye)&&e!==t.context&&e!==t.fnContext&&i(e=e.$options._scopeId)&&l.setStyleScope(t.elm,e)}function y(t,e,n,r,o,i){for(;r<=o;++r)p(n[r],i,t,e,!1,n,r)}function _(t){var e,n,o=t.data;if(i(o))for(i(e=o.hook)&&i(e=e.destroy)&&e(t),e=0;e<r.destroy.length;++e)r.destroy[e](t);if(i(e=t.children))for(n=0;n<t.children.length;++n)_(t.children[n])}function x(t,e,n){for(;e<=n;++e){var r=t[e];i(r)&&(i(r.tag)?(w(r),_(r)):u(r.elm))}}function w(t,e){if(i(e)||i(t.data)){var n,o=r.remove.length+1;for(i(e)?e.listeners+=o:e=function(t,e){function n(){0==--n.listeners&&u(t)}return n.listeners=e,n}(t.elm,o),i(n=t.componentInstance)&&i(n=n._vnode)&&i(n.data)&&w(n,e),n=0;n<r.remove.length;++n)r.remove[n](t,e);i(n=t.data.hook)&&i(n=n.remove)?n(t,e):e()}else u(t.elm)}function S(t,e,n,r){for(var o=n;o<r;o++){var a=e[o];if(i(a)&&er(t,a))return o}}function O(t,e,n,s,c,u){if(t!==e){i(e.elm)&&i(s)&&(e=s[c]=gt(e));var d=e.elm=t.elm;if(a(t.isAsyncPlaceholder))i(e.asyncFactory.resolved)?E(t.elm,e,n):e.isAsyncPlaceholder=!0;else if(a(e.isStatic)&&a(t.isStatic)&&e.key===t.key&&(a(e.isCloned)||a(e.isOnce)))e.componentInstance=t.componentInstance;else{var h,f=e.data;i(f)&&i(h=f.hook)&&i(h=h.prepatch)&&h(t,e);var b=t.children,m=e.children;if(i(f)&&v(e)){for(h=0;h<r.update.length;++h)r.update[h](t,e);i(h=f.hook)&&i(h=h.update)&&h(t,e)}o(e.text)?i(b)&&i(m)?b!==m&&function(t,e,n,r,a){var s,c,u,d=0,h=0,f=e.length-1,v=e[0],b=e[f],m=n.length-1,g=n[0],_=n[m],w=!a;for(0;d<=f&&h<=m;)o(v)?v=e[++d]:o(b)?b=e[--f]:er(v,g)?(O(v,g,r,n,h),v=e[++d],g=n[++h]):er(b,_)?(O(b,_,r,n,m),b=e[--f],_=n[--m]):er(v,_)?(O(v,_,r,n,m),w&&l.insertBefore(t,v.elm,l.nextSibling(b.elm)),v=e[++d],_=n[--m]):er(b,g)?(O(b,g,r,n,h),w&&l.insertBefore(t,b.elm,v.elm),b=e[--f],g=n[++h]):(o(s)&&(s=nr(e,d,f)),o(c=i(g.key)?s[g.key]:S(g,e,d,f))?p(g,r,t,v.elm,!1,n,h):er(u=e[c],g)?(O(u,g,r,n,h),e[c]=void 0,w&&l.insertBefore(t,u.elm,v.elm)):p(g,r,t,v.elm,!1,n,h),g=n[++h]);d>f?y(t,o(n[m+1])?null:n[m+1].elm,n,h,m,r):h>m&&x(e,d,f)}(d,b,m,n,u):i(m)?(i(t.text)&&l.setTextContent(d,""),y(d,null,m,0,m.length-1,n)):i(b)?x(b,0,b.length-1):i(t.text)&&l.setTextContent(d,""):t.text!==e.text&&l.setTextContent(d,e.text),i(f)&&i(h=f.hook)&&i(h=h.postpatch)&&h(t,e)}}}function $(t,e,n){if(a(n)&&i(t.parent))t.parent.data.pendingInsert=e;else for(var r=0;r<e.length;++r)e[r].data.hook.insert(e[r])}var T=b("attrs,class,staticClass,staticStyle,key");function E(t,e,n,r){var o,s=e.tag,c=e.data,l=e.children;if(r=r||c&&c.pre,e.elm=t,a(e.isComment)&&i(e.asyncFactory))return e.isAsyncPlaceholder=!0,!0;if(i(c)&&(i(o=c.hook)&&i(o=o.init)&&o(e,!0),i(o=e.componentInstance)))return d(e,n),!0;if(i(s)){if(i(l))if(t.hasChildNodes())if(i(o=c)&&i(o=o.domProps)&&i(o=o.innerHTML)){if(o!==t.innerHTML)return!1}else{for(var u=!0,p=t.firstChild,h=0;h<l.length;h++){if(!p||!E(p,l[h],n,r)){u=!1;break}p=p.nextSibling}if(!u||p)return!1}else f(e,l,n);if(i(c)){var v=!1;for(var b in c)if(!T(b)){v=!0,m(e,n);break}!v&&c.class&&re(c.class)}}else t.data!==e.text&&(t.data=e.text);return!0}return function(t,e,n,s){if(!o(e)){var c,u=!1,d=[];if(o(t))u=!0,p(e,d);else{var h=i(t.nodeType);if(!h&&er(t,e))O(t,e,d,null,null,s);else{if(h){if(1===t.nodeType&&t.hasAttribute("data-server-rendered")&&(t.removeAttribute("data-server-rendered"),n=!0),a(n)&&E(t,e,d))return $(e,d,!0),t;c=t,t=new ft(l.tagName(c).toLowerCase(),{},[],void 0,c)}var f=t.elm,b=l.parentNode(f);if(p(e,d,f._leaveCb?null:b,l.nextSibling(f)),i(e.parent))for(var m=e.parent,g=v(e);m;){for(var y=0;y<r.destroy.length;++y)r.destroy[y](m);if(m.elm=e.elm,g){for(var w=0;w<r.create.length;++w)r.create[w](Zn,m);var S=m.data.hook.insert;if(S.merged)for(var T=1;T<S.fns.length;T++)S.fns[T]()}else Kn(m);m=m.parent}i(b)?x([t],0,0):i(t.tag)&&_(t)}}return $(e,d,u),e.elm}i(t)&&_(t)}}({nodeOps:Xn,modules:[hr,br,Sr,Tr,jr,J?{create:so,activate:so,remove:function(t,e){!0!==t.data.show?oo(t,e):e()}}:{}].concat(lr)});X&&document.addEventListener("selectionchange",(function(){var t=document.activeElement;t&&t.vmodel&&mo(t,"input")}));var lo={inserted:function(t,e,n,r){"select"===n.tag?(r.elm&&!r.elm._vOptions?se(n,"postpatch",(function(){lo.componentUpdated(t,e,n)})):uo(t,e,n.context),t._vOptions=[].map.call(t.options,fo)):("textarea"===n.tag||Yn(t.type))&&(t._vModifiers=e.modifiers,e.modifiers.lazy||(t.addEventListener("compositionstart",vo),t.addEventListener("compositionend",bo),t.addEventListener("change",bo),X&&(t.vmodel=!0)))},componentUpdated:function(t,e,n){if("select"===n.tag){uo(t,e,n.context);var r=t._vOptions,o=t._vOptions=[].map.call(t.options,fo);if(o.some((function(t,e){return!M(t,r[e])})))(t.multiple?e.value.some((function(t){return ho(t,o)})):e.value!==e.oldValue&&ho(e.value,o))&&mo(t,"change")}}};function uo(t,e,n){po(t,e,n),(Y||Q)&&setTimeout((function(){po(t,e,n)}),0)}function po(t,e,n){var r=e.value,o=t.multiple;if(!o||Array.isArray(r)){for(var i,a,s=0,c=t.options.length;s<c;s++)if(a=t.options[s],o)i=N(r,fo(a))>-1,a.selected!==i&&(a.selected=i);else if(M(fo(a),r))return void(t.selectedIndex!==s&&(t.selectedIndex=s));o||(t.selectedIndex=-1)}}function ho(t,e){return e.every((function(e){return!M(e,t)}))}function fo(t){return"_value"in t?t._value:t.value}function vo(t){t.target.composing=!0}function bo(t){t.target.composing&&(t.target.composing=!1,mo(t.target,"input"))}function mo(t,e){var n=document.createEvent("HTMLEvents");n.initEvent(e,!0,!0),t.dispatchEvent(n)}function go(t){return!t.componentInstance||t.data&&t.data.transition?t:go(t.componentInstance._vnode)}var yo={model:lo,show:{bind:function(t,e,n){var r=e.value,o=(n=go(n)).data&&n.data.transition,i=t.__vOriginalDisplay="none"===t.style.display?"":t.style.display;r&&o?(n.data.show=!0,ro(n,(function(){t.style.display=i}))):t.style.display=r?i:"none"},update:function(t,e,n){var r=e.value;!r!=!e.oldValue&&((n=go(n)).data&&n.data.transition?(n.data.show=!0,r?ro(n,(function(){t.style.display=t.__vOriginalDisplay})):oo(n,(function(){t.style.display="none"}))):t.style.display=r?t.__vOriginalDisplay:"none")},unbind:function(t,e,n,r,o){o||(t.style.display=t.__vOriginalDisplay)}}},_o={name:String,appear:Boolean,css:Boolean,mode:String,type:String,enterClass:String,leaveClass:String,enterToClass:String,leaveToClass:String,enterActiveClass:String,leaveActiveClass:String,appearClass:String,appearActiveClass:String,appearToClass:String,duration:[Number,String,Object]};function xo(t){var e=t&&t.componentOptions;return e&&e.Ctor.options.abstract?xo(Ve(e.children)):t}function wo(t){var e={},n=t.$options;for(var r in n.propsData)e[r]=t[r];var o=n._parentListeners;for(var i in o)e[S(i)]=o[i];return e}function So(t,e){if(/\d-keep-alive$/.test(e.tag))return t("keep-alive",{props:e.componentOptions.propsData})}var Oo=function(t){return t.tag||Ge(t)},$o=function(t){return"show"===t.name},To={name:"transition",props:_o,abstract:!0,render:function(t){var e=this,n=this.$slots.default;if(n&&(n=n.filter(Oo)).length){0;var r=this.mode;0;var o=n[0];if(function(t){for(;t=t.parent;)if(t.data.transition)return!0}(this.$vnode))return o;var i=xo(o);if(!i)return o;if(this._leaving)return So(t,o);var a="__transition-"+this._uid+"-";i.key=null==i.key?i.isComment?a+"comment":a+i.tag:s(i.key)?0===String(i.key).indexOf(a)?i.key:a+i.key:i.key;var c=(i.data||(i.data={})).transition=wo(this),l=this._vnode,u=xo(l);if(i.data.directives&&i.data.directives.some($o)&&(i.data.show=!0),u&&u.data&&!function(t,e){return e.key===t.key&&e.tag===t.tag}(i,u)&&!Ge(u)&&(!u.componentInstance||!u.componentInstance._vnode.isComment)){var p=u.data.transition=I({},c);if("out-in"===r)return this._leaving=!0,se(p,"afterLeave",(function(){e._leaving=!1,e.$forceUpdate()})),So(t,o);if("in-out"===r){if(Ge(i))return l;var d,h=function(){d()};se(c,"afterEnter",h),se(c,"enterCancelled",h),se(p,"delayLeave",(function(t){d=t}))}}return o}}},Eo=I({tag:String,moveClass:String},_o);function Co(t){t.elm._moveCb&&t.elm._moveCb(),t.elm._enterCb&&t.elm._enterCb()}function Io(t){t.data.newPos=t.elm.getBoundingClientRect()}function Ao(t){var e=t.data.pos,n=t.data.newPos,r=e.left-n.left,o=e.top-n.top;if(r||o){t.data.moved=!0;var i=t.elm.style;i.transform=i.WebkitTransform="translate("+r+"px,"+o+"px)",i.transitionDuration="0s"}}delete Eo.mode;var ko={Transition:To,TransitionGroup:{props:Eo,beforeMount:function(){var t=this,e=this._update;this._update=function(n,r){var o=Xe(t);t.__patch__(t._vnode,t.kept,!1,!0),t._vnode=t.kept,o(),e.call(t,n,r)}},render:function(t){for(var e=this.tag||this.$vnode.data.tag||"span",n=Object.create(null),r=this.prevChildren=this.children,o=this.$slots.default||[],i=this.children=[],a=wo(this),s=0;s<o.length;s++){var c=o[s];if(c.tag)if(null!=c.key&&0!==String(c.key).indexOf("__vlist"))i.push(c),n[c.key]=c,(c.data||(c.data={})).transition=a;else;}if(r){for(var l=[],u=[],p=0;p<r.length;p++){var d=r[p];d.data.transition=a,d.data.pos=d.elm.getBoundingClientRect(),n[d.key]?l.push(d):u.push(d)}this.kept=t(e,null,l),this.removed=u}return t(e,null,i)},updated:function(){var t=this.prevChildren,e=this.moveClass||(this.name||"v")+"-move";t.length&&this.hasMove(t[0].elm,e)&&(t.forEach(Co),t.forEach(Io),t.forEach(Ao),this._reflow=document.body.offsetHeight,t.forEach((function(t){if(t.data.moved){var n=t.elm,r=n.style;Xr(n,e),r.transform=r.WebkitTransform=r.transitionDuration="",n.addEventListener(Jr,n._moveCb=function t(r){r&&r.target!==n||r&&!/transform$/.test(r.propertyName)||(n.removeEventListener(Jr,t),n._moveCb=null,Qr(n,e))})}})))},methods:{hasMove:function(t,e){if(!Gr)return!1;if(this._hasMove)return this._hasMove;var n=t.cloneNode();t._transitionClasses&&t._transitionClasses.forEach((function(t){Ur(n,t)})),Fr(n,e),n.style.display="none",this.$el.appendChild(n);var r=to(n);return this.$el.removeChild(n),this._hasMove=r.hasTransform}}}};Sn.config.mustUseProp=function(t,e,n){return"value"===n&&Ln(t)&&"button"!==e||"selected"===n&&"option"===t||"checked"===n&&"input"===t||"muted"===n&&"video"===t},Sn.config.isReservedTag=Wn,Sn.config.isReservedAttr=kn,Sn.config.getTagNamespace=function(t){return Hn(t)?"svg":"math"===t?"math":void 0},Sn.config.isUnknownElement=function(t){if(!J)return!0;if(Wn(t))return!1;if(t=t.toLowerCase(),null!=qn[t])return qn[t];var e=document.createElement(t);return t.indexOf("-")>-1?qn[t]=e.constructor===window.HTMLUnknownElement||e.constructor===window.HTMLElement:qn[t]=/HTMLUnknownElement/.test(e.toString())},I(Sn.options.directives,yo),I(Sn.options.components,ko),Sn.prototype.__patch__=J?co:k,Sn.prototype.$mount=function(t,e){return function(t,e,n){var r;return t.$el=e,t.$options.render||(t.$options.render=bt),Ze(t,"beforeMount"),r=function(){t._update(t._render(),n)},new dn(t,r,k,{before:function(){t._isMounted&&!t._isDestroyed&&Ze(t,"beforeUpdate")}},!0),n=!1,null==t.$vnode&&(t._isMounted=!0,Ze(t,"mounted")),t}(this,t=t&&J?function(t){if("string"==typeof t){var e=document.querySelector(t);return e||document.createElement("div")}return t}(t):void 0,e)},J&&setTimeout((function(){F.devtools&&ot&&ot.emit("init",Sn)}),0),e.default=Sn},function(t,e,n){var r=n(4),o=n(32).f,i=n(25),a=n(19),s=n(102),c=n(148),l=n(84);t.exports=function(t,e){var n,u,p,d,h,f=t.target,v=t.global,b=t.stat;if(n=v?r:b?r[f]||s(f,{}):(r[f]||{}).prototype)for(u in e){if(d=e[u],p=t.noTargetGet?(h=o(n,u))&&h.value:n[u],!l(v?u:f+(b?".":"#")+u,t.forced)&&void 0!==p){if(typeof d==typeof p)continue;c(d,p)}(t.sham||p&&p.sham)&&i(d,"sham",!0),a(n,u,d,t)}}},function(t,e,n){"use strict";function r(t,e,n,r,o,i,a,s){var c,l="function"==typeof t?t.options:t;if(e&&(l.render=e,l.staticRenderFns=n,l._compiled=!0),r&&(l.functional=!0),i&&(l._scopeId="data-v-"+i),a?(c=function(t){(t=t||this.$vnode&&this.$vnode.ssrContext||this.parent&&this.parent.$vnode&&this.parent.$vnode.ssrContext)||"undefined"==typeof __VUE_SSR_CONTEXT__||(t=__VUE_SSR_CONTEXT__),o&&o.call(this,t),t&&t._registeredComponents&&t._registeredComponents.add(a)},l._ssrRegister=c):o&&(c=s?function(){o.call(this,(l.functional?this.parent:this).$root.$options.shadowRoot)}:o),c)if(l.functional){l._injectStyles=c;var u=l.render;l.render=function(t,e){return c.call(e),u(t,e)}}else{var p=l.beforeCreate;l.beforeCreate=p?[].concat(p,c):[c]}return{exports:t,options:l}}n.d(e,"a",(function(){return r}))},function(t,e){t.exports=function(t){try{return!!t()}catch(t){return!0}}},function(t,e){var n=function(t){return t&&t.Math==Math&&t};t.exports=n("object"==typeof globalThis&&globalThis)||n("object"==typeof window&&window)||n("object"==typeof self&&self)||n("object"==typeof global&&global)||function(){return this}()||Function("return this")()},function(t,e,n){"use strict";n.d(e,"a",(function(){return p}));var r=n(0);
/**
  * vue-class-component v7.2.6
  * (c) 2015-present Evan You
  * @license MIT
  */function o(t){return(o="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function i(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function a(t){return function(t){if(Array.isArray(t)){for(var e=0,n=new Array(t.length);e<t.length;e++)n[e]=t[e];return n}}(t)||function(t){if(Symbol.iterator in Object(t)||"[object Arguments]"===Object.prototype.toString.call(t))return Array.from(t)}(t)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance")}()}function s(){return"undefined"!=typeof Reflect&&Reflect.defineMetadata&&Reflect.getOwnMetadataKeys}function c(t,e){l(t,e),Object.getOwnPropertyNames(e.prototype).forEach((function(n){l(t.prototype,e.prototype,n)})),Object.getOwnPropertyNames(e).forEach((function(n){l(t,e,n)}))}function l(t,e,n){(n?Reflect.getOwnMetadataKeys(e,n):Reflect.getOwnMetadataKeys(e)).forEach((function(r){var o=n?Reflect.getOwnMetadata(r,e,n):Reflect.getOwnMetadata(r,e);n?Reflect.defineMetadata(r,o,t,n):Reflect.defineMetadata(r,o,t)}))}var u={__proto__:[]}instanceof Array;function p(t){return function(e,n,r){var o="function"==typeof e?e:e.constructor;o.__decorators__||(o.__decorators__=[]),"number"!=typeof r&&(r=void 0),o.__decorators__.push((function(e){return t(e,n,r)}))}}function d(t,e){var n=e.prototype._init;e.prototype._init=function(){var e=this,n=Object.getOwnPropertyNames(t);if(t.$options.props)for(var r in t.$options.props)t.hasOwnProperty(r)||n.push(r);n.forEach((function(n){Object.defineProperty(e,n,{get:function(){return t[n]},set:function(e){t[n]=e},configurable:!0})}))};var r=new e;e.prototype._init=n;var o={};return Object.keys(r).forEach((function(t){void 0!==r[t]&&(o[t]=r[t])})),o}var h=["data","beforeCreate","created","beforeMount","mounted","beforeDestroy","destroyed","beforeUpdate","updated","activated","deactivated","render","errorCaptured","serverPrefetch"];function f(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};e.name=e.name||t._componentTag||t.name;var n=t.prototype;Object.getOwnPropertyNames(n).forEach((function(t){if("constructor"!==t)if(h.indexOf(t)>-1)e[t]=n[t];else{var r=Object.getOwnPropertyDescriptor(n,t);void 0!==r.value?"function"==typeof r.value?(e.methods||(e.methods={}))[t]=r.value:(e.mixins||(e.mixins=[])).push({data:function(){return i({},t,r.value)}}):(r.get||r.set)&&((e.computed||(e.computed={}))[t]={get:r.get,set:r.set})}})),(e.mixins||(e.mixins=[])).push({data:function(){return d(this,t)}});var o=t.__decorators__;o&&(o.forEach((function(t){return t(e)})),delete t.__decorators__);var a=Object.getPrototypeOf(t.prototype),l=a instanceof r.default?a.constructor:r.default,u=l.extend(e);return b(u,t,l),s()&&c(u,t),u}var v={prototype:!0,arguments:!0,callee:!0,caller:!0};function b(t,e,n){Object.getOwnPropertyNames(e).forEach((function(r){if(!v[r]){var i=Object.getOwnPropertyDescriptor(t,r);if(!i||i.configurable){var a,s,c=Object.getOwnPropertyDescriptor(e,r);if(!u){if("cid"===r)return;var l=Object.getOwnPropertyDescriptor(n,r);if(a=c.value,s=o(a),null!=a&&("object"===s||"function"===s)&&l&&l.value===c.value)return}0,Object.defineProperty(t,r,c)}}}))}function m(t){return"function"==typeof t?f(t):function(e){return f(e,t)}}m.registerHooks=function(t){h.push.apply(h,a(t))},e.b=m},function(t,e,n){var r=n(4),o=n(78),i=n(14),a=n(79),s=n(104),c=n(143),l=o("wks"),u=r.Symbol,p=c?u:u&&u.withoutSetter||a;t.exports=function(t){return i(l,t)&&(s||"string"==typeof l[t])||(s&&i(u,t)?l[t]=u[t]:l[t]=p("Symbol."+t)),l[t]}},function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));n(75),n(44),n(22),n(233),n(37),n(38),n(166),n(364),n(97);var r=n(71);function o(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,r)}return n}function i(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?o(Object(n),!0).forEach((function(e){Object(r.a)(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}},function(t,e){t.exports=function(t){return"object"==typeof t?null!==t:"function"==typeof t}},function(t,e,n){var r=n(8);t.exports=function(t){if(!r(t))throw TypeError(String(t)+" is not an object");return t}},function(t,e,n){var r=n(3);t.exports=!r((function(){return 7!=Object.defineProperty({},1,{get:function(){return 7}})[1]}))},function(t,e,n){"use strict";function r(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}n.d(e,"a",(function(){return r}))},function(t,e,n){var r=n(10),o=n(141),i=n(9),a=n(45),s=Object.defineProperty;e.f=r?s:function(t,e,n){if(i(t),e=a(e,!0),i(n),o)try{return s(t,e,n)}catch(t){}if("get"in n||"set"in n)throw TypeError("Accessors not supported");return"value"in n&&(t[e]=n.value),t}},function(t,e,n){var r=n(21);t.exports=function(t){return Object(r(t))}},function(t,e,n){var r=n(13),o={}.hasOwnProperty;t.exports=function(t,e){return o.call(r(t),e)}},function(t,e,n){var r=n(47),o=Math.min;t.exports=function(t){return t>0?o(r(t),9007199254740991):0}},function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));n(97);function r(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}function o(t,e,n){return e&&r(t.prototype,e),n&&r(t,n),t}},function(t,e,n){"use strict";var r=n(206),o=Object.prototype.toString;function i(t){return"[object Array]"===o.call(t)}function a(t){return void 0===t}function s(t){return null!==t&&"object"==typeof t}function c(t){if("[object Object]"!==o.call(t))return!1;var e=Object.getPrototypeOf(t);return null===e||e===Object.prototype}function l(t){return"[object Function]"===o.call(t)}function u(t,e){if(null!=t)if("object"!=typeof t&&(t=[t]),i(t))for(var n=0,r=t.length;n<r;n++)e.call(null,t[n],n,t);else for(var o in t)Object.prototype.hasOwnProperty.call(t,o)&&e.call(null,t[o],o,t)}t.exports={isArray:i,isArrayBuffer:function(t){return"[object ArrayBuffer]"===o.call(t)},isBuffer:function(t){return null!==t&&!a(t)&&null!==t.constructor&&!a(t.constructor)&&"function"==typeof t.constructor.isBuffer&&t.constructor.isBuffer(t)},isFormData:function(t){return"undefined"!=typeof FormData&&t instanceof FormData},isArrayBufferView:function(t){return"undefined"!=typeof ArrayBuffer&&ArrayBuffer.isView?ArrayBuffer.isView(t):t&&t.buffer&&t.buffer instanceof ArrayBuffer},isString:function(t){return"string"==typeof t},isNumber:function(t){return"number"==typeof t},isObject:s,isPlainObject:c,isUndefined:a,isDate:function(t){return"[object Date]"===o.call(t)},isFile:function(t){return"[object File]"===o.call(t)},isBlob:function(t){return"[object Blob]"===o.call(t)},isFunction:l,isStream:function(t){return s(t)&&l(t.pipe)},isURLSearchParams:function(t){return"undefined"!=typeof URLSearchParams&&t instanceof URLSearchParams},isStandardBrowserEnv:function(){return("undefined"==typeof navigator||"ReactNative"!==navigator.product&&"NativeScript"!==navigator.product&&"NS"!==navigator.product)&&("undefined"!=typeof window&&"undefined"!=typeof document)},forEach:u,merge:function t(){var e={};function n(n,r){c(e[r])&&c(n)?e[r]=t(e[r],n):c(n)?e[r]=t({},n):i(n)?e[r]=n.slice():e[r]=n}for(var r=0,o=arguments.length;r<o;r++)u(arguments[r],n);return e},extend:function(t,e,n){return u(e,(function(e,o){t[o]=n&&"function"==typeof e?r(e,n):e})),t},trim:function(t){return t.replace(/^\s*/,"").replace(/\s*$/,"")},stripBOM:function(t){return 65279===t.charCodeAt(0)&&(t=t.slice(1)),t}}},function(t,e,n){t.exports=n(398)},function(t,e,n){var r=n(4),o=n(25),i=n(14),a=n(102),s=n(107),c=n(48),l=c.get,u=c.enforce,p=String(String).split("String");(t.exports=function(t,e,n,s){var c,l=!!s&&!!s.unsafe,d=!!s&&!!s.enumerable,h=!!s&&!!s.noTargetGet;"function"==typeof n&&("string"!=typeof e||i(n,"name")||o(n,"name",e),(c=u(n)).source||(c.source=p.join("string"==typeof e?e:""))),t!==r?(l?!h&&t[e]&&(d=!0):delete t[e],d?t[e]=n:o(t,e,n)):d?t[e]=n:a(e,n)})(Function.prototype,"toString",(function(){return"function"==typeof this&&l(this).source||s(this)}))},function(t,e,n){var r=n(111),o=n(19),i=n(255);r||o(Object.prototype,"toString",i,{unsafe:!0})},function(t,e){t.exports=function(t){if(null==t)throw TypeError("Can't call method on "+t);return t}},function(t,e,n){"use strict";var r=n(1),o=n(65).filter;r({target:"Array",proto:!0,forced:!n(64)("filter")},{filter:function(t){return o(this,t,arguments.length>1?arguments[1]:void 0)}})},function(t,e,n){"use strict";var r=n(164).charAt,o=n(48),i=n(147),a=o.set,s=o.getterFor("String Iterator");i(String,"String",(function(t){a(this,{type:"String Iterator",string:String(t),index:0})}),(function(){var t,e=s(this),n=e.string,o=e.index;return o>=n.length?{value:void 0,done:!0}:(t=r(n,o),e.index+=t.length,{value:t,done:!1})}))},function(t,e,n){var r=n(55),o=n(21);t.exports=function(t){return r(o(t))}},function(t,e,n){var r=n(10),o=n(12),i=n(56);t.exports=r?function(t,e,n){return o.f(t,e,i(1,n))}:function(t,e,n){return t[e]=n,t}},function(t,e,n){var r=n(4),o=n(165),i=n(140),a=n(25),s=n(6),c=s("iterator"),l=s("toStringTag"),u=i.values;for(var p in o){var d=r[p],h=d&&d.prototype;if(h){if(h[c]!==u)try{a(h,c,u)}catch(t){h[c]=u}if(h[l]||a(h,l,p),o[p])for(var f in i)if(h[f]!==i[f])try{a(h,f,i[f])}catch(t){h[f]=i[f]}}}},function(t,e,n){"use strict";n.d(e,"d",(function(){return i})),n.d(e,"j",(function(){return a})),n.d(e,"g",(function(){return c})),n.d(e,"h",(function(){return l})),n.d(e,"i",(function(){return u})),n.d(e,"e",(function(){return p})),n.d(e,"f",(function(){return d})),n.d(e,"l",(function(){return h})),n.d(e,"m",(function(){return f})),n.d(e,"k",(function(){return v})),n.d(e,"c",(function(){return m})),n.d(e,"a",(function(){return g})),n.d(e,"b",(function(){return y}));n(42),n(52),n(229),n(230),n(176),n(41),n(37),n(38),n(22),n(76),n(43),n(73),n(231),n(232);var r=/#.*$/,o=/\.(md|html)$/,i=/\/$/,a=/^(https?:|mailto:|tel:)/;function s(t){return decodeURI(t).replace(r,"").replace(o,"")}function c(t){return a.test(t)}function l(t){return/^mailto:/.test(t)}function u(t){return/^tel:/.test(t)}function p(t){if(c(t))return t;var e=t.match(r),n=e?e[0]:"",o=s(t);return i.test(o)?t:o+".html"+n}function d(t,e){var n=t.hash,o=function(t){var e=t.match(r);if(e)return e[0]}(e);return(!o||n===o)&&s(t.path)===s(e)}function h(t,e,n){n&&(e=function(t,e,n){var r=t.charAt(0);if("/"===r)return t;if("?"===r||"#"===r)return e+t;var o=e.split("/");n&&o[o.length-1]||o.pop();for(var i=t.replace(/^\//,"").split("/"),a=0;a<i.length;a++){var s=i[a];".."===s?o.pop():"."!==s&&o.push(s)}""!==o[0]&&o.unshift("");return o.join("/")}(e,n));for(var r=s(e),o=0;o<t.length;o++)if(s(t[o].regularPath)===r)return Object.assign({},t[o],{type:"page",path:p(t[o].path)});return console.error('[vuepress] No matching page found for sidebar item "'.concat(e,'"')),{}}function f(t,e,n,r){var o=n.pages,i=n.themeConfig,a=function(t,e){if(Array.isArray(e))return{base:"/",config:e};for(var n in e)if(0===(r=t,/(\.html|\/)$/.test(r)?r:r+"/").indexOf(encodeURI(n)))return{base:n,config:e[n]};var r;return{}}(e,(r&&i.locales&&i.locales[r]||i).sidebar||i.sidebar),s=a.base,c=a.config;return c?c.map((function(t){return function t(e,n,r){var o=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1;if("string"==typeof e)return h(n,e,r);if(Array.isArray(e))return Object.assign(h(n,e[0],r),{title:e[1]});o>3&&console.error("[vuepress] detected a too deep nested sidebar group.");var i=e.children||[];return 0===i.length&&e.path?Object.assign(h(n,e.path,r),{title:e.title}):{type:"group",path:e.path,title:e.title,sidebarDepth:e.sidebarDepth,children:i.map((function(e){return t(e,n,r,o+1)})),collapsable:!1!==e.collapsable}}(t,o,s)})):[]}function v(t){return Object.assign(t,{type:t.items&&t.items.length?"links":"link"})}function b(t){return t?new Date(t).getTime():0}function m(t,e){var n=b(t.frontmatter.date),r=b(e.frontmatter.date);return 0===n||0===r?0:r-n}function g(t){var e=document.createElement("link");e.rel="stylesheet",e.href=t,document.head.append(e)}function y(t){var e=document.createElement("script");e.src=t,document.head.append(e)}},function(t,e,n){var r=n(178),o="object"==typeof self&&self&&self.Object===Object&&self,i=r||o||Function("return this")();t.exports=i},function(t,e){var n=Array.isArray;t.exports=n},function(t,e,n){var r=n(1),o=n(4),i=n(80),a=[].slice,s=function(t){return function(e,n){var r=arguments.length>2,o=r?a.call(arguments,2):void 0;return t(r?function(){("function"==typeof e?e:Function(e)).apply(this,o)}:e,n)}};r({global:!0,bind:!0,forced:/MSIE .\./.test(i)},{setTimeout:s(o.setTimeout),setInterval:s(o.setInterval)})},function(t,e,n){var r=n(142),o=n(4),i=function(t){return"function"==typeof t?t:void 0};t.exports=function(t,e){return arguments.length<2?i(r[t])||i(o[t]):r[t]&&r[t][e]||o[t]&&o[t][e]}},function(t,e,n){var r=n(10),o=n(108),i=n(56),a=n(24),s=n(45),c=n(14),l=n(141),u=Object.getOwnPropertyDescriptor;e.f=r?u:function(t,e){if(t=a(t),e=s(e,!0),l)try{return u(t,e)}catch(t){}if(c(t,e))return i(!o.f.call(t,e),t[e])}},function(t,e){t.exports=function(t){if("function"!=typeof t)throw TypeError(String(t)+" is not a function");return t}},function(t,e,n){"use strict";var r=n(1),o=n(8),i=n(62),a=n(82),s=n(15),c=n(24),l=n(63),u=n(6),p=n(64)("slice"),d=u("species"),h=[].slice,f=Math.max;r({target:"Array",proto:!0,forced:!p},{slice:function(t,e){var n,r,u,p=c(this),v=s(p.length),b=a(t,v),m=a(void 0===e?v:e,v);if(i(p)&&("function"!=typeof(n=p.constructor)||n!==Array&&!i(n.prototype)?o(n)&&null===(n=n[d])&&(n=void 0):n=void 0,n===Array||void 0===n))return h.call(p,b,m);for(r=new(void 0===n?Array:n)(f(m-b,0)),u=0;b<m;b++,u++)b in p&&l(r,u,p[b]);return r.length=u,r}})},function(t,e){var n={}.toString;t.exports=function(t){return n.call(t).slice(8,-1)}},function(t,e){t.exports=!1},function(t,e,n){"use strict";var r=n(1),o=n(171);r({target:"Array",proto:!0,forced:[].forEach!=o},{forEach:o})},function(t,e,n){var r=n(4),o=n(165),i=n(171),a=n(25);for(var s in o){var c=r[s],l=c&&c.prototype;if(l&&l.forEach!==i)try{a(l,"forEach",i)}catch(t){l.forEach=i}}},function(t,e,n){var r=n(282),o=n(285);t.exports=function(t,e){var n=o(t,e);return r(n)?n:void 0}},function(t,e,n){var r=n(386),o=n(204),i=/[T ]/,a=/:/,s=/^(\d{2})$/,c=[/^([+-]\d{2})$/,/^([+-]\d{3})$/,/^([+-]\d{4})$/],l=/^(\d{4})/,u=[/^([+-]\d{4})/,/^([+-]\d{5})/,/^([+-]\d{6})/],p=/^-(\d{2})$/,d=/^-?(\d{3})$/,h=/^-?(\d{2})-?(\d{2})$/,f=/^-?W(\d{2})$/,v=/^-?W(\d{2})-?(\d{1})$/,b=/^(\d{2}([.,]\d*)?)$/,m=/^(\d{2}):?(\d{2}([.,]\d*)?)$/,g=/^(\d{2}):?(\d{2}):?(\d{2}([.,]\d*)?)$/,y=/([Z+-].*)$/,_=/^(Z)$/,x=/^([+-])(\d{2})$/,w=/^([+-])(\d{2}):?(\d{2})$/;function S(t,e,n){e=e||0,n=n||0;var r=new Date(0);r.setUTCFullYear(t,0,4);var o=7*e+n+1-(r.getUTCDay()||7);return r.setUTCDate(r.getUTCDate()+o),r}t.exports=function(t,e){if(o(t))return new Date(t.getTime());if("string"!=typeof t)return new Date(t);var n=(e||{}).additionalDigits;n=null==n?2:Number(n);var O=function(t){var e,n={},r=t.split(i);a.test(r[0])?(n.date=null,e=r[0]):(n.date=r[0],e=r[1]);if(e){var o=y.exec(e);o?(n.time=e.replace(o[1],""),n.timezone=o[1]):n.time=e}return n}(t),$=function(t,e){var n,r=c[e],o=u[e];if(n=l.exec(t)||o.exec(t)){var i=n[1];return{year:parseInt(i,10),restDateString:t.slice(i.length)}}if(n=s.exec(t)||r.exec(t)){var a=n[1];return{year:100*parseInt(a,10),restDateString:t.slice(a.length)}}return{year:null}}(O.date,n),T=$.year,E=function(t,e){if(null===e)return null;var n,r,o,i;if(0===t.length)return(r=new Date(0)).setUTCFullYear(e),r;if(n=p.exec(t))return r=new Date(0),o=parseInt(n[1],10)-1,r.setUTCFullYear(e,o),r;if(n=d.exec(t)){r=new Date(0);var a=parseInt(n[1],10);return r.setUTCFullYear(e,0,a),r}if(n=h.exec(t)){r=new Date(0),o=parseInt(n[1],10)-1;var s=parseInt(n[2],10);return r.setUTCFullYear(e,o,s),r}if(n=f.exec(t))return i=parseInt(n[1],10)-1,S(e,i);if(n=v.exec(t)){i=parseInt(n[1],10)-1;var c=parseInt(n[2],10)-1;return S(e,i,c)}return null}($.restDateString,T);if(E){var C,I=E.getTime(),A=0;if(O.time&&(A=function(t){var e,n,r;if(e=b.exec(t))return(n=parseFloat(e[1].replace(",",".")))%24*36e5;if(e=m.exec(t))return n=parseInt(e[1],10),r=parseFloat(e[2].replace(",",".")),n%24*36e5+6e4*r;if(e=g.exec(t)){n=parseInt(e[1],10),r=parseInt(e[2],10);var o=parseFloat(e[3].replace(",","."));return n%24*36e5+6e4*r+1e3*o}return null}(O.time)),O.timezone)C=6e4*function(t){var e,n;if(e=_.exec(t))return 0;if(e=x.exec(t))return n=60*parseInt(e[2],10),"+"===e[1]?-n:n;if(e=w.exec(t))return n=60*parseInt(e[2],10)+parseInt(e[3],10),"+"===e[1]?-n:n;return 0}(O.timezone);else{var k=I+A,L=new Date(k);C=r(L);var P=new Date(k);P.setDate(L.getDate()+1);var M=r(P)-r(L);M>0&&(C+=M)}return new Date(I+A+C)}return new Date(t)}},function(t,e,n){"use strict";var r=n(1),o=n(65).map;r({target:"Array",proto:!0,forced:!n(64)("map")},{map:function(t){return o(this,t,arguments.length>1?arguments[1]:void 0)}})},function(t,e,n){"use strict";var r=n(1),o=n(115);r({target:"RegExp",proto:!0,forced:/./.exec!==o},{exec:o})},function(t,e,n){"use strict";var r=n(1),o=n(105).indexOf,i=n(49),a=[].indexOf,s=!!a&&1/[1].indexOf(1,-0)<0,c=i("indexOf");r({target:"Array",proto:!0,forced:s||!c},{indexOf:function(t){return s?a.apply(this,arguments)||0:o(this,t,arguments.length>1?arguments[1]:void 0)}})},function(t,e,n){"use strict";var r=n(1),o=n(4),i=n(31),a=n(36),s=n(10),c=n(104),l=n(143),u=n(3),p=n(14),d=n(62),h=n(8),f=n(9),v=n(13),b=n(24),m=n(45),g=n(56),y=n(46),_=n(81),x=n(61),w=n(260),S=n(109),O=n(32),$=n(12),T=n(108),E=n(25),C=n(19),I=n(78),A=n(83),k=n(59),L=n(79),P=n(6),M=n(173),N=n(174),D=n(85),j=n(48),R=n(65).forEach,F=A("hidden"),U=P("toPrimitive"),B=j.set,z=j.getterFor("Symbol"),G=Object.prototype,V=o.Symbol,J=i("JSON","stringify"),H=O.f,W=$.f,q=w.f,Y=T.f,X=I("symbols"),Q=I("op-symbols"),K=I("string-to-symbol-registry"),Z=I("symbol-to-string-registry"),tt=I("wks"),et=o.QObject,nt=!et||!et.prototype||!et.prototype.findChild,rt=s&&u((function(){return 7!=y(W({},"a",{get:function(){return W(this,"a",{value:7}).a}})).a}))?function(t,e,n){var r=H(G,e);r&&delete G[e],W(t,e,n),r&&t!==G&&W(G,e,r)}:W,ot=function(t,e){var n=X[t]=y(V.prototype);return B(n,{type:"Symbol",tag:t,description:e}),s||(n.description=e),n},it=l?function(t){return"symbol"==typeof t}:function(t){return Object(t)instanceof V},at=function(t,e,n){t===G&&at(Q,e,n),f(t);var r=m(e,!0);return f(n),p(X,r)?(n.enumerable?(p(t,F)&&t[F][r]&&(t[F][r]=!1),n=y(n,{enumerable:g(0,!1)})):(p(t,F)||W(t,F,g(1,{})),t[F][r]=!0),rt(t,r,n)):W(t,r,n)},st=function(t,e){f(t);var n=b(e),r=_(n).concat(pt(n));return R(r,(function(e){s&&!ct.call(n,e)||at(t,e,n[e])})),t},ct=function(t){var e=m(t,!0),n=Y.call(this,e);return!(this===G&&p(X,e)&&!p(Q,e))&&(!(n||!p(this,e)||!p(X,e)||p(this,F)&&this[F][e])||n)},lt=function(t,e){var n=b(t),r=m(e,!0);if(n!==G||!p(X,r)||p(Q,r)){var o=H(n,r);return!o||!p(X,r)||p(n,F)&&n[F][r]||(o.enumerable=!0),o}},ut=function(t){var e=q(b(t)),n=[];return R(e,(function(t){p(X,t)||p(k,t)||n.push(t)})),n},pt=function(t){var e=t===G,n=q(e?Q:b(t)),r=[];return R(n,(function(t){!p(X,t)||e&&!p(G,t)||r.push(X[t])})),r};(c||(C((V=function(){if(this instanceof V)throw TypeError("Symbol is not a constructor");var t=arguments.length&&void 0!==arguments[0]?String(arguments[0]):void 0,e=L(t),n=function(t){this===G&&n.call(Q,t),p(this,F)&&p(this[F],e)&&(this[F][e]=!1),rt(this,e,g(1,t))};return s&&nt&&rt(G,e,{configurable:!0,set:n}),ot(e,t)}).prototype,"toString",(function(){return z(this).tag})),C(V,"withoutSetter",(function(t){return ot(L(t),t)})),T.f=ct,$.f=at,O.f=lt,x.f=w.f=ut,S.f=pt,M.f=function(t){return ot(P(t),t)},s&&(W(V.prototype,"description",{configurable:!0,get:function(){return z(this).description}}),a||C(G,"propertyIsEnumerable",ct,{unsafe:!0}))),r({global:!0,wrap:!0,forced:!c,sham:!c},{Symbol:V}),R(_(tt),(function(t){N(t)})),r({target:"Symbol",stat:!0,forced:!c},{for:function(t){var e=String(t);if(p(K,e))return K[e];var n=V(e);return K[e]=n,Z[n]=e,n},keyFor:function(t){if(!it(t))throw TypeError(t+" is not a symbol");if(p(Z,t))return Z[t]},useSetter:function(){nt=!0},useSimple:function(){nt=!1}}),r({target:"Object",stat:!0,forced:!c,sham:!s},{create:function(t,e){return void 0===e?y(t):st(y(t),e)},defineProperty:at,defineProperties:st,getOwnPropertyDescriptor:lt}),r({target:"Object",stat:!0,forced:!c},{getOwnPropertyNames:ut,getOwnPropertySymbols:pt}),r({target:"Object",stat:!0,forced:u((function(){S.f(1)}))},{getOwnPropertySymbols:function(t){return S.f(v(t))}}),J)&&r({target:"JSON",stat:!0,forced:!c||u((function(){var t=V();return"[null]"!=J([t])||"{}"!=J({a:t})||"{}"!=J(Object(t))}))},{stringify:function(t,e,n){for(var r,o=[t],i=1;arguments.length>i;)o.push(arguments[i++]);if(r=e,(h(e)||void 0!==t)&&!it(t))return d(e)||(e=function(t,e){if("function"==typeof r&&(e=r.call(this,t,e)),!it(e))return e}),o[1]=e,J.apply(null,o)}});V.prototype[U]||E(V.prototype,U,V.prototype.valueOf),D(V,"Symbol"),k[F]=!0},function(t,e,n){var r=n(8);t.exports=function(t,e){if(!r(t))return t;var n,o;if(e&&"function"==typeof(n=t.toString)&&!r(o=n.call(t)))return o;if("function"==typeof(n=t.valueOf)&&!r(o=n.call(t)))return o;if(!e&&"function"==typeof(n=t.toString)&&!r(o=n.call(t)))return o;throw TypeError("Can't convert object to primitive value")}},function(t,e,n){var r,o=n(9),i=n(144),a=n(106),s=n(59),c=n(146),l=n(103),u=n(83),p=u("IE_PROTO"),d=function(){},h=function(t){return"<script>"+t+"<\/script>"},f=function(){try{r=document.domain&&new ActiveXObject("htmlfile")}catch(t){}var t,e;f=r?function(t){t.write(h("")),t.close();var e=t.parentWindow.Object;return t=null,e}(r):((e=l("iframe")).style.display="none",c.appendChild(e),e.src=String("javascript:"),(t=e.contentWindow.document).open(),t.write(h("document.F=Object")),t.close(),t.F);for(var n=a.length;n--;)delete f.prototype[a[n]];return f()};s[p]=!0,t.exports=Object.create||function(t,e){var n;return null!==t?(d.prototype=o(t),n=new d,d.prototype=null,n[p]=t):n=f(),void 0===e?n:i(n,e)}},function(t,e){var n=Math.ceil,r=Math.floor;t.exports=function(t){return isNaN(t=+t)?0:(t>0?r:n)(t)}},function(t,e,n){var r,o,i,a=n(241),s=n(4),c=n(8),l=n(25),u=n(14),p=n(101),d=n(83),h=n(59),f=s.WeakMap;if(a){var v=p.state||(p.state=new f),b=v.get,m=v.has,g=v.set;r=function(t,e){if(m.call(v,t))throw new TypeError("Object already initialized");return e.facade=t,g.call(v,t,e),e},o=function(t){return b.call(v,t)||{}},i=function(t){return m.call(v,t)}}else{var y=d("state");h[y]=!0,r=function(t,e){if(u(t,y))throw new TypeError("Object already initialized");return e.facade=t,l(t,y,e),e},o=function(t){return u(t,y)?t[y]:{}},i=function(t){return u(t,y)}}t.exports={set:r,get:o,has:i,enforce:function(t){return i(t)?o(t):r(t,{})},getterFor:function(t){return function(e){var n;if(!c(e)||(n=o(e)).type!==t)throw TypeError("Incompatible receiver, "+t+" required");return n}}}},function(t,e,n){"use strict";var r=n(3);t.exports=function(t,e){var n=[][t];return!!n&&r((function(){n.call(null,e||function(){throw 1},1)}))}},function(t,e){t.exports=function(t){return null!=t&&"object"==typeof t}},function(t,e,n){"use strict";var r=n(374),o=n(384),i=n(130);t.exports={formats:i,parse:o,stringify:r}},function(t,e,n){"use strict";var r=n(98),o=n(9),i=n(15),a=n(47),s=n(21),c=n(118),l=n(263),u=n(99),p=Math.max,d=Math.min;r("replace",2,(function(t,e,n,r){var h=r.REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE,f=r.REPLACE_KEEPS_$0,v=h?"$":"$0";return[function(n,r){var o=s(this),i=null==n?void 0:n[t];return void 0!==i?i.call(n,o,r):e.call(String(o),n,r)},function(t,r){if(!h&&f||"string"==typeof r&&-1===r.indexOf(v)){var s=n(e,t,this,r);if(s.done)return s.value}var b=o(t),m=String(this),g="function"==typeof r;g||(r=String(r));var y=b.global;if(y){var _=b.unicode;b.lastIndex=0}for(var x=[];;){var w=u(b,m);if(null===w)break;if(x.push(w),!y)break;""===String(w[0])&&(b.lastIndex=c(m,i(b.lastIndex),_))}for(var S,O="",$=0,T=0;T<x.length;T++){w=x[T];for(var E=String(w[0]),C=p(d(a(w.index),m.length),0),I=[],A=1;A<w.length;A++)I.push(void 0===(S=w[A])?S:String(S));var k=w.groups;if(g){var L=[E].concat(I,C,m);void 0!==k&&L.push(k);var P=String(r.apply(void 0,L))}else P=l(E,m,C,I,k,r);C>=$&&(O+=m.slice($,C)+P,$=C+E.length)}return O+m.slice($)}]}))},function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));n(76);var r=n(72);n(44),n(54),n(20),n(77),n(23),n(26),n(135);var o=n(93);function i(t){return function(t){if(Array.isArray(t))return Object(r.a)(t)}(t)||function(t){if("undefined"!=typeof Symbol&&null!=t[Symbol.iterator]||null!=t["@@iterator"])return Array.from(t)}(t)||Object(o.a)(t)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}},function(t,e,n){"use strict";var r=n(1),o=n(10),i=n(4),a=n(14),s=n(8),c=n(12).f,l=n(148),u=i.Symbol;if(o&&"function"==typeof u&&(!("description"in u.prototype)||void 0!==u().description)){var p={},d=function(){var t=arguments.length<1||void 0===arguments[0]?void 0:String(arguments[0]),e=this instanceof d?new u(t):void 0===t?u():u(t);return""===t&&(p[e]=!0),e};l(d,u);var h=d.prototype=u.prototype;h.constructor=d;var f=h.toString,v="Symbol(test)"==String(u("test")),b=/^Symbol\((.*)\)[^)]+$/;c(h,"description",{configurable:!0,get:function(){var t=s(this)?this.valueOf():this,e=f.call(t);if(a(p,t))return"";var n=v?e.slice(7,-1):e.replace(b,"$1");return""===n?void 0:n}}),r({global:!0,forced:!0},{Symbol:d})}},function(t,e,n){var r=n(3),o=n(35),i="".split;t.exports=r((function(){return!Object("z").propertyIsEnumerable(0)}))?function(t){return"String"==o(t)?i.call(t,""):Object(t)}:Object},function(t,e){t.exports=function(t,e){return{enumerable:!(1&t),configurable:!(2&t),writable:!(4&t),value:e}}},function(t,e,n){var r=n(35),o=n(4);t.exports="process"==r(o.process)},function(t,e,n){var r,o,i=n(4),a=n(80),s=i.process,c=s&&s.versions,l=c&&c.v8;l?o=(r=l.split("."))[0]+r[1]:a&&(!(r=a.match(/Edge\/(\d+)/))||r[1]>=74)&&(r=a.match(/Chrome\/(\d+)/))&&(o=r[1]),t.exports=o&&+o},function(t,e){t.exports={}},function(t,e){t.exports={}},function(t,e,n){var r=n(145),o=n(106).concat("length","prototype");e.f=Object.getOwnPropertyNames||function(t){return r(t,o)}},function(t,e,n){var r=n(35);t.exports=Array.isArray||function(t){return"Array"==r(t)}},function(t,e,n){"use strict";var r=n(45),o=n(12),i=n(56);t.exports=function(t,e,n){var a=r(e);a in t?o.f(t,a,i(0,n)):t[a]=n}},function(t,e,n){var r=n(3),o=n(6),i=n(58),a=o("species");t.exports=function(t){return i>=51||!r((function(){var e=[];return(e.constructor={})[a]=function(){return{foo:1}},1!==e[t](Boolean).foo}))}},function(t,e,n){var r=n(87),o=n(55),i=n(13),a=n(15),s=n(113),c=[].push,l=function(t){var e=1==t,n=2==t,l=3==t,u=4==t,p=6==t,d=7==t,h=5==t||p;return function(f,v,b,m){for(var g,y,_=i(f),x=o(_),w=r(v,b,3),S=a(x.length),O=0,$=m||s,T=e?$(f,S):n||d?$(f,0):void 0;S>O;O++)if((h||O in x)&&(y=w(g=x[O],O,_),t))if(e)T[O]=y;else if(y)switch(t){case 3:return!0;case 5:return g;case 6:return O;case 2:c.call(T,g)}else switch(t){case 4:return!1;case 7:c.call(T,g)}return p?-1:l||u?u:T}};t.exports={forEach:l(0),map:l(1),filter:l(2),some:l(3),every:l(4),find:l(5),findIndex:l(6),filterOut:l(7)}},function(t,e,n){var r=n(28).Symbol;t.exports=r},function(t,e,n){var r=n(66),o=n(267),i=n(268),a=r?r.toStringTag:void 0;t.exports=function(t){return null==t?void 0===t?"[object Undefined]":"[object Null]":a&&a in Object(t)?o(t):i(t)}},function(t,e,n){"use strict";n.d(e,"a",(function(){return s}));n(217),n(216),n(167);function r(t){return(r=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}var o=n(227),i=n.n(o);function a(t,e){return!e||"object"!==i()(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function s(t){var e=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}();return function(){var n,o=r(t);if(e){var i=r(this).constructor;n=Reflect.construct(o,arguments,i)}else n=o.apply(this,arguments);return a(this,n)}}},function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));n(175),n(216);function r(t,e){return(r=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}function o(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&r(t,e)}},function(t,e,n){"use strict";n.d(e,"a",(function(){return o})),n.d(e,"c",(function(){return i})),n.d(e,"b",(function(){return a}));n(22),n(43),n(197);var r=n(27);function o(t,e){return t=t.filter((function(n,r){var o=n.title,i=n.frontmatter,a=i.home,s=i.date,c=i.publish;if(t.indexOf(n)!==r)return!1;var l=!0===a||null==o||!1===c;return!0===e?!(l||void 0===s):!l}))}function i(t){t.sort((function(t,e){var n=t.frontmatter.sticky,o=e.frontmatter.sticky;return n&&o?n==o?Object(r.c)(t,e):n-o:n&&!o?-1:!n&&o?1:Object(r.c)(t,e)}))}function a(t){t.sort((function(t,e){return Object(r.c)(t,e)}))}},function(t,e,n){"use strict";n.d(e,"a",(function(){return r}));n(97);function r(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}},function(t,e,n){"use strict";function r(t,e){(null==e||e>t.length)&&(e=t.length);for(var n=0,r=new Array(e);n<e;n++)r[n]=t[n];return r}n.d(e,"a",(function(){return r}))},function(t,e,n){var r=n(19),o=Date.prototype,i=o.toString,a=o.getTime;new Date(NaN)+""!="Invalid Date"&&r(o,"toString",(function(){var t=a.call(this);return t==t?i.call(this):"Invalid Date"}))},function(t,e,n){"use strict";n.d(e,"b",(function(){return o})),n.d(e,"d",(function(){return i})),n.d(e,"c",(function(){return a})),n.d(e,"a",(function(){return s}));n(43);var r=n(27);function o(){var t=["#e15b64","#f47e60","#f8b26a","#abbd81","#849b87","#e15b64","#f47e60","#f8b26a","#f26d6d","#67cc86","#fb9b5f","#3498db"];return t[Math.floor(Math.random()*t.length)]}function i(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"tomorrow",e=["tomorrow","funky","okaidia","solarizedlight","default"],n="//prismjs.com/themes/prism".concat(e.indexOf(t)>-1?"-".concat(t):"",".css");Object(r.a)(n)}function a(t){var e=t.__proto__.push;t.__proto__.push=function(t){return e.call(this,t).catch((function(t){return t}))}}function s(t){t.beforeEach((function(t,e,n){var r=decodeURIComponent(t.path);r!==t.path?n(Object.assign({},t,{fullPath:decodeURIComponent(t.fullPath),path:r})):n()}))}},function(t,e,n){var r=n(1),o=n(13),i=n(81);r({target:"Object",stat:!0,forced:n(3)((function(){i(1)}))},{keys:function(t){return i(o(t))}})},function(t,e,n){n(1)({target:"Array",stat:!0},{isArray:n(62)})},function(t,e,n){n(174)("iterator")},function(t,e,n){var r=n(36),o=n(101);(t.exports=function(t,e){return o[t]||(o[t]=void 0!==e?e:{})})("versions",[]).push({version:"3.11.1",mode:r?"pure":"global",copyright:"© 2021 Denis Pushkarev (zloirock.ru)"})},function(t,e){var n=0,r=Math.random();t.exports=function(t){return"Symbol("+String(void 0===t?"":t)+")_"+(++n+r).toString(36)}},function(t,e,n){var r=n(31);t.exports=r("navigator","userAgent")||""},function(t,e,n){var r=n(145),o=n(106);t.exports=Object.keys||function(t){return r(t,o)}},function(t,e,n){var r=n(47),o=Math.max,i=Math.min;t.exports=function(t,e){var n=r(t);return n<0?o(n+e,0):i(n,e)}},function(t,e,n){var r=n(78),o=n(79),i=r("keys");t.exports=function(t){return i[t]||(i[t]=o(t))}},function(t,e,n){var r=n(3),o=/#|\.prototype\./,i=function(t,e){var n=s[a(t)];return n==l||n!=c&&("function"==typeof e?r(e):!!e)},a=i.normalize=function(t){return String(t).replace(o,".").toLowerCase()},s=i.data={},c=i.NATIVE="N",l=i.POLYFILL="P";t.exports=i},function(t,e,n){var r=n(12).f,o=n(14),i=n(6)("toStringTag");t.exports=function(t,e,n){t&&!o(t=n?t:t.prototype,i)&&r(t,i,{configurable:!0,value:e})}},function(t,e,n){var r=n(9),o=n(243);t.exports=Object.setPrototypeOf||("__proto__"in{}?function(){var t,e=!1,n={};try{(t=Object.getOwnPropertyDescriptor(Object.prototype,"__proto__").set).call(n,[]),e=n instanceof Array}catch(t){}return function(n,i){return r(n),o(i),e?t.call(n,i):n.__proto__=i,n}}():void 0)},function(t,e,n){var r=n(33);t.exports=function(t,e,n){if(r(t),void 0===e)return t;switch(n){case 0:return function(){return t.call(e)};case 1:return function(n){return t.call(e,n)};case 2:return function(n,r){return t.call(e,n,r)};case 3:return function(n,r,o){return t.call(e,n,r,o)}}return function(){return t.apply(e,arguments)}}},function(t,e,n){var r=n(272),o=n(273),i=n(274),a=n(275),s=n(276);function c(t){var e=-1,n=null==t?0:t.length;for(this.clear();++e<n;){var r=t[e];this.set(r[0],r[1])}}c.prototype.clear=r,c.prototype.delete=o,c.prototype.get=i,c.prototype.has=a,c.prototype.set=s,t.exports=c},function(t,e,n){var r=n(180);t.exports=function(t,e){for(var n=t.length;n--;)if(r(t[n][0],e))return n;return-1}},function(t,e,n){var r=n(39)(Object,"create");t.exports=r},function(t,e,n){var r=n(294);t.exports=function(t,e){var n=t.__data__;return r(e)?n["string"==typeof e?"string":"hash"]:n.map}},function(t,e,n){var r=n(126);t.exports=function(t){if("string"==typeof t||r(t))return t;var e=t+"";return"0"==e&&1/t==-1/0?"-0":e}},function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));n(34),n(20),n(96),n(135),n(23);var r=n(72);function o(t,e){if(t){if("string"==typeof t)return Object(r.a)(t,e);var n=Object.prototype.toString.call(t).slice(8,-1);return"Object"===n&&t.constructor&&(n=t.constructor.name),"Map"===n||"Set"===n?Array.from(t):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?Object(r.a)(t,e):void 0}}},function(t,e,n){var r,o;
/* NProgress, (c) 2013, 2014 Rico Sta. Cruz - http://ricostacruz.com/nprogress
 * @license MIT */void 0===(o="function"==typeof(r=function(){var t,e,n={version:"0.2.0"},r=n.settings={minimum:.08,easing:"ease",positionUsing:"",speed:200,trickle:!0,trickleRate:.02,trickleSpeed:800,showSpinner:!0,barSelector:'[role="bar"]',spinnerSelector:'[role="spinner"]',parent:"body",template:'<div class="bar" role="bar"><div class="peg"></div></div><div class="spinner" role="spinner"><div class="spinner-icon"></div></div>'};function o(t,e,n){return t<e?e:t>n?n:t}function i(t){return 100*(-1+t)}n.configure=function(t){var e,n;for(e in t)void 0!==(n=t[e])&&t.hasOwnProperty(e)&&(r[e]=n);return this},n.status=null,n.set=function(t){var e=n.isStarted();t=o(t,r.minimum,1),n.status=1===t?null:t;var c=n.render(!e),l=c.querySelector(r.barSelector),u=r.speed,p=r.easing;return c.offsetWidth,a((function(e){""===r.positionUsing&&(r.positionUsing=n.getPositioningCSS()),s(l,function(t,e,n){var o;return(o="translate3d"===r.positionUsing?{transform:"translate3d("+i(t)+"%,0,0)"}:"translate"===r.positionUsing?{transform:"translate("+i(t)+"%,0)"}:{"margin-left":i(t)+"%"}).transition="all "+e+"ms "+n,o}(t,u,p)),1===t?(s(c,{transition:"none",opacity:1}),c.offsetWidth,setTimeout((function(){s(c,{transition:"all "+u+"ms linear",opacity:0}),setTimeout((function(){n.remove(),e()}),u)}),u)):setTimeout(e,u)})),this},n.isStarted=function(){return"number"==typeof n.status},n.start=function(){n.status||n.set(0);var t=function(){setTimeout((function(){n.status&&(n.trickle(),t())}),r.trickleSpeed)};return r.trickle&&t(),this},n.done=function(t){return t||n.status?n.inc(.3+.5*Math.random()).set(1):this},n.inc=function(t){var e=n.status;return e?("number"!=typeof t&&(t=(1-e)*o(Math.random()*e,.1,.95)),e=o(e+t,0,.994),n.set(e)):n.start()},n.trickle=function(){return n.inc(Math.random()*r.trickleRate)},t=0,e=0,n.promise=function(r){return r&&"resolved"!==r.state()?(0===e&&n.start(),t++,e++,r.always((function(){0==--e?(t=0,n.done()):n.set((t-e)/t)})),this):this},n.render=function(t){if(n.isRendered())return document.getElementById("nprogress");l(document.documentElement,"nprogress-busy");var e=document.createElement("div");e.id="nprogress",e.innerHTML=r.template;var o,a=e.querySelector(r.barSelector),c=t?"-100":i(n.status||0),u=document.querySelector(r.parent);return s(a,{transition:"all 0 linear",transform:"translate3d("+c+"%,0,0)"}),r.showSpinner||(o=e.querySelector(r.spinnerSelector))&&d(o),u!=document.body&&l(u,"nprogress-custom-parent"),u.appendChild(e),e},n.remove=function(){u(document.documentElement,"nprogress-busy"),u(document.querySelector(r.parent),"nprogress-custom-parent");var t=document.getElementById("nprogress");t&&d(t)},n.isRendered=function(){return!!document.getElementById("nprogress")},n.getPositioningCSS=function(){var t=document.body.style,e="WebkitTransform"in t?"Webkit":"MozTransform"in t?"Moz":"msTransform"in t?"ms":"OTransform"in t?"O":"";return e+"Perspective"in t?"translate3d":e+"Transform"in t?"translate":"margin"};var a=function(){var t=[];function e(){var n=t.shift();n&&n(e)}return function(n){t.push(n),1==t.length&&e()}}(),s=function(){var t=["Webkit","O","Moz","ms"],e={};function n(n){return n=n.replace(/^-ms-/,"ms-").replace(/-([\da-z])/gi,(function(t,e){return e.toUpperCase()})),e[n]||(e[n]=function(e){var n=document.body.style;if(e in n)return e;for(var r,o=t.length,i=e.charAt(0).toUpperCase()+e.slice(1);o--;)if((r=t[o]+i)in n)return r;return e}(n))}function r(t,e,r){e=n(e),t.style[e]=r}return function(t,e){var n,o,i=arguments;if(2==i.length)for(n in e)void 0!==(o=e[n])&&e.hasOwnProperty(n)&&r(t,n,o);else r(t,i[1],i[2])}}();function c(t,e){return("string"==typeof t?t:p(t)).indexOf(" "+e+" ")>=0}function l(t,e){var n=p(t),r=n+e;c(n,e)||(t.className=r.substring(1))}function u(t,e){var n,r=p(t);c(t,e)&&(n=r.replace(" "+e+" "," "),t.className=n.substring(1,n.length-1))}function p(t){return(" "+(t.className||"")+" ").replace(/\s+/gi," ")}function d(t){t&&t.parentNode&&t.parentNode.removeChild(t)}return n})?r.call(e,n,e,t):r)||(t.exports=o)},function(t,e,n){"use strict";var r=n(1),o=n(65).some;r({target:"Array",proto:!0,forced:!n(49)("some")},{some:function(t){return o(this,t,arguments.length>1?arguments[1]:void 0)}})},function(t,e,n){var r=n(10),o=n(12).f,i=Function.prototype,a=i.toString,s=/^\s*function ([^ (]*)/;r&&!("name"in i)&&o(i,"name",{configurable:!0,get:function(){try{return a.call(this).match(s)[1]}catch(t){return""}}})},function(t,e,n){var r=n(1),o=n(10);r({target:"Object",stat:!0,forced:!o,sham:!o},{defineProperty:n(12).f})},function(t,e,n){"use strict";n(42);var r=n(19),o=n(3),i=n(6),a=n(25),s=i("species"),c=!o((function(){var t=/./;return t.exec=function(){var t=[];return t.groups={a:"7"},t},"7"!=="".replace(t,"$<a>")})),l="$0"==="a".replace(/./,"$0"),u=i("replace"),p=!!/./[u]&&""===/./[u]("a","$0"),d=!o((function(){var t=/(?:)/,e=t.exec;t.exec=function(){return e.apply(this,arguments)};var n="ab".split(t);return 2!==n.length||"a"!==n[0]||"b"!==n[1]}));t.exports=function(t,e,n,u){var h=i(t),f=!o((function(){var e={};return e[h]=function(){return 7},7!=""[t](e)})),v=f&&!o((function(){var e=!1,n=/a/;return"split"===t&&((n={}).constructor={},n.constructor[s]=function(){return n},n.flags="",n[h]=/./[h]),n.exec=function(){return e=!0,null},n[h](""),!e}));if(!f||!v||"replace"===t&&(!c||!l||p)||"split"===t&&!d){var b=/./[h],m=n(h,""[t],(function(t,e,n,r,o){return e.exec===RegExp.prototype.exec?f&&!o?{done:!0,value:b.call(e,n,r)}:{done:!0,value:t.call(n,e,r)}:{done:!1}}),{REPLACE_KEEPS_$0:l,REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE:p}),g=m[0],y=m[1];r(String.prototype,t,g),r(RegExp.prototype,h,2==e?function(t,e){return y.call(t,this,e)}:function(t){return y.call(t,this)})}u&&a(RegExp.prototype[h],"sham",!0)}},function(t,e,n){var r=n(35),o=n(115);t.exports=function(t,e){var n=t.exec;if("function"==typeof n){var i=n.call(t,e);if("object"!=typeof i)throw TypeError("RegExp exec method returned something other than an Object or null");return i}if("RegExp"!==r(t))throw TypeError("RegExp#exec called on incompatible receiver");return o.call(t,e)}},function(t,e,n){var r=n(6),o=n(46),i=n(12),a=r("unscopables"),s=Array.prototype;null==s[a]&&i.f(s,a,{configurable:!0,value:o(null)}),t.exports=function(t){s[a][t]=!0}},function(t,e,n){var r=n(4),o=n(102),i=r["__core-js_shared__"]||o("__core-js_shared__",{});t.exports=i},function(t,e,n){var r=n(4),o=n(25);t.exports=function(t,e){try{o(r,t,e)}catch(n){r[t]=e}return e}},function(t,e,n){var r=n(4),o=n(8),i=r.document,a=o(i)&&o(i.createElement);t.exports=function(t){return a?i.createElement(t):{}}},function(t,e,n){var r=n(57),o=n(58),i=n(3);t.exports=!!Object.getOwnPropertySymbols&&!i((function(){return!Symbol.sham&&(r?38===o:o>37&&o<41)}))},function(t,e,n){var r=n(24),o=n(15),i=n(82),a=function(t){return function(e,n,a){var s,c=r(e),l=o(c.length),u=i(a,l);if(t&&n!=n){for(;l>u;)if((s=c[u++])!=s)return!0}else for(;l>u;u++)if((t||u in c)&&c[u]===n)return t||u||0;return!t&&-1}};t.exports={includes:a(!0),indexOf:a(!1)}},function(t,e){t.exports=["constructor","hasOwnProperty","isPrototypeOf","propertyIsEnumerable","toLocaleString","toString","valueOf"]},function(t,e,n){var r=n(101),o=Function.toString;"function"!=typeof r.inspectSource&&(r.inspectSource=function(t){return o.call(t)}),t.exports=r.inspectSource},function(t,e,n){"use strict";var r={}.propertyIsEnumerable,o=Object.getOwnPropertyDescriptor,i=o&&!r.call({1:2},1);e.f=i?function(t){var e=o(this,t);return!!e&&e.enumerable}:r},function(t,e){e.f=Object.getOwnPropertySymbols},function(t,e,n){var r=n(14),o=n(13),i=n(83),a=n(151),s=i("IE_PROTO"),c=Object.prototype;t.exports=a?Object.getPrototypeOf:function(t){return t=o(t),r(t,s)?t[s]:"function"==typeof t.constructor&&t instanceof t.constructor?t.constructor.prototype:t instanceof Object?c:null}},function(t,e,n){var r={};r[n(6)("toStringTag")]="z",t.exports="[object z]"===String(r)},function(t,e,n){var r=n(9),o=n(33),i=n(6)("species");t.exports=function(t,e){var n,a=r(t).constructor;return void 0===a||null==(n=r(a)[i])?e:o(n)}},function(t,e,n){var r=n(8),o=n(62),i=n(6)("species");t.exports=function(t,e){var n;return o(t)&&("function"!=typeof(n=t.constructor)||n!==Array&&!o(n.prototype)?r(n)&&null===(n=n[i])&&(n=void 0):n=void 0),new(void 0===n?Array:n)(0===e?0:e)}},function(t,e,n){var r=n(8),o=n(35),i=n(6)("match");t.exports=function(t){var e;return r(t)&&(void 0!==(e=t[i])?!!e:"RegExp"==o(t))}},function(t,e,n){"use strict";var r,o,i=n(116),a=n(117),s=n(78),c=RegExp.prototype.exec,l=s("native-string-replace",String.prototype.replace),u=c,p=(r=/a/,o=/b*/g,c.call(r,"a"),c.call(o,"a"),0!==r.lastIndex||0!==o.lastIndex),d=a.UNSUPPORTED_Y||a.BROKEN_CARET,h=void 0!==/()??/.exec("")[1];(p||h||d)&&(u=function(t){var e,n,r,o,a=this,s=d&&a.sticky,u=i.call(a),f=a.source,v=0,b=t;return s&&(-1===(u=u.replace("y","")).indexOf("g")&&(u+="g"),b=String(t).slice(a.lastIndex),a.lastIndex>0&&(!a.multiline||a.multiline&&"\n"!==t[a.lastIndex-1])&&(f="(?: "+f+")",b=" "+b,v++),n=new RegExp("^(?:"+f+")",u)),h&&(n=new RegExp("^"+f+"$(?!\\s)",u)),p&&(e=a.lastIndex),r=c.call(s?n:a,b),s?r?(r.input=r.input.slice(v),r[0]=r[0].slice(v),r.index=a.lastIndex,a.lastIndex+=r[0].length):a.lastIndex=0:p&&r&&(a.lastIndex=a.global?r.index+r[0].length:e),h&&r&&r.length>1&&l.call(r[0],n,(function(){for(o=1;o<arguments.length-2;o++)void 0===arguments[o]&&(r[o]=void 0)})),r}),t.exports=u},function(t,e,n){"use strict";var r=n(9);t.exports=function(){var t=r(this),e="";return t.global&&(e+="g"),t.ignoreCase&&(e+="i"),t.multiline&&(e+="m"),t.dotAll&&(e+="s"),t.unicode&&(e+="u"),t.sticky&&(e+="y"),e}},function(t,e,n){"use strict";var r=n(3);function o(t,e){return RegExp(t,e)}e.UNSUPPORTED_Y=r((function(){var t=o("a","y");return t.lastIndex=2,null!=t.exec("abcd")})),e.BROKEN_CARET=r((function(){var t=o("^r","gy");return t.lastIndex=2,null!=t.exec("str")}))},function(t,e,n){"use strict";var r=n(164).charAt;t.exports=function(t,e,n){return e+(n?r(t,e).length:1)}},function(t,e,n){var r=n(266),o=n(50),i=Object.prototype,a=i.hasOwnProperty,s=i.propertyIsEnumerable,c=r(function(){return arguments}())?r:function(t){return o(t)&&a.call(t,"callee")&&!s.call(t,"callee")};t.exports=c},function(t,e,n){var r=n(39)(n(28),"Map");t.exports=r},function(t,e){t.exports=function(t){var e=typeof t;return null!=t&&("object"==e||"function"==e)}},function(t,e,n){var r=n(286),o=n(293),i=n(295),a=n(296),s=n(297);function c(t){var e=-1,n=null==t?0:t.length;for(this.clear();++e<n;){var r=t[e];this.set(r[0],r[1])}}c.prototype.clear=r,c.prototype.delete=o,c.prototype.get=i,c.prototype.has=a,c.prototype.set=s,t.exports=c},function(t,e){t.exports=function(t){var e=-1,n=Array(t.size);return t.forEach((function(t){n[++e]=t})),n}},function(t,e){t.exports=function(t){return"number"==typeof t&&t>-1&&t%1==0&&t<=9007199254740991}},function(t,e,n){var r=n(29),o=n(126),i=/\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,a=/^\w*$/;t.exports=function(t,e){if(r(t))return!1;var n=typeof t;return!("number"!=n&&"symbol"!=n&&"boolean"!=n&&null!=t&&!o(t))||(a.test(t)||!i.test(t)||null!=e&&t in Object(e))}},function(t,e,n){var r=n(67),o=n(50);t.exports=function(t){return"symbol"==typeof t||o(t)&&"[object Symbol]"==r(t)}},function(t,e){t.exports=function(t){return t}},function(t,e,n){"use strict";var r=SyntaxError,o=Function,i=TypeError,a=function(t){try{return o('"use strict"; return ('+t+").constructor;")()}catch(t){}},s=Object.getOwnPropertyDescriptor;if(s)try{s({},"")}catch(t){s=null}var c=function(){throw new i},l=s?function(){try{return c}catch(t){try{return s(arguments,"callee").get}catch(t){return c}}}():c,u=n(376)(),p=Object.getPrototypeOf||function(t){return t.__proto__},d={},h="undefined"==typeof Uint8Array?void 0:p(Uint8Array),f={"%AggregateError%":"undefined"==typeof AggregateError?void 0:AggregateError,"%Array%":Array,"%ArrayBuffer%":"undefined"==typeof ArrayBuffer?void 0:ArrayBuffer,"%ArrayIteratorPrototype%":u?p([][Symbol.iterator]()):void 0,"%AsyncFromSyncIteratorPrototype%":void 0,"%AsyncFunction%":d,"%AsyncGenerator%":d,"%AsyncGeneratorFunction%":d,"%AsyncIteratorPrototype%":d,"%Atomics%":"undefined"==typeof Atomics?void 0:Atomics,"%BigInt%":"undefined"==typeof BigInt?void 0:BigInt,"%Boolean%":Boolean,"%DataView%":"undefined"==typeof DataView?void 0:DataView,"%Date%":Date,"%decodeURI%":decodeURI,"%decodeURIComponent%":decodeURIComponent,"%encodeURI%":encodeURI,"%encodeURIComponent%":encodeURIComponent,"%Error%":Error,"%eval%":eval,"%EvalError%":EvalError,"%Float32Array%":"undefined"==typeof Float32Array?void 0:Float32Array,"%Float64Array%":"undefined"==typeof Float64Array?void 0:Float64Array,"%FinalizationRegistry%":"undefined"==typeof FinalizationRegistry?void 0:FinalizationRegistry,"%Function%":o,"%GeneratorFunction%":d,"%Int8Array%":"undefined"==typeof Int8Array?void 0:Int8Array,"%Int16Array%":"undefined"==typeof Int16Array?void 0:Int16Array,"%Int32Array%":"undefined"==typeof Int32Array?void 0:Int32Array,"%isFinite%":isFinite,"%isNaN%":isNaN,"%IteratorPrototype%":u?p(p([][Symbol.iterator]())):void 0,"%JSON%":"object"==typeof JSON?JSON:void 0,"%Map%":"undefined"==typeof Map?void 0:Map,"%MapIteratorPrototype%":"undefined"!=typeof Map&&u?p((new Map)[Symbol.iterator]()):void 0,"%Math%":Math,"%Number%":Number,"%Object%":Object,"%parseFloat%":parseFloat,"%parseInt%":parseInt,"%Promise%":"undefined"==typeof Promise?void 0:Promise,"%Proxy%":"undefined"==typeof Proxy?void 0:Proxy,"%RangeError%":RangeError,"%ReferenceError%":ReferenceError,"%Reflect%":"undefined"==typeof Reflect?void 0:Reflect,"%RegExp%":RegExp,"%Set%":"undefined"==typeof Set?void 0:Set,"%SetIteratorPrototype%":"undefined"!=typeof Set&&u?p((new Set)[Symbol.iterator]()):void 0,"%SharedArrayBuffer%":"undefined"==typeof SharedArrayBuffer?void 0:SharedArrayBuffer,"%String%":String,"%StringIteratorPrototype%":u?p(""[Symbol.iterator]()):void 0,"%Symbol%":u?Symbol:void 0,"%SyntaxError%":r,"%ThrowTypeError%":l,"%TypedArray%":h,"%TypeError%":i,"%Uint8Array%":"undefined"==typeof Uint8Array?void 0:Uint8Array,"%Uint8ClampedArray%":"undefined"==typeof Uint8ClampedArray?void 0:Uint8ClampedArray,"%Uint16Array%":"undefined"==typeof Uint16Array?void 0:Uint16Array,"%Uint32Array%":"undefined"==typeof Uint32Array?void 0:Uint32Array,"%URIError%":URIError,"%WeakMap%":"undefined"==typeof WeakMap?void 0:WeakMap,"%WeakRef%":"undefined"==typeof WeakRef?void 0:WeakRef,"%WeakSet%":"undefined"==typeof WeakSet?void 0:WeakSet},v={"%ArrayBufferPrototype%":["ArrayBuffer","prototype"],"%ArrayPrototype%":["Array","prototype"],"%ArrayProto_entries%":["Array","prototype","entries"],"%ArrayProto_forEach%":["Array","prototype","forEach"],"%ArrayProto_keys%":["Array","prototype","keys"],"%ArrayProto_values%":["Array","prototype","values"],"%AsyncFunctionPrototype%":["AsyncFunction","prototype"],"%AsyncGenerator%":["AsyncGeneratorFunction","prototype"],"%AsyncGeneratorPrototype%":["AsyncGeneratorFunction","prototype","prototype"],"%BooleanPrototype%":["Boolean","prototype"],"%DataViewPrototype%":["DataView","prototype"],"%DatePrototype%":["Date","prototype"],"%ErrorPrototype%":["Error","prototype"],"%EvalErrorPrototype%":["EvalError","prototype"],"%Float32ArrayPrototype%":["Float32Array","prototype"],"%Float64ArrayPrototype%":["Float64Array","prototype"],"%FunctionPrototype%":["Function","prototype"],"%Generator%":["GeneratorFunction","prototype"],"%GeneratorPrototype%":["GeneratorFunction","prototype","prototype"],"%Int8ArrayPrototype%":["Int8Array","prototype"],"%Int16ArrayPrototype%":["Int16Array","prototype"],"%Int32ArrayPrototype%":["Int32Array","prototype"],"%JSONParse%":["JSON","parse"],"%JSONStringify%":["JSON","stringify"],"%MapPrototype%":["Map","prototype"],"%NumberPrototype%":["Number","prototype"],"%ObjectPrototype%":["Object","prototype"],"%ObjProto_toString%":["Object","prototype","toString"],"%ObjProto_valueOf%":["Object","prototype","valueOf"],"%PromisePrototype%":["Promise","prototype"],"%PromiseProto_then%":["Promise","prototype","then"],"%Promise_all%":["Promise","all"],"%Promise_reject%":["Promise","reject"],"%Promise_resolve%":["Promise","resolve"],"%RangeErrorPrototype%":["RangeError","prototype"],"%ReferenceErrorPrototype%":["ReferenceError","prototype"],"%RegExpPrototype%":["RegExp","prototype"],"%SetPrototype%":["Set","prototype"],"%SharedArrayBufferPrototype%":["SharedArrayBuffer","prototype"],"%StringPrototype%":["String","prototype"],"%SymbolPrototype%":["Symbol","prototype"],"%SyntaxErrorPrototype%":["SyntaxError","prototype"],"%TypedArrayPrototype%":["TypedArray","prototype"],"%TypeErrorPrototype%":["TypeError","prototype"],"%Uint8ArrayPrototype%":["Uint8Array","prototype"],"%Uint8ClampedArrayPrototype%":["Uint8ClampedArray","prototype"],"%Uint16ArrayPrototype%":["Uint16Array","prototype"],"%Uint32ArrayPrototype%":["Uint32Array","prototype"],"%URIErrorPrototype%":["URIError","prototype"],"%WeakMapPrototype%":["WeakMap","prototype"],"%WeakSetPrototype%":["WeakSet","prototype"]},b=n(129),m=n(379),g=b.call(Function.call,Array.prototype.concat),y=b.call(Function.apply,Array.prototype.splice),_=b.call(Function.call,String.prototype.replace),x=b.call(Function.call,String.prototype.slice),w=/[^%.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|%$))/g,S=/\\(\\)?/g,O=function(t){var e=x(t,0,1),n=x(t,-1);if("%"===e&&"%"!==n)throw new r("invalid intrinsic syntax, expected closing `%`");if("%"===n&&"%"!==e)throw new r("invalid intrinsic syntax, expected opening `%`");var o=[];return _(t,w,(function(t,e,n,r){o[o.length]=n?_(r,S,"$1"):e||t})),o},$=function(t,e){var n,o=t;if(m(v,o)&&(o="%"+(n=v[o])[0]+"%"),m(f,o)){var s=f[o];if(s===d&&(s=function t(e){var n;if("%AsyncFunction%"===e)n=a("async function () {}");else if("%GeneratorFunction%"===e)n=a("function* () {}");else if("%AsyncGeneratorFunction%"===e)n=a("async function* () {}");else if("%AsyncGenerator%"===e){var r=t("%AsyncGeneratorFunction%");r&&(n=r.prototype)}else if("%AsyncIteratorPrototype%"===e){var o=t("%AsyncGenerator%");o&&(n=p(o.prototype))}return f[e]=n,n}(o)),void 0===s&&!e)throw new i("intrinsic "+t+" exists, but is not available. Please file an issue!");return{alias:n,name:o,value:s}}throw new r("intrinsic "+t+" does not exist!")};t.exports=function(t,e){if("string"!=typeof t||0===t.length)throw new i("intrinsic name must be a non-empty string");if(arguments.length>1&&"boolean"!=typeof e)throw new i('"allowMissing" argument must be a boolean');var n=O(t),o=n.length>0?n[0]:"",a=$("%"+o+"%",e),c=a.name,l=a.value,u=!1,p=a.alias;p&&(o=p[0],y(n,g([0,1],p)));for(var d=1,h=!0;d<n.length;d+=1){var v=n[d],b=x(v,0,1),_=x(v,-1);if(('"'===b||"'"===b||"`"===b||'"'===_||"'"===_||"`"===_)&&b!==_)throw new r("property names with quotes must have matching quotes");if("constructor"!==v&&h||(u=!0),m(f,c="%"+(o+="."+v)+"%"))l=f[c];else if(null!=l){if(!(v in l)){if(!e)throw new i("base intrinsic for "+t+" exists, but the property is not available.");return}if(s&&d+1>=n.length){var w=s(l,v);l=(h=!!w)&&"get"in w&&!("originalValue"in w.get)?w.get:l[v]}else h=m(l,v),l=l[v];h&&!u&&(f[c]=l)}}return l}},function(t,e,n){"use strict";var r=n(378);t.exports=Function.prototype.bind||r},function(t,e,n){"use strict";var r=String.prototype.replace,o=/%20/g,i="RFC1738",a="RFC3986";t.exports={default:a,formatters:{RFC1738:function(t){return r.call(t,o,"+")},RFC3986:function(t){return String(t)}},RFC1738:i,RFC3986:a}},function(t,e,n){var r=n(391);t.exports=function(t){return r(t,{weekStartsOn:1})}},function(t,e,n){"use strict";n.d(e,"a",(function(){return Q})),n.d(e,"b",(function(){return it})),n.d(e,"c",(function(){return w})),n.d(e,"e",(function(){return Y})),n.d(e,"f",(function(){return X})),n.d(e,"g",(function(){return W})),n.d(e,"h",(function(){return j})),n.d(e,"i",(function(){return F})),n.d(e,"d",(function(){return st}));var r=n(0);function o(t){return"function"==typeof t&&/native code/.test(t.toString())}var i="undefined"!=typeof Symbol&&o(Symbol)&&"undefined"!=typeof Reflect&&o(Reflect.ownKeys),a=function(t){return t};function s(t,e,n){var r=n.get,o=n.set;Object.defineProperty(t,e,{enumerable:!0,configurable:!0,get:r||a,set:o||a})}function c(t,e,n,r){Object.defineProperty(t,e,{value:n,enumerable:!!r,writable:!0,configurable:!0})}function l(t,e){return Object.hasOwnProperty.call(t,e)}function u(t){return Array.isArray(t)}function p(t){return null!==t&&"object"==typeof t}function d(t){return"[object Object]"===function(t){return Object.prototype.toString.call(t)}(t)}function h(t){return"function"==typeof t}function f(t,e){r.default.util.warn(t,e)}var v=void 0;try{var b=n(0);b&&y(b)?v=b:b&&"default"in b&&y(b.default)&&(v=b.default)}catch(t){}var m=null,g=null;function y(t){return t&&"function"==typeof t&&"Vue"===t.name}function _(){return m}function x(t){g=t}function w(){return g?function t(e){if(O.has(e))return O.get(e);var n={proxy:e,update:e.$forceUpdate,uid:e._uid,emit:e.$emit.bind(e),parent:null,root:null};["data","props","attrs","refs","vnode","slots"].forEach((function(t){s(n,t,{get:function(){return e["$"+t]}})})),s(n,"isMounted",{get:function(){return e._isMounted}}),s(n,"isUnmounted",{get:function(){return e._isDestroyed}}),s(n,"isDeactivated",{get:function(){return e._inactive}}),s(n,"emitted",{get:function(){return e._events}}),O.set(e,n),e.$parent&&(n.parent=t(e.$parent));e.$root&&(n.root=t(e.$root));return n}(g):null}var S,O=new WeakMap;function $(t){var e=w();return null==e?void 0:e.proxy}function T(t,e){void 0===e&&(e={});var n=t.config.silent;t.config.silent=!0;var r=new t(e);return t.config.silent=n,r}function E(t,e){return function(){for(var n=[],r=0;r<arguments.length;r++)n[r]=arguments[r];return t.$scopedSlots[e]?t.$scopedSlots[e].apply(t,n):f("slots."+e+'() got called outside of the "render()" scope',t)}}function C(t){var e="function"==typeof Symbol&&Symbol.iterator,n=e&&t[e],r=0;if(n)return n.call(t);if(t&&"number"==typeof t.length)return{next:function(){return t&&r>=t.length&&(t=void 0),{value:t&&t[r++],done:!t}}};throw new TypeError(e?"Object is not iterable.":"Symbol.iterator is not defined.")}function I(t,e){var n="function"==typeof Symbol&&t[Symbol.iterator];if(!n)return t;var r,o,i=n.call(t),a=[];try{for(;(void 0===e||e-- >0)&&!(r=i.next()).done;)a.push(r.value)}catch(t){o={error:t}}finally{try{r&&!r.done&&(n=i.return)&&n.call(i)}finally{if(o)throw o.error}}return a}function A(t,e){for(var n=0,r=e.length,o=t.length;n<r;n++,o++)t[o]=e[n];return t}function k(t){return i?Symbol.for(t):t}k("composition-api.preFlushQueue"),k("composition-api.postFlushQueue");var L="composition-api.refKey",P=new WeakMap,M=(new WeakMap,new WeakMap),N=function(t){s(this,"value",{get:t.get,set:t.set})};function D(t,e){var n=new N(t),r=Object.seal(n);return M.set(r,!0),r}function j(t){var e;if(R(t))return t;var n=W(((e={})[L]=t,e));return D({get:function(){return n[L]},set:function(t){return n[L]=t}})}function R(t){return t instanceof N}function F(t){if(!d(t))return t;var e={};for(var n in t)e[n]=U(t,n);return e}function U(t,e){var n=t[e];return R(n)?n:D({get:function(){return t[e]},set:function(n){return t[e]=n}})}function B(t){var e;return Boolean((null==t?void 0:t.__ob__)&&(null===(e=t.__ob__)||void 0===e?void 0:e.__raw__))}function z(t){var e;return Boolean((null==t?void 0:t.__ob__)&&!(null===(e=t.__ob__)||void 0===e?void 0:e.__raw__))}function G(t){if(!(!d(t)||B(t)||Array.isArray(t)||R(t)||(e=t,n=_(),n&&e instanceof n)||P.has(t))){var e,n;P.set(t,!0);for(var r=Object.keys(t),o=0;o<r.length;o++)V(t,r[o])}}function V(t,e,n){if("__ob__"!==e&&!B(t[e])){var r,o,i=Object.getOwnPropertyDescriptor(t,e);if(i){if(!1===i.configurable)return;r=i.get,o=i.set,r&&!o||2!==arguments.length||(n=t[e])}G(n),Object.defineProperty(t,e,{enumerable:!0,configurable:!0,get:function(){var o=r?r.call(t):n;return e!==L&&R(o)?o.value:o},set:function(i){if(!r||o){var a=r?r.call(t):n;e!==L&&R(a)&&!R(i)?a.value=i:o?o.call(t,i):n=i,G(i)}}})}}function J(t){var e,n=m||v;n.observable?e=n.observable(t):e=T(n,{data:{$$state:t}})._data.$$state;return l(e,"__ob__")||c(e,"__ob__",function(t){void 0===t&&(t={});return{value:t,dep:{notify:a,depend:a,addSub:a,removeSub:a}}}(e)),e}function H(){return J({}).__ob__}function W(t){if(!p(t))return t;if(!d(t)&&!u(t)||B(t)||!Object.isExtensible(t))return t;var e=J(t);return G(e),e}function q(t){return function(e){var n,r=$(((n=t)[0].toUpperCase(),n.slice(1)));r&&function(t,e,n,r){var o=e.$options,i=t.config.optionMergeStrategies[n];o[n]=i(o[n],function(t,e){return function(){for(var n,r=[],o=0;o<arguments.length;o++)r[o]=arguments[o];var i=null===(n=w())||void 0===n?void 0:n.proxy;x(t);try{return e.apply(void 0,A([],I(r)))}finally{x(i)}}}(e,r))}(_(),r,t,e)}}q("beforeMount");var Y=q("mounted"),X=(q("beforeUpdate"),q("updated"));q("beforeDestroy"),q("destroyed"),q("errorCaptured"),q("activated"),q("deactivated"),q("serverPrefetch");function Q(t){var e,n,r,o,i,s=null===(e=w())||void 0===e?void 0:e.proxy;if("function"==typeof t?n=t:(n=t.get,r=t.set),s&&!s.$isServer){var c,l=function(){if(!S){var t=T(_(),{computed:{value:function(){return 0}}}),e=t._computedWatchers.value.constructor,n=t._data.__ob__.dep.constructor;S={Watcher:e,Dep:n},t.$destroy()}return S}(),u=l.Watcher,p=l.Dep;i=function(){return c||(c=new u(s,n,a,{lazy:!0})),c.dirty&&c.evaluate(),p.target&&c.depend(),c.value},o=function(t){r&&r(t)}}else{var d=T(_(),{computed:{$$state:{get:n,set:r}}});s&&s.$on("hook:destroyed",(function(){return d.$destroy()})),i=function(){return d.$$state},o=function(t){d.$$state=t}}return D({get:i,set:o})}var K={set:function(t,e,n){(t.__composition_api_state__=t.__composition_api_state__||{})[e]=n},get:function(t,e){return(t.__composition_api_state__||{})[e]}};function Z(t){var e=K.get(t,"rawBindings")||{};if(e&&Object.keys(e).length){for(var n=t.$refs,r=K.get(t,"refs")||[],o=0;o<r.length;o++){var i=e[c=r[o]];!n[c]&&i&&R(i)&&(i.value=null)}var a=Object.keys(n),s=[];for(o=0;o<a.length;o++){var c;i=e[c=a[o]];n[c]&&i&&R(i)&&(i.value=n[c],s.push(c))}K.set(t,"refs",s)}}function tt(t,e){var n=t.$options._parentVnode;if(n){for(var r=K.get(t,"slots")||[],o=function(t,e){var n;if(t){if(t._normalized)return t._normalized;for(var r in n={},t)t[r]&&"$"!==r[0]&&(n[r]=!0)}else n={};for(var r in e)r in n||(n[r]=!0);return n}(n.data.scopedSlots,t.$slots),i=0;i<r.length;i++){o[s=r[i]]||delete e[s]}var a=Object.keys(o);for(i=0;i<a.length;i++){var s;e[s=a[i]]||(e[s]=E(t,s))}K.set(t,"slots",a)}}function et(t,e,n){var r=g;x(t);try{return e(t)}catch(t){if(!n)throw t;n(t)}finally{x(r)}}function nt(t){t.mixin({beforeCreate:function(){var t=this,e=t.$options,n=e.setup,r=e.render;r&&(e.render=function(){for(var e=this,n=[],o=0;o<arguments.length;o++)n[o]=arguments[o];return et(t,(function(){return r.apply(e,n)}))});if(!n)return;if("function"!=typeof n)return void 0;var o=e.data;e.data=function(){return function(t,e){void 0===e&&(e={});var n,r=t.$options.setup,o=function(t){var e={slots:{}};["root","parent","refs","listeners","isServer","ssrContext"].forEach((function(n){var r="$"+n;s(e,n,{get:function(){return t[r]},set:function(){f("Cannot assign to '"+n+"' because it is a read-only property",t)}})})),["attrs"].forEach((function(n){var r="$"+n;s(e,n,{get:function(){var e,n,o=W({}),i=t[r],a=function(e){s(o,e,{get:function(){return t[r][e]}})};try{for(var c=C(Object.keys(i)),l=c.next();!l.done;l=c.next()){a(l.value)}}catch(t){e={error:t}}finally{try{l&&!l.done&&(n=c.return)&&n.call(c)}finally{if(e)throw e.error}}return o},set:function(){f("Cannot assign to '"+n+"' because it is a read-only property",t)}})})),["emit"].forEach((function(n){var r="$"+n;s(e,n,{get:function(){return function(){for(var e=[],n=0;n<arguments.length;n++)e[n]=arguments[n];var o=t[r];o.apply(t,e)}}})})),!1;return e}(t);if(c(e,"__ob__",H()),tt(t,o.slots),et(t,(function(){n=r(e,o)})),!n)return;if(h(n)){var i=n;return void(t.$options.render=function(){return tt(t,o.slots),et(t,(function(){return i()}))})}if(d(n)){z(n)&&(n=F(n)),K.set(t,"rawBindings",n);var a=n;return void Object.keys(a).forEach((function(e){var n=a[e];R(n)||(z(n)?u(n)&&(n=j(n)):h(n)?n=n.bind(t):p(n)?function t(e,n){void 0===n&&(n=new Map);if(n.has(e))return n.get(e);if(n.set(e,!1),Array.isArray(e)&&z(e))return n.set(e,!0),!0;if(!d(e)||B(e))return!1;return Object.keys(e).some((function(r){return t(e[r],n)}))}(n)&&function t(e){if(!d(e)||R(e)||z(e)||B(e))return;var n=_().util.defineReactive;Object.keys(e).forEach((function(r){var o=e[r];n(e,r,o),o&&t(o)}))}(n):n=j(n)),function(t,e,n){var r=t.$options.props;e in t||r&&l(r,e)||(R(n)?s(t,e,{get:function(){return n.value},set:function(t){n.value=t}}):t[e]=n)}(t,e,n)}))}0}(t,t.$props),"function"==typeof o?o.call(t,t):o||{}}},mounted:function(){Z(this)},updated:function(){Z(this)}})}function rt(t){(function(t){return l(t,"__composition_api_installed__")})(t)||(t.config.optionMergeStrategies.setup=function(t,e){return function(n,r){return function t(e,n){if(!e)return n;if(!n)return e;for(var r,o,a,s=i?Reflect.ownKeys(e):Object.keys(e),c=0;c<s.length;c++)"__ob__"!==(r=s[c])&&(o=n[r],a=e[r],l(n,r)?o!==a&&d(o)&&!R(o)&&d(a)&&!R(a)&&t(a,o):n[r]=a);return n}("function"==typeof t?t(n,r)||{}:void 0,"function"==typeof e?e(n,r)||{}:void 0)}},function(t){m=t,Object.defineProperty(t,"__composition_api_installed__",{configurable:!0,writable:!0,value:!0})}(t),nt(t))}var ot={install:function(t){return rt(t)}};function it(t){return t}"undefined"!=typeof window&&window.Vue&&window.Vue.use(ot);var at=ot;function st(t){(t=t||r.default)&&!t.__composition_api_installed__&&r.default.use(at)}st(r.default);r.default.version},function(t,e,n){"use strict";var r=n(1),o=n(3),i=n(62),a=n(8),s=n(13),c=n(15),l=n(63),u=n(113),p=n(64),d=n(6),h=n(58),f=d("isConcatSpreadable"),v=h>=51||!o((function(){var t=[];return t[f]=!1,t.concat()[0]!==t})),b=p("concat"),m=function(t){if(!a(t))return!1;var e=t[f];return void 0!==e?!!e:i(t)};r({target:"Array",proto:!0,forced:!v||!b},{concat:function(t){var e,n,r,o,i,a=s(this),p=u(a,0),d=0;for(e=-1,r=arguments.length;e<r;e++)if(m(i=-1===e?a:arguments[e])){if(d+(o=c(i.length))>9007199254740991)throw TypeError("Maximum allowed index exceeded");for(n=0;n<o;n++,d++)n in i&&l(p,d,i[n])}else{if(d>=9007199254740991)throw TypeError("Maximum allowed index exceeded");l(p,d++,i)}return p.length=d,p}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return r}));n(44),n(54),n(20),n(77),n(23),n(26);function r(t){return(r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}},function(t,e,n){var r=n(1),o=n(261);r({target:"Array",stat:!0,forced:!n(158)((function(t){Array.from(t)}))},{from:o})},function(t,e){t.exports=function(t){return t.webpackPolyfill||(t.deprecate=function(){},t.paths=[],t.children||(t.children=[]),Object.defineProperty(t,"loaded",{enumerable:!0,get:function(){return t.l}}),Object.defineProperty(t,"id",{enumerable:!0,get:function(){return t.i}}),t.webpackPolyfill=1),t}},function(t,e,n){var r=n(21),o="["+n(138)+"]",i=RegExp("^"+o+o+"*"),a=RegExp(o+o+"*$"),s=function(t){return function(e){var n=String(r(e));return 1&t&&(n=n.replace(i,"")),2&t&&(n=n.replace(a,"")),n}};t.exports={start:s(1),end:s(2),trim:s(3)}},function(t,e){t.exports="\t\n\v\f\r                　\u2028\u2029\ufeff"},function(t,e,n){"use strict";var r=n(1),o=n(82),i=n(47),a=n(15),s=n(13),c=n(113),l=n(63),u=n(64)("splice"),p=Math.max,d=Math.min;r({target:"Array",proto:!0,forced:!u},{splice:function(t,e){var n,r,u,h,f,v,b=s(this),m=a(b.length),g=o(t,m),y=arguments.length;if(0===y?n=r=0:1===y?(n=0,r=m-g):(n=y-2,r=d(p(i(e),0),m-g)),m+n-r>9007199254740991)throw TypeError("Maximum allowed length exceeded");for(u=c(b,r),h=0;h<r;h++)(f=g+h)in b&&l(u,h,b[f]);if(u.length=r,n<r){for(h=g;h<m-r;h++)v=h+n,(f=h+r)in b?b[v]=b[f]:delete b[v];for(h=m;h>m-r+n;h--)delete b[h-1]}else if(n>r)for(h=m-r;h>g;h--)v=h+n-1,(f=h+r-1)in b?b[v]=b[f]:delete b[v];for(h=0;h<n;h++)b[h+g]=arguments[h+2];return b.length=m-r+n,u}})},function(t,e,n){"use strict";var r=n(24),o=n(100),i=n(60),a=n(48),s=n(147),c=a.set,l=a.getterFor("Array Iterator");t.exports=s(Array,"Array",(function(t,e){c(this,{type:"Array Iterator",target:r(t),index:0,kind:e})}),(function(){var t=l(this),e=t.target,n=t.kind,r=t.index++;return!e||r>=e.length?(t.target=void 0,{value:void 0,done:!0}):"keys"==n?{value:r,done:!1}:"values"==n?{value:e[r],done:!1}:{value:[r,e[r]],done:!1}}),"values"),i.Arguments=i.Array,o("keys"),o("values"),o("entries")},function(t,e,n){var r=n(10),o=n(3),i=n(103);t.exports=!r&&!o((function(){return 7!=Object.defineProperty(i("div"),"a",{get:function(){return 7}}).a}))},function(t,e,n){var r=n(4);t.exports=r},function(t,e,n){var r=n(104);t.exports=r&&!Symbol.sham&&"symbol"==typeof Symbol.iterator},function(t,e,n){var r=n(10),o=n(12),i=n(9),a=n(81);t.exports=r?Object.defineProperties:function(t,e){i(t);for(var n,r=a(e),s=r.length,c=0;s>c;)o.f(t,n=r[c++],e[n]);return t}},function(t,e,n){var r=n(14),o=n(24),i=n(105).indexOf,a=n(59);t.exports=function(t,e){var n,s=o(t),c=0,l=[];for(n in s)!r(a,n)&&r(s,n)&&l.push(n);for(;e.length>c;)r(s,n=e[c++])&&(~i(l,n)||l.push(n));return l}},function(t,e,n){var r=n(31);t.exports=r("document","documentElement")},function(t,e,n){"use strict";var r=n(1),o=n(242),i=n(110),a=n(86),s=n(85),c=n(25),l=n(19),u=n(6),p=n(36),d=n(60),h=n(150),f=h.IteratorPrototype,v=h.BUGGY_SAFARI_ITERATORS,b=u("iterator"),m=function(){return this};t.exports=function(t,e,n,u,h,g,y){o(n,e,u);var _,x,w,S=function(t){if(t===h&&C)return C;if(!v&&t in T)return T[t];switch(t){case"keys":case"values":case"entries":return function(){return new n(this,t)}}return function(){return new n(this)}},O=e+" Iterator",$=!1,T=t.prototype,E=T[b]||T["@@iterator"]||h&&T[h],C=!v&&E||S(h),I="Array"==e&&T.entries||E;if(I&&(_=i(I.call(new t)),f!==Object.prototype&&_.next&&(p||i(_)===f||(a?a(_,f):"function"!=typeof _[b]&&c(_,b,m)),s(_,O,!0,!0),p&&(d[O]=m))),"values"==h&&E&&"values"!==E.name&&($=!0,C=function(){return E.call(this)}),p&&!y||T[b]===C||c(T,b,C),d[e]=C,h)if(x={values:S("values"),keys:g?C:S("keys"),entries:S("entries")},y)for(w in x)(v||$||!(w in T))&&l(T,w,x[w]);else r({target:e,proto:!0,forced:v||$},x);return x}},function(t,e,n){var r=n(14),o=n(149),i=n(32),a=n(12);t.exports=function(t,e){for(var n=o(e),s=a.f,c=i.f,l=0;l<n.length;l++){var u=n[l];r(t,u)||s(t,u,c(e,u))}}},function(t,e,n){var r=n(31),o=n(61),i=n(109),a=n(9);t.exports=r("Reflect","ownKeys")||function(t){var e=o.f(a(t)),n=i.f;return n?e.concat(n(t)):e}},function(t,e,n){"use strict";var r,o,i,a=n(3),s=n(110),c=n(25),l=n(14),u=n(6),p=n(36),d=u("iterator"),h=!1;[].keys&&("next"in(i=[].keys())?(o=s(s(i)))!==Object.prototype&&(r=o):h=!0);var f=null==r||a((function(){var t={};return r[d].call(t)!==t}));f&&(r={}),p&&!f||l(r,d)||c(r,d,(function(){return this})),t.exports={IteratorPrototype:r,BUGGY_SAFARI_ITERATORS:h}},function(t,e,n){var r=n(3);t.exports=!r((function(){function t(){}return t.prototype.constructor=null,Object.getPrototypeOf(new t)!==t.prototype}))},function(t,e,n){var r=n(4);t.exports=r.Promise},function(t,e,n){"use strict";var r=n(31),o=n(12),i=n(6),a=n(10),s=i("species");t.exports=function(t){var e=r(t),n=o.f;a&&e&&!e[s]&&n(e,s,{configurable:!0,get:function(){return this}})}},function(t,e,n){var r=n(6),o=n(60),i=r("iterator"),a=Array.prototype;t.exports=function(t){return void 0!==t&&(o.Array===t||a[i]===t)}},function(t,e,n){var r=n(156),o=n(60),i=n(6)("iterator");t.exports=function(t){if(null!=t)return t[i]||t["@@iterator"]||o[r(t)]}},function(t,e,n){var r=n(111),o=n(35),i=n(6)("toStringTag"),a="Arguments"==o(function(){return arguments}());t.exports=r?o:function(t){var e,n,r;return void 0===t?"Undefined":null===t?"Null":"string"==typeof(n=function(t,e){try{return t[e]}catch(t){}}(e=Object(t),i))?n:a?o(e):"Object"==(r=o(e))&&"function"==typeof e.callee?"Arguments":r}},function(t,e,n){var r=n(9);t.exports=function(t){var e=t.return;if(void 0!==e)return r(e.call(t)).value}},function(t,e,n){var r=n(6)("iterator"),o=!1;try{var i=0,a={next:function(){return{done:!!i++}},return:function(){o=!0}};a[r]=function(){return this},Array.from(a,(function(){throw 2}))}catch(t){}t.exports=function(t,e){if(!e&&!o)return!1;var n=!1;try{var i={};i[r]=function(){return{next:function(){return{done:n=!0}}}},t(i)}catch(t){}return n}},function(t,e,n){var r,o,i,a=n(4),s=n(3),c=n(87),l=n(146),u=n(103),p=n(160),d=n(57),h=a.location,f=a.setImmediate,v=a.clearImmediate,b=a.process,m=a.MessageChannel,g=a.Dispatch,y=0,_={},x=function(t){if(_.hasOwnProperty(t)){var e=_[t];delete _[t],e()}},w=function(t){return function(){x(t)}},S=function(t){x(t.data)},O=function(t){a.postMessage(t+"",h.protocol+"//"+h.host)};f&&v||(f=function(t){for(var e=[],n=1;arguments.length>n;)e.push(arguments[n++]);return _[++y]=function(){("function"==typeof t?t:Function(t)).apply(void 0,e)},r(y),y},v=function(t){delete _[t]},d?r=function(t){b.nextTick(w(t))}:g&&g.now?r=function(t){g.now(w(t))}:m&&!p?(i=(o=new m).port2,o.port1.onmessage=S,r=c(i.postMessage,i,1)):a.addEventListener&&"function"==typeof postMessage&&!a.importScripts&&h&&"file:"!==h.protocol&&!s(O)?(r=O,a.addEventListener("message",S,!1)):r="onreadystatechange"in u("script")?function(t){l.appendChild(u("script")).onreadystatechange=function(){l.removeChild(this),x(t)}}:function(t){setTimeout(w(t),0)}),t.exports={set:f,clear:v}},function(t,e,n){var r=n(80);t.exports=/(?:iphone|ipod|ipad).*applewebkit/i.test(r)},function(t,e,n){var r=n(9),o=n(8),i=n(162);t.exports=function(t,e){if(r(t),o(e)&&e.constructor===t)return e;var n=i.f(t);return(0,n.resolve)(e),n.promise}},function(t,e,n){"use strict";var r=n(33),o=function(t){var e,n;this.promise=new t((function(t,r){if(void 0!==e||void 0!==n)throw TypeError("Bad Promise constructor");e=t,n=r})),this.resolve=r(e),this.reject=r(n)};t.exports.f=function(t){return new o(t)}},function(t,e,n){var r=function(t){"use strict";var e=Object.prototype,n=e.hasOwnProperty,r="function"==typeof Symbol?Symbol:{},o=r.iterator||"@@iterator",i=r.asyncIterator||"@@asyncIterator",a=r.toStringTag||"@@toStringTag";function s(t,e,n){return Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}),t[e]}try{s({},"")}catch(t){s=function(t,e,n){return t[e]=n}}function c(t,e,n,r){var o=e&&e.prototype instanceof p?e:p,i=Object.create(o.prototype),a=new S(r||[]);return i._invoke=function(t,e,n){var r="suspendedStart";return function(o,i){if("executing"===r)throw new Error("Generator is already running");if("completed"===r){if("throw"===o)throw i;return $()}for(n.method=o,n.arg=i;;){var a=n.delegate;if(a){var s=_(a,n);if(s){if(s===u)continue;return s}}if("next"===n.method)n.sent=n._sent=n.arg;else if("throw"===n.method){if("suspendedStart"===r)throw r="completed",n.arg;n.dispatchException(n.arg)}else"return"===n.method&&n.abrupt("return",n.arg);r="executing";var c=l(t,e,n);if("normal"===c.type){if(r=n.done?"completed":"suspendedYield",c.arg===u)continue;return{value:c.arg,done:n.done}}"throw"===c.type&&(r="completed",n.method="throw",n.arg=c.arg)}}}(t,n,a),i}function l(t,e,n){try{return{type:"normal",arg:t.call(e,n)}}catch(t){return{type:"throw",arg:t}}}t.wrap=c;var u={};function p(){}function d(){}function h(){}var f={};f[o]=function(){return this};var v=Object.getPrototypeOf,b=v&&v(v(O([])));b&&b!==e&&n.call(b,o)&&(f=b);var m=h.prototype=p.prototype=Object.create(f);function g(t){["next","throw","return"].forEach((function(e){s(t,e,(function(t){return this._invoke(e,t)}))}))}function y(t,e){var r;this._invoke=function(o,i){function a(){return new e((function(r,a){!function r(o,i,a,s){var c=l(t[o],t,i);if("throw"!==c.type){var u=c.arg,p=u.value;return p&&"object"==typeof p&&n.call(p,"__await")?e.resolve(p.__await).then((function(t){r("next",t,a,s)}),(function(t){r("throw",t,a,s)})):e.resolve(p).then((function(t){u.value=t,a(u)}),(function(t){return r("throw",t,a,s)}))}s(c.arg)}(o,i,r,a)}))}return r=r?r.then(a,a):a()}}function _(t,e){var n=t.iterator[e.method];if(void 0===n){if(e.delegate=null,"throw"===e.method){if(t.iterator.return&&(e.method="return",e.arg=void 0,_(t,e),"throw"===e.method))return u;e.method="throw",e.arg=new TypeError("The iterator does not provide a 'throw' method")}return u}var r=l(n,t.iterator,e.arg);if("throw"===r.type)return e.method="throw",e.arg=r.arg,e.delegate=null,u;var o=r.arg;return o?o.done?(e[t.resultName]=o.value,e.next=t.nextLoc,"return"!==e.method&&(e.method="next",e.arg=void 0),e.delegate=null,u):o:(e.method="throw",e.arg=new TypeError("iterator result is not an object"),e.delegate=null,u)}function x(t){var e={tryLoc:t[0]};1 in t&&(e.catchLoc=t[1]),2 in t&&(e.finallyLoc=t[2],e.afterLoc=t[3]),this.tryEntries.push(e)}function w(t){var e=t.completion||{};e.type="normal",delete e.arg,t.completion=e}function S(t){this.tryEntries=[{tryLoc:"root"}],t.forEach(x,this),this.reset(!0)}function O(t){if(t){var e=t[o];if(e)return e.call(t);if("function"==typeof t.next)return t;if(!isNaN(t.length)){var r=-1,i=function e(){for(;++r<t.length;)if(n.call(t,r))return e.value=t[r],e.done=!1,e;return e.value=void 0,e.done=!0,e};return i.next=i}}return{next:$}}function $(){return{value:void 0,done:!0}}return d.prototype=m.constructor=h,h.constructor=d,d.displayName=s(h,a,"GeneratorFunction"),t.isGeneratorFunction=function(t){var e="function"==typeof t&&t.constructor;return!!e&&(e===d||"GeneratorFunction"===(e.displayName||e.name))},t.mark=function(t){return Object.setPrototypeOf?Object.setPrototypeOf(t,h):(t.__proto__=h,s(t,a,"GeneratorFunction")),t.prototype=Object.create(m),t},t.awrap=function(t){return{__await:t}},g(y.prototype),y.prototype[i]=function(){return this},t.AsyncIterator=y,t.async=function(e,n,r,o,i){void 0===i&&(i=Promise);var a=new y(c(e,n,r,o),i);return t.isGeneratorFunction(n)?a:a.next().then((function(t){return t.done?t.value:a.next()}))},g(m),s(m,a,"Generator"),m[o]=function(){return this},m.toString=function(){return"[object Generator]"},t.keys=function(t){var e=[];for(var n in t)e.push(n);return e.reverse(),function n(){for(;e.length;){var r=e.pop();if(r in t)return n.value=r,n.done=!1,n}return n.done=!0,n}},t.values=O,S.prototype={constructor:S,reset:function(t){if(this.prev=0,this.next=0,this.sent=this._sent=void 0,this.done=!1,this.delegate=null,this.method="next",this.arg=void 0,this.tryEntries.forEach(w),!t)for(var e in this)"t"===e.charAt(0)&&n.call(this,e)&&!isNaN(+e.slice(1))&&(this[e]=void 0)},stop:function(){this.done=!0;var t=this.tryEntries[0].completion;if("throw"===t.type)throw t.arg;return this.rval},dispatchException:function(t){if(this.done)throw t;var e=this;function r(n,r){return a.type="throw",a.arg=t,e.next=n,r&&(e.method="next",e.arg=void 0),!!r}for(var o=this.tryEntries.length-1;o>=0;--o){var i=this.tryEntries[o],a=i.completion;if("root"===i.tryLoc)return r("end");if(i.tryLoc<=this.prev){var s=n.call(i,"catchLoc"),c=n.call(i,"finallyLoc");if(s&&c){if(this.prev<i.catchLoc)return r(i.catchLoc,!0);if(this.prev<i.finallyLoc)return r(i.finallyLoc)}else if(s){if(this.prev<i.catchLoc)return r(i.catchLoc,!0)}else{if(!c)throw new Error("try statement without catch or finally");if(this.prev<i.finallyLoc)return r(i.finallyLoc)}}}},abrupt:function(t,e){for(var r=this.tryEntries.length-1;r>=0;--r){var o=this.tryEntries[r];if(o.tryLoc<=this.prev&&n.call(o,"finallyLoc")&&this.prev<o.finallyLoc){var i=o;break}}i&&("break"===t||"continue"===t)&&i.tryLoc<=e&&e<=i.finallyLoc&&(i=null);var a=i?i.completion:{};return a.type=t,a.arg=e,i?(this.method="next",this.next=i.finallyLoc,u):this.complete(a)},complete:function(t,e){if("throw"===t.type)throw t.arg;return"break"===t.type||"continue"===t.type?this.next=t.arg:"return"===t.type?(this.rval=this.arg=t.arg,this.method="return",this.next="end"):"normal"===t.type&&e&&(this.next=e),u},finish:function(t){for(var e=this.tryEntries.length-1;e>=0;--e){var n=this.tryEntries[e];if(n.finallyLoc===t)return this.complete(n.completion,n.afterLoc),w(n),u}},catch:function(t){for(var e=this.tryEntries.length-1;e>=0;--e){var n=this.tryEntries[e];if(n.tryLoc===t){var r=n.completion;if("throw"===r.type){var o=r.arg;w(n)}return o}}throw new Error("illegal catch attempt")},delegateYield:function(t,e,n){return this.delegate={iterator:O(t),resultName:e,nextLoc:n},"next"===this.method&&(this.arg=void 0),u}},t}(t.exports);try{regeneratorRuntime=r}catch(t){Function("r","regeneratorRuntime = r")(r)}},function(t,e,n){var r=n(47),o=n(21),i=function(t){return function(e,n){var i,a,s=String(o(e)),c=r(n),l=s.length;return c<0||c>=l?t?"":void 0:(i=s.charCodeAt(c))<55296||i>56319||c+1===l||(a=s.charCodeAt(c+1))<56320||a>57343?t?s.charAt(c):i:t?s.slice(c,c+2):a-56320+(i-55296<<10)+65536}};t.exports={codeAt:i(!1),charAt:i(!0)}},function(t,e){t.exports={CSSRuleList:0,CSSStyleDeclaration:0,CSSValueList:0,ClientRectList:0,DOMRectList:0,DOMStringList:0,DOMTokenList:1,DataTransferItemList:0,FileList:0,HTMLAllCollection:0,HTMLCollection:0,HTMLFormElement:0,HTMLSelectElement:0,MediaList:0,MimeTypeArray:0,NamedNodeMap:0,NodeList:1,PaintRequestList:0,Plugin:0,PluginArray:0,SVGLengthList:0,SVGNumberList:0,SVGPathSegList:0,SVGPointList:0,SVGStringList:0,SVGTransformList:0,SourceBufferList:0,StyleSheetList:0,TextTrackCueList:0,TextTrackList:0,TouchList:0}},function(t,e,n){var r=n(1),o=n(10),i=n(149),a=n(24),s=n(32),c=n(63);r({target:"Object",stat:!0,sham:!o},{getOwnPropertyDescriptors:function(t){for(var e,n,r=a(t),o=s.f,l=i(r),u={},p=0;l.length>p;)void 0!==(n=o(r,e=l[p++]))&&c(u,e,n);return u}})},function(t,e,n){var r=n(1),o=n(3),i=n(13),a=n(110),s=n(151);r({target:"Object",stat:!0,forced:o((function(){a(1)})),sham:!s},{getPrototypeOf:function(t){return a(i(t))}})},function(t,e,n){"use strict";var r=n(1),o=n(256).left,i=n(49),a=n(58),s=n(57);r({target:"Array",proto:!0,forced:!i("reduce")||!s&&a>79&&a<83},{reduce:function(t){return o(this,t,arguments.length,arguments.length>1?arguments[1]:void 0)}})},function(t,e,n){var r=n(114);t.exports=function(t){if(r(t))throw TypeError("The method doesn't accept regular expressions");return t}},function(t,e,n){var r=n(6)("match");t.exports=function(t){var e=/./;try{"/./"[t](e)}catch(n){try{return e[r]=!1,"/./"[t](e)}catch(t){}}return!1}},function(t,e,n){"use strict";var r=n(65).forEach,o=n(49)("forEach");t.exports=o?[].forEach:function(t){return r(this,t,arguments.length>1?arguments[1]:void 0)}},function(t,e,n){var r=n(3);t.exports=!r((function(){return Object.isExtensible(Object.preventExtensions({}))}))},function(t,e,n){var r=n(6);e.f=r},function(t,e,n){var r=n(142),o=n(14),i=n(173),a=n(12).f;t.exports=function(t){var e=r.Symbol||(r.Symbol={});o(e,t)||a(e,t,{value:i.f(t)})}},function(t,e,n){n(1)({target:"Object",stat:!0,sham:!n(10)},{create:n(46)})},function(t,e,n){"use strict";var r=n(1),o=n(55),i=n(24),a=n(49),s=[].join,c=o!=Object,l=a("join",",");r({target:"Array",proto:!0,forced:c||!l},{join:function(t){return s.call(i(this),void 0===t?",":t)}})},function(t,e){t.exports=function(t,e){for(var n=-1,r=e.length,o=t.length;++n<r;)t[o+n]=e[n];return t}},function(t,e){var n="object"==typeof global&&global&&global.Object===Object&&global;t.exports=n},function(t,e,n){var r=n(88),o=n(277),i=n(278),a=n(279),s=n(280),c=n(281);function l(t){var e=this.__data__=new r(t);this.size=e.size}l.prototype.clear=o,l.prototype.delete=i,l.prototype.get=a,l.prototype.has=s,l.prototype.set=c,t.exports=l},function(t,e){t.exports=function(t,e){return t===e||t!=t&&e!=e}},function(t,e,n){var r=n(67),o=n(121);t.exports=function(t){if(!o(t))return!1;var e=r(t);return"[object Function]"==e||"[object GeneratorFunction]"==e||"[object AsyncFunction]"==e||"[object Proxy]"==e}},function(t,e){var n=Function.prototype.toString;t.exports=function(t){if(null!=t){try{return n.call(t)}catch(t){}try{return t+""}catch(t){}}return""}},function(t,e,n){var r=n(298),o=n(50);t.exports=function t(e,n,i,a,s){return e===n||(null==e||null==n||!o(e)&&!o(n)?e!=e&&n!=n:r(e,n,i,a,t,s))}},function(t,e,n){var r=n(185),o=n(301),i=n(186);t.exports=function(t,e,n,a,s,c){var l=1&n,u=t.length,p=e.length;if(u!=p&&!(l&&p>u))return!1;var d=c.get(t),h=c.get(e);if(d&&h)return d==e&&h==t;var f=-1,v=!0,b=2&n?new r:void 0;for(c.set(t,e),c.set(e,t);++f<u;){var m=t[f],g=e[f];if(a)var y=l?a(g,m,f,e,t,c):a(m,g,f,t,e,c);if(void 0!==y){if(y)continue;v=!1;break}if(b){if(!o(e,(function(t,e){if(!i(b,e)&&(m===t||s(m,t,n,a,c)))return b.push(e)}))){v=!1;break}}else if(m!==g&&!s(m,g,n,a,c)){v=!1;break}}return c.delete(t),c.delete(e),v}},function(t,e,n){var r=n(122),o=n(299),i=n(300);function a(t){var e=-1,n=null==t?0:t.length;for(this.__data__=new r;++e<n;)this.add(t[e])}a.prototype.add=a.prototype.push=o,a.prototype.has=i,t.exports=a},function(t,e){t.exports=function(t,e){return t.has(e)}},function(t,e,n){var r=n(311),o=n(317),i=n(191);t.exports=function(t){return i(t)?r(t):o(t)}},function(t,e,n){(function(t){var r=n(28),o=n(313),i=e&&!e.nodeType&&e,a=i&&"object"==typeof t&&t&&!t.nodeType&&t,s=a&&a.exports===i?r.Buffer:void 0,c=(s?s.isBuffer:void 0)||o;t.exports=c}).call(this,n(136)(t))},function(t,e){var n=/^(?:0|[1-9]\d*)$/;t.exports=function(t,e){var r=typeof t;return!!(e=null==e?9007199254740991:e)&&("number"==r||"symbol"!=r&&n.test(t))&&t>-1&&t%1==0&&t<e}},function(t,e,n){var r=n(314),o=n(315),i=n(316),a=i&&i.isTypedArray,s=a?o(a):r;t.exports=s},function(t,e,n){var r=n(181),o=n(124);t.exports=function(t){return null!=t&&o(t.length)&&!r(t)}},function(t,e,n){var r=n(39)(n(28),"Set");t.exports=r},function(t,e,n){var r=n(121);t.exports=function(t){return t==t&&!r(t)}},function(t,e){t.exports=function(t,e){return function(n){return null!=n&&(n[t]===e&&(void 0!==e||t in Object(n)))}}},function(t,e,n){var r=n(196),o=n(92);t.exports=function(t,e){for(var n=0,i=(e=r(e,t)).length;null!=t&&n<i;)t=t[o(e[n++])];return n&&n==i?t:void 0}},function(t,e,n){var r=n(29),o=n(125),i=n(328),a=n(331);t.exports=function(t,e){return r(t)?t:o(t,e)?[t]:i(a(t))}},function(t,e,n){"use strict";var r=n(1),o=n(33),i=n(13),a=n(3),s=n(49),c=[],l=c.sort,u=a((function(){c.sort(void 0)})),p=a((function(){c.sort(null)})),d=s("sort");r({target:"Array",proto:!0,forced:u||!p||!d},{sort:function(t){return void 0===t?l.call(i(this)):l.call(i(this),o(t))}})},function(t,e,n){var r=n(8),o=n(86);t.exports=function(t,e,n){var i,a;return o&&"function"==typeof(i=e.constructor)&&i!==n&&r(a=i.prototype)&&a!==n.prototype&&o(t,a),t}},function(t,e,n){},function(t,e,n){},function(t,e,n){},function(t,e,n){},function(t,e,n){"use strict";var r=n(130),o=Object.prototype.hasOwnProperty,i=Array.isArray,a=function(){for(var t=[],e=0;e<256;++e)t.push("%"+((e<16?"0":"")+e.toString(16)).toUpperCase());return t}(),s=function(t,e){for(var n=e&&e.plainObjects?Object.create(null):{},r=0;r<t.length;++r)void 0!==t[r]&&(n[r]=t[r]);return n};t.exports={arrayToObject:s,assign:function(t,e){return Object.keys(e).reduce((function(t,n){return t[n]=e[n],t}),t)},combine:function(t,e){return[].concat(t,e)},compact:function(t){for(var e=[{obj:{o:t},prop:"o"}],n=[],r=0;r<e.length;++r)for(var o=e[r],a=o.obj[o.prop],s=Object.keys(a),c=0;c<s.length;++c){var l=s[c],u=a[l];"object"==typeof u&&null!==u&&-1===n.indexOf(u)&&(e.push({obj:a,prop:l}),n.push(u))}return function(t){for(;t.length>1;){var e=t.pop(),n=e.obj[e.prop];if(i(n)){for(var r=[],o=0;o<n.length;++o)void 0!==n[o]&&r.push(n[o]);e.obj[e.prop]=r}}}(e),t},decode:function(t,e,n){var r=t.replace(/\+/g," ");if("iso-8859-1"===n)return r.replace(/%[0-9a-f]{2}/gi,unescape);try{return decodeURIComponent(r)}catch(t){return r}},encode:function(t,e,n,o,i){if(0===t.length)return t;var s=t;if("symbol"==typeof t?s=Symbol.prototype.toString.call(t):"string"!=typeof t&&(s=String(t)),"iso-8859-1"===n)return escape(s).replace(/%u[0-9a-f]{4}/gi,(function(t){return"%26%23"+parseInt(t.slice(2),16)+"%3B"}));for(var c="",l=0;l<s.length;++l){var u=s.charCodeAt(l);45===u||46===u||95===u||126===u||u>=48&&u<=57||u>=65&&u<=90||u>=97&&u<=122||i===r.RFC1738&&(40===u||41===u)?c+=s.charAt(l):u<128?c+=a[u]:u<2048?c+=a[192|u>>6]+a[128|63&u]:u<55296||u>=57344?c+=a[224|u>>12]+a[128|u>>6&63]+a[128|63&u]:(l+=1,u=65536+((1023&u)<<10|1023&s.charCodeAt(l)),c+=a[240|u>>18]+a[128|u>>12&63]+a[128|u>>6&63]+a[128|63&u])}return c},isBuffer:function(t){return!(!t||"object"!=typeof t)&&!!(t.constructor&&t.constructor.isBuffer&&t.constructor.isBuffer(t))},isRegExp:function(t){return"[object RegExp]"===Object.prototype.toString.call(t)},maybeMap:function(t,e){if(i(t)){for(var n=[],r=0;r<t.length;r+=1)n.push(e(t[r]));return n}return e(t)},merge:function t(e,n,r){if(!n)return e;if("object"!=typeof n){if(i(e))e.push(n);else{if(!e||"object"!=typeof e)return[e,n];(r&&(r.plainObjects||r.allowPrototypes)||!o.call(Object.prototype,n))&&(e[n]=!0)}return e}if(!e||"object"!=typeof e)return[e].concat(n);var a=e;return i(e)&&!i(n)&&(a=s(e,r)),i(e)&&i(n)?(n.forEach((function(n,i){if(o.call(e,i)){var a=e[i];a&&"object"==typeof a&&n&&"object"==typeof n?e[i]=t(a,n,r):e.push(n)}else e[i]=n})),e):Object.keys(n).reduce((function(e,i){var a=n[i];return o.call(e,i)?e[i]=t(e[i],a,r):e[i]=a,e}),a)}}},function(t,e){t.exports=function(t){return t instanceof Date}},function(t,e,n){var r=n(40),o=n(131);t.exports=function(t){var e=r(t),n=e.getFullYear(),i=new Date(0);i.setFullYear(n+1,0,4),i.setHours(0,0,0,0);var a=o(i),s=new Date(0);s.setFullYear(n,0,4),s.setHours(0,0,0,0);var c=o(s);return e.getTime()>=a.getTime()?n+1:e.getTime()>=c.getTime()?n:n-1}},function(t,e,n){"use strict";t.exports=function(t,e){return function(){for(var n=new Array(arguments.length),r=0;r<n.length;r++)n[r]=arguments[r];return t.apply(e,n)}}},function(t,e,n){"use strict";var r=n(17);function o(t){return encodeURIComponent(t).replace(/%3A/gi,":").replace(/%24/g,"$").replace(/%2C/gi,",").replace(/%20/g,"+").replace(/%5B/gi,"[").replace(/%5D/gi,"]")}t.exports=function(t,e,n){if(!e)return t;var i;if(n)i=n(e);else if(r.isURLSearchParams(e))i=e.toString();else{var a=[];r.forEach(e,(function(t,e){null!=t&&(r.isArray(t)?e+="[]":t=[t],r.forEach(t,(function(t){r.isDate(t)?t=t.toISOString():r.isObject(t)&&(t=JSON.stringify(t)),a.push(o(e)+"="+o(t))})))})),i=a.join("&")}if(i){var s=t.indexOf("#");-1!==s&&(t=t.slice(0,s)),t+=(-1===t.indexOf("?")?"?":"&")+i}return t}},function(t,e,n){"use strict";t.exports=function(t){return!(!t||!t.__CANCEL__)}},function(t,e,n){"use strict";var r=n(17),o=n(403),i={"Content-Type":"application/x-www-form-urlencoded"};function a(t,e){!r.isUndefined(t)&&r.isUndefined(t["Content-Type"])&&(t["Content-Type"]=e)}var s,c={adapter:(("undefined"!=typeof XMLHttpRequest||"undefined"!=typeof process&&"[object process]"===Object.prototype.toString.call(process))&&(s=n(210)),s),transformRequest:[function(t,e){return o(e,"Accept"),o(e,"Content-Type"),r.isFormData(t)||r.isArrayBuffer(t)||r.isBuffer(t)||r.isStream(t)||r.isFile(t)||r.isBlob(t)?t:r.isArrayBufferView(t)?t.buffer:r.isURLSearchParams(t)?(a(e,"application/x-www-form-urlencoded;charset=utf-8"),t.toString()):r.isObject(t)?(a(e,"application/json;charset=utf-8"),JSON.stringify(t)):t}],transformResponse:[function(t){if("string"==typeof t)try{t=JSON.parse(t)}catch(t){}return t}],timeout:0,xsrfCookieName:"XSRF-TOKEN",xsrfHeaderName:"X-XSRF-TOKEN",maxContentLength:-1,maxBodyLength:-1,validateStatus:function(t){return t>=200&&t<300}};c.headers={common:{Accept:"application/json, text/plain, */*"}},r.forEach(["delete","get","head"],(function(t){c.headers[t]={}})),r.forEach(["post","put","patch"],(function(t){c.headers[t]=r.merge(i)})),t.exports=c},function(t,e,n){"use strict";var r=n(17),o=n(404),i=n(406),a=n(207),s=n(407),c=n(410),l=n(411),u=n(211);t.exports=function(t){return new Promise((function(e,n){var p=t.data,d=t.headers;r.isFormData(p)&&delete d["Content-Type"];var h=new XMLHttpRequest;if(t.auth){var f=t.auth.username||"",v=t.auth.password?unescape(encodeURIComponent(t.auth.password)):"";d.Authorization="Basic "+btoa(f+":"+v)}var b=s(t.baseURL,t.url);if(h.open(t.method.toUpperCase(),a(b,t.params,t.paramsSerializer),!0),h.timeout=t.timeout,h.onreadystatechange=function(){if(h&&4===h.readyState&&(0!==h.status||h.responseURL&&0===h.responseURL.indexOf("file:"))){var r="getAllResponseHeaders"in h?c(h.getAllResponseHeaders()):null,i={data:t.responseType&&"text"!==t.responseType?h.response:h.responseText,status:h.status,statusText:h.statusText,headers:r,config:t,request:h};o(e,n,i),h=null}},h.onabort=function(){h&&(n(u("Request aborted",t,"ECONNABORTED",h)),h=null)},h.onerror=function(){n(u("Network Error",t,null,h)),h=null},h.ontimeout=function(){var e="timeout of "+t.timeout+"ms exceeded";t.timeoutErrorMessage&&(e=t.timeoutErrorMessage),n(u(e,t,"ECONNABORTED",h)),h=null},r.isStandardBrowserEnv()){var m=(t.withCredentials||l(b))&&t.xsrfCookieName?i.read(t.xsrfCookieName):void 0;m&&(d[t.xsrfHeaderName]=m)}if("setRequestHeader"in h&&r.forEach(d,(function(t,e){void 0===p&&"content-type"===e.toLowerCase()?delete d[e]:h.setRequestHeader(e,t)})),r.isUndefined(t.withCredentials)||(h.withCredentials=!!t.withCredentials),t.responseType)try{h.responseType=t.responseType}catch(e){if("json"!==t.responseType)throw e}"function"==typeof t.onDownloadProgress&&h.addEventListener("progress",t.onDownloadProgress),"function"==typeof t.onUploadProgress&&h.upload&&h.upload.addEventListener("progress",t.onUploadProgress),t.cancelToken&&t.cancelToken.promise.then((function(t){h&&(h.abort(),n(t),h=null)})),p||(p=null),h.send(p)}))}},function(t,e,n){"use strict";var r=n(405);t.exports=function(t,e,n,o,i){var a=new Error(t);return r(a,e,n,o,i)}},function(t,e,n){"use strict";var r=n(17);t.exports=function(t,e){e=e||{};var n={},o=["url","method","data"],i=["headers","auth","proxy","params"],a=["baseURL","transformRequest","transformResponse","paramsSerializer","timeout","timeoutMessage","withCredentials","adapter","responseType","xsrfCookieName","xsrfHeaderName","onUploadProgress","onDownloadProgress","decompress","maxContentLength","maxBodyLength","maxRedirects","transport","httpAgent","httpsAgent","cancelToken","socketPath","responseEncoding"],s=["validateStatus"];function c(t,e){return r.isPlainObject(t)&&r.isPlainObject(e)?r.merge(t,e):r.isPlainObject(e)?r.merge({},e):r.isArray(e)?e.slice():e}function l(o){r.isUndefined(e[o])?r.isUndefined(t[o])||(n[o]=c(void 0,t[o])):n[o]=c(t[o],e[o])}r.forEach(o,(function(t){r.isUndefined(e[t])||(n[t]=c(void 0,e[t]))})),r.forEach(i,l),r.forEach(a,(function(o){r.isUndefined(e[o])?r.isUndefined(t[o])||(n[o]=c(void 0,t[o])):n[o]=c(void 0,e[o])})),r.forEach(s,(function(r){r in e?n[r]=c(t[r],e[r]):r in t&&(n[r]=c(void 0,t[r]))}));var u=o.concat(i).concat(a).concat(s),p=Object.keys(t).concat(Object.keys(e)).filter((function(t){return-1===u.indexOf(t)}));return r.forEach(p,l),n}},function(t,e,n){"use strict";function r(t){this.message=t}r.prototype.toString=function(){return"Cancel"+(this.message?": "+this.message:"")},r.prototype.__CANCEL__=!0,t.exports=r},function(t,e,n){},function(t,e,n){t.exports=function(){"use strict";var t="millisecond",e="second",n="minute",r="hour",o="day",i="week",a="month",s="quarter",c="year",l="date",u=/^(\d{4})[-/]?(\d{1,2})?[-/]?(\d{0,2})[^0-9]*(\d{1,2})?:?(\d{1,2})?:?(\d{1,2})?[.:]?(\d+)?$/,p=/\[([^\]]+)]|Y{1,4}|M{1,4}|D{1,2}|d{1,4}|H{1,2}|h{1,2}|a|A|m{1,2}|s{1,2}|Z{1,2}|SSS/g,d={name:"en",weekdays:"Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split("_"),months:"January_February_March_April_May_June_July_August_September_October_November_December".split("_")},h=function(t,e,n){var r=String(t);return!r||r.length>=e?t:""+Array(e+1-r.length).join(n)+t},f={s:h,z:function(t){var e=-t.utcOffset(),n=Math.abs(e),r=Math.floor(n/60),o=n%60;return(e<=0?"+":"-")+h(r,2,"0")+":"+h(o,2,"0")},m:function t(e,n){if(e.date()<n.date())return-t(n,e);var r=12*(n.year()-e.year())+(n.month()-e.month()),o=e.clone().add(r,a),i=n-o<0,s=e.clone().add(r+(i?-1:1),a);return+(-(r+(n-o)/(i?o-s:s-o))||0)},a:function(t){return t<0?Math.ceil(t)||0:Math.floor(t)},p:function(u){return{M:a,y:c,w:i,d:o,D:l,h:r,m:n,s:e,ms:t,Q:s}[u]||String(u||"").toLowerCase().replace(/s$/,"")},u:function(t){return void 0===t}},v="en",b={};b[v]=d;var m=function(t){return t instanceof x},g=function(t,e,n){var r;if(!t)return v;if("string"==typeof t)b[t]&&(r=t),e&&(b[t]=e,r=t);else{var o=t.name;b[o]=t,r=o}return!n&&r&&(v=r),r||!n&&v},y=function(t,e){if(m(t))return t.clone();var n="object"==typeof e?e:{};return n.date=t,n.args=arguments,new x(n)},_=f;_.l=g,_.i=m,_.w=function(t,e){return y(t,{locale:e.$L,utc:e.$u,x:e.$x,$offset:e.$offset})};var x=function(){function d(t){this.$L=g(t.locale,null,!0),this.parse(t)}var h=d.prototype;return h.parse=function(t){this.$d=function(t){var e=t.date,n=t.utc;if(null===e)return new Date(NaN);if(_.u(e))return new Date;if(e instanceof Date)return new Date(e);if("string"==typeof e&&!/Z$/i.test(e)){var r=e.match(u);if(r){var o=r[2]-1||0,i=(r[7]||"0").substring(0,3);return n?new Date(Date.UTC(r[1],o,r[3]||1,r[4]||0,r[5]||0,r[6]||0,i)):new Date(r[1],o,r[3]||1,r[4]||0,r[5]||0,r[6]||0,i)}}return new Date(e)}(t),this.$x=t.x||{},this.init()},h.init=function(){var t=this.$d;this.$y=t.getFullYear(),this.$M=t.getMonth(),this.$D=t.getDate(),this.$W=t.getDay(),this.$H=t.getHours(),this.$m=t.getMinutes(),this.$s=t.getSeconds(),this.$ms=t.getMilliseconds()},h.$utils=function(){return _},h.isValid=function(){return!("Invalid Date"===this.$d.toString())},h.isSame=function(t,e){var n=y(t);return this.startOf(e)<=n&&n<=this.endOf(e)},h.isAfter=function(t,e){return y(t)<this.startOf(e)},h.isBefore=function(t,e){return this.endOf(e)<y(t)},h.$g=function(t,e,n){return _.u(t)?this[e]:this.set(n,t)},h.unix=function(){return Math.floor(this.valueOf()/1e3)},h.valueOf=function(){return this.$d.getTime()},h.startOf=function(t,s){var u=this,p=!!_.u(s)||s,d=_.p(t),h=function(t,e){var n=_.w(u.$u?Date.UTC(u.$y,e,t):new Date(u.$y,e,t),u);return p?n:n.endOf(o)},f=function(t,e){return _.w(u.toDate()[t].apply(u.toDate("s"),(p?[0,0,0,0]:[23,59,59,999]).slice(e)),u)},v=this.$W,b=this.$M,m=this.$D,g="set"+(this.$u?"UTC":"");switch(d){case c:return p?h(1,0):h(31,11);case a:return p?h(1,b):h(0,b+1);case i:var y=this.$locale().weekStart||0,x=(v<y?v+7:v)-y;return h(p?m-x:m+(6-x),b);case o:case l:return f(g+"Hours",0);case r:return f(g+"Minutes",1);case n:return f(g+"Seconds",2);case e:return f(g+"Milliseconds",3);default:return this.clone()}},h.endOf=function(t){return this.startOf(t,!1)},h.$set=function(i,s){var u,p=_.p(i),d="set"+(this.$u?"UTC":""),h=(u={},u[o]=d+"Date",u[l]=d+"Date",u[a]=d+"Month",u[c]=d+"FullYear",u[r]=d+"Hours",u[n]=d+"Minutes",u[e]=d+"Seconds",u[t]=d+"Milliseconds",u)[p],f=p===o?this.$D+(s-this.$W):s;if(p===a||p===c){var v=this.clone().set(l,1);v.$d[h](f),v.init(),this.$d=v.set(l,Math.min(this.$D,v.daysInMonth())).$d}else h&&this.$d[h](f);return this.init(),this},h.set=function(t,e){return this.clone().$set(t,e)},h.get=function(t){return this[_.p(t)]()},h.add=function(t,s){var l,u=this;t=Number(t);var p=_.p(s),d=function(e){var n=y(u);return _.w(n.date(n.date()+Math.round(e*t)),u)};if(p===a)return this.set(a,this.$M+t);if(p===c)return this.set(c,this.$y+t);if(p===o)return d(1);if(p===i)return d(7);var h=(l={},l[n]=6e4,l[r]=36e5,l[e]=1e3,l)[p]||1,f=this.$d.getTime()+t*h;return _.w(f,this)},h.subtract=function(t,e){return this.add(-1*t,e)},h.format=function(t){var e=this;if(!this.isValid())return"Invalid Date";var n=t||"YYYY-MM-DDTHH:mm:ssZ",r=_.z(this),o=this.$locale(),i=this.$H,a=this.$m,s=this.$M,c=o.weekdays,l=o.months,u=function(t,r,o,i){return t&&(t[r]||t(e,n))||o[r].substr(0,i)},d=function(t){return _.s(i%12||12,t,"0")},h=o.meridiem||function(t,e,n){var r=t<12?"AM":"PM";return n?r.toLowerCase():r},f={YY:String(this.$y).slice(-2),YYYY:this.$y,M:s+1,MM:_.s(s+1,2,"0"),MMM:u(o.monthsShort,s,l,3),MMMM:u(l,s),D:this.$D,DD:_.s(this.$D,2,"0"),d:String(this.$W),dd:u(o.weekdaysMin,this.$W,c,2),ddd:u(o.weekdaysShort,this.$W,c,3),dddd:c[this.$W],H:String(i),HH:_.s(i,2,"0"),h:d(1),hh:d(2),a:h(i,a,!0),A:h(i,a,!1),m:String(a),mm:_.s(a,2,"0"),s:String(this.$s),ss:_.s(this.$s,2,"0"),SSS:_.s(this.$ms,3,"0"),Z:r};return n.replace(p,(function(t,e){return e||f[t]||r.replace(":","")}))},h.utcOffset=function(){return 15*-Math.round(this.$d.getTimezoneOffset()/15)},h.diff=function(t,l,u){var p,d=_.p(l),h=y(t),f=6e4*(h.utcOffset()-this.utcOffset()),v=this-h,b=_.m(this,h);return b=(p={},p[c]=b/12,p[a]=b,p[s]=b/3,p[i]=(v-f)/6048e5,p[o]=(v-f)/864e5,p[r]=v/36e5,p[n]=v/6e4,p[e]=v/1e3,p)[d]||v,u?b:_.a(b)},h.daysInMonth=function(){return this.endOf(a).$D},h.$locale=function(){return b[this.$L]},h.locale=function(t,e){if(!t)return this.$L;var n=this.clone(),r=g(t,e,!0);return r&&(n.$L=r),n},h.clone=function(){return _.w(this.$d,this)},h.toDate=function(){return new Date(this.valueOf())},h.toJSON=function(){return this.isValid()?this.toISOString():null},h.toISOString=function(){return this.$d.toISOString()},h.toString=function(){return this.$d.toUTCString()},d}(),w=x.prototype;return y.prototype=w,[["$ms",t],["$s",e],["$m",n],["$H",r],["$W",o],["$M",a],["$y",c],["$D",l]].forEach((function(t){w[t[1]]=function(e){return this.$g(e,t[0],t[1])}})),y.extend=function(t,e){return t.$i||(t(e,x,y),t.$i=!0),y},y.locale=g,y.isDayjs=m,y.unix=function(t){return y(1e3*t)},y.en=b[v],y.Ls=b,y.p={},y}()},function(t,e,n){n(1)({target:"Object",stat:!0},{setPrototypeOf:n(86)})},function(t,e,n){var r=n(1),o=n(31),i=n(33),a=n(9),s=n(8),c=n(46),l=n(239),u=n(3),p=o("Reflect","construct"),d=u((function(){function t(){}return!(p((function(){}),[],t)instanceof t)})),h=!u((function(){p((function(){}))})),f=d||h;r({target:"Reflect",stat:!0,forced:f,sham:f},{construct:function(t,e){i(t),a(e);var n=arguments.length<3?t:i(arguments[2]);if(h&&!d)return p(t,e,n);if(t==n){switch(e.length){case 0:return new t;case 1:return new t(e[0]);case 2:return new t(e[0],e[1]);case 3:return new t(e[0],e[1],e[2]);case 4:return new t(e[0],e[1],e[2],e[3])}var r=[null];return r.push.apply(r,e),new(l.apply(t,r))}var o=n.prototype,u=c(s(o)?o:Object.prototype),f=Function.apply.call(t,u,e);return s(f)?f:u}})},function(t,e,n){},function(t,e,n){},function(t,e,n){},function(t,e,n){},function(t,e,n){var r=n(264),o=n(269),i=n(340),a=n(348),s=n(357),c=n(358),l=i((function(t){var e=c(t);return s(e)&&(e=void 0),a(r(t,1,s,!0),o(e,2))}));t.exports=l},function(t,e){var n=/^\s+|\s+$/g,r=/^[-+]0x[0-9a-f]+$/i,o=/^0b[01]+$/i,i=/^0o[0-7]+$/i,a=parseInt,s="object"==typeof global&&global&&global.Object===Object&&global,c="object"==typeof self&&self&&self.Object===Object&&self,l=s||c||Function("return this")(),u=Object.prototype.toString,p=Math.max,d=Math.min,h=function(){return l.Date.now()};function f(t){var e=typeof t;return!!t&&("object"==e||"function"==e)}function v(t){if("number"==typeof t)return t;if(function(t){return"symbol"==typeof t||function(t){return!!t&&"object"==typeof t}(t)&&"[object Symbol]"==u.call(t)}(t))return NaN;if(f(t)){var e="function"==typeof t.valueOf?t.valueOf():t;t=f(e)?e+"":e}if("string"!=typeof t)return 0===t?t:+t;t=t.replace(n,"");var s=o.test(t);return s||i.test(t)?a(t.slice(2),s?2:8):r.test(t)?NaN:+t}t.exports=function(t,e,n){var r,o,i,a,s,c,l=0,u=!1,b=!1,m=!0;if("function"!=typeof t)throw new TypeError("Expected a function");function g(e){var n=r,i=o;return r=o=void 0,l=e,a=t.apply(i,n)}function y(t){return l=t,s=setTimeout(x,e),u?g(t):a}function _(t){var n=t-c;return void 0===c||n>=e||n<0||b&&t-l>=i}function x(){var t=h();if(_(t))return w(t);s=setTimeout(x,function(t){var n=e-(t-c);return b?d(n,i-(t-l)):n}(t))}function w(t){return s=void 0,m&&r?g(t):(r=o=void 0,a)}function S(){var t=h(),n=_(t);if(r=arguments,o=this,c=t,n){if(void 0===s)return y(c);if(b)return s=setTimeout(x,e),g(c)}return void 0===s&&(s=setTimeout(x,e)),a}return e=v(e)||0,f(n)&&(u=!!n.leading,i=(b="maxWait"in n)?p(v(n.maxWait)||0,e):i,m="trailing"in n?!!n.trailing:m),S.cancel=function(){void 0!==s&&clearTimeout(s),l=0,r=c=o=s=void 0},S.flush=function(){return void 0===s?a:w(h())},S}},function(t,e,n){!function(){"use strict";t.exports={polyfill:function(){var t=window,e=document;if(!("scrollBehavior"in e.documentElement.style)||!0===t.__forceSmoothScrollPolyfill__){var n,r=t.HTMLElement||t.Element,o={scroll:t.scroll||t.scrollTo,scrollBy:t.scrollBy,elementScroll:r.prototype.scroll||s,scrollIntoView:r.prototype.scrollIntoView},i=t.performance&&t.performance.now?t.performance.now.bind(t.performance):Date.now,a=(n=t.navigator.userAgent,new RegExp(["MSIE ","Trident/","Edge/"].join("|")).test(n)?1:0);t.scroll=t.scrollTo=function(){void 0!==arguments[0]&&(!0!==c(arguments[0])?f.call(t,e.body,void 0!==arguments[0].left?~~arguments[0].left:t.scrollX||t.pageXOffset,void 0!==arguments[0].top?~~arguments[0].top:t.scrollY||t.pageYOffset):o.scroll.call(t,void 0!==arguments[0].left?arguments[0].left:"object"!=typeof arguments[0]?arguments[0]:t.scrollX||t.pageXOffset,void 0!==arguments[0].top?arguments[0].top:void 0!==arguments[1]?arguments[1]:t.scrollY||t.pageYOffset))},t.scrollBy=function(){void 0!==arguments[0]&&(c(arguments[0])?o.scrollBy.call(t,void 0!==arguments[0].left?arguments[0].left:"object"!=typeof arguments[0]?arguments[0]:0,void 0!==arguments[0].top?arguments[0].top:void 0!==arguments[1]?arguments[1]:0):f.call(t,e.body,~~arguments[0].left+(t.scrollX||t.pageXOffset),~~arguments[0].top+(t.scrollY||t.pageYOffset)))},r.prototype.scroll=r.prototype.scrollTo=function(){if(void 0!==arguments[0])if(!0!==c(arguments[0])){var t=arguments[0].left,e=arguments[0].top;f.call(this,this,void 0===t?this.scrollLeft:~~t,void 0===e?this.scrollTop:~~e)}else{if("number"==typeof arguments[0]&&void 0===arguments[1])throw new SyntaxError("Value could not be converted");o.elementScroll.call(this,void 0!==arguments[0].left?~~arguments[0].left:"object"!=typeof arguments[0]?~~arguments[0]:this.scrollLeft,void 0!==arguments[0].top?~~arguments[0].top:void 0!==arguments[1]?~~arguments[1]:this.scrollTop)}},r.prototype.scrollBy=function(){void 0!==arguments[0]&&(!0!==c(arguments[0])?this.scroll({left:~~arguments[0].left+this.scrollLeft,top:~~arguments[0].top+this.scrollTop,behavior:arguments[0].behavior}):o.elementScroll.call(this,void 0!==arguments[0].left?~~arguments[0].left+this.scrollLeft:~~arguments[0]+this.scrollLeft,void 0!==arguments[0].top?~~arguments[0].top+this.scrollTop:~~arguments[1]+this.scrollTop))},r.prototype.scrollIntoView=function(){if(!0!==c(arguments[0])){var n=d(this),r=n.getBoundingClientRect(),i=this.getBoundingClientRect();n!==e.body?(f.call(this,n,n.scrollLeft+i.left-r.left,n.scrollTop+i.top-r.top),"fixed"!==t.getComputedStyle(n).position&&t.scrollBy({left:r.left,top:r.top,behavior:"smooth"})):t.scrollBy({left:i.left,top:i.top,behavior:"smooth"})}else o.scrollIntoView.call(this,void 0===arguments[0]||arguments[0])}}function s(t,e){this.scrollLeft=t,this.scrollTop=e}function c(t){if(null===t||"object"!=typeof t||void 0===t.behavior||"auto"===t.behavior||"instant"===t.behavior)return!0;if("object"==typeof t&&"smooth"===t.behavior)return!1;throw new TypeError("behavior member of ScrollOptions "+t.behavior+" is not a valid value for enumeration ScrollBehavior.")}function l(t,e){return"Y"===e?t.clientHeight+a<t.scrollHeight:"X"===e?t.clientWidth+a<t.scrollWidth:void 0}function u(e,n){var r=t.getComputedStyle(e,null)["overflow"+n];return"auto"===r||"scroll"===r}function p(t){var e=l(t,"Y")&&u(t,"Y"),n=l(t,"X")&&u(t,"X");return e||n}function d(t){for(;t!==e.body&&!1===p(t);)t=t.parentNode||t.host;return t}function h(e){var n,r,o,a,s=(i()-e.startTime)/468;a=s=s>1?1:s,n=.5*(1-Math.cos(Math.PI*a)),r=e.startX+(e.x-e.startX)*n,o=e.startY+(e.y-e.startY)*n,e.method.call(e.scrollable,r,o),r===e.x&&o===e.y||t.requestAnimationFrame(h.bind(t,e))}function f(n,r,a){var c,l,u,p,d=i();n===e.body?(c=t,l=t.scrollX||t.pageXOffset,u=t.scrollY||t.pageYOffset,p=o.scroll):(c=n,l=n.scrollLeft,u=n.scrollTop,p=s),h({scrollable:c,method:p,startTime:d,startX:l,startY:u,x:r,y:a})}}}}()},function(t,e,n){var r=n(385),o=n(390),i=n(205),a=n(40),s=n(393),c=n(394);var l={M:function(t){return t.getMonth()+1},MM:function(t){return d(t.getMonth()+1,2)},Q:function(t){return Math.ceil((t.getMonth()+1)/3)},D:function(t){return t.getDate()},DD:function(t){return d(t.getDate(),2)},DDD:function(t){return r(t)},DDDD:function(t){return d(r(t),3)},d:function(t){return t.getDay()},E:function(t){return t.getDay()||7},W:function(t){return o(t)},WW:function(t){return d(o(t),2)},YY:function(t){return d(t.getFullYear(),4).substr(2)},YYYY:function(t){return d(t.getFullYear(),4)},GG:function(t){return String(i(t)).substr(2)},GGGG:function(t){return i(t)},H:function(t){return t.getHours()},HH:function(t){return d(t.getHours(),2)},h:function(t){var e=t.getHours();return 0===e?12:e>12?e%12:e},hh:function(t){return d(l.h(t),2)},m:function(t){return t.getMinutes()},mm:function(t){return d(t.getMinutes(),2)},s:function(t){return t.getSeconds()},ss:function(t){return d(t.getSeconds(),2)},S:function(t){return Math.floor(t.getMilliseconds()/100)},SS:function(t){return d(Math.floor(t.getMilliseconds()/10),2)},SSS:function(t){return d(t.getMilliseconds(),3)},Z:function(t){return p(t.getTimezoneOffset(),":")},ZZ:function(t){return p(t.getTimezoneOffset())},X:function(t){return Math.floor(t.getTime()/1e3)},x:function(t){return t.getTime()}};function u(t){return t.match(/\[[\s\S]/)?t.replace(/^\[|]$/g,""):t.replace(/\\/g,"")}function p(t,e){e=e||"";var n=t>0?"-":"+",r=Math.abs(t),o=r%60;return n+d(Math.floor(r/60),2)+e+d(o,2)}function d(t,e){for(var n=Math.abs(t).toString();n.length<e;)n="0"+n;return n}t.exports=function(t,e,n){var r=e?String(e):"YYYY-MM-DDTHH:mm:ss.SSSZ",o=(n||{}).locale,i=c.format.formatters,p=c.format.formattingTokensRegExp;o&&o.format&&o.format.formatters&&(i=o.format.formatters,o.format.formattingTokensRegExp&&(p=o.format.formattingTokensRegExp));var d=a(t);return s(d)?function(t,e,n){var r,o,i=t.match(n),a=i.length;for(r=0;r<a;r++)o=e[i[r]]||l[i[r]],i[r]=o||u(i[r]);return function(t){for(var e="",n=0;n<a;n++)i[n]instanceof Function?e+=i[n](t,l):e+=i[n];return e}}(r,i,p)(d):"Invalid Date"}},function(t,e,n){function r(){var t;try{t=e.storage.debug}catch(t){}return!t&&"undefined"!=typeof process&&"env"in process&&(t=process.env.DEBUG),t}(e=t.exports=n(418)).log=function(){return"object"==typeof console&&console.log&&Function.prototype.apply.call(console.log,console,arguments)},e.formatArgs=function(t){var n=this.useColors;if(t[0]=(n?"%c":"")+this.namespace+(n?" %c":" ")+t[0]+(n?"%c ":" ")+"+"+e.humanize(this.diff),!n)return;var r="color: "+this.color;t.splice(1,0,r,"color: inherit");var o=0,i=0;t[0].replace(/%[a-zA-Z%]/g,(function(t){"%%"!==t&&(o++,"%c"===t&&(i=o))})),t.splice(i,0,r)},e.save=function(t){try{null==t?e.storage.removeItem("debug"):e.storage.debug=t}catch(t){}},e.load=r,e.useColors=function(){if("undefined"!=typeof window&&window.process&&"renderer"===window.process.type)return!0;return"undefined"!=typeof document&&document.documentElement&&document.documentElement.style&&document.documentElement.style.WebkitAppearance||"undefined"!=typeof window&&window.console&&(window.console.firebug||window.console.exception&&window.console.table)||"undefined"!=typeof navigator&&navigator.userAgent&&navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/)&&parseInt(RegExp.$1,10)>=31||"undefined"!=typeof navigator&&navigator.userAgent&&navigator.userAgent.toLowerCase().match(/applewebkit\/(\d+)/)},e.storage="undefined"!=typeof chrome&&void 0!==chrome.storage?chrome.storage.local:function(){try{return window.localStorage}catch(t){}}(),e.colors=["lightseagreen","forestgreen","goldenrod","dodgerblue","darkorchid","crimson"],e.formatters.j=function(t){try{return JSON.stringify(t)}catch(t){return"[UnexpectedJSONParseError]: "+t.message}},e.enable(r())},function(t,e,n){function r(e){return"function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?(t.exports=r=function(t){return typeof t},t.exports.default=t.exports,t.exports.__esModule=!0):(t.exports=r=function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},t.exports.default=t.exports,t.exports.__esModule=!0),r(e)}n(44),n(54),n(20),n(77),n(23),n(26),t.exports=r,t.exports.default=t.exports,t.exports.__esModule=!0},function(t,e,n){var r=n(1),o=n(370);r({global:!0,forced:parseInt!=o},{parseInt:o})},function(t,e,n){"use strict";var r=n(98),o=n(9),i=n(15),a=n(21),s=n(118),c=n(99);r("match",1,(function(t,e,n){return[function(e){var n=a(this),r=null==e?void 0:e[t];return void 0!==r?r.call(e,n):new RegExp(e)[t](String(n))},function(t){var r=n(e,t,this);if(r.done)return r.value;var a=o(t),l=String(this);if(!a.global)return c(a,l);var u=a.unicode;a.lastIndex=0;for(var p,d=[],h=0;null!==(p=c(a,l));){var f=String(p[0]);d[h]=f,""===f&&(a.lastIndex=s(l,i(a.lastIndex),u)),h++}return 0===h?null:d}]}))},function(t,e,n){"use strict";var r=n(98),o=n(114),i=n(9),a=n(21),s=n(112),c=n(118),l=n(15),u=n(99),p=n(115),d=n(117).UNSUPPORTED_Y,h=[].push,f=Math.min;r("split",2,(function(t,e,n){var r;return r="c"=="abbc".split(/(b)*/)[1]||4!="test".split(/(?:)/,-1).length||2!="ab".split(/(?:ab)*/).length||4!=".".split(/(.?)(.?)/).length||".".split(/()()/).length>1||"".split(/.?/).length?function(t,n){var r=String(a(this)),i=void 0===n?4294967295:n>>>0;if(0===i)return[];if(void 0===t)return[r];if(!o(t))return e.call(r,t,i);for(var s,c,l,u=[],d=(t.ignoreCase?"i":"")+(t.multiline?"m":"")+(t.unicode?"u":"")+(t.sticky?"y":""),f=0,v=new RegExp(t.source,d+"g");(s=p.call(v,r))&&!((c=v.lastIndex)>f&&(u.push(r.slice(f,s.index)),s.length>1&&s.index<r.length&&h.apply(u,s.slice(1)),l=s[0].length,f=c,u.length>=i));)v.lastIndex===s.index&&v.lastIndex++;return f===r.length?!l&&v.test("")||u.push(""):u.push(r.slice(f)),u.length>i?u.slice(0,i):u}:"0".split(void 0,0).length?function(t,n){return void 0===t&&0===n?[]:e.call(this,t,n)}:e,[function(e,n){var o=a(this),i=null==e?void 0:e[t];return void 0!==i?i.call(e,o,n):r.call(String(o),e,n)},function(t,o){var a=n(r,t,this,o,r!==e);if(a.done)return a.value;var p=i(t),h=String(this),v=s(p,RegExp),b=p.unicode,m=(p.ignoreCase?"i":"")+(p.multiline?"m":"")+(p.unicode?"u":"")+(d?"g":"y"),g=new v(d?"^(?:"+p.source+")":p,m),y=void 0===o?4294967295:o>>>0;if(0===y)return[];if(0===h.length)return null===u(g,h)?[h]:[];for(var _=0,x=0,w=[];x<h.length;){g.lastIndex=d?0:x;var S,O=u(g,d?h.slice(x):h);if(null===O||(S=f(l(g.lastIndex+(d?x:0)),h.length))===_)x=c(h,x,b);else{if(w.push(h.slice(_,x)),w.length===y)return w;for(var $=1;$<=O.length-1;$++)if(w.push(O[$]),w.length===y)return w;x=_=S}}return w.push(h.slice(_)),w}]}),d)},function(t,e,n){var r=n(10),o=n(4),i=n(84),a=n(198),s=n(12).f,c=n(61).f,l=n(114),u=n(116),p=n(117),d=n(19),h=n(3),f=n(48).enforce,v=n(153),b=n(6)("match"),m=o.RegExp,g=m.prototype,y=/a/g,_=/a/g,x=new m(y)!==y,w=p.UNSUPPORTED_Y;if(r&&i("RegExp",!x||w||h((function(){return _[b]=!1,m(y)!=y||m(_)==_||"/a/i"!=m(y,"i")})))){for(var S=function(t,e){var n,r=this instanceof S,o=l(t),i=void 0===e;if(!r&&o&&t.constructor===S&&i)return t;x?o&&!i&&(t=t.source):t instanceof S&&(i&&(e=u.call(t)),t=t.source),w&&(n=!!e&&e.indexOf("y")>-1)&&(e=e.replace(/y/g,""));var s=a(x?new m(t,e):m(t,e),r?this:g,S);w&&n&&(f(s).sticky=!0);return s},O=function(t){t in S||s(S,t,{configurable:!0,get:function(){return m[t]},set:function(e){m[t]=e}})},$=c(m),T=0;$.length>T;)O($[T++]);g.constructor=S,S.prototype=g,d(o,"RegExp",S)}v("RegExp")},function(t,e,n){"use strict";var r=n(19),o=n(9),i=n(3),a=n(116),s=RegExp.prototype,c=s.toString,l=i((function(){return"/a/b"!=c.call({source:"a",flags:"b"})})),u="toString"!=c.name;(l||u)&&r(RegExp.prototype,"toString",(function(){var t=o(this),e=String(t.source),n=t.flags;return"/"+e+"/"+String(void 0===n&&t instanceof RegExp&&!("flags"in s)?a.call(t):n)}),{unsafe:!0})},function(t,e,n){var r=n(1),o=n(3),i=n(24),a=n(32).f,s=n(10),c=o((function(){a(1)}));r({target:"Object",stat:!0,forced:!s||c,sham:!s},{getOwnPropertyDescriptor:function(t,e){return a(i(t),e)}})},function(t,e,n){"use strict";var r=n(1),o=n(105).includes,i=n(100);r({target:"Array",proto:!0},{includes:function(t){return o(this,t,arguments.length>1?arguments[1]:void 0)}}),i("includes")},function(t,e,n){"use strict";var r=n(1),o=n(169),i=n(21);r({target:"String",proto:!0,forced:!n(170)("includes")},{includes:function(t){return!!~String(i(this)).indexOf(o(t),arguments.length>1?arguments[1]:void 0)}})},function(t,e,n){"use strict";var r=n(1),o=n(3),i=n(13),a=n(45);r({target:"Date",proto:!0,forced:o((function(){return null!==new Date(NaN).toJSON()||1!==Date.prototype.toJSON.call({toISOString:function(){return 1}})}))},{toJSON:function(t){var e=i(this),n=a(e);return"number"!=typeof n||isFinite(n)?e.toISOString():null}})},function(t,e,n){"use strict";n(1)({target:"URL",proto:!0,enumerable:!0},{toJSON:function(){return URL.prototype.toString.call(this)}})},function(t,e,n){var r=n(1),o=n(361);r({target:"Date",proto:!0,forced:Date.prototype.toISOString!==o},{toISOString:o})},function(t,e,n){"use strict";var r=n(33),o=n(8),i=[].slice,a={},s=function(t,e,n){if(!(e in a)){for(var r=[],o=0;o<e;o++)r[o]="a["+o+"]";a[e]=Function("C,a","return new C("+r.join(",")+")")}return a[e](t,n)};t.exports=Function.bind||function(t){var e=r(this),n=i.call(arguments,1),a=function(){var r=n.concat(i.call(arguments));return this instanceof a?s(e,r.length,r):e.apply(t,r)};return o(e.prototype)&&(a.prototype=e.prototype),a}},function(t,e,n){t.exports=n(426)},function(t,e,n){var r=n(4),o=n(107),i=r.WeakMap;t.exports="function"==typeof i&&/native code/.test(o(i))},function(t,e,n){"use strict";var r=n(150).IteratorPrototype,o=n(46),i=n(56),a=n(85),s=n(60),c=function(){return this};t.exports=function(t,e,n){var l=e+" Iterator";return t.prototype=o(r,{next:i(1,n)}),a(t,l,!1,!0),s[l]=c,t}},function(t,e,n){var r=n(8);t.exports=function(t){if(!r(t)&&null!==t)throw TypeError("Can't set "+String(t)+" as a prototype");return t}},function(t,e,n){"use strict";var r,o,i,a,s=n(1),c=n(36),l=n(4),u=n(31),p=n(152),d=n(19),h=n(245),f=n(86),v=n(85),b=n(153),m=n(8),g=n(33),y=n(246),_=n(107),x=n(247),w=n(158),S=n(112),O=n(159).set,$=n(248),T=n(161),E=n(250),C=n(162),I=n(251),A=n(48),k=n(84),L=n(6),P=n(57),M=n(58),N=L("species"),D="Promise",j=A.get,R=A.set,F=A.getterFor(D),U=p&&p.prototype,B=p,z=l.TypeError,G=l.document,V=l.process,J=C.f,H=J,W=!!(G&&G.createEvent&&l.dispatchEvent),q="function"==typeof PromiseRejectionEvent,Y=k(D,(function(){if(!(_(B)!==String(B))){if(66===M)return!0;if(!P&&!q)return!0}if(c&&!B.prototype.finally)return!0;if(M>=51&&/native code/.test(B))return!1;var t=B.resolve(1),e=function(t){t((function(){}),(function(){}))};return(t.constructor={})[N]=e,!(t.then((function(){}))instanceof e)})),X=Y||!w((function(t){B.all(t).catch((function(){}))})),Q=function(t){var e;return!(!m(t)||"function"!=typeof(e=t.then))&&e},K=function(t,e){if(!t.notified){t.notified=!0;var n=t.reactions;$((function(){for(var r=t.value,o=1==t.state,i=0;n.length>i;){var a,s,c,l=n[i++],u=o?l.ok:l.fail,p=l.resolve,d=l.reject,h=l.domain;try{u?(o||(2===t.rejection&&nt(t),t.rejection=1),!0===u?a=r:(h&&h.enter(),a=u(r),h&&(h.exit(),c=!0)),a===l.promise?d(z("Promise-chain cycle")):(s=Q(a))?s.call(a,p,d):p(a)):d(r)}catch(t){h&&!c&&h.exit(),d(t)}}t.reactions=[],t.notified=!1,e&&!t.rejection&&tt(t)}))}},Z=function(t,e,n){var r,o;W?((r=G.createEvent("Event")).promise=e,r.reason=n,r.initEvent(t,!1,!0),l.dispatchEvent(r)):r={promise:e,reason:n},!q&&(o=l["on"+t])?o(r):"unhandledrejection"===t&&E("Unhandled promise rejection",n)},tt=function(t){O.call(l,(function(){var e,n=t.facade,r=t.value;if(et(t)&&(e=I((function(){P?V.emit("unhandledRejection",r,n):Z("unhandledrejection",n,r)})),t.rejection=P||et(t)?2:1,e.error))throw e.value}))},et=function(t){return 1!==t.rejection&&!t.parent},nt=function(t){O.call(l,(function(){var e=t.facade;P?V.emit("rejectionHandled",e):Z("rejectionhandled",e,t.value)}))},rt=function(t,e,n){return function(r){t(e,r,n)}},ot=function(t,e,n){t.done||(t.done=!0,n&&(t=n),t.value=e,t.state=2,K(t,!0))},it=function(t,e,n){if(!t.done){t.done=!0,n&&(t=n);try{if(t.facade===e)throw z("Promise can't be resolved itself");var r=Q(e);r?$((function(){var n={done:!1};try{r.call(e,rt(it,n,t),rt(ot,n,t))}catch(e){ot(n,e,t)}})):(t.value=e,t.state=1,K(t,!1))}catch(e){ot({done:!1},e,t)}}};if(Y&&(B=function(t){y(this,B,D),g(t),r.call(this);var e=j(this);try{t(rt(it,e),rt(ot,e))}catch(t){ot(e,t)}},(r=function(t){R(this,{type:D,done:!1,notified:!1,parent:!1,reactions:[],rejection:!1,state:0,value:void 0})}).prototype=h(B.prototype,{then:function(t,e){var n=F(this),r=J(S(this,B));return r.ok="function"!=typeof t||t,r.fail="function"==typeof e&&e,r.domain=P?V.domain:void 0,n.parent=!0,n.reactions.push(r),0!=n.state&&K(n,!1),r.promise},catch:function(t){return this.then(void 0,t)}}),o=function(){var t=new r,e=j(t);this.promise=t,this.resolve=rt(it,e),this.reject=rt(ot,e)},C.f=J=function(t){return t===B||t===i?new o(t):H(t)},!c&&"function"==typeof p&&U!==Object.prototype)){a=U.then,d(U,"then",(function(t,e){var n=this;return new B((function(t,e){a.call(n,t,e)})).then(t,e)}),{unsafe:!0});try{delete U.constructor}catch(t){}f&&f(U,B.prototype)}s({global:!0,wrap:!0,forced:Y},{Promise:B}),v(B,D,!1,!0),b(D),i=u(D),s({target:D,stat:!0,forced:Y},{reject:function(t){var e=J(this);return e.reject.call(void 0,t),e.promise}}),s({target:D,stat:!0,forced:c||Y},{resolve:function(t){return T(c&&this===i?B:this,t)}}),s({target:D,stat:!0,forced:X},{all:function(t){var e=this,n=J(e),r=n.resolve,o=n.reject,i=I((function(){var n=g(e.resolve),i=[],a=0,s=1;x(t,(function(t){var c=a++,l=!1;i.push(void 0),s++,n.call(e,t).then((function(t){l||(l=!0,i[c]=t,--s||r(i))}),o)})),--s||r(i)}));return i.error&&o(i.value),n.promise},race:function(t){var e=this,n=J(e),r=n.reject,o=I((function(){var o=g(e.resolve);x(t,(function(t){o.call(e,t).then(n.resolve,r)}))}));return o.error&&r(o.value),n.promise}})},function(t,e,n){var r=n(19);t.exports=function(t,e,n){for(var o in e)r(t,o,e[o],n);return t}},function(t,e){t.exports=function(t,e,n){if(!(t instanceof e))throw TypeError("Incorrect "+(n?n+" ":"")+"invocation");return t}},function(t,e,n){var r=n(9),o=n(154),i=n(15),a=n(87),s=n(155),c=n(157),l=function(t,e){this.stopped=t,this.result=e};t.exports=function(t,e,n){var u,p,d,h,f,v,b,m=n&&n.that,g=!(!n||!n.AS_ENTRIES),y=!(!n||!n.IS_ITERATOR),_=!(!n||!n.INTERRUPTED),x=a(e,m,1+g+_),w=function(t){return u&&c(u),new l(!0,t)},S=function(t){return g?(r(t),_?x(t[0],t[1],w):x(t[0],t[1])):_?x(t,w):x(t)};if(y)u=t;else{if("function"!=typeof(p=s(t)))throw TypeError("Target is not iterable");if(o(p)){for(d=0,h=i(t.length);h>d;d++)if((f=S(t[d]))&&f instanceof l)return f;return new l(!1)}u=p.call(t)}for(v=u.next;!(b=v.call(u)).done;){try{f=S(b.value)}catch(t){throw c(u),t}if("object"==typeof f&&f&&f instanceof l)return f}return new l(!1)}},function(t,e,n){var r,o,i,a,s,c,l,u,p=n(4),d=n(32).f,h=n(159).set,f=n(160),v=n(249),b=n(57),m=p.MutationObserver||p.WebKitMutationObserver,g=p.document,y=p.process,_=p.Promise,x=d(p,"queueMicrotask"),w=x&&x.value;w||(r=function(){var t,e;for(b&&(t=y.domain)&&t.exit();o;){e=o.fn,o=o.next;try{e()}catch(t){throw o?a():i=void 0,t}}i=void 0,t&&t.enter()},f||b||v||!m||!g?_&&_.resolve?(l=_.resolve(void 0),u=l.then,a=function(){u.call(l,r)}):a=b?function(){y.nextTick(r)}:function(){h.call(p,r)}:(s=!0,c=g.createTextNode(""),new m(r).observe(c,{characterData:!0}),a=function(){c.data=s=!s})),t.exports=w||function(t){var e={fn:t,next:void 0};i&&(i.next=e),o||(o=e,a()),i=e}},function(t,e,n){var r=n(80);t.exports=/web0s(?!.*chrome)/i.test(r)},function(t,e,n){var r=n(4);t.exports=function(t,e){var n=r.console;n&&n.error&&(1===arguments.length?n.error(t):n.error(t,e))}},function(t,e){t.exports=function(t){try{return{error:!1,value:t()}}catch(t){return{error:!0,value:t}}}},function(t,e,n){var r=n(1),o=n(253);r({target:"Object",stat:!0,forced:Object.assign!==o},{assign:o})},function(t,e,n){"use strict";var r=n(10),o=n(3),i=n(81),a=n(109),s=n(108),c=n(13),l=n(55),u=Object.assign,p=Object.defineProperty;t.exports=!u||o((function(){if(r&&1!==u({b:1},u(p({},"a",{enumerable:!0,get:function(){p(this,"b",{value:3,enumerable:!1})}}),{b:2})).b)return!0;var t={},e={},n=Symbol();return t[n]=7,"abcdefghijklmnopqrst".split("").forEach((function(t){e[t]=t})),7!=u({},t)[n]||"abcdefghijklmnopqrst"!=i(u({},e)).join("")}))?function(t,e){for(var n=c(t),o=arguments.length,u=1,p=a.f,d=s.f;o>u;)for(var h,f=l(arguments[u++]),v=p?i(f).concat(p(f)):i(f),b=v.length,m=0;b>m;)h=v[m++],r&&!d.call(f,h)||(n[h]=f[h]);return n}:u},function(t,e,n){"use strict";var r=n(1),o=n(36),i=n(152),a=n(3),s=n(31),c=n(112),l=n(161),u=n(19);r({target:"Promise",proto:!0,real:!0,forced:!!i&&a((function(){i.prototype.finally.call({then:function(){}},(function(){}))}))},{finally:function(t){var e=c(this,s("Promise")),n="function"==typeof t;return this.then(n?function(n){return l(e,t()).then((function(){return n}))}:t,n?function(n){return l(e,t()).then((function(){throw n}))}:t)}}),o||"function"!=typeof i||i.prototype.finally||u(i.prototype,"finally",s("Promise").prototype.finally)},function(t,e,n){"use strict";var r=n(111),o=n(156);t.exports=r?{}.toString:function(){return"[object "+o(this)+"]"}},function(t,e,n){var r=n(33),o=n(13),i=n(55),a=n(15),s=function(t){return function(e,n,s,c){r(n);var l=o(e),u=i(l),p=a(l.length),d=t?p-1:0,h=t?-1:1;if(s<2)for(;;){if(d in u){c=u[d],d+=h;break}if(d+=h,t?d<0:p<=d)throw TypeError("Reduce of empty array with no initial value")}for(;t?d>=0:p>d;d+=h)d in u&&(c=n(c,u[d],d,l));return c}};t.exports={left:s(!1),right:s(!0)}},function(t,e,n){"use strict";var r,o=n(1),i=n(32).f,a=n(15),s=n(169),c=n(21),l=n(170),u=n(36),p="".startsWith,d=Math.min,h=l("startsWith");o({target:"String",proto:!0,forced:!!(u||h||(r=i(String.prototype,"startsWith"),!r||r.writable))&&!h},{startsWith:function(t){var e=String(c(this));s(t);var n=a(d(arguments.length>1?arguments[1]:void 0,e.length)),r=String(t);return p?p.call(e,r,n):e.slice(n,n+r.length)===r}})},function(t,e,n){var r=n(1),o=n(172),i=n(3),a=n(8),s=n(259).onFreeze,c=Object.freeze;r({target:"Object",stat:!0,forced:i((function(){c(1)})),sham:!o},{freeze:function(t){return c&&a(t)?c(s(t)):t}})},function(t,e,n){var r=n(59),o=n(8),i=n(14),a=n(12).f,s=n(79),c=n(172),l=s("meta"),u=0,p=Object.isExtensible||function(){return!0},d=function(t){a(t,l,{value:{objectID:"O"+ ++u,weakData:{}}})},h=t.exports={REQUIRED:!1,fastKey:function(t,e){if(!o(t))return"symbol"==typeof t?t:("string"==typeof t?"S":"P")+t;if(!i(t,l)){if(!p(t))return"F";if(!e)return"E";d(t)}return t[l].objectID},getWeakData:function(t,e){if(!i(t,l)){if(!p(t))return!0;if(!e)return!1;d(t)}return t[l].weakData},onFreeze:function(t){return c&&h.REQUIRED&&p(t)&&!i(t,l)&&d(t),t}};r[l]=!0},function(t,e,n){var r=n(24),o=n(61).f,i={}.toString,a="object"==typeof window&&window&&Object.getOwnPropertyNames?Object.getOwnPropertyNames(window):[];t.exports.f=function(t){return a&&"[object Window]"==i.call(t)?function(t){try{return o(t)}catch(t){return a.slice()}}(t):o(r(t))}},function(t,e,n){"use strict";var r=n(87),o=n(13),i=n(262),a=n(154),s=n(15),c=n(63),l=n(155);t.exports=function(t){var e,n,u,p,d,h,f=o(t),v="function"==typeof this?this:Array,b=arguments.length,m=b>1?arguments[1]:void 0,g=void 0!==m,y=l(f),_=0;if(g&&(m=r(m,b>2?arguments[2]:void 0,2)),null==y||v==Array&&a(y))for(n=new v(e=s(f.length));e>_;_++)h=g?m(f[_],_):f[_],c(n,_,h);else for(d=(p=y.call(f)).next,n=new v;!(u=d.call(p)).done;_++)h=g?i(p,m,[u.value,_],!0):u.value,c(n,_,h);return n.length=_,n}},function(t,e,n){var r=n(9),o=n(157);t.exports=function(t,e,n,i){try{return i?e(r(n)[0],n[1]):e(n)}catch(e){throw o(t),e}}},function(t,e,n){var r=n(13),o=Math.floor,i="".replace,a=/\$([$&'`]|\d{1,2}|<[^>]*>)/g,s=/\$([$&'`]|\d{1,2})/g;t.exports=function(t,e,n,c,l,u){var p=n+t.length,d=c.length,h=s;return void 0!==l&&(l=r(l),h=a),i.call(u,h,(function(r,i){var a;switch(i.charAt(0)){case"$":return"$";case"&":return t;case"`":return e.slice(0,n);case"'":return e.slice(p);case"<":a=l[i.slice(1,-1)];break;default:var s=+i;if(0===s)return r;if(s>d){var u=o(s/10);return 0===u?r:u<=d?void 0===c[u-1]?i.charAt(1):c[u-1]+i.charAt(1):r}a=c[s-1]}return void 0===a?"":a}))}},function(t,e,n){var r=n(177),o=n(265);t.exports=function t(e,n,i,a,s){var c=-1,l=e.length;for(i||(i=o),s||(s=[]);++c<l;){var u=e[c];n>0&&i(u)?n>1?t(u,n-1,i,a,s):r(s,u):a||(s[s.length]=u)}return s}},function(t,e,n){var r=n(66),o=n(119),i=n(29),a=r?r.isConcatSpreadable:void 0;t.exports=function(t){return i(t)||o(t)||!!(a&&t&&t[a])}},function(t,e,n){var r=n(67),o=n(50);t.exports=function(t){return o(t)&&"[object Arguments]"==r(t)}},function(t,e,n){var r=n(66),o=Object.prototype,i=o.hasOwnProperty,a=o.toString,s=r?r.toStringTag:void 0;t.exports=function(t){var e=i.call(t,s),n=t[s];try{t[s]=void 0;var r=!0}catch(t){}var o=a.call(t);return r&&(e?t[s]=n:delete t[s]),o}},function(t,e){var n=Object.prototype.toString;t.exports=function(t){return n.call(t)}},function(t,e,n){var r=n(270),o=n(326),i=n(127),a=n(29),s=n(337);t.exports=function(t){return"function"==typeof t?t:null==t?i:"object"==typeof t?a(t)?o(t[0],t[1]):r(t):s(t)}},function(t,e,n){var r=n(271),o=n(325),i=n(194);t.exports=function(t){var e=o(t);return 1==e.length&&e[0][2]?i(e[0][0],e[0][1]):function(n){return n===t||r(n,t,e)}}},function(t,e,n){var r=n(179),o=n(183);t.exports=function(t,e,n,i){var a=n.length,s=a,c=!i;if(null==t)return!s;for(t=Object(t);a--;){var l=n[a];if(c&&l[2]?l[1]!==t[l[0]]:!(l[0]in t))return!1}for(;++a<s;){var u=(l=n[a])[0],p=t[u],d=l[1];if(c&&l[2]){if(void 0===p&&!(u in t))return!1}else{var h=new r;if(i)var f=i(p,d,u,t,e,h);if(!(void 0===f?o(d,p,3,i,h):f))return!1}}return!0}},function(t,e){t.exports=function(){this.__data__=[],this.size=0}},function(t,e,n){var r=n(89),o=Array.prototype.splice;t.exports=function(t){var e=this.__data__,n=r(e,t);return!(n<0)&&(n==e.length-1?e.pop():o.call(e,n,1),--this.size,!0)}},function(t,e,n){var r=n(89);t.exports=function(t){var e=this.__data__,n=r(e,t);return n<0?void 0:e[n][1]}},function(t,e,n){var r=n(89);t.exports=function(t){return r(this.__data__,t)>-1}},function(t,e,n){var r=n(89);t.exports=function(t,e){var n=this.__data__,o=r(n,t);return o<0?(++this.size,n.push([t,e])):n[o][1]=e,this}},function(t,e,n){var r=n(88);t.exports=function(){this.__data__=new r,this.size=0}},function(t,e){t.exports=function(t){var e=this.__data__,n=e.delete(t);return this.size=e.size,n}},function(t,e){t.exports=function(t){return this.__data__.get(t)}},function(t,e){t.exports=function(t){return this.__data__.has(t)}},function(t,e,n){var r=n(88),o=n(120),i=n(122);t.exports=function(t,e){var n=this.__data__;if(n instanceof r){var a=n.__data__;if(!o||a.length<199)return a.push([t,e]),this.size=++n.size,this;n=this.__data__=new i(a)}return n.set(t,e),this.size=n.size,this}},function(t,e,n){var r=n(181),o=n(283),i=n(121),a=n(182),s=/^\[object .+?Constructor\]$/,c=Function.prototype,l=Object.prototype,u=c.toString,p=l.hasOwnProperty,d=RegExp("^"+u.call(p).replace(/[\\^$.*+?()[\]{}|]/g,"\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,"$1.*?")+"$");t.exports=function(t){return!(!i(t)||o(t))&&(r(t)?d:s).test(a(t))}},function(t,e,n){var r,o=n(284),i=(r=/[^.]+$/.exec(o&&o.keys&&o.keys.IE_PROTO||""))?"Symbol(src)_1."+r:"";t.exports=function(t){return!!i&&i in t}},function(t,e,n){var r=n(28)["__core-js_shared__"];t.exports=r},function(t,e){t.exports=function(t,e){return null==t?void 0:t[e]}},function(t,e,n){var r=n(287),o=n(88),i=n(120);t.exports=function(){this.size=0,this.__data__={hash:new r,map:new(i||o),string:new r}}},function(t,e,n){var r=n(288),o=n(289),i=n(290),a=n(291),s=n(292);function c(t){var e=-1,n=null==t?0:t.length;for(this.clear();++e<n;){var r=t[e];this.set(r[0],r[1])}}c.prototype.clear=r,c.prototype.delete=o,c.prototype.get=i,c.prototype.has=a,c.prototype.set=s,t.exports=c},function(t,e,n){var r=n(90);t.exports=function(){this.__data__=r?r(null):{},this.size=0}},function(t,e){t.exports=function(t){var e=this.has(t)&&delete this.__data__[t];return this.size-=e?1:0,e}},function(t,e,n){var r=n(90),o=Object.prototype.hasOwnProperty;t.exports=function(t){var e=this.__data__;if(r){var n=e[t];return"__lodash_hash_undefined__"===n?void 0:n}return o.call(e,t)?e[t]:void 0}},function(t,e,n){var r=n(90),o=Object.prototype.hasOwnProperty;t.exports=function(t){var e=this.__data__;return r?void 0!==e[t]:o.call(e,t)}},function(t,e,n){var r=n(90);t.exports=function(t,e){var n=this.__data__;return this.size+=this.has(t)?0:1,n[t]=r&&void 0===e?"__lodash_hash_undefined__":e,this}},function(t,e,n){var r=n(91);t.exports=function(t){var e=r(this,t).delete(t);return this.size-=e?1:0,e}},function(t,e){t.exports=function(t){var e=typeof t;return"string"==e||"number"==e||"symbol"==e||"boolean"==e?"__proto__"!==t:null===t}},function(t,e,n){var r=n(91);t.exports=function(t){return r(this,t).get(t)}},function(t,e,n){var r=n(91);t.exports=function(t){return r(this,t).has(t)}},function(t,e,n){var r=n(91);t.exports=function(t,e){var n=r(this,t),o=n.size;return n.set(t,e),this.size+=n.size==o?0:1,this}},function(t,e,n){var r=n(179),o=n(184),i=n(302),a=n(305),s=n(321),c=n(29),l=n(188),u=n(190),p="[object Object]",d=Object.prototype.hasOwnProperty;t.exports=function(t,e,n,h,f,v){var b=c(t),m=c(e),g=b?"[object Array]":s(t),y=m?"[object Array]":s(e),_=(g="[object Arguments]"==g?p:g)==p,x=(y="[object Arguments]"==y?p:y)==p,w=g==y;if(w&&l(t)){if(!l(e))return!1;b=!0,_=!1}if(w&&!_)return v||(v=new r),b||u(t)?o(t,e,n,h,f,v):i(t,e,g,n,h,f,v);if(!(1&n)){var S=_&&d.call(t,"__wrapped__"),O=x&&d.call(e,"__wrapped__");if(S||O){var $=S?t.value():t,T=O?e.value():e;return v||(v=new r),f($,T,n,h,v)}}return!!w&&(v||(v=new r),a(t,e,n,h,f,v))}},function(t,e){t.exports=function(t){return this.__data__.set(t,"__lodash_hash_undefined__"),this}},function(t,e){t.exports=function(t){return this.__data__.has(t)}},function(t,e){t.exports=function(t,e){for(var n=-1,r=null==t?0:t.length;++n<r;)if(e(t[n],n,t))return!0;return!1}},function(t,e,n){var r=n(66),o=n(303),i=n(180),a=n(184),s=n(304),c=n(123),l=r?r.prototype:void 0,u=l?l.valueOf:void 0;t.exports=function(t,e,n,r,l,p,d){switch(n){case"[object DataView]":if(t.byteLength!=e.byteLength||t.byteOffset!=e.byteOffset)return!1;t=t.buffer,e=e.buffer;case"[object ArrayBuffer]":return!(t.byteLength!=e.byteLength||!p(new o(t),new o(e)));case"[object Boolean]":case"[object Date]":case"[object Number]":return i(+t,+e);case"[object Error]":return t.name==e.name&&t.message==e.message;case"[object RegExp]":case"[object String]":return t==e+"";case"[object Map]":var h=s;case"[object Set]":var f=1&r;if(h||(h=c),t.size!=e.size&&!f)return!1;var v=d.get(t);if(v)return v==e;r|=2,d.set(t,e);var b=a(h(t),h(e),r,l,p,d);return d.delete(t),b;case"[object Symbol]":if(u)return u.call(t)==u.call(e)}return!1}},function(t,e,n){var r=n(28).Uint8Array;t.exports=r},function(t,e){t.exports=function(t){var e=-1,n=Array(t.size);return t.forEach((function(t,r){n[++e]=[r,t]})),n}},function(t,e,n){var r=n(306),o=Object.prototype.hasOwnProperty;t.exports=function(t,e,n,i,a,s){var c=1&n,l=r(t),u=l.length;if(u!=r(e).length&&!c)return!1;for(var p=u;p--;){var d=l[p];if(!(c?d in e:o.call(e,d)))return!1}var h=s.get(t),f=s.get(e);if(h&&f)return h==e&&f==t;var v=!0;s.set(t,e),s.set(e,t);for(var b=c;++p<u;){var m=t[d=l[p]],g=e[d];if(i)var y=c?i(g,m,d,e,t,s):i(m,g,d,t,e,s);if(!(void 0===y?m===g||a(m,g,n,i,s):y)){v=!1;break}b||(b="constructor"==d)}if(v&&!b){var _=t.constructor,x=e.constructor;_==x||!("constructor"in t)||!("constructor"in e)||"function"==typeof _&&_ instanceof _&&"function"==typeof x&&x instanceof x||(v=!1)}return s.delete(t),s.delete(e),v}},function(t,e,n){var r=n(307),o=n(308),i=n(187);t.exports=function(t){return r(t,i,o)}},function(t,e,n){var r=n(177),o=n(29);t.exports=function(t,e,n){var i=e(t);return o(t)?i:r(i,n(t))}},function(t,e,n){var r=n(309),o=n(310),i=Object.prototype.propertyIsEnumerable,a=Object.getOwnPropertySymbols,s=a?function(t){return null==t?[]:(t=Object(t),r(a(t),(function(e){return i.call(t,e)})))}:o;t.exports=s},function(t,e){t.exports=function(t,e){for(var n=-1,r=null==t?0:t.length,o=0,i=[];++n<r;){var a=t[n];e(a,n,t)&&(i[o++]=a)}return i}},function(t,e){t.exports=function(){return[]}},function(t,e,n){var r=n(312),o=n(119),i=n(29),a=n(188),s=n(189),c=n(190),l=Object.prototype.hasOwnProperty;t.exports=function(t,e){var n=i(t),u=!n&&o(t),p=!n&&!u&&a(t),d=!n&&!u&&!p&&c(t),h=n||u||p||d,f=h?r(t.length,String):[],v=f.length;for(var b in t)!e&&!l.call(t,b)||h&&("length"==b||p&&("offset"==b||"parent"==b)||d&&("buffer"==b||"byteLength"==b||"byteOffset"==b)||s(b,v))||f.push(b);return f}},function(t,e){t.exports=function(t,e){for(var n=-1,r=Array(t);++n<t;)r[n]=e(n);return r}},function(t,e){t.exports=function(){return!1}},function(t,e,n){var r=n(67),o=n(124),i=n(50),a={};a["[object Float32Array]"]=a["[object Float64Array]"]=a["[object Int8Array]"]=a["[object Int16Array]"]=a["[object Int32Array]"]=a["[object Uint8Array]"]=a["[object Uint8ClampedArray]"]=a["[object Uint16Array]"]=a["[object Uint32Array]"]=!0,a["[object Arguments]"]=a["[object Array]"]=a["[object ArrayBuffer]"]=a["[object Boolean]"]=a["[object DataView]"]=a["[object Date]"]=a["[object Error]"]=a["[object Function]"]=a["[object Map]"]=a["[object Number]"]=a["[object Object]"]=a["[object RegExp]"]=a["[object Set]"]=a["[object String]"]=a["[object WeakMap]"]=!1,t.exports=function(t){return i(t)&&o(t.length)&&!!a[r(t)]}},function(t,e){t.exports=function(t){return function(e){return t(e)}}},function(t,e,n){(function(t){var r=n(178),o=e&&!e.nodeType&&e,i=o&&"object"==typeof t&&t&&!t.nodeType&&t,a=i&&i.exports===o&&r.process,s=function(){try{var t=i&&i.require&&i.require("util").types;return t||a&&a.binding&&a.binding("util")}catch(t){}}();t.exports=s}).call(this,n(136)(t))},function(t,e,n){var r=n(318),o=n(319),i=Object.prototype.hasOwnProperty;t.exports=function(t){if(!r(t))return o(t);var e=[];for(var n in Object(t))i.call(t,n)&&"constructor"!=n&&e.push(n);return e}},function(t,e){var n=Object.prototype;t.exports=function(t){var e=t&&t.constructor;return t===("function"==typeof e&&e.prototype||n)}},function(t,e,n){var r=n(320)(Object.keys,Object);t.exports=r},function(t,e){t.exports=function(t,e){return function(n){return t(e(n))}}},function(t,e,n){var r=n(322),o=n(120),i=n(323),a=n(192),s=n(324),c=n(67),l=n(182),u=l(r),p=l(o),d=l(i),h=l(a),f=l(s),v=c;(r&&"[object DataView]"!=v(new r(new ArrayBuffer(1)))||o&&"[object Map]"!=v(new o)||i&&"[object Promise]"!=v(i.resolve())||a&&"[object Set]"!=v(new a)||s&&"[object WeakMap]"!=v(new s))&&(v=function(t){var e=c(t),n="[object Object]"==e?t.constructor:void 0,r=n?l(n):"";if(r)switch(r){case u:return"[object DataView]";case p:return"[object Map]";case d:return"[object Promise]";case h:return"[object Set]";case f:return"[object WeakMap]"}return e}),t.exports=v},function(t,e,n){var r=n(39)(n(28),"DataView");t.exports=r},function(t,e,n){var r=n(39)(n(28),"Promise");t.exports=r},function(t,e,n){var r=n(39)(n(28),"WeakMap");t.exports=r},function(t,e,n){var r=n(193),o=n(187);t.exports=function(t){for(var e=o(t),n=e.length;n--;){var i=e[n],a=t[i];e[n]=[i,a,r(a)]}return e}},function(t,e,n){var r=n(183),o=n(327),i=n(334),a=n(125),s=n(193),c=n(194),l=n(92);t.exports=function(t,e){return a(t)&&s(e)?c(l(t),e):function(n){var a=o(n,t);return void 0===a&&a===e?i(n,t):r(e,a,3)}}},function(t,e,n){var r=n(195);t.exports=function(t,e,n){var o=null==t?void 0:r(t,e);return void 0===o?n:o}},function(t,e,n){var r=n(329),o=/[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g,i=/\\(\\)?/g,a=r((function(t){var e=[];return 46===t.charCodeAt(0)&&e.push(""),t.replace(o,(function(t,n,r,o){e.push(r?o.replace(i,"$1"):n||t)})),e}));t.exports=a},function(t,e,n){var r=n(330);t.exports=function(t){var e=r(t,(function(t){return 500===n.size&&n.clear(),t})),n=e.cache;return e}},function(t,e,n){var r=n(122);function o(t,e){if("function"!=typeof t||null!=e&&"function"!=typeof e)throw new TypeError("Expected a function");var n=function(){var r=arguments,o=e?e.apply(this,r):r[0],i=n.cache;if(i.has(o))return i.get(o);var a=t.apply(this,r);return n.cache=i.set(o,a)||i,a};return n.cache=new(o.Cache||r),n}o.Cache=r,t.exports=o},function(t,e,n){var r=n(332);t.exports=function(t){return null==t?"":r(t)}},function(t,e,n){var r=n(66),o=n(333),i=n(29),a=n(126),s=r?r.prototype:void 0,c=s?s.toString:void 0;t.exports=function t(e){if("string"==typeof e)return e;if(i(e))return o(e,t)+"";if(a(e))return c?c.call(e):"";var n=e+"";return"0"==n&&1/e==-1/0?"-0":n}},function(t,e){t.exports=function(t,e){for(var n=-1,r=null==t?0:t.length,o=Array(r);++n<r;)o[n]=e(t[n],n,t);return o}},function(t,e,n){var r=n(335),o=n(336);t.exports=function(t,e){return null!=t&&o(t,e,r)}},function(t,e){t.exports=function(t,e){return null!=t&&e in Object(t)}},function(t,e,n){var r=n(196),o=n(119),i=n(29),a=n(189),s=n(124),c=n(92);t.exports=function(t,e,n){for(var l=-1,u=(e=r(e,t)).length,p=!1;++l<u;){var d=c(e[l]);if(!(p=null!=t&&n(t,d)))break;t=t[d]}return p||++l!=u?p:!!(u=null==t?0:t.length)&&s(u)&&a(d,u)&&(i(t)||o(t))}},function(t,e,n){var r=n(338),o=n(339),i=n(125),a=n(92);t.exports=function(t){return i(t)?r(a(t)):o(t)}},function(t,e){t.exports=function(t){return function(e){return null==e?void 0:e[t]}}},function(t,e,n){var r=n(195);t.exports=function(t){return function(e){return r(e,t)}}},function(t,e,n){var r=n(127),o=n(341),i=n(343);t.exports=function(t,e){return i(o(t,e,r),t+"")}},function(t,e,n){var r=n(342),o=Math.max;t.exports=function(t,e,n){return e=o(void 0===e?t.length-1:e,0),function(){for(var i=arguments,a=-1,s=o(i.length-e,0),c=Array(s);++a<s;)c[a]=i[e+a];a=-1;for(var l=Array(e+1);++a<e;)l[a]=i[a];return l[e]=n(c),r(t,this,l)}}},function(t,e){t.exports=function(t,e,n){switch(n.length){case 0:return t.call(e);case 1:return t.call(e,n[0]);case 2:return t.call(e,n[0],n[1]);case 3:return t.call(e,n[0],n[1],n[2])}return t.apply(e,n)}},function(t,e,n){var r=n(344),o=n(347)(r);t.exports=o},function(t,e,n){var r=n(345),o=n(346),i=n(127),a=o?function(t,e){return o(t,"toString",{configurable:!0,enumerable:!1,value:r(e),writable:!0})}:i;t.exports=a},function(t,e){t.exports=function(t){return function(){return t}}},function(t,e,n){var r=n(39),o=function(){try{var t=r(Object,"defineProperty");return t({},"",{}),t}catch(t){}}();t.exports=o},function(t,e){var n=Date.now;t.exports=function(t){var e=0,r=0;return function(){var o=n(),i=16-(o-r);if(r=o,i>0){if(++e>=800)return arguments[0]}else e=0;return t.apply(void 0,arguments)}}},function(t,e,n){var r=n(185),o=n(349),i=n(354),a=n(186),s=n(355),c=n(123);t.exports=function(t,e,n){var l=-1,u=o,p=t.length,d=!0,h=[],f=h;if(n)d=!1,u=i;else if(p>=200){var v=e?null:s(t);if(v)return c(v);d=!1,u=a,f=new r}else f=e?[]:h;t:for(;++l<p;){var b=t[l],m=e?e(b):b;if(b=n||0!==b?b:0,d&&m==m){for(var g=f.length;g--;)if(f[g]===m)continue t;e&&f.push(m),h.push(b)}else u(f,m,n)||(f!==h&&f.push(m),h.push(b))}return h}},function(t,e,n){var r=n(350);t.exports=function(t,e){return!!(null==t?0:t.length)&&r(t,e,0)>-1}},function(t,e,n){var r=n(351),o=n(352),i=n(353);t.exports=function(t,e,n){return e==e?i(t,e,n):r(t,o,n)}},function(t,e){t.exports=function(t,e,n,r){for(var o=t.length,i=n+(r?1:-1);r?i--:++i<o;)if(e(t[i],i,t))return i;return-1}},function(t,e){t.exports=function(t){return t!=t}},function(t,e){t.exports=function(t,e,n){for(var r=n-1,o=t.length;++r<o;)if(t[r]===e)return r;return-1}},function(t,e){t.exports=function(t,e,n){for(var r=-1,o=null==t?0:t.length;++r<o;)if(n(e,t[r]))return!0;return!1}},function(t,e,n){var r=n(192),o=n(356),i=n(123),a=r&&1/i(new r([,-0]))[1]==1/0?function(t){return new r(t)}:o;t.exports=a},function(t,e){t.exports=function(){}},function(t,e,n){var r=n(191),o=n(50);t.exports=function(t){return o(t)&&r(t)}},function(t,e){t.exports=function(t){var e=null==t?0:t.length;return e?t[e-1]:void 0}},function(t,e,n){},function(t,e,n){},function(t,e,n){"use strict";var r=n(3),o=n(362).start,i=Math.abs,a=Date.prototype,s=a.getTime,c=a.toISOString;t.exports=r((function(){return"0385-07-25T07:06:39.999Z"!=c.call(new Date(-50000000000001))}))||!r((function(){c.call(new Date(NaN))}))?function(){if(!isFinite(s.call(this)))throw RangeError("Invalid time value");var t=this.getUTCFullYear(),e=this.getUTCMilliseconds(),n=t<0?"-":t>9999?"+":"";return n+o(i(t),n?6:4,0)+"-"+o(this.getUTCMonth()+1,2,0)+"-"+o(this.getUTCDate(),2,0)+"T"+o(this.getUTCHours(),2,0)+":"+o(this.getUTCMinutes(),2,0)+":"+o(this.getUTCSeconds(),2,0)+"."+o(e,3,0)+"Z"}:c},function(t,e,n){var r=n(15),o=n(363),i=n(21),a=Math.ceil,s=function(t){return function(e,n,s){var c,l,u=String(i(e)),p=u.length,d=void 0===s?" ":String(s),h=r(n);return h<=p||""==d?u:(c=h-p,(l=o.call(d,a(c/d.length))).length>c&&(l=l.slice(0,c)),t?u+l:l+u)}};t.exports={start:s(!1),end:s(!0)}},function(t,e,n){"use strict";var r=n(47),o=n(21);t.exports=function(t){var e=String(o(this)),n="",i=r(t);if(i<0||i==1/0)throw RangeError("Wrong number of repetitions");for(;i>0;(i>>>=1)&&(e+=e))1&i&&(n+=e);return n}},function(t,e,n){var r=n(1),o=n(10);r({target:"Object",stat:!0,forced:!o,sham:!o},{defineProperties:n(144)})},function(t,e,n){},function(t,e,n){n(1)({target:"Date",stat:!0},{now:function(){return(new Date).getTime()}})},function(t,e,n){"use strict";n(199)},function(t,e,n){"use strict";n(200)},function(t,e,n){"use strict";var r=n(10),o=n(4),i=n(84),a=n(19),s=n(14),c=n(35),l=n(198),u=n(45),p=n(3),d=n(46),h=n(61).f,f=n(32).f,v=n(12).f,b=n(137).trim,m=o.Number,g=m.prototype,y="Number"==c(d(g)),_=function(t){var e,n,r,o,i,a,s,c,l=u(t,!1);if("string"==typeof l&&l.length>2)if(43===(e=(l=b(l)).charCodeAt(0))||45===e){if(88===(n=l.charCodeAt(2))||120===n)return NaN}else if(48===e){switch(l.charCodeAt(1)){case 66:case 98:r=2,o=49;break;case 79:case 111:r=8,o=55;break;default:return+l}for(a=(i=l.slice(2)).length,s=0;s<a;s++)if((c=i.charCodeAt(s))<48||c>o)return NaN;return parseInt(i,r)}return+l};if(i("Number",!m(" 0o1")||!m("0b1")||m("+0x1"))){for(var x,w=function(t){var e=arguments.length<1?0:t,n=this;return n instanceof w&&(y?p((function(){g.valueOf.call(n)})):"Number"!=c(n))?l(new m(_(e)),n,w):_(e)},S=r?h(m):"MAX_VALUE,MIN_VALUE,NaN,NEGATIVE_INFINITY,POSITIVE_INFINITY,EPSILON,isFinite,isInteger,isNaN,isSafeInteger,MAX_SAFE_INTEGER,MIN_SAFE_INTEGER,parseFloat,parseInt,isInteger,fromString,range".split(","),O=0;S.length>O;O++)s(m,x=S[O])&&!s(w,x)&&v(w,x,f(m,x));w.prototype=g,g.constructor=w,a(o,"Number",w)}},function(t,e,n){var r=n(4),o=n(137).trim,i=n(138),a=r.parseInt,s=/^[+-]?0[Xx]/,c=8!==a(i+"08")||22!==a(i+"0x16");t.exports=c?function(t,e){var n=o(String(t));return a(n,e>>>0||(s.test(n)?16:10))}:a},function(t,e,n){"use strict";n(201)},function(t,e,n){
/*!
 * Valine v1.4.14
 * (c) 2017-2020 xCss
 * Released under the GPL-2.0 License.
 * Last Update: 2020/4/26 下午8:39:08
 */
t.exports=function(t){function e(r){if(n[r])return n[r].exports;var o=n[r]={i:r,l:!1,exports:{}};return t[r].call(o.exports,o,o.exports,e),o.l=!0,o.exports}var n={};return e.m=t,e.c=n,e.i=function(t){return t},e.d=function(t,n,r){e.o(t,n)||Object.defineProperty(t,n,{configurable:!1,enumerable:!0,get:r})},e.n=function(t){var n=t&&t.__esModule?function(){return t.default}:function(){return t};return e.d(n,"a",n),n},e.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},e.p="",e(e.s=63)}([function(t,e,n){"use strict";function r(t){return t&&t.__esModule?t:{default:t}}e.__esModule=!0;var o="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},i=r(n(38)),a=r(n(28)),s=r(n(27)),c=r(n(42)),l=document,u=navigator,p=/[&<>"'`\\]/g,d=RegExp(p.source),h=/&(?:amp|lt|gt|quot|#39|#x60|#x5c);/g,f=RegExp(h.source),v={"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#39;","`":"&#x60;","\\":"&#x5c;"},b={};for(var m in v)b[v[m]]=m;var g=null;Array.prototype.forEach||(Array.prototype.forEach=function(t,e){var n,r;if(null==this)throw new TypeError(" this is null or not defined");var o=Object(this),i=o.length>>>0;if("function"!=typeof t)throw new TypeError(t+" is not a function");for(arguments.length>1&&(n=e),r=0;r<i;){var a;r in o&&(a=o[r],t.call(n,a,r,o)),r++}}),window.NodeList&&!NodeList.prototype.forEach&&(NodeList.prototype.forEach=Array.prototype.forEach),String.prototype.trim||(String.prototype.trim=function(){return this.replace(/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,"")}),(0,i.default)(a.default.fn,{prepend:function(t){return t instanceof HTMLElement||(t=t[0]),this.forEach((function(e){e.insertAdjacentElement("afterBegin",t)})),this},append:function(t){return t instanceof HTMLElement||(t=t[0]),this.forEach((function(e){e.insertAdjacentElement("beforeEnd",t)})),this},remove:function(){return this.forEach((function(t){try{t.parentNode.removeChild(t)}catch(t){}})),this},find:function(t){return(0,a.default)(t,this)},show:function(){return this.forEach((function(t){t.style.display="block"})),this},hide:function(){return this.forEach((function(t){t.style.display="none"})),this},on:function(t,e,n){return a.default.fn.off(t,e,n),this.forEach((function(r){t.split(" ").forEach((function(t){r.addEventListener?r.addEventListener(t,e,n||!1):r.attachEvent?r.attachEvent("on"+t,e):r["on"+t]=e}))})),this},off:function(t,e,n){return this.forEach((function(r){t.split(" ").forEach((function(t){r.removeEventListener?r.removeEventListener(t,e,n||!1):r.detachEvent?r.detachEvent("on"+t,e):r["on"+t]=null}))})),this},html:function(t){return void 0!==t?(this.forEach((function(e){e.innerHTML=t})),this):this[0].innerHTML},text:function(t){return void 0!==t?(this.forEach((function(e){e.innerText=t})),this):this[0].innerText},empty:function(t){return t=t||0,this.forEach((function(e){setTimeout((function(t){e.innerText=""}),t)})),this},val:function(t){return void 0!==t?(this.forEach((function(e){e.value=t})),this):this[0].value||""},attr:function(){var t=arguments;if("object"==o(arguments[0])){var e=arguments[0],n=this;return Object.keys(e).forEach((function(t){n.forEach((function(n){n.setAttribute(t,e[t])}))})),this}return"string"==typeof arguments[0]&&arguments.length<2?this[0].getAttribute(arguments[0])||"":(this.forEach((function(e){e.setAttribute(t[0],t[1])})),this)},removeAttr:function(t){return this.forEach((function(e){var n,r=0,o=t&&t.match(/[^\x20\t\r\n\f\*\/\\]+/g);if(o&&1===e.nodeType)for(;n=o[r++];)e.removeAttribute(n)})),this},hasClass:function(t){return!!this[0]&&new RegExp("(\\s|^)"+t+"(\\s|$)").test(this[0].getAttribute("class"))},addClass:function(t){return this.forEach((function(e){var n=(0,a.default)(e),r=n.attr("class");n.hasClass(t)||n.attr("class",r+=" "+t)})),this},removeClass:function(t){return this.forEach((function(e){var n=(0,a.default)(e),r=n.attr("class");if(n.hasClass(t)){var o=new RegExp("(\\s|^)"+t+"(\\s|$)");n.attr("class",r.replace(o,""))}})),this}}),(0,i.default)(a.default,{extend:i.default,noop:function(){},navi:u,ua:u.userAgent,lang:u.language||u.languages[0],detect:s.default,store:c.default,escape:function(t){return t&&d.test(t)?t.replace(p,(function(t){return v[t]})):t},unescape:function(t){return t&&f.test(t)?t.replace(h,(function(t){return b[t]})):t},dynamicLoadSource:function(t,e){if((0,a.default)('script[src="'+t+'"]').length)e&&e();else{var n=l.createElement("script");n.onload=n.onreadystatechange=function(){this.onload=this.onreadystatechange=null,e&&e(),(0,a.default)(n).remove()},n.async=!0,n.setAttribute("referrerPolicy","no-referrer"),(0,a.default)("head")[0].appendChild(n),n.src=t}},sdkLoader:function(t,e,n){e in window&&window[e]?(g&&clearTimeout(g),n&&n()):a.default.dynamicLoadSource(t,(function(){g=setTimeout(a.default.sdkLoader(t,e,n),100)}))},deleteInWin:function(t,e){var n=function(e){if(t in window)try{delete window[t]}catch(e){window[t]=null}};0===e?n():setTimeout(n,e||500)},ajax:function(t){(t=t||{}).type=(t.type||"GET").toUpperCase(),t.dataType=t.dataType||"json",t.async=t.async||!0,t.timeout=t.timeout||8e3;var e="[object FormData]"=={}.toString.call(t.data)?t.data:function(t){var e=[];for(var n in t)e.push(encodeURIComponent(n)+"="+encodeURIComponent(t[n]));return e.push("t="+Date.now()),e.join("&")}(t.data),n=null,r="XMLHttpRequest"in window?new XMLHttpRequest:new ActiveXObject("Microsoft.XMLHTTP");r.onreadystatechange=function(e){if(4==r.readyState){clearTimeout(n);var o=r.status;o>=200&&o<300?t.success&&t.success(JSON.parse(r.responseText)):t.fail&&t.fail(o)}},"GET"==t.type?(r.open("GET",t.url+"?"+e,t.async),r.send(null)):"POST"==t.type&&(r.open("POST",t.url,t.async),null==t.contentType||null==t.contentType?r.send(e):(r.setRequestHeader("Content-Type",t.contentType),r.send(JSON.stringify(t.data)))),n=setTimeout((function(t){clearTimeout(n),r.abort()}),t.timeout)}}),e.default=a.default},function(t,e,n){"use strict";var r=TypeError,o=Object.getOwnPropertyDescriptor;if(o)try{o({},"")}catch(t){o=null}var i=function(){throw new r},a=o?function(){try{return i}catch(t){try{return o(arguments,"callee").get}catch(t){return i}}}():i,s=n(47)(),c=Object.getPrototypeOf||function(t){return t.__proto__},l=void 0,u=void 0,p=void 0,d="undefined"==typeof Uint8Array?void 0:c(Uint8Array),h={"%Array%":Array,"%ArrayBuffer%":"undefined"==typeof ArrayBuffer?void 0:ArrayBuffer,"%ArrayBufferPrototype%":"undefined"==typeof ArrayBuffer?void 0:ArrayBuffer.prototype,"%ArrayIteratorPrototype%":s?c([][Symbol.iterator]()):void 0,"%ArrayPrototype%":Array.prototype,"%ArrayProto_entries%":Array.prototype.entries,"%ArrayProto_forEach%":Array.prototype.forEach,"%ArrayProto_keys%":Array.prototype.keys,"%ArrayProto_values%":Array.prototype.values,"%AsyncFromSyncIteratorPrototype%":void 0,"%AsyncFunction%":void 0,"%AsyncFunctionPrototype%":void 0,"%AsyncGenerator%":void 0,"%AsyncGeneratorFunction%":u,"%AsyncGeneratorPrototype%":void 0,"%AsyncIteratorPrototype%":p&&s&&Symbol.asyncIterator?p[Symbol.asyncIterator]():void 0,"%Atomics%":"undefined"==typeof Atomics?void 0:Atomics,"%Boolean%":Boolean,"%BooleanPrototype%":Boolean.prototype,"%DataView%":"undefined"==typeof DataView?void 0:DataView,"%DataViewPrototype%":"undefined"==typeof DataView?void 0:DataView.prototype,"%Date%":Date,"%DatePrototype%":Date.prototype,"%decodeURI%":decodeURI,"%decodeURIComponent%":decodeURIComponent,"%encodeURI%":encodeURI,"%encodeURIComponent%":encodeURIComponent,"%Error%":Error,"%ErrorPrototype%":Error.prototype,"%eval%":eval,"%EvalError%":EvalError,"%EvalErrorPrototype%":EvalError.prototype,"%Float32Array%":"undefined"==typeof Float32Array?void 0:Float32Array,"%Float32ArrayPrototype%":"undefined"==typeof Float32Array?void 0:Float32Array.prototype,"%Float64Array%":"undefined"==typeof Float64Array?void 0:Float64Array,"%Float64ArrayPrototype%":"undefined"==typeof Float64Array?void 0:Float64Array.prototype,"%Function%":Function,"%FunctionPrototype%":Function.prototype,"%Generator%":void 0,"%GeneratorFunction%":l,"%GeneratorPrototype%":void 0,"%Int8Array%":"undefined"==typeof Int8Array?void 0:Int8Array,"%Int8ArrayPrototype%":"undefined"==typeof Int8Array?void 0:Int8Array.prototype,"%Int16Array%":"undefined"==typeof Int16Array?void 0:Int16Array,"%Int16ArrayPrototype%":"undefined"==typeof Int16Array?void 0:Int8Array.prototype,"%Int32Array%":"undefined"==typeof Int32Array?void 0:Int32Array,"%Int32ArrayPrototype%":"undefined"==typeof Int32Array?void 0:Int32Array.prototype,"%isFinite%":isFinite,"%isNaN%":isNaN,"%IteratorPrototype%":s?c(c([][Symbol.iterator]())):void 0,"%JSON%":"object"==typeof JSON?JSON:void 0,"%JSONParse%":"object"==typeof JSON?JSON.parse:void 0,"%Map%":"undefined"==typeof Map?void 0:Map,"%MapIteratorPrototype%":"undefined"!=typeof Map&&s?c((new Map)[Symbol.iterator]()):void 0,"%MapPrototype%":"undefined"==typeof Map?void 0:Map.prototype,"%Math%":Math,"%Number%":Number,"%NumberPrototype%":Number.prototype,"%Object%":Object,"%ObjectPrototype%":Object.prototype,"%ObjProto_toString%":Object.prototype.toString,"%ObjProto_valueOf%":Object.prototype.valueOf,"%parseFloat%":parseFloat,"%parseInt%":parseInt,"%Promise%":"undefined"==typeof Promise?void 0:Promise,"%PromisePrototype%":"undefined"==typeof Promise?void 0:Promise.prototype,"%PromiseProto_then%":"undefined"==typeof Promise?void 0:Promise.prototype.then,"%Promise_all%":"undefined"==typeof Promise?void 0:Promise.all,"%Promise_reject%":"undefined"==typeof Promise?void 0:Promise.reject,"%Promise_resolve%":"undefined"==typeof Promise?void 0:Promise.resolve,"%Proxy%":"undefined"==typeof Proxy?void 0:Proxy,"%RangeError%":RangeError,"%RangeErrorPrototype%":RangeError.prototype,"%ReferenceError%":ReferenceError,"%ReferenceErrorPrototype%":ReferenceError.prototype,"%Reflect%":"undefined"==typeof Reflect?void 0:Reflect,"%RegExp%":RegExp,"%RegExpPrototype%":RegExp.prototype,"%Set%":"undefined"==typeof Set?void 0:Set,"%SetIteratorPrototype%":"undefined"!=typeof Set&&s?c((new Set)[Symbol.iterator]()):void 0,"%SetPrototype%":"undefined"==typeof Set?void 0:Set.prototype,"%SharedArrayBuffer%":"undefined"==typeof SharedArrayBuffer?void 0:SharedArrayBuffer,"%SharedArrayBufferPrototype%":"undefined"==typeof SharedArrayBuffer?void 0:SharedArrayBuffer.prototype,"%String%":String,"%StringIteratorPrototype%":s?c(""[Symbol.iterator]()):void 0,"%StringPrototype%":String.prototype,"%Symbol%":s?Symbol:void 0,"%SymbolPrototype%":s?Symbol.prototype:void 0,"%SyntaxError%":SyntaxError,"%SyntaxErrorPrototype%":SyntaxError.prototype,"%ThrowTypeError%":a,"%TypedArray%":d,"%TypedArrayPrototype%":d?d.prototype:void 0,"%TypeError%":r,"%TypeErrorPrototype%":r.prototype,"%Uint8Array%":"undefined"==typeof Uint8Array?void 0:Uint8Array,"%Uint8ArrayPrototype%":"undefined"==typeof Uint8Array?void 0:Uint8Array.prototype,"%Uint8ClampedArray%":"undefined"==typeof Uint8ClampedArray?void 0:Uint8ClampedArray,"%Uint8ClampedArrayPrototype%":"undefined"==typeof Uint8ClampedArray?void 0:Uint8ClampedArray.prototype,"%Uint16Array%":"undefined"==typeof Uint16Array?void 0:Uint16Array,"%Uint16ArrayPrototype%":"undefined"==typeof Uint16Array?void 0:Uint16Array.prototype,"%Uint32Array%":"undefined"==typeof Uint32Array?void 0:Uint32Array,"%Uint32ArrayPrototype%":"undefined"==typeof Uint32Array?void 0:Uint32Array.prototype,"%URIError%":URIError,"%URIErrorPrototype%":URIError.prototype,"%WeakMap%":"undefined"==typeof WeakMap?void 0:WeakMap,"%WeakMapPrototype%":"undefined"==typeof WeakMap?void 0:WeakMap.prototype,"%WeakSet%":"undefined"==typeof WeakSet?void 0:WeakSet,"%WeakSetPrototype%":"undefined"==typeof WeakSet?void 0:WeakSet.prototype},f=n(4).call(Function.call,String.prototype.replace),v=/[^%.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|%$))/g,b=/\\(\\)?/g,m=function(t){var e=[];return f(t,v,(function(t,n,r,o){e[e.length]=r?f(o,b,"$1"):n||t})),e},g=function(t,e){if(!(t in h))throw new SyntaxError("intrinsic "+t+" does not exist!");if(void 0===h[t]&&!e)throw new r("intrinsic "+t+" exists, but is not available. Please file an issue!");return h[t]};t.exports=function(t,e){if("string"!=typeof t||0===t.length)throw new TypeError("intrinsic name must be a non-empty string");if(arguments.length>1&&"boolean"!=typeof e)throw new TypeError('"allowMissing" argument must be a boolean');for(var n=m(t),i=g("%"+(n.length>0?n[0]:"")+"%",e),a=1;a<n.length;a+=1)if(null!=i)if(o&&a+1>=n.length){var s=o(i,n[a]);if(!e&&!(n[a]in i))throw new r("base intrinsic for "+t+" exists, but the property is not available.");i=s?s.get||s.value:i[n[a]]}else i=i[n[a]];return i}},function(t,e,n){"use strict";e.__esModule=!0,e.DEFAULT_EMOJI_CDN="//img.t.sinajs.cn/t4/appstyle/expression/ext/normal/",e.DB_NAME="Comment",e.defaultConfig={lang:"zh-CN",langMode:null,appId:"",appKey:"",clazzName:"Comment",meta:["nick","mail","link"],path:location.pathname,placeholder:"Just Go Go",pageSize:10,recordIP:!0,serverURLs:"",visitor:!1,emojiCDN:"",emojiMaps:void 0,enableQQ:!1,requiredFields:[]},e.defaultMeta=["nick","mail","link"],e.QQCacheKey="_v_Cache_Q",e.MetaCacheKey="_v_Cache_Meta",e.RandomStr=(Date.now()+Math.round(1e3*Math.random())).toString(32),e.VERSION="1.4.14"},function(t,e,n){var r=n(7),o=n(29);for(var i in(e=t.exports=function(t,e){return new o(e).process(t)}).FilterCSS=o,r)e[i]=r[i];"undefined"!=typeof window&&(window.filterCSS=t.exports)},function(t,e,n){"use strict";var r=n(32);t.exports=Function.prototype.bind||r},function(t,e){t.exports={indexOf:function(t,e){var n,r;if(Array.prototype.indexOf)return t.indexOf(e);for(n=0,r=t.length;n<r;n++)if(t[n]===e)return n;return-1},forEach:function(t,e,n){var r,o;if(Array.prototype.forEach)return t.forEach(e,n);for(r=0,o=t.length;r<o;r++)e.call(n,t[r],r,t)},trim:function(t){return String.prototype.trim?t.trim():t.replace(/(^\s*)|(\s*$)/g,"")},spaceIndex:function(t){var e=/\s|\n|\t/.exec(t);return e?e.index:-1}}},function(t,e,n){"use strict";e.__esModule=!0;var r={cdn:n(2).DEFAULT_EMOJI_CDN,maps:n(53),parse:function(t){return String(t).replace(new RegExp(":("+Object.keys(r.maps).join("|")+"):","ig"),(function(t,e){return r.maps[e]?r.build(e):t}))},build:function(t){var e=/^(https?:)?\/\//i,n=r.maps[t],o=e.test(n)?n:r.cdn+n;return e.test(o)?'<img alt="'+t+'" referrerPolicy="no-referrer" class="vemoji" src="'+o+'" />':""}};e.default=r},function(t,e){function n(){var t={"align-content":!1,"align-items":!1,"align-self":!1,"alignment-adjust":!1,"alignment-baseline":!1,all:!1,"anchor-point":!1,animation:!1,"animation-delay":!1,"animation-direction":!1,"animation-duration":!1,"animation-fill-mode":!1,"animation-iteration-count":!1,"animation-name":!1,"animation-play-state":!1,"animation-timing-function":!1,azimuth:!1,"backface-visibility":!1,background:!0,"background-attachment":!0,"background-clip":!0,"background-color":!0,"background-image":!0,"background-origin":!0,"background-position":!0,"background-repeat":!0,"background-size":!0,"baseline-shift":!1,binding:!1,bleed:!1,"bookmark-label":!1,"bookmark-level":!1,"bookmark-state":!1,border:!0,"border-bottom":!0,"border-bottom-color":!0,"border-bottom-left-radius":!0,"border-bottom-right-radius":!0,"border-bottom-style":!0,"border-bottom-width":!0,"border-collapse":!0,"border-color":!0,"border-image":!0,"border-image-outset":!0,"border-image-repeat":!0,"border-image-slice":!0,"border-image-source":!0,"border-image-width":!0,"border-left":!0,"border-left-color":!0,"border-left-style":!0,"border-left-width":!0,"border-radius":!0,"border-right":!0,"border-right-color":!0,"border-right-style":!0,"border-right-width":!0,"border-spacing":!0,"border-style":!0,"border-top":!0,"border-top-color":!0,"border-top-left-radius":!0,"border-top-right-radius":!0,"border-top-style":!0,"border-top-width":!0,"border-width":!0,bottom:!1,"box-decoration-break":!0,"box-shadow":!0,"box-sizing":!0,"box-snap":!0,"box-suppress":!0,"break-after":!0,"break-before":!0,"break-inside":!0,"caption-side":!1,chains:!1,clear:!0,clip:!1,"clip-path":!1,"clip-rule":!1,color:!0,"color-interpolation-filters":!0,"column-count":!1,"column-fill":!1,"column-gap":!1,"column-rule":!1,"column-rule-color":!1,"column-rule-style":!1,"column-rule-width":!1,"column-span":!1,"column-width":!1,columns:!1,contain:!1,content:!1,"counter-increment":!1,"counter-reset":!1,"counter-set":!1,crop:!1,cue:!1,"cue-after":!1,"cue-before":!1,cursor:!1,direction:!1,display:!0,"display-inside":!0,"display-list":!0,"display-outside":!0,"dominant-baseline":!1,elevation:!1,"empty-cells":!1,filter:!1,flex:!1,"flex-basis":!1,"flex-direction":!1,"flex-flow":!1,"flex-grow":!1,"flex-shrink":!1,"flex-wrap":!1,float:!1,"float-offset":!1,"flood-color":!1,"flood-opacity":!1,"flow-from":!1,"flow-into":!1,font:!0,"font-family":!0,"font-feature-settings":!0,"font-kerning":!0,"font-language-override":!0,"font-size":!0,"font-size-adjust":!0,"font-stretch":!0,"font-style":!0,"font-synthesis":!0,"font-variant":!0,"font-variant-alternates":!0,"font-variant-caps":!0,"font-variant-east-asian":!0,"font-variant-ligatures":!0,"font-variant-numeric":!0,"font-variant-position":!0,"font-weight":!0,grid:!1,"grid-area":!1,"grid-auto-columns":!1,"grid-auto-flow":!1,"grid-auto-rows":!1,"grid-column":!1,"grid-column-end":!1,"grid-column-start":!1,"grid-row":!1,"grid-row-end":!1,"grid-row-start":!1,"grid-template":!1,"grid-template-areas":!1,"grid-template-columns":!1,"grid-template-rows":!1,"hanging-punctuation":!1,height:!0,hyphens:!1,icon:!1,"image-orientation":!1,"image-resolution":!1,"ime-mode":!1,"initial-letters":!1,"inline-box-align":!1,"justify-content":!1,"justify-items":!1,"justify-self":!1,left:!1,"letter-spacing":!0,"lighting-color":!0,"line-box-contain":!1,"line-break":!1,"line-grid":!1,"line-height":!1,"line-snap":!1,"line-stacking":!1,"line-stacking-ruby":!1,"line-stacking-shift":!1,"line-stacking-strategy":!1,"list-style":!0,"list-style-image":!0,"list-style-position":!0,"list-style-type":!0,margin:!0,"margin-bottom":!0,"margin-left":!0,"margin-right":!0,"margin-top":!0,"marker-offset":!1,"marker-side":!1,marks:!1,mask:!1,"mask-box":!1,"mask-box-outset":!1,"mask-box-repeat":!1,"mask-box-slice":!1,"mask-box-source":!1,"mask-box-width":!1,"mask-clip":!1,"mask-image":!1,"mask-origin":!1,"mask-position":!1,"mask-repeat":!1,"mask-size":!1,"mask-source-type":!1,"mask-type":!1,"max-height":!0,"max-lines":!1,"max-width":!0,"min-height":!0,"min-width":!0,"move-to":!1,"nav-down":!1,"nav-index":!1,"nav-left":!1,"nav-right":!1,"nav-up":!1,"object-fit":!1,"object-position":!1,opacity:!1,order:!1,orphans:!1,outline:!1,"outline-color":!1,"outline-offset":!1,"outline-style":!1,"outline-width":!1,overflow:!1,"overflow-wrap":!1,"overflow-x":!1,"overflow-y":!1,padding:!0,"padding-bottom":!0,"padding-left":!0,"padding-right":!0,"padding-top":!0,page:!1,"page-break-after":!1,"page-break-before":!1,"page-break-inside":!1,"page-policy":!1,pause:!1,"pause-after":!1,"pause-before":!1,perspective:!1,"perspective-origin":!1,pitch:!1,"pitch-range":!1,"play-during":!1,position:!1,"presentation-level":!1,quotes:!1,"region-fragment":!1,resize:!1,rest:!1,"rest-after":!1,"rest-before":!1,richness:!1,right:!1,rotation:!1,"rotation-point":!1,"ruby-align":!1,"ruby-merge":!1,"ruby-position":!1,"shape-image-threshold":!1,"shape-outside":!1,"shape-margin":!1,size:!1,speak:!1,"speak-as":!1,"speak-header":!1,"speak-numeral":!1,"speak-punctuation":!1,"speech-rate":!1,stress:!1,"string-set":!1,"tab-size":!1,"table-layout":!1,"text-align":!0,"text-align-last":!0,"text-combine-upright":!0,"text-decoration":!0,"text-decoration-color":!0,"text-decoration-line":!0,"text-decoration-skip":!0,"text-decoration-style":!0,"text-emphasis":!0,"text-emphasis-color":!0,"text-emphasis-position":!0,"text-emphasis-style":!0,"text-height":!0,"text-indent":!0,"text-justify":!0,"text-orientation":!0,"text-overflow":!0,"text-shadow":!0,"text-space-collapse":!0,"text-transform":!0,"text-underline-position":!0,"text-wrap":!0,top:!1,transform:!1,"transform-origin":!1,"transform-style":!1,transition:!1,"transition-delay":!1,"transition-duration":!1,"transition-property":!1,"transition-timing-function":!1,"unicode-bidi":!1,"vertical-align":!1,visibility:!1,"voice-balance":!1,"voice-duration":!1,"voice-family":!1,"voice-pitch":!1,"voice-range":!1,"voice-rate":!1,"voice-stress":!1,"voice-volume":!1,volume:!1,"white-space":!1,widows:!1,width:!0,"will-change":!1,"word-break":!0,"word-spacing":!0,"word-wrap":!0,"wrap-flow":!1,"wrap-through":!1,"writing-mode":!1,"z-index":!1};return t}var r=/javascript\s*\:/gim;e.whiteList=n(),e.getDefaultWhiteList=n,e.onAttr=function(t,e,n){},e.onIgnoreAttr=function(t,e,n){},e.safeAttrValue=function(t,e){return r.test(e)?"":e}},function(t,e){t.exports={indexOf:function(t,e){var n,r;if(Array.prototype.indexOf)return t.indexOf(e);for(n=0,r=t.length;n<r;n++)if(t[n]===e)return n;return-1},forEach:function(t,e,n){var r,o;if(Array.prototype.forEach)return t.forEach(e,n);for(r=0,o=t.length;r<o;r++)e.call(n,t[r],r,t)},trim:function(t){return String.prototype.trim?t.trim():t.replace(/(^\s*)|(\s*$)/g,"")},trimRight:function(t){return String.prototype.trimRight?t.trimRight():t.replace(/(\s*$)/g,"")}}},function(t,e,n){"use strict";var r=n(40),o="function"==typeof Symbol&&"symbol"==typeof Symbol("foo"),i=Object.prototype.toString,a=Array.prototype.concat,s=Object.defineProperty,c=s&&function(){var t={};try{for(var e in s(t,"x",{enumerable:!1,value:t}),t)return!1;return t.x===t}catch(t){return!1}}(),l=function(t,e,n,r){(!(e in t)||function(t){return"function"==typeof t&&"[object Function]"===i.call(t)}(r)&&r())&&(c?s(t,e,{configurable:!0,enumerable:!1,value:n,writable:!0}):t[e]=n)},u=function(t,e){var n=arguments.length>2?arguments[2]:{},i=r(e);o&&(i=a.call(i,Object.getOwnPropertySymbols(e)));for(var s=0;s<i.length;s+=1)l(t,i[s],e[i[s]],n[i[s]])};u.supportsDescriptors=!!c,t.exports=u},function(t,e,n){"use strict";var r=Object.prototype.toString;t.exports=function(t){var e=r.call(t),n="[object Arguments]"===e;return n||(n="[object Array]"!==e&&null!==t&&"object"==typeof t&&"number"==typeof t.length&&t.length>=0&&"[object Function]"===r.call(t.callee)),n}},function(t,e,n){"use strict";var r=n(45),o=n(44),i=n(46)("String.prototype.replace"),a=/^[\x09\x0A\x0B\x0C\x0D\x20\xA0\u1680\u180E\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200A\u202F\u205F\u3000\u2028\u2029\uFEFF]+/,s=/[\x09\x0A\x0B\x0C\x0D\x20\xA0\u1680\u180E\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200A\u202F\u205F\u3000\u2028\u2029\uFEFF]+$/;t.exports=function(){var t=o(r(this));return i(i(t,a,""),s,"")}},function(t,e,n){"use strict";var r=n(4),o=n(1)("%Function%"),i=o.apply,a=o.call;t.exports=function(){return r.apply(a,arguments)},t.exports.apply=function(){return r.apply(i,arguments)}},function(t,e,n){"use strict";var r=n(11);t.exports=function(){return String.prototype.trim&&"​"==="​".trim()?String.prototype.trim:r}},function(t,e){var n;n=function(){return this}();try{n=n||Function("return this")()||(0,eval)("this")}catch(t){"object"==typeof window&&(n=window)}t.exports=n},function(t,e,n){function r(){return{a:["target","href","title"],abbr:["title"],address:[],area:["shape","coords","href","alt"],article:[],aside:[],audio:["autoplay","controls","loop","preload","src"],b:[],bdi:["dir"],bdo:["dir"],big:[],blockquote:["cite"],br:[],caption:[],center:[],cite:[],code:[],col:["align","valign","span","width"],colgroup:["align","valign","span","width"],dd:[],del:["datetime"],details:["open"],div:[],dl:[],dt:[],em:[],font:["color","size","face"],footer:[],h1:[],h2:[],h3:[],h4:[],h5:[],h6:[],header:[],hr:[],i:[],img:["src","alt","title","width","height"],ins:["datetime"],li:[],mark:[],nav:[],ol:[],p:[],pre:[],s:[],section:[],small:[],span:[],sub:[],sup:[],strong:[],table:["width","border","align","valign"],tbody:["align","valign"],td:["width","rowspan","colspan","align","valign"],tfoot:["align","valign"],th:["width","rowspan","colspan","align","valign"],thead:["align","valign"],tr:["rowspan","align","valign"],tt:[],u:[],ul:[],video:["autoplay","controls","loop","preload","src","height","width"]}}function o(t){return t.replace(b,"&lt;").replace(m,"&gt;")}function i(t){return t.replace(g,"&quot;")}function a(t){return t.replace(y,'"')}function s(t){return t.replace(_,(function(t,e){return"x"===e[0]||"X"===e[0]?String.fromCharCode(parseInt(e.substr(1),16)):String.fromCharCode(parseInt(e,10))}))}function c(t){return t.replace(x,":").replace(w," ")}function l(t){for(var e="",n=0,r=t.length;n<r;n++)e+=t.charCodeAt(n)<32?" ":t.charAt(n);return f.trim(e)}function u(t){return l(t=c(t=s(t=a(t))))}function p(t){return o(t=i(t))}var d=n(3).FilterCSS,h=n(3).getDefaultWhiteList,f=n(5),v=new d,b=/</g,m=/>/g,g=/"/g,y=/&quot;/g,_=/&#([a-zA-Z0-9]*);?/gim,x=/&colon;?/gim,w=/&newline;?/gim,S=/((j\s*a\s*v\s*a|v\s*b|l\s*i\s*v\s*e)\s*s\s*c\s*r\s*i\s*p\s*t\s*|m\s*o\s*c\s*h\s*a)\:/gi,O=/e\s*x\s*p\s*r\s*e\s*s\s*s\s*i\s*o\s*n\s*\(.*/gi,$=/u\s*r\s*l\s*\(.*/gi,T=/<!--[\s\S]*?-->/g;e.whiteList={a:["target","href","title"],abbr:["title"],address:[],area:["shape","coords","href","alt"],article:[],aside:[],audio:["autoplay","controls","loop","preload","src"],b:[],bdi:["dir"],bdo:["dir"],big:[],blockquote:["cite"],br:[],caption:[],center:[],cite:[],code:[],col:["align","valign","span","width"],colgroup:["align","valign","span","width"],dd:[],del:["datetime"],details:["open"],div:[],dl:[],dt:[],em:[],font:["color","size","face"],footer:[],h1:[],h2:[],h3:[],h4:[],h5:[],h6:[],header:[],hr:[],i:[],img:["src","alt","title","width","height"],ins:["datetime"],li:[],mark:[],nav:[],ol:[],p:[],pre:[],s:[],section:[],small:[],span:[],sub:[],sup:[],strong:[],table:["width","border","align","valign"],tbody:["align","valign"],td:["width","rowspan","colspan","align","valign"],tfoot:["align","valign"],th:["width","rowspan","colspan","align","valign"],thead:["align","valign"],tr:["rowspan","align","valign"],tt:[],u:[],ul:[],video:["autoplay","controls","loop","preload","src","height","width"]},e.getDefaultWhiteList=r,e.onTag=function(t,e,n){},e.onIgnoreTag=function(t,e,n){},e.onTagAttr=function(t,e,n){},e.onIgnoreTagAttr=function(t,e,n){},e.safeAttrValue=function(t,e,n,r){if(n=u(n),"href"===e||"src"===e){if("#"===(n=f.trim(n)))return"#";if("http://"!==n.substr(0,7)&&"https://"!==n.substr(0,8)&&"mailto:"!==n.substr(0,7)&&"tel:"!==n.substr(0,4)&&"#"!==n[0]&&"/"!==n[0])return""}else if("background"===e){if(S.lastIndex=0,S.test(n))return""}else if("style"===e){if(O.lastIndex=0,O.test(n))return"";if($.lastIndex=0,$.test(n)&&(S.lastIndex=0,S.test(n)))return"";!1!==r&&(n=(r=r||v).process(n))}return p(n)},e.escapeHtml=o,e.escapeQuote=i,e.unescapeQuote=a,e.escapeHtmlEntities=s,e.escapeDangerHtml5Entities=c,e.clearNonPrintableCharacter=l,e.friendlyAttrValue=u,e.escapeAttrValue=p,e.onIgnoreTagStripAll=function(){return""},e.StripTagBody=function(t,e){function n(e){return!!r||-1!==f.indexOf(t,e)}"function"!=typeof e&&(e=function(){});var r=!Array.isArray(t),o=[],i=!1;return{onIgnoreTag:function(t,r,a){if(n(t)){if(a.isClosing){var s="[/removed]",c=a.position+s.length;return o.push([!1!==i?i:a.position,c]),i=!1,s}return i||(i=a.position),"[removed]"}return e(t,r,a)},remove:function(t){var e="",n=0;return f.forEach(o,(function(r){e+=t.slice(n,r[0]),n=r[1]})),e+=t.slice(n)}}},e.stripCommentTag=function(t){return t.replace(T,"")},e.stripBlankChar=function(t){var e=t.split("");return(e=e.filter((function(t){var e=t.charCodeAt(0);return!(127===e||e<=31&&10!==e&&13!==e)}))).join("")},e.cssFilter=v,e.getDefaultCSSWhiteList=h},function(t,e,n){function r(t){var e=c.spaceIndex(t);if(-1===e)var n=t.slice(1,-1);else n=t.slice(1,e+1);return"/"===(n=c.trim(n).toLowerCase()).slice(0,1)&&(n=n.slice(1)),"/"===n.slice(-1)&&(n=n.slice(0,-1)),n}function o(t){return"</"===t.slice(0,2)}function i(t,e){for(;e<t.length;e++){var n=t[e];if(" "!==n)return"="===n?e:-1}}function a(t,e){for(;e>0;e--){var n=t[e];if(" "!==n)return"="===n?e:-1}}function s(t){return function(t){return'"'===t[0]&&'"'===t[t.length-1]||"'"===t[0]&&"'"===t[t.length-1]}(t)?t.substr(1,t.length-2):t}var c=n(5),l=/[^a-zA-Z0-9_:\.\-]/gim;e.parseTag=function(t,e,n){var i="",a=0,s=!1,c=!1,l=0,u=t.length,p="",d="";for(l=0;l<u;l++){var h=t.charAt(l);if(!1===s){if("<"===h){s=l;continue}}else if(!1===c){if("<"===h){i+=n(t.slice(a,l)),s=l,a=l;continue}if(">"===h){i+=n(t.slice(a,s)),p=r(d=t.slice(s,l+1)),i+=e(s,i.length,p,d,o(d)),a=l+1,s=!1;continue}if(('"'===h||"'"===h)&&"="===t.charAt(l-1)){c=h;continue}}else if(h===c){c=!1;continue}}return a<t.length&&(i+=n(t.substr(a))),i},e.parseAttr=function(t,e){function n(t,n){if(!((t=(t=c.trim(t)).replace(l,"").toLowerCase()).length<1)){var r=e(t,n||"");r&&o.push(r)}}for(var r=0,o=[],u=!1,p=t.length,d=0;d<p;d++){var h,f=t.charAt(d);if(!1!==u||"="!==f)if(!1===u||d!==r||'"'!==f&&"'"!==f||"="!==t.charAt(d-1)){if(/\s|\n|\t/.test(f)){if(t=t.replace(/\s|\n|\t/g," "),!1===u){if(-1===(h=i(t,d))){n(c.trim(t.slice(r,d))),u=!1,r=d+1;continue}d=h-1;continue}if(-1===(h=a(t,d-1))){n(u,s(c.trim(t.slice(r,d)))),u=!1,r=d+1;continue}}}else{if(-1===(h=t.indexOf(f,d+1)))break;n(u,c.trim(t.slice(r+1,h))),u=!1,r=(d=h)+1}else u=t.slice(r,d),r=d+1}return r<t.length&&(!1===u?n(t.slice(r)):n(u,s(c.trim(t.slice(r))))),c.trim(o.join(" "))}},function(t,e,n){var r,o,i;
/*!
	autosize 4.0.2
	license: MIT
	http://www.jacklmoore.com/autosize
*/o=[t,e],r=function(t,e){"use strict";function n(t){function e(e){var n=t.style.width;t.style.width="0px",t.offsetWidth,t.style.width=n,t.style.overflowY=e}function n(){if(0!==t.scrollHeight){var e=function(t){for(var e=[];t&&t.parentNode&&t.parentNode instanceof Element;)t.parentNode.scrollTop&&e.push({node:t.parentNode,scrollTop:t.parentNode.scrollTop}),t=t.parentNode;return e}(t),n=document.documentElement&&document.documentElement.scrollTop;t.style.height="",t.style.height=t.scrollHeight+o+"px",s=t.clientWidth,e.forEach((function(t){t.node.scrollTop=t.scrollTop})),n&&(document.documentElement.scrollTop=n)}}function r(){n();var r=Math.round(parseFloat(t.style.height)),o=window.getComputedStyle(t,null),i="content-box"===o.boxSizing?Math.round(parseFloat(o.height)):t.offsetHeight;if(i<r?"hidden"===o.overflowY&&(e("scroll"),n(),i="content-box"===o.boxSizing?Math.round(parseFloat(window.getComputedStyle(t,null).height)):t.offsetHeight):"hidden"!==o.overflowY&&(e("hidden"),n(),i="content-box"===o.boxSizing?Math.round(parseFloat(window.getComputedStyle(t,null).height)):t.offsetHeight),c!==i){c=i;var s=a("autosize:resized");try{t.dispatchEvent(s)}catch(t){}}}if(t&&t.nodeName&&"TEXTAREA"===t.nodeName&&!i.has(t)){var o=null,s=null,c=null,l=function(){t.clientWidth!==s&&r()},u=function(e){window.removeEventListener("resize",l,!1),t.removeEventListener("input",r,!1),t.removeEventListener("keyup",r,!1),t.removeEventListener("autosize:destroy",u,!1),t.removeEventListener("autosize:update",r,!1),Object.keys(e).forEach((function(n){t.style[n]=e[n]})),i.delete(t)}.bind(t,{height:t.style.height,resize:t.style.resize,overflowY:t.style.overflowY,overflowX:t.style.overflowX,wordWrap:t.style.wordWrap});t.addEventListener("autosize:destroy",u,!1),"onpropertychange"in t&&"oninput"in t&&t.addEventListener("keyup",r,!1),window.addEventListener("resize",l,!1),t.addEventListener("input",r,!1),t.addEventListener("autosize:update",r,!1),t.style.overflowX="hidden",t.style.wordWrap="break-word",i.set(t,{destroy:u,update:r}),function(){var e=window.getComputedStyle(t,null);"vertical"===e.resize?t.style.resize="none":"both"===e.resize&&(t.style.resize="horizontal"),o="content-box"===e.boxSizing?-(parseFloat(e.paddingTop)+parseFloat(e.paddingBottom)):parseFloat(e.borderTopWidth)+parseFloat(e.borderBottomWidth),isNaN(o)&&(o=0),r()}()}}function r(t){var e=i.get(t);e&&e.destroy()}function o(t){var e=i.get(t);e&&e.update()}var i="function"==typeof Map?new Map:function(){var t=[],e=[];return{has:function(e){return t.indexOf(e)>-1},get:function(n){return e[t.indexOf(n)]},set:function(n,r){-1===t.indexOf(n)&&(t.push(n),e.push(r))},delete:function(n){var r=t.indexOf(n);r>-1&&(t.splice(r,1),e.splice(r,1))}}}(),a=function(t){return new Event(t,{bubbles:!0})};try{new Event("test")}catch(t){a=function(t){var e=document.createEvent("Event");return e.initEvent(t,!0,!1),e}}var s=null;"undefined"==typeof window||"function"!=typeof window.getComputedStyle?((s=function(t){return t}).destroy=function(t){return t},s.update=function(t){return t}):((s=function(t,e){return t&&Array.prototype.forEach.call(t.length?t:[t],(function(t){return n(t)})),t}).destroy=function(t){return t&&Array.prototype.forEach.call(t.length?t:[t],r),t},s.update=function(t){return t&&Array.prototype.forEach.call(t.length?t:[t],o),t}),e.default=s,t.exports=e.default},void 0!==(i="function"==typeof r?r.apply(e,o):r)&&(t.exports=i)},function(t,e,n){"use strict";function r(t){return t&&t.__esModule?t:{default:t}}function o(t){return!!t&&this.init(t),this}function i(t){return new o(t)}var a=r(n(26)),s=r(n(17)),c=r(n(20)),l=r(n(6)),u=n(2),p=r(n(24)),d=r(n(0)),h=r(n(22)),f=r(n(19)),v=n(23),b=r(n(25)),m=r(n(21)),g={comment:"",nick:"",mail:"",link:"",ua:d.default.ua,url:"",QQAvatar:""},y="",_={cdn:"https://gravatar.loli.net/avatar/",ds:["mp","identicon","monsterid","wavatar","robohash","retro",""],params:"",hide:!1};o.prototype.init=function(t){if("undefined"==typeof document)throw new Error("Sorry, Valine does not support Server-side rendering.");var e=this;return t&&(t=d.default.extend(u.defaultConfig,t),e.i18n=(0,c.default)(t.lang||d.default.lang,t.langMode),e.config=t,l.default.maps=!!t.emojiMaps&&t.emojiMaps||l.default.maps,l.default.cdn=!!t.emojiCDN&&t.emojiCDN||l.default.cdn,e._init()),e},o.prototype._init=function(){var t=this;try{var e=t.config,n=e.avatar,r=e.avatarForce,o=e.avatar_cdn,i=e.visitor,a=e.path,s=void 0===a?location.pathname:a,c=e.pageSize,l=e.recordIP;t.config.path=s.replace(/index\.html?$/,"");var p=_.ds,h=r?"&q="+u.RandomStr:"";_.params="?d="+(p.indexOf(n)>-1?n:"mp")+"&v="+u.VERSION+h,_.hide="hide"===n,_.cdn=/^https?\:\/\//.test(o)?o:_.cdn,t.config.pageSize=isNaN(c)||c<1?10:c,l&&(0,v.recordIPFn)((function(t){return g.ip=t}));var b=t.config.el||null,y=(0,d.default)(b);if(b=b instanceof HTMLElement?b:y[y.length-1]||null){t.$el=(0,d.default)(b),t.$el.addClass("v").attr("data-class","v"),_.hide&&t.$el.addClass("hide-avatar"),t.config.meta=(t.config.guest_info||t.config.meta||u.defaultMeta).filter((function(t){return u.defaultMeta.indexOf(t)>-1})),t.config.requiredFields=t.config.requiredFields.filter((function(t){return u.defaultMeta.indexOf(t)>-1}));var x=(0==t.config.meta.length?u.defaultMeta:t.config.meta).map((function(e){var n="mail"==e?"email":"text";return u.defaultMeta.indexOf(e)>-1?'<input name="'+e+'" placeholder="'+t.i18n.t(e)+'" class="v'+e+' vinput" type="'+n+'">':""})),S='<div class="vpanel"><div class="vwrap"><p class="cancel-reply text-right" style="display:none;" title="'+t.i18n.t("cancelReply")+'"><svg class="vicon cancel-reply-btn" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="4220" width="22" height="22"><path d="M796.454 985H227.545c-50.183 0-97.481-19.662-133.183-55.363-35.7-35.701-55.362-83-55.362-133.183V227.545c0-50.183 19.662-97.481 55.363-133.183 35.701-35.7 83-55.362 133.182-55.362h568.909c50.183 0 97.481 19.662 133.183 55.363 35.701 35.702 55.363 83 55.363 133.183v568.909c0 50.183-19.662 97.481-55.363 133.183S846.637 985 796.454 985zM227.545 91C152.254 91 91 152.254 91 227.545v568.909C91 871.746 152.254 933 227.545 933h568.909C871.746 933 933 871.746 933 796.454V227.545C933 152.254 871.746 91 796.454 91H227.545z" p-id="4221"></path><path d="M568.569 512l170.267-170.267c15.556-15.556 15.556-41.012 0-56.569s-41.012-15.556-56.569 0L512 455.431 341.733 285.165c-15.556-15.556-41.012-15.556-56.569 0s-15.556 41.012 0 56.569L455.431 512 285.165 682.267c-15.556 15.556-15.556 41.012 0 56.569 15.556 15.556 41.012 15.556 56.569 0L512 568.569l170.267 170.267c15.556 15.556 41.012 15.556 56.569 0 15.556-15.556 15.556-41.012 0-56.569L568.569 512z" p-id="4222" ></path></svg></p><div class="vheader item'+x.length+'">'+x.join("")+'</div><div class="vedit"><textarea id="veditor" class="veditor vinput" placeholder="'+t.config.placeholder+'"></textarea><div class="vrow"><div class="vcol vcol-60 status-bar"></div><div class="vcol vcol-40 vctrl text-right"><span title="'+t.i18n.t("emoji")+'"  class="vicon vemoji-btn"><svg  viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="16172" width="22" height="22" ><path d="M512 1024a512 512 0 1 1 512-512 512 512 0 0 1-512 512zM512 56.888889a455.111111 455.111111 0 1 0 455.111111 455.111111 455.111111 455.111111 0 0 0-455.111111-455.111111zM312.888889 512A85.333333 85.333333 0 1 1 398.222222 426.666667 85.333333 85.333333 0 0 1 312.888889 512z" p-id="16173"></path><path d="M512 768A142.222222 142.222222 0 0 1 369.777778 625.777778a28.444444 28.444444 0 0 1 56.888889 0 85.333333 85.333333 0 0 0 170.666666 0 28.444444 28.444444 0 0 1 56.888889 0A142.222222 142.222222 0 0 1 512 768z" p-id="16174"></path><path d="M782.222222 391.964444l-113.777778 59.733334a29.013333 29.013333 0 0 1-38.684444-10.808889 28.444444 28.444444 0 0 1 10.24-38.684445l113.777778-56.888888a28.444444 28.444444 0 0 1 38.684444 10.24 28.444444 28.444444 0 0 1-10.24 36.408888z" p-id="16175"></path><path d="M640.568889 451.697778l113.777778 56.888889a27.875556 27.875556 0 0 0 38.684444-10.24 27.875556 27.875556 0 0 0-10.24-38.684445l-113.777778-56.888889a28.444444 28.444444 0 0 0-38.684444 10.808889 28.444444 28.444444 0 0 0 10.24 38.115556z" p-id="16176"></path></svg></span><span title="'+t.i18n.t("preview")+'" class="vicon vpreview-btn"><svg  viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="17688" width="22" height="22"><path d="M502.390154 935.384615a29.538462 29.538462 0 1 1 0 59.076923H141.430154C79.911385 994.461538 29.538462 946.254769 29.538462 886.153846V137.846154C29.538462 77.745231 79.950769 29.538462 141.390769 29.538462h741.218462c61.44 0 111.852308 48.206769 111.852307 108.307692v300.268308a29.538462 29.538462 0 1 1-59.076923 0V137.846154c0-26.899692-23.355077-49.230769-52.775384-49.230769H141.390769c-29.420308 0-52.775385 22.331077-52.775384 49.230769v748.307692c0 26.899692 23.355077 49.230769 52.775384 49.230769h360.999385z" p-id="17689"></path><path d="M196.923077 216.615385m29.538461 0l374.153847 0q29.538462 0 29.538461 29.538461l0 0q0 29.538462-29.538461 29.538462l-374.153847 0q-29.538462 0-29.538461-29.538462l0 0q0-29.538462 29.538461-29.538461Z" p-id="17690"></path><path d="M649.846154 846.769231a216.615385 216.615385 0 1 0 0-433.230769 216.615385 216.615385 0 0 0 0 433.230769z m0 59.076923a275.692308 275.692308 0 1 1 0-551.384616 275.692308 275.692308 0 0 1 0 551.384616z" p-id="17691"></path><path d="M807.398383 829.479768m20.886847-20.886846l0 0q20.886846-20.886846 41.773692 0l125.321079 125.321079q20.886846 20.886846 0 41.773693l0 0q-20.886846 20.886846-41.773693 0l-125.321078-125.321079q-20.886846-20.886846 0-41.773693Z" p-id="17692"></path></svg></span></div></div></div><div class="vrow"><div class="vcol vcol-30" ><a alt="Markdown is supported" href="https://guides.github.com/features/mastering-markdown/" class="vicon" target="_blank"><svg class="markdown" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M14.85 3H1.15C.52 3 0 3.52 0 4.15v7.69C0 12.48.52 13 1.15 13h13.69c.64 0 1.15-.52 1.15-1.15v-7.7C16 3.52 15.48 3 14.85 3zM9 11H7V8L5.5 9.92 4 8v3H2V5h2l1.5 2L7 5h2v6zm2.99.5L9.5 8H11V5h2v3h1.5l-2.51 3.5z"></path></svg></a></div><div class="vcol vcol-70 text-right"><button type="button"  title="Cmd|Ctrl+Enter" class="vsubmit vbtn">'+t.i18n.t("submit")+'</button></div></div><div class="vemojis" style="display:none;"></div><div class="vinput vpreview" style="display:none;"></div><div style="display:none;" class="vmark"></div></div></div><div class="vcount" style="display:none;"><span class="vnum">0</span> '+t.i18n.t("comments")+'</div><div class="vload-top text-center" style="display:none;"><i class="vspinner" style="width:30px;height:30px;"></i></div><div class="vcards"></div><div class="vload-bottom text-center" style="display:none;"><i class="vspinner" style="width:30px;height:30px;"></i></div><div class="vempty" style="display:none;"></div><div class="vpage txt-center" style="display:none"><button type="button" class="vmore vbtn">'+t.i18n.t("more")+'</button></div><div class="vpower txt-right">Powered By <a href="https://valine.js.org" target="_blank">Valine</a><br>v'+u.VERSION+"</div>";t.$el.html(S),t.$el.find(".cancel-reply").on("click",(function(e){t.reset()}));var O=t.$el.find(".vempty");t.$nodata={show:function(e){return O.html(e||t.i18n.t("sofa")).show(),t},hide:function(){return O.hide(),t}};var $=t.$el.find(".vload-bottom"),T=t.$el.find(".vload-top");t.$loading={show:function(e){return e&&T.show()||$.show(),t.$nodata.hide(),t},hide:function(){return T.hide(),$.hide(),0===t.$el.find(".vcard").length&&t.$nodata.show(),t}}}(0,f.default)(t.config,(function(e){var n=(0,d.default)(".valine-comment-count"),r=0;!function e(n){var o=n[r++];if(o){var i=(0,d.default)(o).attr("data-xid");i&&t.Q(i).count().then((function(t){o.innerText=t,e(n)})).catch((function(t){o.innerText=0}))}}(n),i&&w.add(AV.Object.extend("Counter"),t.config.path),t.$el&&t.bind()}))}catch(e){(0,m.default)(t,e,"init")}};var x=function(t,e){var n=new t,r=new AV.ACL;r.setPublicReadAccess(!0),r.setPublicWriteAccess(!0),n.setACL(r),n.set("url",e.url),n.set("xid",e.xid),n.set("title",e.title),n.set("time",1),n.save().then((function(t){(0,d.default)(e.el).find(".leancloud-visitors-count").text(1)})).catch((function(t){}))},w={add:function(t,e){var n=this,r=(0,d.default)(".leancloud_visitors,.leancloud-visitors");if(1===r.length){var o=r[0],i=decodeURI((0,d.default)(o).attr("id")),a=(0,d.default)(o).attr("data-flag-title"),s=encodeURI(i),c={el:o,url:i,xid:s,title:a};if(decodeURI(i)===decodeURI(e)){var l=new AV.Query(t);l.equalTo("url",i),l.find().then((function(e){if(e.length>0){var n=e[0];n.increment("time"),n.save().then((function(t){(0,d.default)(o).find(".leancloud-visitors-count").text(t.get("time"))})).catch((function(t){}))}else x(t,c)})).catch((function(e){101==e.code?x(t,c):(0,m.default)(n,e)}))}else w.show(t,r)}else w.show(t,r)},show:function(t,e){var n=[];if(e.forEach((function(t){var e=(0,d.default)(t).find(".leancloud-visitors-count");e&&e.text("0"),n.push(/\%/.test((0,d.default)(t).attr("id"))?decodeURI((0,d.default)(t).attr("id")):(0,d.default)(t).attr("id"))})),n.length){var r=new AV.Query(t);r.containedIn("url",n),r.find().then((function(t){t.length>0&&e.forEach((function(e){t.forEach((function(t){var n=t.get("xid")||encodeURI(t.get("url")),r=t.get("time"),o=(0,d.default)(e),i=o.attr("id");if((/\%/.test(i)?i:encodeURI(i))==n){var a=o.find(".leancloud-visitors-count");a&&a.text(r)}}))}))})).catch((function(t){}))}}};o.prototype.Q=function(t){var e=this,n=arguments.length,r=e.config.clazzName;if(1==n){var o=new AV.Query(r);o.doesNotExist("rid");var i=new AV.Query(r);i.equalTo("rid","");var a=AV.Query.or(o,i);return"*"===t?a.exists("url"):a.equalTo("url",decodeURI(t)),a.addDescending("createdAt"),a.addDescending("insertedAt"),a}var s=JSON.stringify(arguments[1]).replace(/(\[|\])/g,""),c="select * from "+r+" where rid in ("+s+") order by -createdAt,-createdAt";return AV.Query.doCloudQuery(c)},o.prototype.installLocale=function(t,e){return this.i18n(t,e),this},o.prototype.setPath=function(t){return this.config.path=t,this},o.prototype.bind=function(){var t=this,e=t.$el.find(".vemojis"),n=t.$el.find(".vpreview"),r=t.$el.find(".vemoji-btn"),o=t.$el.find(".vpreview-btn"),i=t.$el.find(".veditor"),c=l.default.maps,f=!1;t.$emoji={show:function(){return!f&&function(t){var n=[];for(var r in c)c.hasOwnProperty(r)&&l.default.build(r)&&n.push('<i title="'+r+'" >'+l.default.build(r)+"</i>");e.html(n.join("")),f=!0,e.find("i").on("click",(function(t){t.preventDefault(),T(i[0]," :"+(0,d.default)(this).attr("title")+":")}))}(),t.$preview.hide(),e.show(),r.addClass("actived"),t.$emoji},hide:function(){return r.removeClass("actived"),e.hide(),t.$emoji}},t.$preview={show:function(){return y?(t.$emoji.hide(),o.addClass("actived"),n.html(y).show(),P()):t.$preview.hide(),t.$preview},hide:function(){return o.removeClass("actived"),n.hide().html(""),t.$preview}};var x=function(e){var r=(0,h.default)(e.val()||"");r||t.$preview.hide(),y!=r&&(y=r,o.hasClass("actived")>-1&&y!=n.html()&&n.html(y),(0,s.default)(e[0]),P())};r.on("click",(function(e){r.hasClass("actived")?t.$emoji.hide():t.$emoji.show()})),o.on("click",(function(e){o.hasClass("actived")?t.$preview.hide():t.$preview.show()}));var w=t.config.meta,S={},O={veditor:"comment"};for(var $ in w.forEach((function(t){O["v"+t]=t})),O)O.hasOwnProperty($)&&function(){var e=O[$],n=t.$el.find("."+$);S[e]=n,n.on("input change blur propertychange",(function(r){t.config.enableQQ&&"blur"===r.type&&"nick"===e&&(isNaN(n.val())?d.default.store.get(u.QQCacheKey)&&d.default.store.get(u.QQCacheKey).nick!=n.val()&&(d.default.store.remove(u.QQCacheKey),g.nick=n.val(),g.mail="",g.QQAvatar=""):(0,v.fetchQQFn)(n.val(),(function(t){var e=t.nick||n.val(),r=t.qq+"@qq.com";(0,d.default)(".vnick").val(e),(0,d.default)(".vmail").val(r),g.nick=e,g.mail=r,g.QQAvatar=t.pic}))),"comment"===e?x(n):g[e]=d.default.escape(n.val().replace(/(^\s*)|(\s*$)/g,"")).substring(0,40)}))}();var T=function(t,e){if(document.selection)t.focus(),document.selection.createRange().text=e,t.focus();else if(t.selectionStart||"0"==t.selectionStart){var n=t.selectionStart,r=t.selectionEnd,o=t.scrollTop;t.value=t.value.substring(0,n)+e+t.value.substring(r,t.value.length),t.focus(),t.selectionStart=n+e.length,t.selectionEnd=n+e.length,t.scrollTop=o}else t.focus(),t.value+=e;setTimeout((function(e){x((0,d.default)(t))}),100)},E={no:1,size:t.config.pageSize,skip:t.config.pageSize},C=t.$el.find(".vpage");C.on("click",(function(t){C.hide(),E.no++,I()}));var I=function(){var e=E.size,n=E.no,r=Number(t.$el.find(".vnum").text());t.$loading.show();var o=t.Q(t.config.path);o.limit(e),o.skip((n-1)*e),o.find().then((function(o){if(E.skip=E.size,o&&o.length){var i=[];o.forEach((function(e){i.push(e.id),A(e,t.$el.find(".vcards"),!0)})),t.Q(t.config.path,i).then((function(t){(t&&t.results||[]).forEach((function(t){A(t,(0,d.default)('.vquote[data-self-id="'+t.get("rid")+'"]'))})).catch((function(t){}))})),e*n<r?C.show():C.hide()}else t.$nodata.show();t.$loading.hide()})).catch((function(e){t.$loading.hide(),(0,m.default)(t,e,"query")}))};t.Q(t.config.path).count().then((function(e){e>0?(t.$el.find(".vcount").show().find(".vnum").text(e),I()):t.$loading.hide()})).catch((function(e){(0,m.default)(t,e,"count")}));var A=function(e,n,r){var o=(0,d.default)('<div class="vcard" id="'+e.id+'"></div>'),i=e.get("ua"),s="";i&&!/ja/.test(t.config.lang)&&(s='<span class="vsys">'+(i=d.default.detect(i)).browser+" "+i.version+'</span> <span class="vsys">'+i.os+" "+i.osVersion+"</span>"),"*"===t.config.path&&(s='<a href="'+e.get("url")+'" class="vsys">'+e.get("url")+"</a>");var c=e.get("link")?/^https?\:\/\//.test(e.get("link"))?e.get("link"):"http://"+e.get("link"):"",l=c?'<a class="vnick" rel="nofollow" href="'+c+'" target="_blank" >'+e.get("nick")+"</a>":'<span class="vnick">'+e.get("nick")+"</span>",u=(_.hide?"":t.config.enableQQ&&e.get("QQAvatar")?'<img class="vimg" src="'+e.get("QQAvatar")+'" referrerPolicy="no-referrer"/>':'<img class="vimg" src="'+(_.cdn+(0,a.default)(e.get("mail"))+_.params)+'">')+'<div class="vh"><div class="vhead">'+l+" "+s+'</div><div class="vmeta"><span class="vtime" >'+(0,p.default)(e.get("insertedAt"),t.i18n)+'</span><span class="vat" data-vm-id="'+(e.get("rid")||e.id)+'" data-self-id="'+e.id+'">'+t.i18n.t("reply")+'</span></div><div class="vcontent" data-expand="'+t.i18n.t("expand")+'">'+(0,b.default)(e.get("comment"))+'</div><div class="vreply-wrapper" data-self-id="'+e.id+'"></div><div class="vquote" data-self-id="'+e.id+'"></div></div>';o.html(u);var h=o.find(".vat");o.find("a").forEach((function(t){t&&!(0,d.default)(t).hasClass("at")&&(0,d.default)(t).attr({target:"_blank",rel:"nofollow"})})),r?n.append(o):n.prepend(o);var f=o.find(".vcontent");f&&M(f),h&&L(h,e),P()},k={},L=function(e,n){e.on("click",(function(r){var o=e.attr("data-vm-id"),i=e.attr("data-self-id"),a=t.$el.find(".vwrap"),s="@"+d.default.escape(n.get("nick"));(0,d.default)('.vreply-wrapper[data-self-id="'+i+'"]').append(a).find(".cancel-reply").show(),k={at:d.default.escape(s)+" ",rid:o,pid:i,rmail:n.get("mail")},S.comment.attr({placeholder:s})[0].focus()}))},P=function(){setTimeout((function(){try{"MathJax"in window&&"version"in window.MathJax&&(/^3.*/.test(window.MathJax.version)&&MathJax.typeset()||MathJax.Hub.Queue(["Typeset",MathJax.Hub,document.querySelector(".v")])),"renderMathInElement"in window&&renderMathInElement((0,d.default)(".v")[0],{delimiters:[{left:"$$",right:"$$",display:!0},{left:"$",right:"$",display:!1}]})}catch(t){}}),100)},M=function(t){setTimeout((function(){t[0].offsetHeight>200&&(t.addClass("expand"),t.on("click",(function(e){t.removeClass("expand")})))}))};!function(e){if(e=d.default.store.get(u.MetaCacheKey)||e)for(var n in w){var r=w[n];t.$el.find(".v"+r).val(d.default.unescape(e[r])),g[r]=e[r]}var o=d.default.store.get(u.QQCacheKey);g.QQAvatar=t.config.enableQQ&&!!o&&o.pic||""}(),t.reset=function(){g.comment="",S.comment.val(""),x(S.comment),S.comment.attr("placeholder",t.config.placeholder),k={},t.$preview.hide(),t.$el.find(".vpanel").append(t.$el.find(".vwrap")),t.$el.find(".cancel-reply").hide(),y=""};var N=t.$el.find(".vsubmit"),D=function(e){if(t.config.requiredFields.indexOf("nick")>-1&&g.nick.length<3)return S.nick[0].focus(),void t.$el.find(".status-bar").text(""+t.i18n.t("nickFail")).empty(3e3);if(t.config.requiredFields.indexOf("mail")>-1&&!/[\w-\.]+@([\w-]+\.)+[a-z]{2,3}/.test(g.mail))return S.mail[0].focus(),void t.$el.find(".status-bar").text(""+t.i18n.t("mailFail")).empty(3e3);if(""!=y){g.comment=y,g.nick=g.nick||"Anonymous";var n=d.default.store.get("vlx");n&&Date.now()/1e3-n/1e3<20?t.$el.find(".status-bar").text(t.i18n.t("busy")).empty(3e3):j()}else S.comment[0].focus()},j=function(){d.default.store.set("vlx",Date.now()),N.attr({disabled:!0}),t.$loading.show(!0);var e=new(AV.Object.extend(t.config.clazzName||"Comment"));if(g.url=decodeURI(t.config.path),g.insertedAt=new Date,k.rid){var n=k.pid||k.rid;e.set("rid",k.rid),e.set("pid",n),g.comment=y.replace("<p>",'<p><a class="at" href="#'+n+'">'+k.at+"</a> , ")}for(var r in g)if(g.hasOwnProperty(r)){var o=g[r];e.set(r,o)}e.setACL(function(){var t=new AV.ACL;return t.setPublicReadAccess(!0),t.setPublicWriteAccess(!1),t}()),e.save().then((function(e){"Anonymous"!=g.nick&&d.default.store.set(u.MetaCacheKey,{nick:g.nick,link:g.link,mail:g.mail});var n=t.$el.find(".vnum");try{k.rid?A(e,(0,d.default)('.vquote[data-self-id="'+k.rid+'"]'),!0):(Number(n.text())?n.text(Number(n.text())+1):t.$el.find(".vcount").show().find(".vnum").text(Number(n.text())+1),A(e,t.$el.find(".vcards")),E.skip++),N.removeAttr("disabled"),t.$loading.hide(),t.reset()}catch(e){(0,m.default)(t,e,"save")}})).catch((function(e){(0,m.default)(t,e,"commitEvt")}))};N.on("click",D),(0,d.default)(document).on("keydown",(function(t){var e=(t=event||t).keyCode||t.which||t.charCode;(t.ctrlKey||t.metaKey)&&13===e&&D(),9===e&&"veditor"==(document.activeElement.id||"")&&(t.preventDefault(),T(i[0],"    "))})).on("paste",(function(t){var e="clipboardData"in t?t.clipboardData:t.originalEvent&&t.originalEvent.clipboardData||window.clipboardData;e&&R(e.items,!0)})),i.on("dragenter dragleave dragover drop",(function(t){t.stopPropagation(),t.preventDefault(),"drop"===t.type&&R(t.dataTransfer.items)}));var R=function(t,e){for(var n=[],r=0,o=t.length;r<o;r++){var a=t[r];if("string"===a.kind&&a.type.match("^text/html"))!e&&a.getAsString((function(t){t&&T(i[0],t.replace(/<[^>]+>/g,""))}));else if(-1!==a.type.indexOf("image")){n.push(a.getAsFile());continue}}F(n)},F=function e(n,r){r=r||0;var o=n.length;if(o>0){var a=n[r];N.attr({disabled:!0});var c="![Uploading "+a.name+"...]()";T(i[0],c),U(a,(function(l){500!=l.code?(i.val(i.val().replace(c,"!["+a.name+"]("+l.data.url+")\r\n")),(0,s.default)(i[0]),++r<o?e(n,r):N.removeAttr("disabled")):(i.val(i.val().replace(c,"")),(0,s.default)(i[0]),t.$el.find(".status-bar").text(l.msg).empty(3e3),N.removeAttr("disabled"))}))}},U=function(t,e){var n=new FormData;n.append("image",t),d.default.ajax({type:"post",url:"https://pic.alexhchu.com/api/upload",data:n,success:function(t){e&&e(t)}})}},t.exports=i,t.exports.default=i},function(t,e,n){"use strict";e.__esModule=!0;var r=function(t){return t&&t.__esModule?t:{default:t}}(n(0)),o=!1;e.default=function(t,e){if("AV"in window){var n=window.AV.version||window.AV.VERSION;parseInt(n.split(".")[0])>2?o=!!AV.applicationId&&!!AV.applicationKey:r.default.deleteInWin("AV",0)}o?e&&e():r.default.sdkLoader("//cdn.jsdelivr.net/npm/leancloud-storage@3/dist/av-min.js","AV",(function(n){var r,i="https://",a=t.app_id||t.appId,s=t.app_key||t.appKey;if(!t.serverURLs)switch(a.slice(-9)){case"-9Nh9j0Va":i+="tab.";break;case"-MdYXbMMI":i+="us."}r=t.serverURLs||i+"avoscloud.com",AV.init({appId:a,appKey:s,serverURLs:r}),o=!0,e&&e()}))}},function(t,e,n){"use strict";function r(t){return t&&t.__esModule?t:{default:t}}e.__esModule=!0;var o=r(n(37)),i=r(n(56)),a=r(n(57)),s=r(n(54)),c=r(n(55)),l={zh:i.default,"zh-cn":i.default,"zh-CN":i.default,"zh-TW":a.default,en:s.default,"en-US":s.default,ja:c.default,"ja-JP":c.default};e.default=function(t,e){return!l[t]&&t&&e&&(l[t]=e),new o.default({phrases:l[t||"zh"],locale:t})}},function(t,e,n){"use strict";e.__esModule=!0,e.default=function(t,e){if(t.$el&&t.$loading.hide().$nodata.hide(),"[object Error]"==={}.toString.call(e)){var n=e.code||e.message||e.error||"";if(isNaN(n))t.$el&&t.$nodata.show('<pre style="text-align:left;"> '+JSON.stringify(e)+"</pre>");else{var r=t.i18n.t("code-"+n),o=(r=="code-"+n?void 0:r)||e.message||e.error||"";101==n||-1==n?t.$nodata.show():t.$el&&t.$nodata.show('<pre style="text-align:left;">Code '+n+": "+o+"</pre>")}}else t.$el&&t.$nodata.show('<pre style="text-align:left;">'+JSON.stringify(e)+"</pre>")}},function(t,e,n){"use strict";function r(t){return t&&t.__esModule?t:{default:t}}e.__esModule=!0;var o=n(36),i=r(o),a=r(n(0)),s=r(n(6)),c=n(33),l=new o.Renderer;l.code=function(t,e){return'<pre><code class="hljs language-'+e+'">'+(e&&hljs.getLanguage(e)?hljs.highlight(e,t).value:a.default.escape(t))+"</code></pre>"},i.default.setOptions({renderer:"hljs"in window?l:new o.Renderer,highlight:function(t,e){return"hljs"in window?e&&hljs.getLanguage(e)&&hljs.highlight(e,t,!0).value||hljs.highlightAuto(t).value:c(t)},gfm:!0,tables:!0,breaks:!0,pedantic:!1,sanitize:!0,smartLists:!0,smartypants:!0,headerPrefi:"v-"}),e.default=function(t){return s.default.parse((0,i.default)(t))}},function(t,e,n){"use strict";e.__esModule=!0,e.recordIPFn=e.fetchQQFn=void 0;var r=function(t){return t&&t.__esModule?t:{default:t}}(n(0)),o=n(2);e.fetchQQFn=function(t,e){var n=r.default.store.get(o.QQCacheKey);n&&n.qq==t?e&&e(n):r.default.ajax({type:"POST",url:"//valine.api.ioliu.cn/getqqinfo",data:{qq:t},success:function(t){t.errmsg||(r.default.store.set(o.QQCacheKey,t),e&&e(t))}})},e.recordIPFn=function(t){r.default.sdkLoader("//api.ip.sb/jsonip?callback=getIP","getIP"),window.getIP=function(e){t&&t(e.ip),r.default.deleteInWin("getIP")}}},function(t,e,n){"use strict";var r=function(t){var e=i(t.getDate(),2),n=i(t.getMonth()+1,2);return i(t.getFullYear(),2)+"-"+n+"-"+e},o=function t(e){return e instanceof Date?e:!isNaN(e)||/^\d+$/.test(e)?new Date(parseInt(e)):/GMT/.test(e||"")?t(new Date(e).getTime()):(e=(e||"").replace(/(^\s*)|(\s*$)/g,"").replace(/\.\d+/,"").replace(/-/,"/").replace(/-/,"/").replace(/(\d)T(\d)/,"$1 $2").replace(/Z/," UTC").replace(/([+-]\d\d):?(\d\d)/," $1$2"),new Date(e))},i=function(t,e){for(var n=t.toString();n.length<e;)n="0"+n;return n};t.exports=function(t,e){if(!t)return"";try{var n=o(t).getTime(),i=(new Date).getTime()-n,a=Math.floor(i/864e5);if(0===a){var s=i%864e5,c=Math.floor(s/36e5);if(0===c){var l=s%36e5,u=Math.floor(l/6e4);if(0===u){var p=l%6e4;return Math.round(p/1e3)+" "+e.t("seconds")}return u+" "+e.t("minutes")}return c+" "+e.t("hours")}return a<0?e.t("now"):a<8?a+" "+e.t("days"):r(t)}catch(t){}}},function(t,e,n){"use strict";e.__esModule=!0;var r=function(t){return t&&t.__esModule?t:{default:t}}(n(51));e.default=function(t){return(0,r.default)(t,{onTagAttr:function(t,e,n,r){return o(t,e,n,r)},onIgnoreTagAttr:function(t,e,n,r){return o(t,e,n,r)}}).replace(/\<\/?div\>/gi,"")};var o=function(t,e,n,o){if(/code|pre|span/gi.test(t)){if("style"==e)return e+'="'+(/^color/gi.test(n)?n:"").replace(/(color:[#0-9a-fA-F]{1,6};?).+/gi,"$1")+'"';if("class"==e)return e+"='"+r.default.escapeAttrValue(n)+"'"}if("img"===t&&["src","class"].indexOf(e)>-1)return e+'="'+r.default.escapeAttrValue(n)+'" referrerPolicy="no-referrer" '}},function(t,e,n){var r;!function(o){"use strict";function i(t,e){var n=(65535&t)+(65535&e);return(t>>16)+(e>>16)+(n>>16)<<16|65535&n}function a(t,e,n,r,o,a){return i(function(t,e){return t<<e|t>>>32-e}(i(i(e,t),i(r,a)),o),n)}function s(t,e,n,r,o,i,s){return a(e&n|~e&r,t,e,o,i,s)}function c(t,e,n,r,o,i,s){return a(e&r|n&~r,t,e,o,i,s)}function l(t,e,n,r,o,i,s){return a(e^n^r,t,e,o,i,s)}function u(t,e,n,r,o,i,s){return a(n^(e|~r),t,e,o,i,s)}function p(t,e){t[e>>5]|=128<<e%32,t[14+(e+64>>>9<<4)]=e;var n,r,o,a,p,d=1732584193,h=-271733879,f=-1732584194,v=271733878;for(n=0;n<t.length;n+=16)r=d,o=h,a=f,p=v,d=s(d,h,f,v,t[n],7,-680876936),v=s(v,d,h,f,t[n+1],12,-389564586),f=s(f,v,d,h,t[n+2],17,606105819),h=s(h,f,v,d,t[n+3],22,-1044525330),d=s(d,h,f,v,t[n+4],7,-176418897),v=s(v,d,h,f,t[n+5],12,1200080426),f=s(f,v,d,h,t[n+6],17,-1473231341),h=s(h,f,v,d,t[n+7],22,-45705983),d=s(d,h,f,v,t[n+8],7,1770035416),v=s(v,d,h,f,t[n+9],12,-1958414417),f=s(f,v,d,h,t[n+10],17,-42063),h=s(h,f,v,d,t[n+11],22,-1990404162),d=s(d,h,f,v,t[n+12],7,1804603682),v=s(v,d,h,f,t[n+13],12,-40341101),f=s(f,v,d,h,t[n+14],17,-1502002290),d=c(d,h=s(h,f,v,d,t[n+15],22,1236535329),f,v,t[n+1],5,-165796510),v=c(v,d,h,f,t[n+6],9,-1069501632),f=c(f,v,d,h,t[n+11],14,643717713),h=c(h,f,v,d,t[n],20,-373897302),d=c(d,h,f,v,t[n+5],5,-701558691),v=c(v,d,h,f,t[n+10],9,38016083),f=c(f,v,d,h,t[n+15],14,-660478335),h=c(h,f,v,d,t[n+4],20,-405537848),d=c(d,h,f,v,t[n+9],5,568446438),v=c(v,d,h,f,t[n+14],9,-1019803690),f=c(f,v,d,h,t[n+3],14,-187363961),h=c(h,f,v,d,t[n+8],20,1163531501),d=c(d,h,f,v,t[n+13],5,-1444681467),v=c(v,d,h,f,t[n+2],9,-51403784),f=c(f,v,d,h,t[n+7],14,1735328473),d=l(d,h=c(h,f,v,d,t[n+12],20,-1926607734),f,v,t[n+5],4,-378558),v=l(v,d,h,f,t[n+8],11,-2022574463),f=l(f,v,d,h,t[n+11],16,1839030562),h=l(h,f,v,d,t[n+14],23,-35309556),d=l(d,h,f,v,t[n+1],4,-1530992060),v=l(v,d,h,f,t[n+4],11,1272893353),f=l(f,v,d,h,t[n+7],16,-155497632),h=l(h,f,v,d,t[n+10],23,-1094730640),d=l(d,h,f,v,t[n+13],4,681279174),v=l(v,d,h,f,t[n],11,-358537222),f=l(f,v,d,h,t[n+3],16,-722521979),h=l(h,f,v,d,t[n+6],23,76029189),d=l(d,h,f,v,t[n+9],4,-640364487),v=l(v,d,h,f,t[n+12],11,-421815835),f=l(f,v,d,h,t[n+15],16,530742520),d=u(d,h=l(h,f,v,d,t[n+2],23,-995338651),f,v,t[n],6,-198630844),v=u(v,d,h,f,t[n+7],10,1126891415),f=u(f,v,d,h,t[n+14],15,-1416354905),h=u(h,f,v,d,t[n+5],21,-57434055),d=u(d,h,f,v,t[n+12],6,1700485571),v=u(v,d,h,f,t[n+3],10,-1894986606),f=u(f,v,d,h,t[n+10],15,-1051523),h=u(h,f,v,d,t[n+1],21,-2054922799),d=u(d,h,f,v,t[n+8],6,1873313359),v=u(v,d,h,f,t[n+15],10,-30611744),f=u(f,v,d,h,t[n+6],15,-1560198380),h=u(h,f,v,d,t[n+13],21,1309151649),d=u(d,h,f,v,t[n+4],6,-145523070),v=u(v,d,h,f,t[n+11],10,-1120210379),f=u(f,v,d,h,t[n+2],15,718787259),h=u(h,f,v,d,t[n+9],21,-343485551),d=i(d,r),h=i(h,o),f=i(f,a),v=i(v,p);return[d,h,f,v]}function d(t){var e,n="",r=32*t.length;for(e=0;e<r;e+=8)n+=String.fromCharCode(t[e>>5]>>>e%32&255);return n}function h(t){var e,n=[];for(n[(t.length>>2)-1]=void 0,e=0;e<n.length;e+=1)n[e]=0;var r=8*t.length;for(e=0;e<r;e+=8)n[e>>5]|=(255&t.charCodeAt(e/8))<<e%32;return n}function f(t){var e,n,r="0123456789abcdef",o="";for(n=0;n<t.length;n+=1)e=t.charCodeAt(n),o+=r.charAt(e>>>4&15)+r.charAt(15&e);return o}function v(t){return unescape(encodeURIComponent(t))}function b(t){return function(t){return d(p(h(t),8*t.length))}(v(t))}function m(t,e){return function(t,e){var n,r,o=h(t),i=[],a=[];for(i[15]=a[15]=void 0,o.length>16&&(o=p(o,8*t.length)),n=0;n<16;n+=1)i[n]=909522486^o[n],a[n]=1549556828^o[n];return r=p(i.concat(h(e)),512+8*e.length),d(p(a.concat(r),640))}(v(t),v(e))}function g(t,e,n){return e?n?m(e,t):function(t,e){return f(m(t,e))}(e,t):n?b(t):function(t){return f(b(t))}(t)}void 0!==(r=function(){return g}.call(e,n,e,t))&&(t.exports=r)}()},function(t,e,n){"use strict";e.__esModule=!0,e.default=function(t){var e={},n={Trident:(t=t||navigator.userAgent).indexOf("Trident")>-1||t.indexOf("NET CLR")>-1,Presto:t.indexOf("Presto")>-1,WebKit:t.indexOf("AppleWebKit")>-1,Gecko:t.indexOf("Gecko/")>-1,Safari:t.indexOf("Safari")>-1,Edge:t.indexOf("Edge")>-1||t.indexOf("Edg")>-1,Chrome:t.indexOf("Chrome")>-1||t.indexOf("CriOS")>-1,IE:t.indexOf("MSIE")>-1||t.indexOf("Trident")>-1,Firefox:t.indexOf("Firefox")>-1||t.indexOf("FxiOS")>-1,"Firefox Focus":t.indexOf("Focus")>-1,Chromium:t.indexOf("Chromium")>-1,Opera:t.indexOf("Opera")>-1||t.indexOf("OPR")>-1,Vivaldi:t.indexOf("Vivaldi")>-1,Yandex:t.indexOf("YaBrowser")>-1,Kindle:t.indexOf("Kindle")>-1||t.indexOf("Silk/")>-1,360:t.indexOf("360EE")>-1||t.indexOf("360SE")>-1,UC:t.indexOf("UC")>-1||t.indexOf(" UBrowser")>-1,QQBrowser:t.indexOf("QQBrowser")>-1,QQ:t.indexOf("QQ/")>-1,Baidu:t.indexOf("Baidu")>-1||t.indexOf("BIDUBrowser")>-1,Maxthon:t.indexOf("Maxthon")>-1,Sogou:t.indexOf("MetaSr")>-1||t.indexOf("Sogou")>-1,LBBROWSER:t.indexOf("LBBROWSER")>-1,"2345Explorer":t.indexOf("2345Explorer")>-1,TheWorld:t.indexOf("TheWorld")>-1,XiaoMi:t.indexOf("MiuiBrowser")>-1,Quark:t.indexOf("Quark")>-1,Qiyu:t.indexOf("Qiyu")>-1,Wechat:t.indexOf("MicroMessenger")>-1,Taobao:t.indexOf("AliApp(TB")>-1,Alipay:t.indexOf("AliApp(AP")>-1,Weibo:t.indexOf("Weibo")>-1,Douban:t.indexOf("com.douban.frodo")>-1,Suning:t.indexOf("SNEBUY-APP")>-1,iQiYi:t.indexOf("IqiyiApp")>-1,Windows:t.indexOf("Windows")>-1,Linux:t.indexOf("Linux")>-1||t.indexOf("X11")>-1,macOS:t.indexOf("Macintosh")>-1,Android:t.indexOf("Android")>-1||t.indexOf("Adr")>-1,Ubuntu:t.indexOf("Ubuntu")>-1,FreeBSD:t.indexOf("FreeBSD")>-1,Debian:t.indexOf("Debian")>-1,"Windows Phone":t.indexOf("IEMobile")>-1||t.indexOf("Windows Phone")>-1,BlackBerry:t.indexOf("BlackBerry")>-1||t.indexOf("RIM")>-1||t.indexOf("BB10")>-1,MeeGo:t.indexOf("MeeGo")>-1,Symbian:t.indexOf("Symbian")>-1,iOS:t.indexOf("like Mac OS X")>-1,"Chrome OS":t.indexOf("CrOS")>-1,WebOS:t.indexOf("hpwOS")>-1,Mobile:t.indexOf("Mobi")>-1||t.indexOf("iPh")>-1||t.indexOf("480")>-1,Tablet:t.indexOf("Tablet")>-1||t.indexOf("Pad")>-1||t.indexOf("Nexus 7")>-1};n.Mobile&&(n.Mobile=!(t.indexOf("iPad")>-1));var r={browser:["Safari","Chrome","Edge","IE","Firefox","Firefox Focus","Chromium","Opera","Vivaldi","Yandex","Kindle","360","UC","QQBrowser","QQ","Baidu","Maxthon","Sogou","LBBROWSER","2345Explorer","TheWorld","XiaoMi","Quark","Qiyu","Wechat","Taobao","Alipay","Weibo","Douban","Suning","iQiYi"],os:["Windows","Linux","Mac OS","macOS","Android","Ubuntu","FreeBSD","Debian","iOS","Windows Phone","BlackBerry","MeeGo","Symbian","Chrome OS","WebOS"]};for(var o in r)if(r.hasOwnProperty(o))for(var i=0,a=r[o].length;i<a;i++){var s=r[o][i];n[s]&&(e[o]=s)}var c={Windows:function(){var e=t.replace(/^.*Windows NT ([\d.]+).*$/,"$1");return{6.4:"10",6.3:"8.1",6.2:"8",6.1:"7","6.0":"Vista",5.2:"XP",5.1:"XP","5.0":"2000"}[e]||e},Android:t.replace(/^.*Android ([\d.]+);.*$/,"$1"),iOS:t.replace(/^.*OS ([\d_]+) like.*$/,"$1").replace(/_/g,"."),Debian:t.replace(/^.*Debian\/([\d.]+).*$/,"$1"),"Windows Phone":t.replace(/^.*Windows Phone( OS)? ([\d.]+);.*$/,"$2"),macOS:t.replace(/^.*Mac OS X ([\d_]+).*$/,"$1").replace(/_/g,"."),WebOS:t.replace(/^.*hpwOS\/([\d.]+);.*$/,"$1"),BlackBerry:t.replace(/^.*BB([\d.]+);*$/,"$1")};e.osVersion="";var l=c[e.os];l&&(e.osVersion="function"==typeof l?l():l==t?"":l);var u={Safari:t.replace(/^.*Version\/([\d.]+).*$/,"$1"),Chrome:t.replace(/^.*Chrome\/([\d.]+).*$/,"$1").replace(/^.*CriOS\/([\d.]+).*$/,"$1"),IE:t.replace(/^.*MSIE ([\d.]+).*$/,"$1").replace(/^.*rv:([\d.]+).*$/,"$1"),Edge:t.replace(/^.*Edge?\/([\d.]+).*$/,"$1"),Firefox:t.replace(/^.*Firefox\/([\d.]+).*$/,"$1").replace(/^.*FxiOS\/([\d.]+).*$/,"$1"),"Firefox Focus":t.replace(/^.*Focus\/([\d.]+).*$/,"$1"),Chromium:t.replace(/^.*Chromium\/([\d.]+).*$/,"$1"),Opera:t.replace(/^.*Opera\/([\d.]+).*$/,"$1").replace(/^.*OPR\/([\d.]+).*$/,"$1"),Vivaldi:t.replace(/^.*Vivaldi\/([\d.]+).*$/,"$1"),Yandex:t.replace(/^.*YaBrowser\/([\d.]+).*$/,"$1"),Kindle:t.replace(/^.*Version\/([\d.]+).*$/,"$1"),Maxthon:t.replace(/^.*Maxthon\/([\d.]+).*$/,"$1"),QQBrowser:t.replace(/^.*QQBrowser\/([\d.]+).*$/,"$1"),QQ:t.replace(/^.*QQ\/([\d.]+).*$/,"$1"),Baidu:t.replace(/^.*BIDUBrowser[\s\/]([\d.]+).*$/,"$1"),UC:t.replace(/^.*UC?Browser\/([\d.]+).*$/,"$1"),Sogou:t.replace(/^.*SE ([\d.X]+).*$/,"$1").replace(/^.*SogouMobileBrowser\/([\d.]+).*$/,"$1"),"2345Explorer":t.replace(/^.*2345Explorer\/([\d.]+).*$/,"$1"),TheWorld:t.replace(/^.*TheWorld ([\d.]+).*$/,"$1"),XiaoMi:t.replace(/^.*MiuiBrowser\/([\d.]+).*$/,"$1"),Quark:t.replace(/^.*Quark\/([\d.]+).*$/,"$1"),Qiyu:t.replace(/^.*Qiyu\/([\d.]+).*$/,"$1"),Wechat:t.replace(/^.*MicroMessenger\/([\d.]+).*$/,"$1"),Taobao:t.replace(/^.*AliApp\(TB\/([\d.]+).*$/,"$1"),Alipay:t.replace(/^.*AliApp\(AP\/([\d.]+).*$/,"$1"),Weibo:t.replace(/^.*weibo__([\d.]+).*$/,"$1"),Douban:t.replace(/^.*com.douban.frodo\/([\d.]+).*$/,"$1"),Suning:t.replace(/^.*SNEBUY-APP([\d.]+).*$/,"$1"),iQiYi:t.replace(/^.*IqiyiVersion\/([\d.]+).*$/,"$1")};e.version="";var p=u[e.browser];return p&&(e.version="function"==typeof p?p():p==t?"":p),null==e.browser&&(e.browser="Unknow App"),e}},function(t,e,n){var r,o;o=function(t,e,n){function r(e,o,i){return i=Object.create(r.fn),e&&i.push.apply(i,e.addEventListener?[e]:""+e===e?/</.test(e)?((o=t.createElement(o)).innerHTML=e,o.children):o?(o=r(o)[0])?o[n](e):i:t[n](e):e),i}return r.fn=[],r.one=function(t,e){return r(t,e)[0]||null},r}(document,0,"querySelectorAll"),void 0!==(r=function(){return o}.apply(e,[]))&&(t.exports=r)},function(t,e,n){function r(t){return null==t}function o(t){(t=function(t){var e={};for(var n in t)e[n]=t[n];return e}(t||{})).whiteList=t.whiteList||i.whiteList,t.onAttr=t.onAttr||i.onAttr,t.onIgnoreAttr=t.onIgnoreAttr||i.onIgnoreAttr,t.safeAttrValue=t.safeAttrValue||i.safeAttrValue,this.options=t}var i=n(7),a=n(30);n(8),o.prototype.process=function(t){if(!(t=(t=t||"").toString()))return"";var e=this.options,n=e.whiteList,o=e.onAttr,i=e.onIgnoreAttr,s=e.safeAttrValue;return a(t,(function(t,e,a,c,l){var u=n[a],p=!1;if(!0===u?p=u:"function"==typeof u?p=u(c):u instanceof RegExp&&(p=u.test(c)),!0!==p&&(p=!1),c=s(a,c)){var d,h={position:e,sourcePosition:t,source:l,isWhite:p};return p?r(d=o(a,c,h))?a+":"+c:d:r(d=i(a,c,h))?void 0:d}}))},t.exports=o},function(t,e,n){var r=n(8);t.exports=function(t,e){function n(){if(!i){var n=r.trim(t.slice(a,s)),o=n.indexOf(":");if(-1!==o){var l=r.trim(n.slice(0,o)),u=r.trim(n.slice(o+1));if(l){var p=e(a,c.length,l,u,n);p&&(c+=p+"; ")}}}a=s+1}";"!==(t=r.trimRight(t))[t.length-1]&&(t+=";");for(var o=t.length,i=!1,a=0,s=0,c="";s<o;s++){var l=t[s];if("/"===l&&"*"===t[s+1]){var u=t.indexOf("*/",s+2);if(-1===u)break;a=(s=u+1)+1,i=!1}else"("===l?i=!0:")"===l?i=!1:";"===l?i||n():"\n"===l&&n()}return r.trim(c)}},function(t,e,n){"use strict";var r=n(35),o=Object.prototype.toString,i=Object.prototype.hasOwnProperty,a=function(t,e,n){for(var r=0,o=t.length;r<o;r++)i.call(t,r)&&(null==n?e(t[r],r,t):e.call(n,t[r],r,t))},s=function(t,e,n){for(var r=0,o=t.length;r<o;r++)null==n?e(t.charAt(r),r,t):e.call(n,t.charAt(r),r,t)},c=function(t,e,n){for(var r in t)i.call(t,r)&&(null==n?e(t[r],r,t):e.call(n,t[r],r,t))};t.exports=function(t,e,n){if(!r(e))throw new TypeError("iterator must be a function");var i;arguments.length>=3&&(i=n),"[object Array]"===o.call(t)?a(t,e,i):"string"==typeof t?s(t,e,i):c(t,e,i)}},function(t,e,n){"use strict";var r=Array.prototype.slice,o=Object.prototype.toString;t.exports=function(t){var e=this;if("function"!=typeof e||"[object Function]"!==o.call(e))throw new TypeError("Function.prototype.bind called on incompatible "+e);for(var n,i=r.call(arguments,1),a=function(){if(this instanceof n){var o=e.apply(this,i.concat(r.call(arguments)));return Object(o)===o?o:this}return e.apply(t,i.concat(r.call(arguments)))},s=Math.max(0,e.length-i.length),c=[],l=0;l<s;l++)c.push("$"+l);if(n=Function("binder","return function ("+c.join(",")+"){ return binder.apply(this,arguments); }")(a),e.prototype){var u=function(){};u.prototype=e.prototype,n.prototype=new u,u.prototype=null}return n}},function(t,e,n){t.exports=function(){"use strict";var t=function(t,e){return function(t){var e=t.exports=function(){return new RegExp("(?:"+e.line().source+")|(?:"+e.block().source+")","gm")};e.line=function(){return/(?:^|\s)\/\/(.+?)$/gm},e.block=function(){return/\/\*([\S\s]*?)\*\//gm}}(e={exports:{}}),e.exports}(),e=["23AC69","91C132","F19726","E8552D","1AAB8E","E1147F","2980C1","1BA1E6","9FA0A0","F19726","E30B20","E30B20","A3338B"];return function(n,r){void 0===r&&(r={});var o=r.colors;void 0===o&&(o=e);var i=0,a={},s=new RegExp("("+/[\u4E00-\u9FFF\u3400-\u4dbf\uf900-\ufaff\u3040-\u309f\uac00-\ud7af\u0400-\u04FF]+|\w+/.source+"|"+/</.source+")|("+t().source+")","gmi");return n.replace(s,(function(t,e,n){if(n)return function(t){return'<span style="color: slategray">'+t+"</span>"}(n);if("<"===e)return"&lt;";var r;a[e]?r=a[e]:(r=o[i],a[e]=r);var s='<span style="color: #'+r+'">'+e+"</span>";return i=++i%o.length,s}))}}()},function(t,e,n){"use strict";var r=n(4);t.exports=r.call(Function.call,Object.prototype.hasOwnProperty)},function(t,e,n){"use strict";var r=Function.prototype.toString,o=/^\s*class\b/,i=function(t){try{var e=r.call(t);return o.test(e)}catch(t){return!1}},a=Object.prototype.toString,s="function"==typeof Symbol&&"symbol"==typeof Symbol.toStringTag;t.exports=function(t){if(!t)return!1;if("function"!=typeof t&&"object"!=typeof t)return!1;if("function"==typeof t&&!t.prototype)return!0;if(s)return function(t){try{return!i(t)&&(r.call(t),!0)}catch(t){return!1}}(t);if(i(t))return!1;var e=a.call(t);return"[object Function]"===e||"[object GeneratorFunction]"===e}},function(t,e,n){(function(e){!function(e){"use strict";function n(t){this.tokens=[],this.tokens.links={},this.options=t||f.defaults,this.rules=v.normal,this.options.pedantic?this.rules=v.pedantic:this.options.gfm&&(this.options.tables?this.rules=v.tables:this.rules=v.gfm)}function r(t,e){if(this.options=e||f.defaults,this.links=t,this.rules=b.normal,this.renderer=this.options.renderer||new o,this.renderer.options=this.options,!this.links)throw new Error("Tokens array requires a `links` property.");this.options.pedantic?this.rules=b.pedantic:this.options.gfm&&(this.options.breaks?this.rules=b.breaks:this.rules=b.gfm)}function o(t){this.options=t||f.defaults}function i(){}function a(t){this.tokens=[],this.token=null,this.options=t||f.defaults,this.options.renderer=this.options.renderer||new o,this.renderer=this.options.renderer,this.renderer.options=this.options}function s(t,e){return t.replace(e?/&/g:/&(?!#?\w+;)/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/"/g,"&quot;").replace(/'/g,"&#39;")}function c(t){return t.replace(/&(#(?:\d+)|(?:#x[0-9A-Fa-f]+)|(?:\w+));?/gi,(function(t,e){return"colon"===(e=e.toLowerCase())?":":"#"===e.charAt(0)?"x"===e.charAt(1)?String.fromCharCode(parseInt(e.substring(2),16)):String.fromCharCode(+e.substring(1)):""}))}function l(t,e){return t=t.source||t,e=e||"",{replace:function(e,n){return n=(n=n.source||n).replace(/(^|[^\[])\^/g,"$1"),t=t.replace(e,n),this},getRegex:function(){return new RegExp(t,e)}}}function u(t,e){return m[" "+t]||(/^[^:]+:\/*[^/]*$/.test(t)?m[" "+t]=t+"/":m[" "+t]=t.replace(/[^/]*$/,"")),t=m[" "+t],"//"===e.slice(0,2)?t.replace(/:[\s\S]*/,":")+e:"/"===e.charAt(0)?t.replace(/(:\/*[^/]*)[\s\S]*/,"$1")+e:t+e}function p(){}function d(t){for(var e,n,r=1;r<arguments.length;r++)for(n in e=arguments[r])Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n]);return t}function h(t,e){var n=t.replace(/([^\\])\|/g,"$1 |").split(/ +\| */),r=0;if(n.length>e)n.splice(e);else for(;n.length<e;)n.push("");for(;r<n.length;r++)n[r]=n[r].replace(/\\\|/g,"|");return n}function f(t,e,r){if(null==t)throw new Error("marked(): input parameter is undefined or null");if("string"!=typeof t)throw new Error("marked(): input parameter is of type "+Object.prototype.toString.call(t)+", string expected");if(r||"function"==typeof e){r||(r=e,e=null);var o,i,c=(e=d({},f.defaults,e||{})).highlight,l=0;try{o=n.lex(t,e)}catch(t){return r(t)}i=o.length;var u=function(t){if(t)return e.highlight=c,r(t);var n;try{n=a.parse(o,e)}catch(e){t=e}return e.highlight=c,t?r(t):r(null,n)};if(!c||c.length<3)return u();if(delete e.highlight,!i)return u();for(;l<o.length;l++)!function(t){"code"!==t.type?--i||u():c(t.text,t.lang,(function(e,n){return e?u(e):null==n||n===t.text?--i||u():(t.text=n,t.escaped=!0,void(--i||u()))}))}(o[l])}else try{return e&&(e=d({},f.defaults,e)),a.parse(n.lex(t,e),e)}catch(t){if(t.message+="\nPlease report this to https://github.com/markedjs/marked.",(e||f.defaults).silent)return"<p>An error occurred:</p><pre>"+s(t.message+"",!0)+"</pre>";throw t}}var v={newline:/^\n+/,code:/^( {4}[^\n]+\n*)+/,fences:p,hr:/^ {0,3}((?:- *){3,}|(?:_ *){3,}|(?:\* *){3,})(?:\n+|$)/,heading:/^ *(#{1,6}) *([^\n]+?) *(?:#+ *)?(?:\n+|$)/,nptable:p,blockquote:/^( {0,3}> ?(paragraph|[^\n]*)(?:\n|$))+/,list:/^( *)(bull) [\s\S]+?(?:hr|def|\n{2,}(?! )(?!\1bull )\n*|\s*$)/,html:"^ {0,3}(?:<(script|pre|style)[\\s>][\\s\\S]*?(?:</\\1>[^\\n]*\\n+|$)|comment[^\\n]*(\\n+|$)|<\\?[\\s\\S]*?\\?>\\n*|<![A-Z][\\s\\S]*?>\\n*|<!\\[CDATA\\[[\\s\\S]*?\\]\\]>\\n*|</?(tag)(?: +|\\n|/?>)[\\s\\S]*?(?:\\n{2,}|$)|<(?!script|pre|style)([a-z][\\w-]*)(?:attribute)*? */?>(?=\\h*\\n)[\\s\\S]*?(?:\\n{2,}|$)|</(?!script|pre|style)[a-z][\\w-]*\\s*>(?=\\h*\\n)[\\s\\S]*?(?:\\n{2,}|$))",def:/^ {0,3}\[(label)\]: *\n? *<?([^\s>]+)>?(?:(?: +\n? *| *\n *)(title))? *(?:\n+|$)/,table:p,lheading:/^([^\n]+)\n *(=|-){2,} *(?:\n+|$)/,paragraph:/^([^\n]+(?:\n(?!hr|heading|lheading| {0,3}>|<\/?(?:tag)(?: +|\n|\/?>)|<(?:script|pre|style|!--))[^\n]+)*)/,text:/^[^\n]+/,_label:/(?!\s*\])(?:\\[\[\]]|[^\[\]])+/,_title:/(?:"(?:\\"?|[^"\\])*"|'[^'\n]*(?:\n[^'\n]+)*\n?'|\([^()]*\))/};v.def=l(v.def).replace("label",v._label).replace("title",v._title).getRegex(),v.bullet=/(?:[*+-]|\d+\.)/,v.item=/^( *)(bull) [^\n]*(?:\n(?!\1bull )[^\n]*)*/,v.item=l(v.item,"gm").replace(/bull/g,v.bullet).getRegex(),v.list=l(v.list).replace(/bull/g,v.bullet).replace("hr","\\n+(?=\\1?(?:(?:- *){3,}|(?:_ *){3,}|(?:\\* *){3,})(?:\\n+|$))").replace("def","\\n+(?="+v.def.source+")").getRegex(),v._tag="address|article|aside|base|basefont|blockquote|body|caption|center|col|colgroup|dd|details|dialog|dir|div|dl|dt|fieldset|figcaption|figure|footer|form|frame|frameset|h[1-6]|head|header|hr|html|iframe|legend|li|link|main|menu|menuitem|meta|nav|noframes|ol|optgroup|option|p|param|section|source|summary|table|tbody|td|tfoot|th|thead|title|tr|track|ul",v._comment=/<!--(?!-?>)[\s\S]*?-->/,v.html=l(v.html,"i").replace("comment",v._comment).replace("tag",v._tag).replace("attribute",/ +[a-zA-Z:_][\w.:-]*(?: *= *"[^"\n]*"| *= *'[^'\n]*'| *= *[^\s"'=<>`]+)?/).getRegex(),v.paragraph=l(v.paragraph).replace("hr",v.hr).replace("heading",v.heading).replace("lheading",v.lheading).replace("tag",v._tag).getRegex(),v.blockquote=l(v.blockquote).replace("paragraph",v.paragraph).getRegex(),v.normal=d({},v),v.gfm=d({},v.normal,{fences:/^ *(`{3,}|~{3,})[ \.]*(\S+)? *\n([\s\S]*?)\n? *\1 *(?:\n+|$)/,paragraph:/^/,heading:/^ *(#{1,6}) +([^\n]+?) *#* *(?:\n+|$)/}),v.gfm.paragraph=l(v.paragraph).replace("(?!","(?!"+v.gfm.fences.source.replace("\\1","\\2")+"|"+v.list.source.replace("\\1","\\3")+"|").getRegex(),v.tables=d({},v.gfm,{nptable:/^ *([^|\n ].*\|.*)\n *([-:]+ *\|[-| :]*)(?:\n((?:.*[^>\n ].*(?:\n|$))*)\n*|$)/,table:/^ *\|(.+)\n *\|?( *[-:]+[-| :]*)(?:\n((?: *[^>\n ].*(?:\n|$))*)\n*|$)/}),v.pedantic=d({},v.normal,{html:l("^ *(?:comment *(?:\\n|\\s*$)|<(tag)[\\s\\S]+?</\\1> *(?:\\n{2,}|\\s*$)|<tag(?:\"[^\"]*\"|'[^']*'|\\s[^'\"/>\\s]*)*?/?> *(?:\\n{2,}|\\s*$))").replace("comment",v._comment).replace(/tag/g,"(?!(?:a|em|strong|small|s|cite|q|dfn|abbr|data|time|code|var|samp|kbd|sub|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo|span|br|wbr|ins|del|img)\\b)\\w+(?!:|[^\\w\\s@]*@)\\b").getRegex(),def:/^ *\[([^\]]+)\]: *<?([^\s>]+)>?(?: +(["(][^\n]+[")]))? *(?:\n+|$)/}),n.rules=v,n.lex=function(t,e){return new n(e).lex(t)},n.prototype.lex=function(t){return t=t.replace(/\r\n|\r/g,"\n").replace(/\t/g,"    ").replace(/\u00a0/g," ").replace(/\u2424/g,"\n"),this.token(t,!0)},n.prototype.token=function(t,e){t=t.replace(/^ +$/gm,"");for(var n,r,o,i,a,s,c,l,u,p,d,f,b;t;)if((o=this.rules.newline.exec(t))&&(t=t.substring(o[0].length),o[0].length>1&&this.tokens.push({type:"space"})),o=this.rules.code.exec(t))t=t.substring(o[0].length),o=o[0].replace(/^ {4}/gm,""),this.tokens.push({type:"code",text:this.options.pedantic?o:o.replace(/\n+$/,"")});else if(o=this.rules.fences.exec(t))t=t.substring(o[0].length),this.tokens.push({type:"code",lang:o[2],text:o[3]||""});else if(o=this.rules.heading.exec(t))t=t.substring(o[0].length),this.tokens.push({type:"heading",depth:o[1].length,text:o[2]});else if(e&&(o=this.rules.nptable.exec(t))&&(s={type:"table",header:h(o[1].replace(/^ *| *\| *$/g,"")),align:o[2].replace(/^ *|\| *$/g,"").split(/ *\| */),cells:o[3]?o[3].replace(/\n$/,"").split("\n"):[]}).header.length===s.align.length){for(t=t.substring(o[0].length),l=0;l<s.align.length;l++)/^ *-+: *$/.test(s.align[l])?s.align[l]="right":/^ *:-+: *$/.test(s.align[l])?s.align[l]="center":/^ *:-+ *$/.test(s.align[l])?s.align[l]="left":s.align[l]=null;for(l=0;l<s.cells.length;l++)s.cells[l]=h(s.cells[l],s.header.length);this.tokens.push(s)}else if(o=this.rules.hr.exec(t))t=t.substring(o[0].length),this.tokens.push({type:"hr"});else if(o=this.rules.blockquote.exec(t))t=t.substring(o[0].length),this.tokens.push({type:"blockquote_start"}),o=o[0].replace(/^ *> ?/gm,""),this.token(o,e),this.tokens.push({type:"blockquote_end"});else if(o=this.rules.list.exec(t)){for(t=t.substring(o[0].length),d=(i=o[2]).length>1,this.tokens.push({type:"list_start",ordered:d,start:d?+i:""}),n=!1,p=(o=o[0].match(this.rules.item)).length,l=0;l<p;l++)c=(s=o[l]).length,~(s=s.replace(/^ *([*+-]|\d+\.) +/,"")).indexOf("\n ")&&(c-=s.length,s=this.options.pedantic?s.replace(/^ {1,4}/gm,""):s.replace(new RegExp("^ {1,"+c+"}","gm"),"")),this.options.smartLists&&l!==p-1&&(i===(a=v.bullet.exec(o[l+1])[0])||i.length>1&&a.length>1||(t=o.slice(l+1).join("\n")+t,l=p-1)),r=n||/\n\n(?!\s*$)/.test(s),l!==p-1&&(n="\n"===s.charAt(s.length-1),r||(r=n)),b=void 0,(f=/^\[[ xX]\] /.test(s))&&(b=" "!==s[1],s=s.replace(/^\[[ xX]\] +/,"")),this.tokens.push({type:r?"loose_item_start":"list_item_start",task:f,checked:b}),this.token(s,!1),this.tokens.push({type:"list_item_end"});this.tokens.push({type:"list_end"})}else if(o=this.rules.html.exec(t))t=t.substring(o[0].length),this.tokens.push({type:this.options.sanitize?"paragraph":"html",pre:!this.options.sanitizer&&("pre"===o[1]||"script"===o[1]||"style"===o[1]),text:o[0]});else if(e&&(o=this.rules.def.exec(t)))t=t.substring(o[0].length),o[3]&&(o[3]=o[3].substring(1,o[3].length-1)),u=o[1].toLowerCase().replace(/\s+/g," "),this.tokens.links[u]||(this.tokens.links[u]={href:o[2],title:o[3]});else if(e&&(o=this.rules.table.exec(t))&&(s={type:"table",header:h(o[1].replace(/^ *| *\| *$/g,"")),align:o[2].replace(/^ *|\| *$/g,"").split(/ *\| */),cells:o[3]?o[3].replace(/(?: *\| *)?\n$/,"").split("\n"):[]}).header.length===s.align.length){for(t=t.substring(o[0].length),l=0;l<s.align.length;l++)/^ *-+: *$/.test(s.align[l])?s.align[l]="right":/^ *:-+: *$/.test(s.align[l])?s.align[l]="center":/^ *:-+ *$/.test(s.align[l])?s.align[l]="left":s.align[l]=null;for(l=0;l<s.cells.length;l++)s.cells[l]=h(s.cells[l].replace(/^ *\| *| *\| *$/g,""),s.header.length);this.tokens.push(s)}else if(o=this.rules.lheading.exec(t))t=t.substring(o[0].length),this.tokens.push({type:"heading",depth:"="===o[2]?1:2,text:o[1]});else if(e&&(o=this.rules.paragraph.exec(t)))t=t.substring(o[0].length),this.tokens.push({type:"paragraph",text:"\n"===o[1].charAt(o[1].length-1)?o[1].slice(0,-1):o[1]});else if(o=this.rules.text.exec(t))t=t.substring(o[0].length),this.tokens.push({type:"text",text:o[0]});else if(t)throw new Error("Infinite loop on byte: "+t.charCodeAt(0));return this.tokens};var b={escape:/^\\([!"#$%&'()*+,\-./:;<=>?@\[\]\\^_`{|}~])/,autolink:/^<(scheme:[^\s\x00-\x1f<>]*|email)>/,url:p,tag:"^comment|^</[a-zA-Z][\\w:-]*\\s*>|^<[a-zA-Z][\\w-]*(?:attribute)*?\\s*/?>|^<\\?[\\s\\S]*?\\?>|^<![a-zA-Z]+\\s[\\s\\S]*?>|^<!\\[CDATA\\[[\\s\\S]*?\\]\\]>",link:/^!?\[(label)\]\(href(?:\s+(title))?\s*\)/,reflink:/^!?\[(label)\]\[(?!\s*\])((?:\\[\[\]]?|[^\[\]\\])+)\]/,nolink:/^!?\[(?!\s*\])((?:\[[^\[\]]*\]|\\[\[\]]|[^\[\]])*)\](?:\[\])?/,strong:/^__([^\s][\s\S]*?[^\s])__(?!_)|^\*\*([^\s][\s\S]*?[^\s])\*\*(?!\*)|^__([^\s])__(?!_)|^\*\*([^\s])\*\*(?!\*)/,em:/^_([^\s][\s\S]*?[^\s_])_(?!_)|^_([^\s_][\s\S]*?[^\s])_(?!_)|^\*([^\s][\s\S]*?[^\s*])\*(?!\*)|^\*([^\s*][\s\S]*?[^\s])\*(?!\*)|^_([^\s_])_(?!_)|^\*([^\s*])\*(?!\*)/,code:/^(`+)\s*([\s\S]*?[^`]?)\s*\1(?!`)/,br:/^ {2,}\n(?!\s*$)/,del:p,text:/^[\s\S]+?(?=[\\<!\[`*]|\b_| {2,}\n|$)/,_escapes:/\\([!"#$%&'()*+,\-./:;<=>?@\[\]\\^_`{|}~])/g,_scheme:/[a-zA-Z][a-zA-Z0-9+.-]{1,31}/,_email:/[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+(@)[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+(?![-_])/};b.autolink=l(b.autolink).replace("scheme",b._scheme).replace("email",b._email).getRegex(),b._attribute=/\s+[a-zA-Z:_][\w.:-]*(?:\s*=\s*"[^"]*"|\s*=\s*'[^']*'|\s*=\s*[^\s"'=<>`]+)?/,b.tag=l(b.tag).replace("comment",v._comment).replace("attribute",b._attribute).getRegex(),b._label=/(?:\[[^\[\]]*\]|\\[\[\]]?|`[^`]*`|[^\[\]\\])*?/,b._href=/\s*(<(?:\\[<>]?|[^\s<>\\])*>|(?:\\[()]?|\([^\s\x00-\x1f()\\]*\)|[^\s\x00-\x1f()\\])*?)/,b._title=/"(?:\\"?|[^"\\])*"|'(?:\\'?|[^'\\])*'|\((?:\\\)?|[^)\\])*\)/,b.link=l(b.link).replace("label",b._label).replace("href",b._href).replace("title",b._title).getRegex(),b.reflink=l(b.reflink).replace("label",b._label).getRegex(),b.normal=d({},b),b.pedantic=d({},b.normal,{strong:/^__(?=\S)([\s\S]*?\S)__(?!_)|^\*\*(?=\S)([\s\S]*?\S)\*\*(?!\*)/,em:/^_(?=\S)([\s\S]*?\S)_(?!_)|^\*(?=\S)([\s\S]*?\S)\*(?!\*)/,link:l(/^!?\[(label)\]\((.*?)\)/).replace("label",b._label).getRegex(),reflink:l(/^!?\[(label)\]\s*\[([^\]]*)\]/).replace("label",b._label).getRegex()}),b.gfm=d({},b.normal,{escape:l(b.escape).replace("])","~|])").getRegex(),url:l(/^((?:ftp|https?):\/\/|www\.)(?:[a-zA-Z0-9\-]+\.?)+[^\s<]*|^email/).replace("email",b._email).getRegex(),_backpedal:/(?:[^?!.,:;*_~()&]+|\([^)]*\)|&(?![a-zA-Z0-9]+;$)|[?!.,:;*_~)]+(?!$))+/,del:/^~~(?=\S)([\s\S]*?\S)~~/,text:l(b.text).replace("]|","~]|").replace("|","|https?://|ftp://|www\\.|[a-zA-Z0-9.!#$%&'*+/=?^_`{\\|}~-]+@|").getRegex()}),b.breaks=d({},b.gfm,{br:l(b.br).replace("{2,}","*").getRegex(),text:l(b.gfm.text).replace("{2,}","*").getRegex()}),r.rules=b,r.output=function(t,e,n){return new r(e,n).output(t)},r.prototype.output=function(t){for(var e,n,o,i,a,c="";t;)if(a=this.rules.escape.exec(t))t=t.substring(a[0].length),c+=a[1];else if(a=this.rules.autolink.exec(t))t=t.substring(a[0].length),o="@"===a[2]?"mailto:"+(n=s(this.mangle(a[1]))):n=s(a[1]),c+=this.renderer.link(o,null,n);else if(this.inLink||!(a=this.rules.url.exec(t))){if(a=this.rules.tag.exec(t))!this.inLink&&/^<a /i.test(a[0])?this.inLink=!0:this.inLink&&/^<\/a>/i.test(a[0])&&(this.inLink=!1),t=t.substring(a[0].length),c+=this.options.sanitize?this.options.sanitizer?this.options.sanitizer(a[0]):s(a[0]):a[0];else if(a=this.rules.link.exec(t))t=t.substring(a[0].length),this.inLink=!0,o=a[2],this.options.pedantic?(e=/^([^'"]*[^\s])\s+(['"])(.*)\2/.exec(o))?(o=e[1],i=e[3]):i="":i=a[3]?a[3].slice(1,-1):"",o=o.trim().replace(/^<([\s\S]*)>$/,"$1"),c+=this.outputLink(a,{href:r.escapes(o),title:r.escapes(i)}),this.inLink=!1;else if((a=this.rules.reflink.exec(t))||(a=this.rules.nolink.exec(t))){if(t=t.substring(a[0].length),e=(a[2]||a[1]).replace(/\s+/g," "),!(e=this.links[e.toLowerCase()])||!e.href){c+=a[0].charAt(0),t=a[0].substring(1)+t;continue}this.inLink=!0,c+=this.outputLink(a,e),this.inLink=!1}else if(a=this.rules.strong.exec(t))t=t.substring(a[0].length),c+=this.renderer.strong(this.output(a[4]||a[3]||a[2]||a[1]));else if(a=this.rules.em.exec(t))t=t.substring(a[0].length),c+=this.renderer.em(this.output(a[6]||a[5]||a[4]||a[3]||a[2]||a[1]));else if(a=this.rules.code.exec(t))t=t.substring(a[0].length),c+=this.renderer.codespan(s(a[2].trim(),!0));else if(a=this.rules.br.exec(t))t=t.substring(a[0].length),c+=this.renderer.br();else if(a=this.rules.del.exec(t))t=t.substring(a[0].length),c+=this.renderer.del(this.output(a[1]));else if(a=this.rules.text.exec(t))t=t.substring(a[0].length),c+=this.renderer.text(s(this.smartypants(a[0])));else if(t)throw new Error("Infinite loop on byte: "+t.charCodeAt(0))}else a[0]=this.rules._backpedal.exec(a[0])[0],t=t.substring(a[0].length),"@"===a[2]?o="mailto:"+(n=s(a[0])):(n=s(a[0]),o="www."===a[1]?"http://"+n:n),c+=this.renderer.link(o,null,n);return c},r.escapes=function(t){return t?t.replace(r.rules._escapes,"$1"):t},r.prototype.outputLink=function(t,e){var n=e.href,r=e.title?s(e.title):null;return"!"!==t[0].charAt(0)?this.renderer.link(n,r,this.output(t[1])):this.renderer.image(n,r,s(t[1]))},r.prototype.smartypants=function(t){return this.options.smartypants?t.replace(/---/g,"—").replace(/--/g,"–").replace(/(^|[-\u2014/(\[{"\s])'/g,"$1‘").replace(/'/g,"’").replace(/(^|[-\u2014/(\[{\u2018\s])"/g,"$1“").replace(/"/g,"”").replace(/\.{3}/g,"…"):t},r.prototype.mangle=function(t){if(!this.options.mangle)return t;for(var e,n="",r=t.length,o=0;o<r;o++)e=t.charCodeAt(o),Math.random()>.5&&(e="x"+e.toString(16)),n+="&#"+e+";";return n},o.prototype.code=function(t,e,n){if(this.options.highlight){var r=this.options.highlight(t,e);null!=r&&r!==t&&(n=!0,t=r)}return e?'<pre><code class="'+this.options.langPrefix+s(e,!0)+'">'+(n?t:s(t,!0))+"</code></pre>\n":"<pre><code>"+(n?t:s(t,!0))+"</code></pre>"},o.prototype.blockquote=function(t){return"<blockquote>\n"+t+"</blockquote>\n"},o.prototype.html=function(t){return t},o.prototype.heading=function(t,e,n){return this.options.headerIds?"<h"+e+' id="'+this.options.headerPrefix+n.toLowerCase().replace(/[^\w]+/g,"-")+'">'+t+"</h"+e+">\n":"<h"+e+">"+t+"</h"+e+">\n"},o.prototype.hr=function(){return this.options.xhtml?"<hr/>\n":"<hr>\n"},o.prototype.list=function(t,e,n){var r=e?"ol":"ul";return"<"+r+(e&&1!==n?' start="'+n+'"':"")+">\n"+t+"</"+r+">\n"},o.prototype.listitem=function(t){return"<li>"+t+"</li>\n"},o.prototype.checkbox=function(t){return"<input "+(t?'checked="" ':"")+'disabled="" type="checkbox"'+(this.options.xhtml?" /":"")+"> "},o.prototype.paragraph=function(t){return"<p>"+t+"</p>\n"},o.prototype.table=function(t,e){return e&&(e="<tbody>"+e+"</tbody>"),"<table>\n<thead>\n"+t+"</thead>\n"+e+"</table>\n"},o.prototype.tablerow=function(t){return"<tr>\n"+t+"</tr>\n"},o.prototype.tablecell=function(t,e){var n=e.header?"th":"td";return(e.align?"<"+n+' align="'+e.align+'">':"<"+n+">")+t+"</"+n+">\n"},o.prototype.strong=function(t){return"<strong>"+t+"</strong>"},o.prototype.em=function(t){return"<em>"+t+"</em>"},o.prototype.codespan=function(t){return"<code>"+t+"</code>"},o.prototype.br=function(){return this.options.xhtml?"<br/>":"<br>"},o.prototype.del=function(t){return"<del>"+t+"</del>"},o.prototype.link=function(t,e,n){if(this.options.sanitize){try{var r=decodeURIComponent(c(t)).replace(/[^\w:]/g,"").toLowerCase()}catch(t){return n}if(0===r.indexOf("javascript:")||0===r.indexOf("vbscript:")||0===r.indexOf("data:"))return n}this.options.baseUrl&&!g.test(t)&&(t=u(this.options.baseUrl,t));try{t=encodeURI(t).replace(/%25/g,"%")}catch(t){return n}var o='<a href="'+s(t)+'"';return e&&(o+=' title="'+e+'"'),o+">"+n+"</a>"},o.prototype.image=function(t,e,n){this.options.baseUrl&&!g.test(t)&&(t=u(this.options.baseUrl,t));var r='<img src="'+t+'" alt="'+n+'"';return e&&(r+=' title="'+e+'"'),r+(this.options.xhtml?"/>":">")},o.prototype.text=function(t){return t},i.prototype.strong=i.prototype.em=i.prototype.codespan=i.prototype.del=i.prototype.text=function(t){return t},i.prototype.link=i.prototype.image=function(t,e,n){return""+n},i.prototype.br=function(){return""},a.parse=function(t,e){return new a(e).parse(t)},a.prototype.parse=function(t){this.inline=new r(t.links,this.options),this.inlineText=new r(t.links,d({},this.options,{renderer:new i})),this.tokens=t.reverse();for(var e="";this.next();)e+=this.tok();return e},a.prototype.next=function(){return this.token=this.tokens.pop()},a.prototype.peek=function(){return this.tokens[this.tokens.length-1]||0},a.prototype.parseText=function(){for(var t=this.token.text;"text"===this.peek().type;)t+="\n"+this.next().text;return this.inline.output(t)},a.prototype.tok=function(){switch(this.token.type){case"space":return"";case"hr":return this.renderer.hr();case"heading":return this.renderer.heading(this.inline.output(this.token.text),this.token.depth,c(this.inlineText.output(this.token.text)));case"code":return this.renderer.code(this.token.text,this.token.lang,this.token.escaped);case"table":var t,e,n,r,o="",i="";for(n="",t=0;t<this.token.header.length;t++)n+=this.renderer.tablecell(this.inline.output(this.token.header[t]),{header:!0,align:this.token.align[t]});for(o+=this.renderer.tablerow(n),t=0;t<this.token.cells.length;t++){for(e=this.token.cells[t],n="",r=0;r<e.length;r++)n+=this.renderer.tablecell(this.inline.output(e[r]),{header:!1,align:this.token.align[r]});i+=this.renderer.tablerow(n)}return this.renderer.table(o,i);case"blockquote_start":for(i="";"blockquote_end"!==this.next().type;)i+=this.tok();return this.renderer.blockquote(i);case"list_start":i="";for(var a=this.token.ordered,s=this.token.start;"list_end"!==this.next().type;)i+=this.tok();return this.renderer.list(i,a,s);case"list_item_start":for(i="",this.token.task&&(i+=this.renderer.checkbox(this.token.checked));"list_item_end"!==this.next().type;)i+="text"===this.token.type?this.parseText():this.tok();return this.renderer.listitem(i);case"loose_item_start":for(i="";"list_item_end"!==this.next().type;)i+=this.tok();return this.renderer.listitem(i);case"html":return this.renderer.html(this.token.text);case"paragraph":return this.renderer.paragraph(this.inline.output(this.token.text));case"text":return this.renderer.paragraph(this.parseText())}};var m={},g=/^$|^[a-z][a-z0-9+.-]*:|^[?#]/i;p.exec=p,f.options=f.setOptions=function(t){return d(f.defaults,t),f},f.getDefaults=function(){return{baseUrl:null,breaks:!1,gfm:!0,headerIds:!0,headerPrefix:"",highlight:null,langPrefix:"language-",mangle:!0,pedantic:!1,renderer:new o,sanitize:!1,sanitizer:null,silent:!1,smartLists:!1,smartypants:!1,tables:!0,xhtml:!1}},f.defaults=f.getDefaults(),f.Parser=a,f.parser=a.parse,f.Renderer=o,f.TextRenderer=i,f.Lexer=n,f.lexer=n.lex,f.InlineLexer=r,f.inlineLexer=r.output,f.parse=f,t.exports=f}(this||"undefined"!=typeof window&&window)}).call(e,n(14))},function(t,e,n){"use strict";function r(t,e){var n=function(t){var e={};return c(t,(function(t,n){c(t,(function(t){e[t]=n}))})),e}(t.pluralTypeToLanguages);return n[e]||n[f.call(e,/-/,1)[0]]||n.en}function o(t,e,n){return t.pluralTypes[r(t,e)](n)}function i(t){return t.replace(/[.*+?^${}()|[\]\\]/g,"\\$&")}function a(t,e,n,r,i){if("string"!=typeof t)throw new TypeError("Polyglot.transformPhrase expects argument #1 to be string");if(null==e)return t;var a=t,s=r||g,c=i||m,l="number"==typeof e?{smart_count:e}:e;if(null!=l.smart_count&&a){var d=f.call(a,v);a=p(d[o(c,n||"en",l.smart_count)]||d[0])}return h.call(a,s,(function(t,e){return u(l,e)&&null!=l[e]?l[e]:t}))}function s(t){var e=t||{};this.phrases={},this.extend(e.phrases||{}),this.currentLocale=e.locale||"en";var n=e.allowMissing?a:null;this.onMissingKey="function"==typeof e.onMissingKey?e.onMissingKey:n,this.warn=e.warn||d,this.tokenRegex=function(t){var e=t&&t.prefix||"%{",n=t&&t.suffix||"}";if(e===v||n===v)throw new RangeError('"'+v+'" token is reserved for pluralization');return new RegExp(i(e)+"(.*?)"+i(n),"g")}(e.interpolation),this.pluralRules=e.pluralRules||m}var c=n(31),l=n(50),u=n(34),p=n(43),d=function(t){l(!1,t)},h=String.prototype.replace,f=String.prototype.split,v="||||",b=function(t){var e=t%100,n=e%10;return 11!==e&&1===n?0:2<=n&&n<=4&&!(e>=12&&e<=14)?1:2},m={pluralTypes:{arabic:function(t){if(t<3)return t;var e=t%100;return e>=3&&e<=10?3:e>=11?4:5},bosnian_serbian:b,chinese:function(){return 0},croatian:b,french:function(t){return t>1?1:0},german:function(t){return 1!==t?1:0},russian:b,lithuanian:function(t){return t%10==1&&t%100!=11?0:t%10>=2&&t%10<=9&&(t%100<11||t%100>19)?1:2},czech:function(t){return 1===t?0:t>=2&&t<=4?1:2},polish:function(t){if(1===t)return 0;var e=t%10;return 2<=e&&e<=4&&(t%100<10||t%100>=20)?1:2},icelandic:function(t){return t%10!=1||t%100==11?1:0},slovenian:function(t){var e=t%100;return 1===e?0:2===e?1:3===e||4===e?2:3}},pluralTypeToLanguages:{arabic:["ar"],bosnian_serbian:["bs-Latn-BA","bs-Cyrl-BA","srl-RS","sr-RS"],chinese:["id","id-ID","ja","ko","ko-KR","lo","ms","th","th-TH","zh"],croatian:["hr","hr-HR"],german:["fa","da","de","en","es","fi","el","he","hi-IN","hu","hu-HU","it","nl","no","pt","sv","tr"],french:["fr","tl","pt-br"],russian:["ru","ru-RU"],lithuanian:["lt"],czech:["cs","cs-CZ","sk"],polish:["pl"],icelandic:["is"],slovenian:["sl-SL"]}},g=/%\{(.*?)\}/g;s.prototype.locale=function(t){return t&&(this.currentLocale=t),this.currentLocale},s.prototype.extend=function(t,e){c(t,(function(t,n){var r=e?e+"."+n:n;"object"==typeof t?this.extend(t,r):this.phrases[r]=t}),this)},s.prototype.unset=function(t,e){"string"==typeof t?delete this.phrases[t]:c(t,(function(t,n){var r=e?e+"."+n:n;"object"==typeof t?this.unset(t,r):delete this.phrases[r]}),this)},s.prototype.clear=function(){this.phrases={}},s.prototype.replace=function(t){this.clear(),this.extend(t)},s.prototype.t=function(t,e){var n,r,o=null==e?{}:e;return"string"==typeof this.phrases[t]?n=this.phrases[t]:"string"==typeof o._?n=o._:this.onMissingKey?r=(0,this.onMissingKey)(t,o,this.currentLocale,this.tokenRegex,this.pluralRules):(this.warn('Missing translation for key: "'+t+'"'),r=t),"string"==typeof n&&(r=a(n,o,this.currentLocale,this.tokenRegex,this.pluralRules)),r},s.prototype.has=function(t){return u(this.phrases,t)},s.transformPhrase=function(t,e,n){return a(t,e,n)},t.exports=s},function(t,e,n){"use strict";function r(t){if(null==t)throw new TypeError("Object.assign cannot be called with null or undefined");return Object(t)}
/*
object-assign
(c) Sindre Sorhus
@license MIT
*/var o=Object.getOwnPropertySymbols,i=Object.prototype.hasOwnProperty,a=Object.prototype.propertyIsEnumerable;t.exports=function(){try{if(!Object.assign)return!1;var t=new String("abc");if(t[5]="de","5"===Object.getOwnPropertyNames(t)[0])return!1;for(var e={},n=0;n<10;n++)e["_"+String.fromCharCode(n)]=n;if("0123456789"!==Object.getOwnPropertyNames(e).map((function(t){return e[t]})).join(""))return!1;var r={};return"abcdefghijklmnopqrst".split("").forEach((function(t){r[t]=t})),"abcdefghijklmnopqrst"===Object.keys(Object.assign({},r)).join("")}catch(t){return!1}}()?Object.assign:function(t,e){for(var n,s,c=r(t),l=1;l<arguments.length;l++){for(var u in n=Object(arguments[l]))i.call(n,u)&&(c[u]=n[u]);if(o){s=o(n);for(var p=0;p<s.length;p++)a.call(n,s[p])&&(c[s[p]]=n[s[p]])}}return c}},function(t,e,n){"use strict";var r;if(!Object.keys){var o=Object.prototype.hasOwnProperty,i=Object.prototype.toString,a=n(10),s=Object.prototype.propertyIsEnumerable,c=!s.call({toString:null},"toString"),l=s.call((function(){}),"prototype"),u=["toString","toLocaleString","valueOf","hasOwnProperty","isPrototypeOf","propertyIsEnumerable","constructor"],p=function(t){var e=t.constructor;return e&&e.prototype===t},d={$applicationCache:!0,$console:!0,$external:!0,$frame:!0,$frameElement:!0,$frames:!0,$innerHeight:!0,$innerWidth:!0,$outerHeight:!0,$outerWidth:!0,$pageXOffset:!0,$pageYOffset:!0,$parent:!0,$scrollLeft:!0,$scrollTop:!0,$scrollX:!0,$scrollY:!0,$self:!0,$webkitIndexedDB:!0,$webkitStorageInfo:!0,$window:!0},h=function(){if("undefined"==typeof window)return!1;for(var t in window)try{if(!d["$"+t]&&o.call(window,t)&&null!==window[t]&&"object"==typeof window[t])try{p(window[t])}catch(t){return!0}}catch(t){return!0}return!1}(),f=function(t){if("undefined"==typeof window||!h)return p(t);try{return p(t)}catch(t){return!1}};r=function(t){var e=null!==t&&"object"==typeof t,n="[object Function]"===i.call(t),r=a(t),s=e&&"[object String]"===i.call(t),p=[];if(!e&&!n&&!r)throw new TypeError("Object.keys called on a non-object");var d=l&&n;if(s&&t.length>0&&!o.call(t,0))for(var h=0;h<t.length;++h)p.push(String(h));if(r&&t.length>0)for(var v=0;v<t.length;++v)p.push(String(v));else for(var b in t)d&&"prototype"===b||!o.call(t,b)||p.push(String(b));if(c)for(var m=f(t),g=0;g<u.length;++g)m&&"constructor"===u[g]||!o.call(t,u[g])||p.push(u[g]);return p}}t.exports=r},function(t,e,n){"use strict";var r=Array.prototype.slice,o=n(10),i=Object.keys,a=i?function(t){return i(t)}:n(39),s=Object.keys;a.shim=function(){return Object.keys?function(){var t=Object.keys(arguments);return t&&t.length===arguments.length}(1,2)||(Object.keys=function(t){return s(o(t)?r.call(t):t)}):Object.keys=a,Object.keys||a},t.exports=a},function(t,e){function n(){throw new Error("setTimeout has not been defined")}function r(){throw new Error("clearTimeout has not been defined")}function o(t){if(l===setTimeout)return setTimeout(t,0);if((l===n||!l)&&setTimeout)return l=setTimeout,setTimeout(t,0);try{return l(t,0)}catch(e){try{return l.call(null,t,0)}catch(e){return l.call(this,t,0)}}}function i(){f&&d&&(f=!1,d.length?h=d.concat(h):v=-1,h.length&&a())}function a(){if(!f){var t=o(i);f=!0;for(var e=h.length;e;){for(d=h,h=[];++v<e;)d&&d[v].run();v=-1,e=h.length}d=null,f=!1,function(t){if(u===clearTimeout)return clearTimeout(t);if((u===r||!u)&&clearTimeout)return u=clearTimeout,clearTimeout(t);try{u(t)}catch(e){try{return u.call(null,t)}catch(e){return u.call(this,t)}}}(t)}}function s(t,e){this.fun=t,this.array=e}function c(){}var l,u,p=t.exports={};!function(){try{l="function"==typeof setTimeout?setTimeout:n}catch(t){l=n}try{u="function"==typeof clearTimeout?clearTimeout:r}catch(t){u=r}}();var d,h=[],f=!1,v=-1;p.nextTick=function(t){var e=new Array(arguments.length-1);if(arguments.length>1)for(var n=1;n<arguments.length;n++)e[n-1]=arguments[n];h.push(new s(t,e)),1!==h.length||f||o(a)},s.prototype.run=function(){this.fun.apply(null,this.array)},p.title="browser",p.browser=!0,p.env={},p.argv=[],p.version="",p.versions={},p.on=c,p.addListener=c,p.once=c,p.off=c,p.removeListener=c,p.removeAllListeners=c,p.emit=c,p.prependListener=c,p.prependOnceListener=c,p.listeners=function(t){return[]},p.binding=function(t){throw new Error("process.binding is not supported")},p.cwd=function(){return"/"},p.chdir=function(t){throw new Error("process.chdir is not supported")},p.umask=function(){return 0}},function(t,e,n){"use strict";function r(t){return t=JSON.stringify(t),!!/^\{[\s\S]*\}$/.test(t)}function o(t){if("string"==typeof t)try{return JSON.parse(t)}catch(e){return t}}function i(t){return"[object Function]"==={}.toString.call(t)}function a(t){return"[object Array]"===Object.prototype.toString.call(t)}function s(){if(!(this instanceof s))return new s}function c(t,e){var n=arguments,o=null;if(u||(u=s()),0===n.length)return u.get();if(1===n.length){if("string"==typeof t)return u.get(t);if(r(t))return u.set(t)}if(2===n.length&&"string"==typeof t){if(!e)return u.remove(t);if(e&&"string"==typeof e)return u.set(t,e);e&&i(e)&&(o=null,o=e(t,u.get(t)),c.set(t,o))}if(2===n.length&&a(t)&&i(e))for(var l=0,p=t.length;l<p;l++)o=e(t[l],u.get(t[l])),c.set(t[l],o);return c}Object.defineProperty(e,"__esModule",{value:!0});
/*!
 * storejs v1.0.24
 * Local storage localstorage package provides a simple API
 * 
 * Copyright (c) 2018 kenny wang <wowohoo@qq.com>
 * https://github.com/jaywcjlove/store.js
 * 
 * Licensed under the MIT license.
 */
var l=window.localStorage;l=function(t){var e="_Is_Incognit";try{t.setItem(e,"yes")}catch(e){if("QuotaExceededError"===e.name){var n=function(){};t.__proto__={setItem:n,getItem:n,removeItem:n,clear:n}}}finally{"yes"===t.getItem(e)&&t.removeItem(e)}return t}(l),s.prototype={set:function(t,e){if(t&&!r(t))l.setItem(t,function(t){return void 0===t||"function"==typeof t?t+"":JSON.stringify(t)}(e));else if(r(t))for(var n in t)this.set(n,t[n]);return this},get:function(t){if(!t){var e={};return this.forEach((function(t,n){return e[t]=n})),e}if("?"===t.charAt(0))return this.has(t.substr(1));var n=arguments;if(n.length>1){for(var r={},i=0,a=n.length;i<a;i++){var s=o(l.getItem(n[i]));s&&(r[n[i]]=s)}return r}return o(l.getItem(t))},clear:function(){return l.clear(),this},remove:function(t){var e=this.get(t);return l.removeItem(t),e},has:function(t){return{}.hasOwnProperty.call(this.get(),t)},keys:function(){var t=[];return this.forEach((function(e){t.push(e)})),t},forEach:function(t){for(var e=0,n=l.length;e<n;e++){var r=l.key(e);t(r,this.get(r))}return this},search:function(t){for(var e=this.keys(),n={},r=0,o=e.length;r<o;r++)e[r].indexOf(t)>-1&&(n[e[r]]=this.get(e[r]));return n}};var u=null;for(var p in s.prototype)c[p]=s.prototype[p];e.default=c},function(t,e,n){"use strict";var r=n(12),o=n(9),i=n(11),a=n(13),s=n(49),c=r(a());o(c,{getPolyfill:a,implementation:i,shim:s}),t.exports=c},function(t,e,n){"use strict";var r=n(1),o=r("%String%"),i=r("%TypeError%");t.exports=function(t){if("symbol"==typeof t)throw new i("Cannot convert a Symbol value to a string");return o(t)}},function(t,e,n){"use strict";var r=n(1)("%TypeError%");t.exports=function(t,e){if(null==t)throw new r(e||"Cannot call method on "+t);return t}},function(t,e,n){"use strict";var r=n(1),o=n(12),i=o(r("String.prototype.indexOf"));t.exports=function(t,e){var n=r(t,!!e);return"function"==typeof n&&i(t,".prototype.")?o(n):n}},function(t,e,n){"use strict";(function(e){var r=e.Symbol,o=n(48);t.exports=function(){return"function"==typeof r&&"function"==typeof Symbol&&"symbol"==typeof r("foo")&&"symbol"==typeof Symbol("bar")&&o()}}).call(e,n(14))},function(t,e,n){"use strict";t.exports=function(){if("function"!=typeof Symbol||"function"!=typeof Object.getOwnPropertySymbols)return!1;if("symbol"==typeof Symbol.iterator)return!0;var t={},e=Symbol("test"),n=Object(e);if("string"==typeof e)return!1;if("[object Symbol]"!==Object.prototype.toString.call(e))return!1;if("[object Symbol]"!==Object.prototype.toString.call(n))return!1;for(e in t[e]=42,t)return!1;if("function"==typeof Object.keys&&0!==Object.keys(t).length)return!1;if("function"==typeof Object.getOwnPropertyNames&&0!==Object.getOwnPropertyNames(t).length)return!1;var r=Object.getOwnPropertySymbols(t);if(1!==r.length||r[0]!==e)return!1;if(!Object.prototype.propertyIsEnumerable.call(t,e))return!1;if("function"==typeof Object.getOwnPropertyDescriptor){var o=Object.getOwnPropertyDescriptor(t,e);if(42!==o.value||!0!==o.enumerable)return!1}return!0}},function(t,e,n){"use strict";var r=n(9),o=n(13);t.exports=function(){var t=o();return r(String.prototype,{trim:t},{trim:function(){return String.prototype.trim!==t}}),t}},function(t,e,n){"use strict";(function(e){var n=function(){};if("production"!==e.env.NODE_ENV){var r=function(t,e){var n=arguments.length;e=new Array(n>1?n-1:0);for(var r=1;r<n;r++)e[r-1]=arguments[r];var o=0,i="Warning: "+t.replace(/%s/g,(function(){return e[o++]}));try{throw new Error(i)}catch(t){}};n=function(t,e,n){var o=arguments.length;n=new Array(o>2?o-2:0);for(var i=2;i<o;i++)n[i-2]=arguments[i];if(void 0===e)throw new Error("`warning(condition, format, ...args)` requires a warning message argument");t||r.apply(null,[e].concat(n))}}t.exports=n}).call(e,n(41))},function(t,e,n){function r(t,e){return new a(e).process(t)}var o=n(15),i=n(16),a=n(52);for(var s in(e=t.exports=r).filterXSS=r,e.FilterXSS=a,o)e[s]=o[s];for(var s in i)e[s]=i[s];"undefined"!=typeof window&&(window.filterXSS=t.exports),"undefined"!=typeof self&&"undefined"!=typeof DedicatedWorkerGlobalScope&&self instanceof DedicatedWorkerGlobalScope&&(self.filterXSS=t.exports)},function(t,e,n){function r(t){return null==t}function o(t){(t=function(t){var e={};for(var n in t)e[n]=t[n];return e}(t||{})).stripIgnoreTag&&(t.onIgnoreTag,t.onIgnoreTag=a.onIgnoreTagStripAll),t.whiteList=t.whiteList||a.whiteList,t.onTag=t.onTag||a.onTag,t.onTagAttr=t.onTagAttr||a.onTagAttr,t.onIgnoreTag=t.onIgnoreTag||a.onIgnoreTag,t.onIgnoreTagAttr=t.onIgnoreTagAttr||a.onIgnoreTagAttr,t.safeAttrValue=t.safeAttrValue||a.safeAttrValue,t.escapeHtml=t.escapeHtml||a.escapeHtml,this.options=t,!1===t.css?this.cssFilter=!1:(t.css=t.css||{},this.cssFilter=new i(t.css))}var i=n(3).FilterCSS,a=n(15),s=n(16),c=s.parseTag,l=s.parseAttr,u=n(5);o.prototype.process=function(t){if(!(t=(t=t||"").toString()))return"";var e=this.options,n=e.whiteList,o=e.onTag,i=e.onIgnoreTag,s=e.onTagAttr,p=e.onIgnoreTagAttr,d=e.safeAttrValue,h=e.escapeHtml,f=this.cssFilter;e.stripBlankChar&&(t=a.stripBlankChar(t)),e.allowCommentTag||(t=a.stripCommentTag(t));var v=!1;e.stripIgnoreTagBody&&(v=a.StripTagBody(e.stripIgnoreTagBody,i),i=v.onIgnoreTag);var b=c(t,(function(t,e,a,c,v){var b,m={sourcePosition:t,position:e,isClosing:v,isWhite:n.hasOwnProperty(a)};if(!r(b=o(a,c,m)))return b;if(m.isWhite){if(m.isClosing)return"</"+a+">";var g=function(t){var e=u.spaceIndex(t);if(-1===e)return{html:"",closing:"/"===t[t.length-2]};var n="/"===(t=u.trim(t.slice(e+1,-1)))[t.length-1];return n&&(t=u.trim(t.slice(0,-1))),{html:t,closing:n}}(c),y=n[a],_=l(g.html,(function(t,e){var n,o=-1!==u.indexOf(y,t);return r(n=s(a,t,e,o))?o?(e=d(a,t,e,f))?t+'="'+e+'"':t:r(n=p(a,t,e,o))?void 0:n:n}));return c="<"+a,_&&(c+=" "+_),g.closing&&(c+=" /"),c+">"}return r(b=i(a,c,m))?h(c):b}),h);return v&&(b=v.remove(b)),b},t.exports=o},function(t,e){t.exports={smile:"e3/2018new_weixioa02_org.png",lovely:"09/2018new_keai_org.png",happy:"1e/2018new_taikaixin_org.png",clap:"6e/2018new_guzhang_thumb.png",whee:"33/2018new_xixi_thumb.png",haha:"8f/2018new_haha_thumb.png","laugh and cry":"4a/2018new_xiaoku_thumb.png",wink:"43/2018new_jiyan_org.png",greddy:"fa/2018new_chanzui_org.png",awkward:"a3/2018new_heixian_thumb.png",sweat:"28/2018new_han_org.png","pick nose":"9a/2018new_wabi_thumb.png",hum:"7c/2018new_heng_thumb.png",angry:"f6/2018new_nu_thumb.png",grievance:"a5/2018new_weiqu_thumb.png",poor:"96/2018new_kelian_org.png",disappoint:"aa/2018new_shiwang_thumb.png",sad:"ee/2018new_beishang_org.png",tear:"6e/2018new_leimu_org.png","no way":"83/2018new_kuxiao_org.png",shy:"c1/2018new_haixiu_org.png",dirt:"10/2018new_wu_thumb.png","love you":"f6/2018new_aini_org.png",kiss:"2c/2018new_qinqin_thumb.png",amorousness:"9d/2018new_huaxin_org.png",longing:"c9/2018new_chongjing_org.png",desire:"3e/2018new_tianping_thumb.png","bad laugh":"4d/2018new_huaixiao_org.png",blackness:"9e/2018new_yinxian_org.png","laugh without word":"2d/2018new_xiaoerbuyu_org.png",titter:"71/2018new_touxiao_org.png",cool:"c4/2018new_ku_org.png","not easy":"aa/2018new_bingbujiandan_thumb.png",think:"30/2018new_sikao_org.png",question:"b8/2018new_ningwen_org.png","no idea":"2a/2018new_wenhao_thumb.png",dizzy:"07/2018new_yun_thumb.png",bomb:"a2/2018new_shuai_thumb.png",bone:"a1/2018new_kulou_thumb.png","be quiet":"b0/2018new_xu_org.png","shut up":"62/2018new_bizui_org.png",stupid:"dd/2018new_shayan_org.png","surprise ":"49/2018new_chijing_org.png",vomit:"08/2018new_tu_org.png",cold:"40/2018new_kouzhao_thumb.png",sick:"3b/2018new_shengbing_thumb.png",bye:"fd/2018new_baibai_thumb.png","look down on":"da/2018new_bishi_org.png","white eye":"ef/2018new_landelini_org.png","left hum":"43/2018new_zuohengheng_thumb.png","right hum":"c1/2018new_youhengheng_thumb.png",crazy:"17/2018new_zhuakuang_org.png","scold ":"87/2018new_zhouma_thumb.png","hit on face":"cb/2018new_dalian_org.png",wow:"ae/2018new_ding_org.png",fan:"86/2018new_hufen02_org.png",money:"a2/2018new_qian_thumb.png",yawn:"55/2018new_dahaqian_org.png",sleepy:"3c/2018new_kun_thumb.png",sleep:"e2/2018new_shuijiao_thumb.png","watermelon ":"01/2018new_chigua_thumb.png",doge:"a1/2018new_doge02_org.png",dog:"22/2018new_erha_org.png",cat:"7b/2018new_miaomiao_thumb.png",thumb:"e6/2018new_zan_org.png",good:"8a/2018new_good_org.png",ok:"45/2018new_ok_org.png",yeah:"29/2018new_ye_thumb.png","shack hand":"e9/2018new_woshou_thumb.png",bow:"e7/2018new_zuoyi_org.png",come:"42/2018new_guolai_thumb.png",punch:"86/2018new_quantou_thumb.png"}},function(t,e){t.exports={nick:"NickName",mail:"E-Mail",link:"Website(http://)",nickFail:"NickName cannot be less than 3 bytes.",mailFail:"Please confirm your email address.",sofa:"No comment yet.",submit:"Submit",reply:"Reply",cancelReply:"Cancel reply",comments:"Comments",cancel:"Cancel",confirm:"Confirm",continue:"Continue",more:"Load More...",preview:"Preview",emoji:"Emoji",expand:"See more....",seconds:"seconds ago",minutes:"minutes ago",hours:"hours ago",days:"days ago",now:"just now",uploading:"Uploading ...",uploadDone:"Upload completed!",busy:"Submit is busy, please wait...","code-98":"Valine initialization failed, please check your version of av-min.js.","code-99":"Valine initialization failed, Please check the `el` element in the init method.","code-100":"Valine initialization failed, Please check your appId and appKey.","code-140":"The total number of API calls today has exceeded the development version limit.","code-401":"Unauthorized operation, Please check your appId and appKey.","code-403":"Access denied by API domain white list, Please check your security domain."}},function(t,e){t.exports={nick:"ニックネーム",mail:"メールアドレス",link:"サイト(http://)",nickFail:"3バイト以上のニックネームをご入力ください.",mailFail:"メールアドレスをご確認ください.",sofa:"コメントしましょう~",submit:"提出する",reply:"返信する",cancelReply:"キャンセル",comments:"コメント",cancel:"キャンセル",confirm:"確認する",continue:"继续",more:"さらに読み込む...",preview:"プレビュー",emoji:"絵文字",expand:"もっと見る",seconds:"秒前",minutes:"分前",hours:"時間前",days:"日前",now:"たっだ今",uploading:"アップロード中...",uploadDone:"アップロードが完了しました!",busy:"20 秒間隔で提出してください    ...","code-98":"ロードエラーです。av-min.js のバージョンを確認してください.","code-99":"ロードエラーです。initにある`el`エレメントを確認ください.","code-100":"ロードエラーです。AppIdとAppKeyを確認ください.","code-140":"今日のAPIコールの総数が開発バージョンの上限を超えた.","code-401":"権限が制限されています。AppIdとAppKeyを確認ください.","code-403":"アクセスがAPIなどに制限されました、ドメイン名のセキュリティ設定を確認ください"}},function(t,e){t.exports={nick:"昵称",mail:"邮箱",link:"网址(http://)",nickFail:"昵称不能少于3个字符",mailFail:"请填写正确的邮件地址",sofa:"来发评论吧~",submit:"提交",reply:"回复",cancelReply:"取消回复",comments:"评论",cancel:"取消",confirm:"确认",continue:"继续",more:"加载更多...",preview:"预览",emoji:"表情",expand:"查看更多...",seconds:"秒前",minutes:"分钟前",hours:"小时前",days:"天前",now:"刚刚",uploading:"正在传输...",uploadDone:"传输完成!",busy:"操作频繁，请稍候再试...","code-98":"Valine 初始化失败，请检查 av-min.js 版本","code-99":"Valine 初始化失败，请检查init中的`el`元素.","code-100":"Valine 初始化失败，请检查你的AppId和AppKey.","code-140":"今日 API 调用总次数已超过开发版限制.","code-401":"未经授权的操作，请检查你的AppId和AppKey.","code-403":"访问被API域名白名单拒绝，请检查你的安全域名设置."}},function(t,e){t.exports={nick:"暱稱",mail:"郵箱",link:"網址(http://)",nickFail:"昵稱不能少於3個字符",mailFail:"請填寫正確的郵件地址",sofa:"來發評論吧~",submit:"提交",reply:"回覆",cancelReply:"取消回覆",comments:"評論",cancel:"取消",confirm:"確認",continue:"繼續",more:"加載更多...",preview:"預覽",emoji:"表情",expand:"查看更多...",seconds:"秒前",minutes:"分鐘前",hours:"小時前",days:"天前",now:"剛剛",uploading:"正在上傳...",uploadDone:"上傳完成!",busy:"操作頻繁，請稍候再試...","code-98":"Valine 初始化失敗，請檢查 av-min.js 版本","code-99":"Valine 初始化失敗，請檢查init中的`el`元素.","code-100":"Valine 初始化失敗，請檢查你的AppId和AppKey.","code-140":"今日 API 調用總次數已超過開發版限制.","code-401":"未經授權的操作，請檢查你的AppId和AppKey.","code-403":"訪問被API域名白名單拒絕，請檢查你的安全域名設置."}},function(t,e,n){var r=n(59);"string"==typeof r&&(r=[[t.i,r,""]]);var o={transform:void 0};n(61)(r,o),r.locals&&(t.exports=r.locals)},function(t,e,n){(t.exports=n(60)(!1)).push([t.i,'.v[data-class=v]{font-size:16px;text-align:left}.v[data-class=v] *{-webkit-box-sizing:border-box;box-sizing:border-box;line-height:1.75}.v[data-class=v] .status-bar,.v[data-class=v] .veditor,.v[data-class=v] .vinput,.v[data-class=v] p,.v[data-class=v] pre code{color:#555}.v[data-class=v] .vsys,.v[data-class=v] .vtime{color:#b3b3b3}.v[data-class=v] .text-right{text-align:right}.v[data-class=v] .text-center{text-align:center}.v[data-class=v] img{max-width:100%;border:none}.v[data-class=v] hr{margin:.825em 0;border-color:#f6f6f6;border-style:dashed}.v[data-class=v].hide-avatar .vimg{display:none}.v[data-class=v] a{position:relative;cursor:pointer;color:#1abc9c;text-decoration:none;display:inline-block}.v[data-class=v] a:hover{color:#d7191a}.v[data-class=v] code,.v[data-class=v] pre{background-color:#f8f8f8;padding:.2em .4em;border-radius:3px;font-size:85%;margin:0}.v[data-class=v] pre{padding:10px;overflow:auto;line-height:1.45}.v[data-class=v] pre code{padding:0;background:transparent;white-space:pre-wrap;word-break:keep-all}.v[data-class=v] blockquote{color:#666;margin:.5em 0;padding:0 0 0 1em;border-left:8px solid hsla(0,0%,93%,.5)}.v[data-class=v] .vinput{border:none;resize:none;outline:none;padding:10px 5px;max-width:100%;font-size:.775em}.v[data-class=v] input[type=checkbox],.v[data-class=v] input[type=radio]{display:inline-block;vertical-align:middle;margin-top:-2px}.v[data-class=v] .vicon{cursor:pointer;display:inline-block;overflow:hidden;fill:#555;vertical-align:middle}.v[data-class=v] .vicon+.vicon{margin-left:10px}.v[data-class=v] .vicon.actived{fill:#66b1ff}.v[data-class=v] .vrow{font-size:0;padding:10px 0}.v[data-class=v] .vrow .vcol{display:inline-block;vertical-align:middle;font-size:14px}.v[data-class=v] .vrow .vcol.vcol-20{width:20%}.v[data-class=v] .vrow .vcol.vcol-30{width:30%}.v[data-class=v] .vrow .vcol.vcol-40{width:40%}.v[data-class=v] .vrow .vcol.vcol-50{width:50%}.v[data-class=v] .vrow .vcol.vcol-60{width:60%}.v[data-class=v] .vrow .vcol.vcol-70{width:70%}.v[data-class=v] .vrow .vcol.vcol-80{width:80%}.v[data-class=v] .vrow .vcol.vctrl{font-size:12px}.v[data-class=v] .emoji,.v[data-class=v] .vemoji{max-width:25px;vertical-align:middle;margin:0 1px;display:inline-block}.v[data-class=v] .vwrap{border:1px solid #f0f0f0;border-radius:4px;margin-bottom:10px;overflow:hidden;position:relative;padding:10px}.v[data-class=v] .vwrap input{background:transparent}.v[data-class=v] .vwrap .vedit{position:relative;padding-top:10px}.v[data-class=v] .vwrap .cancel-reply-btn{position:absolute;right:5px;top:5px;cursor:pointer}.v[data-class=v] .vwrap .vemojis{display:none;font-size:18px;max-height:145px;overflow:auto;padding-bottom:10px;-webkit-box-shadow:0 0 1px #f0f0f0;box-shadow:0 0 1px #f0f0f0}.v[data-class=v] .vwrap .vemojis i{font-style:normal;padding-top:7px;width:36px;cursor:pointer;text-align:center;display:inline-block;vertical-align:middle}.v[data-class=v] .vwrap .vpreview{padding:7px;-webkit-box-shadow:0 0 1px #f0f0f0;box-shadow:0 0 1px #f0f0f0}.v[data-class=v] .vwrap .vheader .vinput{width:33.33%;border-bottom:1px dashed #dedede}.v[data-class=v] .vwrap .vheader.item2 .vinput{width:50%}.v[data-class=v] .vwrap .vheader.item1 .vinput{width:100%}.v[data-class=v] .vwrap .vheader .vinput:focus{border-bottom-color:#eb5055}@media screen and (max-width:520px){.v[data-class=v] .vwrap .vheader.item2 .vinput,.v[data-class=v] .vwrap .vheader .vinput{width:100%}}.v[data-class=v] .vpower{color:#999;font-size:.75em;padding:.5em 0}.v[data-class=v] .vpower a{font-size:.75em}.v[data-class=v] .vcount{padding:5px;font-weight:600;font-size:1.25em}.v[data-class=v] ol,.v[data-class=v] ul{padding:0;margin-left:1.25em}.v[data-class=v] .txt-center{text-align:center}.v[data-class=v] .txt-right{text-align:right}.v[data-class=v] .pd5{padding:5px}.v[data-class=v] .pd10{padding:10px}.v[data-class=v] .veditor{width:100%;min-height:8.75em;font-size:.875em;background:transparent;resize:vertical;-webkit-transition:all .25s ease;transition:all .25s ease}.v[data-class=v] .vbtn{-webkit-transition-duration:.4s;transition-duration:.4s;text-align:center;color:#555;border:1px solid #ededed;border-radius:.3em;display:inline-block;background:transparent;margin-bottom:0;font-weight:400;vertical-align:middle;-ms-touch-action:manipulation;touch-action:manipulation;cursor:pointer;white-space:nowrap;padding:.5em 1.25em;font-size:.875em;line-height:1.42857143;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;outline:none}.v[data-class=v] .vbtn+.vbtn{margin-left:1.25em}.v[data-class=v] .vbtn:active,.v[data-class=v] .vbtn:hover{color:#3090e4;border-color:#3090e4}.v[data-class=v] .vbtn:disabled{border-color:#e1e1e1;color:#e1e1e1;background-color:#fdfafa;cursor:not-allowed}.v[data-class=v] .vempty{padding:1.25em;text-align:center;color:#555;overflow:auto}.v[data-class=v] .vsys{display:inline-block;padding:.2em .5em;font-size:.75em;border-radius:.2em;margin-right:.3em}@media screen and (max-width:520px){.v[data-class=v] .vsys{display:none}}.v[data-class=v] .vcards{width:100%}.v[data-class=v] .vcards .vcard{padding-top:1.25em;position:relative;display:block}.v[data-class=v] .vcards .vcard:after{content:"";clear:both;display:block}.v[data-class=v] .vcards .vcard .vimg{width:3.125em;height:3.125em;float:left;border-radius:50%;margin-right:.7525em;border:1px solid #f5f5f5;padding:.125em}@media screen and (max-width:720px){.v[data-class=v] .vcards .vcard .vimg{width:2.5em;height:2.5em}}.v[data-class=v] .vcards .vcard .vhead{line-height:1.5;margin-top:0}.v[data-class=v] .vcards .vcard .vhead .vnick{position:relative;font-size:.875em;font-weight:500;margin-right:.875em;cursor:pointer;text-decoration:none;display:inline-block}.v[data-class=v] .vcards .vcard .vhead .vnick:hover{color:#d7191a}.v[data-class=v] .vcards .vcard .vh{overflow:hidden;padding-bottom:.5em;border-bottom:1px dashed #f5f5f5}.v[data-class=v] .vcards .vcard .vh .vtime{font-size:.75em;margin-right:.875em}.v[data-class=v] .vcards .vcard .vh .vmeta{line-height:1;position:relative}.v[data-class=v] .vcards .vcard .vh .vmeta .vat{font-size:.8125em;color:#ef2f11;cursor:pointer;float:right}.v[data-class=v] .vcards .vcard:last-child .vh{border-bottom:none}.v[data-class=v] .vcards .vcard .vcontent{word-wrap:break-word;word-break:break-all;font-size:.875em;line-height:2;position:relative;margin-bottom:.75em;padding-top:.625em}.v[data-class=v] .vcards .vcard .vcontent.expand{cursor:pointer;max-height:8em;overflow:hidden}.v[data-class=v] .vcards .vcard .vcontent.expand:before{display:block;content:"";position:absolute;width:100%;left:0;top:0;bottom:3.15em;background:-webkit-gradient(linear,left top,left bottom,from(hsla(0,0%,100%,0)),to(hsla(0,0%,100%,.9)));background:linear-gradient(180deg,hsla(0,0%,100%,0),hsla(0,0%,100%,.9));z-index:999}.v[data-class=v] .vcards .vcard .vcontent.expand:after{display:block;content:attr(data-expand);text-align:center;color:#828586;position:absolute;width:100%;height:3.15em;line-height:3.15em;left:0;bottom:0;z-index:999;background:hsla(0,0%,100%,.9)}.v[data-class=v] .vcards .vcard .vquote{padding-left:1em;border-left:1px dashed hsla(0,0%,93%,.5)}.v[data-class=v] .vcards .vcard .vquote .vimg{width:2.225em;height:2.225em}.v[data-class=v] .vpage .vmore{margin:1em 0}.v[data-class=v] .clear{content:"";display:block;clear:both}@-webkit-keyframes spin{0%{-webkit-transform:rotate(0deg);transform:rotate(0deg)}to{-webkit-transform:rotate(1turn);transform:rotate(1turn)}}@keyframes spin{0%{-webkit-transform:rotate(0deg);transform:rotate(0deg)}to{-webkit-transform:rotate(1turn);transform:rotate(1turn)}}@-webkit-keyframes pulse{50%{background:#dcdcdc}}@keyframes pulse{50%{background:#dcdcdc}}.v[data-class=v] .vspinner{width:22px;height:22px;display:inline-block;border:6px double #a0a0a0;border-top-color:transparent;border-bottom-color:transparent;border-radius:50%;-webkit-animation:spin 1s infinite linear;animation:spin 1s infinite linear;position:relative;vertical-align:middle;margin:0 5px}.dark .v[data-class=v] .status-bar,.dark .v[data-class=v] .veditor,.dark .v[data-class=v] .vinput,.dark .v[data-class=v] p,.dark .v[data-class=v] pre code,.night .v[data-class=v] .status-bar,.night .v[data-class=v] .veditor,.night .v[data-class=v] .vinput,.night .v[data-class=v] p,.night .v[data-class=v] pre code,.theme__dark .v[data-class=v] .status-bar,.theme__dark .v[data-class=v] .veditor,.theme__dark .v[data-class=v] .vinput,.theme__dark .v[data-class=v] p,.theme__dark .v[data-class=v] pre code,[data-theme=dark] .v[data-class=v] .status-bar,[data-theme=dark] .v[data-class=v] .veditor,[data-theme=dark] .v[data-class=v] .vinput,[data-theme=dark] .v[data-class=v] p,[data-theme=dark] .v[data-class=v] pre code{color:#b2b2b5}.dark .v[data-class=v] .vsys,.dark .v[data-class=v] .vtime,.night .v[data-class=v] .vsys,.night .v[data-class=v] .vtime,.theme__dark .v[data-class=v] .vsys,.theme__dark .v[data-class=v] .vtime,[data-theme=dark] .v[data-class=v] .vsys,[data-theme=dark] .v[data-class=v] .vtime{color:#929298}.dark .v[data-class=v] code,.dark .v[data-class=v] pre,.dark .v[data-class=v] pre code,.night .v[data-class=v] code,.night .v[data-class=v] pre,.night .v[data-class=v] pre code,.theme__dark .v[data-class=v] code,.theme__dark .v[data-class=v] pre,.theme__dark .v[data-class=v] pre code,[data-theme=dark] .v[data-class=v] code,[data-theme=dark] .v[data-class=v] pre,[data-theme=dark] .v[data-class=v] pre code{color:#929298;background-color:#151414}.dark .v[data-class=v] .vwrap,.night .v[data-class=v] .vwrap,.theme__dark .v[data-class=v] .vwrap,[data-theme=dark] .v[data-class=v] .vwrap{border-color:#b2b2b5}.dark .v[data-class=v] .vicon,.night .v[data-class=v] .vicon,.theme__dark .v[data-class=v] .vicon,[data-theme=dark] .v[data-class=v] .vicon{fill:#b2b2b5}.dark .v[data-class=v] .vicon.actived,.night .v[data-class=v] .vicon.actived,.theme__dark .v[data-class=v] .vicon.actived,[data-theme=dark] .v[data-class=v] .vicon.actived{fill:#66b1ff}.dark .v[data-class=v] .vbtn,.night .v[data-class=v] .vbtn,.theme__dark .v[data-class=v] .vbtn,[data-theme=dark] .v[data-class=v] .vbtn{color:#b2b2b5;border-color:#b2b2b5}.dark .v[data-class=v] .vbtn:hover,.night .v[data-class=v] .vbtn:hover,.theme__dark .v[data-class=v] .vbtn:hover,[data-theme=dark] .v[data-class=v] .vbtn:hover{color:#66b1ff;border-color:#66b1ff}.dark .v[data-class=v] a:hover,.night .v[data-class=v] a:hover,.theme__dark .v[data-class=v] a:hover,[data-theme=dark] .v[data-class=v] a:hover{color:#d7191a}.dark .v[data-class=v] .vcards .vcard .vcontent.expand:before,.night .v[data-class=v] .vcards .vcard .vcontent.expand:before,.theme__dark .v[data-class=v] .vcards .vcard .vcontent.expand:before,[data-theme=dark] .v[data-class=v] .vcards .vcard .vcontent.expand:before{background:-webkit-gradient(linear,left top,left bottom,from(rgba(0,0,0,.3)),to(rgba(0,0,0,.7)));background:linear-gradient(180deg,rgba(0,0,0,.3),rgba(0,0,0,.7))}.dark .v[data-class=v] .vcards .vcard .vcontent.expand:after,.night .v[data-class=v] .vcards .vcard .vcontent.expand:after,.theme__dark .v[data-class=v] .vcards .vcard .vcontent.expand:after,[data-theme=dark] .v[data-class=v] .vcards .vcard .vcontent.expand:after{background:rgba(0,0,0,.7)}@media (prefers-color-scheme:dark){.v[data-class=v] .status-bar,.v[data-class=v] .veditor,.v[data-class=v] .vinput,.v[data-class=v] p,.v[data-class=v] pre code{color:#b2b2b5}.v[data-class=v] .vsys,.v[data-class=v] .vtime{color:#929298}.v[data-class=v] code,.v[data-class=v] pre,.v[data-class=v] pre code{color:#929298;background-color:#151414}.v[data-class=v] .vwrap{border-color:#b2b2b5}.v[data-class=v] .vicon{fill:#b2b2b5}.v[data-class=v] .vicon.actived{fill:#66b1ff}.v[data-class=v] .vbtn{color:#b2b2b5;border-color:#b2b2b5}.v[data-class=v] .vbtn:hover{color:#66b1ff;border-color:#66b1ff}.v[data-class=v] a:hover{color:#d7191a}.v[data-class=v] .vcards .vcard .vcontent.expand:before{background:-webkit-gradient(linear,left top,left bottom,from(rgba(0,0,0,.3)),to(rgba(0,0,0,.7)));background:linear-gradient(180deg,rgba(0,0,0,.3),rgba(0,0,0,.7))}.v[data-class=v] .vcards .vcard .vcontent.expand:after{background:rgba(0,0,0,.7)}}',""])},function(t,e){function n(t,e){var n=t[1]||"",r=t[3];if(!r)return n;if(e&&"function"==typeof btoa){var o=function(t){return"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,"+btoa(unescape(encodeURIComponent(JSON.stringify(t))))+" */"}(r);return[n].concat(r.sources.map((function(t){return"/*# sourceURL="+r.sourceRoot+t+" */"}))).concat([o]).join("\n")}return[n].join("\n")}t.exports=function(t){var e=[];return e.toString=function(){return this.map((function(e){var r=n(e,t);return e[2]?"@media "+e[2]+"{"+r+"}":r})).join("")},e.i=function(t,n){"string"==typeof t&&(t=[[null,t,""]]);for(var r={},o=0;o<this.length;o++){var i=this[o][0];"number"==typeof i&&(r[i]=!0)}for(o=0;o<t.length;o++){var a=t[o];"number"==typeof a[0]&&r[a[0]]||(n&&!a[2]?a[2]=n:n&&(a[2]="("+a[2]+") and ("+n+")"),e.push(a))}},e}},function(t,e,n){function r(t,e){for(var n=0;n<t.length;n++){var r=t[n],o=f[r.id];if(o){o.refs++;for(var i=0;i<o.parts.length;i++)o.parts[i](r.parts[i]);for(;i<r.parts.length;i++)o.parts.push(u(r.parts[i],e))}else{var a=[];for(i=0;i<r.parts.length;i++)a.push(u(r.parts[i],e));f[r.id]={id:r.id,refs:1,parts:a}}}}function o(t,e){for(var n=[],r={},o=0;o<t.length;o++){var i=t[o],a=e.base?i[0]+e.base:i[0],s={css:i[1],media:i[2],sourceMap:i[3]};r[a]?r[a].parts.push(s):n.push(r[a]={id:a,parts:[s]})}return n}function i(t,e){var n=b(t.insertInto);if(!n)throw new Error("Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.");var r=y[y.length-1];if("top"===t.insertAt)r?r.nextSibling?n.insertBefore(e,r.nextSibling):n.appendChild(e):n.insertBefore(e,n.firstChild),y.push(e);else{if("bottom"!==t.insertAt)throw new Error("Invalid value for parameter 'insertAt'. Must be 'top' or 'bottom'.");n.appendChild(e)}}function a(t){if(null===t.parentNode)return!1;t.parentNode.removeChild(t);var e=y.indexOf(t);e>=0&&y.splice(e,1)}function s(t){var e=document.createElement("style");return t.attrs.type="text/css",l(e,t.attrs),i(t,e),e}function c(t){var e=document.createElement("link");return t.attrs.type="text/css",t.attrs.rel="stylesheet",l(e,t.attrs),i(t,e),e}function l(t,e){Object.keys(e).forEach((function(n){t.setAttribute(n,e[n])}))}function u(t,e){var n,r,o,i;if(e.transform&&t.css){if(!(i=e.transform(t.css)))return function(){};t.css=i}if(e.singleton){var l=g++;n=m||(m=s(e)),r=p.bind(null,n,l,!1),o=p.bind(null,n,l,!0)}else t.sourceMap&&"function"==typeof URL&&"function"==typeof URL.createObjectURL&&"function"==typeof URL.revokeObjectURL&&"function"==typeof Blob&&"function"==typeof btoa?(n=c(e),r=h.bind(null,n,e),o=function(){a(n),n.href&&URL.revokeObjectURL(n.href)}):(n=s(e),r=d.bind(null,n),o=function(){a(n)});return r(t),function(e){if(e){if(e.css===t.css&&e.media===t.media&&e.sourceMap===t.sourceMap)return;r(t=e)}else o()}}function p(t,e,n,r){var o=n?"":r.css;if(t.styleSheet)t.styleSheet.cssText=x(e,o);else{var i=document.createTextNode(o),a=t.childNodes;a[e]&&t.removeChild(a[e]),a.length?t.insertBefore(i,a[e]):t.appendChild(i)}}function d(t,e){var n=e.css,r=e.media;if(r&&t.setAttribute("media",r),t.styleSheet)t.styleSheet.cssText=n;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(n))}}function h(t,e,n){var r=n.css,o=n.sourceMap,i=void 0===e.convertToAbsoluteUrls&&o;(e.convertToAbsoluteUrls||i)&&(r=_(r)),o&&(r+="\n/*# sourceMappingURL=data:application/json;base64,"+btoa(unescape(encodeURIComponent(JSON.stringify(o))))+" */");var a=new Blob([r],{type:"text/css"}),s=t.href;t.href=URL.createObjectURL(a),s&&URL.revokeObjectURL(s)}var f={},v=function(t){var e;return function(){return void 0===e&&(e=t.apply(this,arguments)),e}}((function(){return window&&document&&document.all&&!window.atob})),b=function(t){var e={};return function(n){return void 0===e[n]&&(e[n]=t.call(this,n)),e[n]}}((function(t){return document.querySelector(t)})),m=null,g=0,y=[],_=n(62);t.exports=function(t,e){if("undefined"!=typeof DEBUG&&DEBUG&&"object"!=typeof document)throw new Error("The style-loader cannot be used in a non-browser environment");(e=e||{}).attrs="object"==typeof e.attrs?e.attrs:{},e.singleton||(e.singleton=v()),e.insertInto||(e.insertInto="head"),e.insertAt||(e.insertAt="bottom");var n=o(t,e);return r(n,e),function(t){for(var i=[],a=0;a<n.length;a++){var s=n[a];(c=f[s.id]).refs--,i.push(c)}for(t&&r(o(t,e),e),a=0;a<i.length;a++){var c;if(0===(c=i[a]).refs){for(var l=0;l<c.parts.length;l++)c.parts[l]();delete f[c.id]}}}};var x=function(){var t=[];return function(e,n){return t[e]=n,t.filter(Boolean).join("\n")}}()},function(t,e){t.exports=function(t){var e="undefined"!=typeof window&&window.location;if(!e)throw new Error("fixUrls requires window.location");if(!t||"string"!=typeof t)return t;var n=e.protocol+"//"+e.host,r=n+e.pathname.replace(/\/[^\/]*$/,"/");return t.replace(/url\s*\(((?:[^)(]|\((?:[^)(]+|\([^)(]*\))*\))*)\)/gi,(function(t,e){var o,i=e.trim().replace(/^"(.*)"$/,(function(t,e){return e})).replace(/^'(.*)'$/,(function(t,e){return e}));return/^(#|data:|http:\/\/|https:\/\/|file:\/\/\/)/i.test(i)?t:(o=0===i.indexOf("//")?i:0===i.indexOf("/")?n+i:r+i.replace(/^\.\//,""),"url("+JSON.stringify(o)+")")}))}},function(t,e,n){n(58),t.exports=n(18)}])},function(t,e,n){"use strict";n(202)},function(t,e,n){"use strict";var r=n(375),o=n(203),i=n(130),a=Object.prototype.hasOwnProperty,s={brackets:function(t){return t+"[]"},comma:"comma",indices:function(t,e){return t+"["+e+"]"},repeat:function(t){return t}},c=Array.isArray,l=Array.prototype.push,u=function(t,e){l.apply(t,c(e)?e:[e])},p=Date.prototype.toISOString,d=i.default,h={addQueryPrefix:!1,allowDots:!1,charset:"utf-8",charsetSentinel:!1,delimiter:"&",encode:!0,encoder:o.encode,encodeValuesOnly:!1,format:d,formatter:i.formatters[d],indices:!1,serializeDate:function(t){return p.call(t)},skipNulls:!1,strictNullHandling:!1},f=function t(e,n,i,a,s,l,p,d,f,v,b,m,g,y,_){var x,w=e;if(_.has(e))throw new RangeError("Cyclic object value");if("function"==typeof p?w=p(n,w):w instanceof Date?w=v(w):"comma"===i&&c(w)&&(w=o.maybeMap(w,(function(t){return t instanceof Date?v(t):t}))),null===w){if(a)return l&&!g?l(n,h.encoder,y,"key",b):n;w=""}if("string"==typeof(x=w)||"number"==typeof x||"boolean"==typeof x||"symbol"==typeof x||"bigint"==typeof x||o.isBuffer(w))return l?[m(g?n:l(n,h.encoder,y,"key",b))+"="+m(l(w,h.encoder,y,"value",b))]:[m(n)+"="+m(String(w))];var S,O=[];if(void 0===w)return O;if("comma"===i&&c(w))S=[{value:w.length>0?w.join(",")||null:void 0}];else if(c(p))S=p;else{var $=Object.keys(w);S=d?$.sort(d):$}for(var T=0;T<S.length;++T){var E=S[T],C="object"==typeof E&&void 0!==E.value?E.value:w[E];if(!s||null!==C){var I=c(w)?"function"==typeof i?i(n,E):n:n+(f?"."+E:"["+E+"]");_.set(e,!0);var A=r();u(O,t(C,I,i,a,s,l,p,d,f,v,b,m,g,y,A))}}return O};t.exports=function(t,e){var n,o=t,l=function(t){if(!t)return h;if(null!==t.encoder&&void 0!==t.encoder&&"function"!=typeof t.encoder)throw new TypeError("Encoder has to be a function.");var e=t.charset||h.charset;if(void 0!==t.charset&&"utf-8"!==t.charset&&"iso-8859-1"!==t.charset)throw new TypeError("The charset option must be either utf-8, iso-8859-1, or undefined");var n=i.default;if(void 0!==t.format){if(!a.call(i.formatters,t.format))throw new TypeError("Unknown format option provided.");n=t.format}var r=i.formatters[n],o=h.filter;return("function"==typeof t.filter||c(t.filter))&&(o=t.filter),{addQueryPrefix:"boolean"==typeof t.addQueryPrefix?t.addQueryPrefix:h.addQueryPrefix,allowDots:void 0===t.allowDots?h.allowDots:!!t.allowDots,charset:e,charsetSentinel:"boolean"==typeof t.charsetSentinel?t.charsetSentinel:h.charsetSentinel,delimiter:void 0===t.delimiter?h.delimiter:t.delimiter,encode:"boolean"==typeof t.encode?t.encode:h.encode,encoder:"function"==typeof t.encoder?t.encoder:h.encoder,encodeValuesOnly:"boolean"==typeof t.encodeValuesOnly?t.encodeValuesOnly:h.encodeValuesOnly,filter:o,format:n,formatter:r,serializeDate:"function"==typeof t.serializeDate?t.serializeDate:h.serializeDate,skipNulls:"boolean"==typeof t.skipNulls?t.skipNulls:h.skipNulls,sort:"function"==typeof t.sort?t.sort:null,strictNullHandling:"boolean"==typeof t.strictNullHandling?t.strictNullHandling:h.strictNullHandling}}(e);"function"==typeof l.filter?o=(0,l.filter)("",o):c(l.filter)&&(n=l.filter);var p,d=[];if("object"!=typeof o||null===o)return"";p=e&&e.arrayFormat in s?e.arrayFormat:e&&"indices"in e?e.indices?"indices":"repeat":"indices";var v=s[p];n||(n=Object.keys(o)),l.sort&&n.sort(l.sort);for(var b=r(),m=0;m<n.length;++m){var g=n[m];l.skipNulls&&null===o[g]||u(d,f(o[g],g,v,l.strictNullHandling,l.skipNulls,l.encode?l.encoder:null,l.filter,l.sort,l.allowDots,l.serializeDate,l.format,l.formatter,l.encodeValuesOnly,l.charset,b))}var y=d.join(l.delimiter),_=!0===l.addQueryPrefix?"?":"";return l.charsetSentinel&&("iso-8859-1"===l.charset?_+="utf8=%26%2310003%3B&":_+="utf8=%E2%9C%93&"),y.length>0?_+y:""}},function(t,e,n){"use strict";var r=n(128),o=n(380),i=n(382),a=r("%TypeError%"),s=r("%WeakMap%",!0),c=r("%Map%",!0),l=o("WeakMap.prototype.get",!0),u=o("WeakMap.prototype.set",!0),p=o("WeakMap.prototype.has",!0),d=o("Map.prototype.get",!0),h=o("Map.prototype.set",!0),f=o("Map.prototype.has",!0),v=function(t,e){for(var n,r=t;null!==(n=r.next);r=n)if(n.key===e)return r.next=n.next,n.next=t.next,t.next=n,n};t.exports=function(){var t,e,n,r={assert:function(t){if(!r.has(t))throw new a("Side channel does not contain "+i(t))},get:function(r){if(s&&r&&("object"==typeof r||"function"==typeof r)){if(t)return l(t,r)}else if(c){if(e)return d(e,r)}else if(n)return function(t,e){var n=v(t,e);return n&&n.value}(n,r)},has:function(r){if(s&&r&&("object"==typeof r||"function"==typeof r)){if(t)return p(t,r)}else if(c){if(e)return f(e,r)}else if(n)return function(t,e){return!!v(t,e)}(n,r);return!1},set:function(r,o){s&&r&&("object"==typeof r||"function"==typeof r)?(t||(t=new s),u(t,r,o)):c?(e||(e=new c),h(e,r,o)):(n||(n={key:{},next:null}),function(t,e,n){var r=v(t,e);r?r.value=n:t.next={key:e,next:t.next,value:n}}(n,r,o))}};return r}},function(t,e,n){"use strict";var r="undefined"!=typeof Symbol&&Symbol,o=n(377);t.exports=function(){return"function"==typeof r&&("function"==typeof Symbol&&("symbol"==typeof r("foo")&&("symbol"==typeof Symbol("bar")&&o())))}},function(t,e,n){"use strict";t.exports=function(){if("function"!=typeof Symbol||"function"!=typeof Object.getOwnPropertySymbols)return!1;if("symbol"==typeof Symbol.iterator)return!0;var t={},e=Symbol("test"),n=Object(e);if("string"==typeof e)return!1;if("[object Symbol]"!==Object.prototype.toString.call(e))return!1;if("[object Symbol]"!==Object.prototype.toString.call(n))return!1;for(e in t[e]=42,t)return!1;if("function"==typeof Object.keys&&0!==Object.keys(t).length)return!1;if("function"==typeof Object.getOwnPropertyNames&&0!==Object.getOwnPropertyNames(t).length)return!1;var r=Object.getOwnPropertySymbols(t);if(1!==r.length||r[0]!==e)return!1;if(!Object.prototype.propertyIsEnumerable.call(t,e))return!1;if("function"==typeof Object.getOwnPropertyDescriptor){var o=Object.getOwnPropertyDescriptor(t,e);if(42!==o.value||!0!==o.enumerable)return!1}return!0}},function(t,e,n){"use strict";var r="Function.prototype.bind called on incompatible ",o=Array.prototype.slice,i=Object.prototype.toString;t.exports=function(t){var e=this;if("function"!=typeof e||"[object Function]"!==i.call(e))throw new TypeError(r+e);for(var n,a=o.call(arguments,1),s=function(){if(this instanceof n){var r=e.apply(this,a.concat(o.call(arguments)));return Object(r)===r?r:this}return e.apply(t,a.concat(o.call(arguments)))},c=Math.max(0,e.length-a.length),l=[],u=0;u<c;u++)l.push("$"+u);if(n=Function("binder","return function ("+l.join(",")+"){ return binder.apply(this,arguments); }")(s),e.prototype){var p=function(){};p.prototype=e.prototype,n.prototype=new p,p.prototype=null}return n}},function(t,e,n){"use strict";var r=n(129);t.exports=r.call(Function.call,Object.prototype.hasOwnProperty)},function(t,e,n){"use strict";var r=n(128),o=n(381),i=o(r("String.prototype.indexOf"));t.exports=function(t,e){var n=r(t,!!e);return"function"==typeof n&&i(t,".prototype.")>-1?o(n):n}},function(t,e,n){"use strict";var r=n(129),o=n(128),i=o("%Function.prototype.apply%"),a=o("%Function.prototype.call%"),s=o("%Reflect.apply%",!0)||r.call(a,i),c=o("%Object.getOwnPropertyDescriptor%",!0),l=o("%Object.defineProperty%",!0),u=o("%Math.max%");if(l)try{l({},"a",{value:1})}catch(t){l=null}t.exports=function(t){var e=s(r,a,arguments);if(c&&l){var n=c(e,"length");n.configurable&&l(e,"length",{value:1+u(0,t.length-(arguments.length-1))})}return e};var p=function(){return s(r,i,arguments)};l?l(t.exports,"apply",{value:p}):t.exports.apply=p},function(t,e,n){var r="function"==typeof Map&&Map.prototype,o=Object.getOwnPropertyDescriptor&&r?Object.getOwnPropertyDescriptor(Map.prototype,"size"):null,i=r&&o&&"function"==typeof o.get?o.get:null,a=r&&Map.prototype.forEach,s="function"==typeof Set&&Set.prototype,c=Object.getOwnPropertyDescriptor&&s?Object.getOwnPropertyDescriptor(Set.prototype,"size"):null,l=s&&c&&"function"==typeof c.get?c.get:null,u=s&&Set.prototype.forEach,p="function"==typeof WeakMap&&WeakMap.prototype?WeakMap.prototype.has:null,d="function"==typeof WeakSet&&WeakSet.prototype?WeakSet.prototype.has:null,h="function"==typeof WeakRef&&WeakRef.prototype?WeakRef.prototype.deref:null,f=Boolean.prototype.valueOf,v=Object.prototype.toString,b=Function.prototype.toString,m=String.prototype.match,g="function"==typeof BigInt?BigInt.prototype.valueOf:null,y=Object.getOwnPropertySymbols,_="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?Symbol.prototype.toString:null,x=Object.prototype.propertyIsEnumerable,w=("function"==typeof Reflect?Reflect.getPrototypeOf:Object.getPrototypeOf)||([].__proto__===Array.prototype?function(t){return t.__proto__}:null),S=n(383).custom,O=S&&I(S)?S:null,$="function"==typeof Symbol&&"symbol"==typeof Symbol.toStringTag?Symbol.toStringTag:null;function T(t,e,n){var r="double"===(n.quoteStyle||e)?'"':"'";return r+t+r}function E(t){return String(t).replace(/"/g,"&quot;")}function C(t){return!("[object Array]"!==L(t)||$&&"object"==typeof t&&$ in t)}function I(t){if("symbol"==typeof t)return!0;if(!t||"object"!=typeof t||!_)return!1;try{return _.call(t),!0}catch(t){}return!1}t.exports=function t(e,n,r,o){var s=n||{};if(k(s,"quoteStyle")&&"single"!==s.quoteStyle&&"double"!==s.quoteStyle)throw new TypeError('option "quoteStyle" must be "single" or "double"');if(k(s,"maxStringLength")&&("number"==typeof s.maxStringLength?s.maxStringLength<0&&s.maxStringLength!==1/0:null!==s.maxStringLength))throw new TypeError('option "maxStringLength", if provided, must be a positive integer, Infinity, or `null`');var c=!k(s,"customInspect")||s.customInspect;if("boolean"!=typeof c)throw new TypeError('option "customInspect", if provided, must be `true` or `false`');if(k(s,"indent")&&null!==s.indent&&"\t"!==s.indent&&!(parseInt(s.indent,10)===s.indent&&s.indent>0))throw new TypeError('options "indent" must be "\\t", an integer > 0, or `null`');if(void 0===e)return"undefined";if(null===e)return"null";if("boolean"==typeof e)return e?"true":"false";if("string"==typeof e)return function t(e,n){if(e.length>n.maxStringLength){var r=e.length-n.maxStringLength,o="... "+r+" more character"+(r>1?"s":"");return t(e.slice(0,n.maxStringLength),n)+o}return T(e.replace(/(['\\])/g,"\\$1").replace(/[\x00-\x1f]/g,M),"single",n)}(e,s);if("number"==typeof e)return 0===e?1/0/e>0?"0":"-0":String(e);if("bigint"==typeof e)return String(e)+"n";var v=void 0===s.depth?5:s.depth;if(void 0===r&&(r=0),r>=v&&v>0&&"object"==typeof e)return C(e)?"[Array]":"[Object]";var y=function(t,e){var n;if("\t"===t.indent)n="\t";else{if(!("number"==typeof t.indent&&t.indent>0))return null;n=Array(t.indent+1).join(" ")}return{base:n,prev:Array(e+1).join(n)}}(s,r);if(void 0===o)o=[];else if(P(o,e)>=0)return"[Circular]";function x(e,n,i){if(n&&(o=o.slice()).push(n),i){var a={depth:s.depth};return k(s,"quoteStyle")&&(a.quoteStyle=s.quoteStyle),t(e,a,r+1,o)}return t(e,s,r+1,o)}if("function"==typeof e){var S=function(t){if(t.name)return t.name;var e=m.call(b.call(t),/^function\s*([\w$]+)/);if(e)return e[1];return null}(e),A=F(e,x);return"[Function"+(S?": "+S:" (anonymous)")+"]"+(A.length>0?" { "+A.join(", ")+" }":"")}if(I(e)){var U=_.call(e);return"object"==typeof e?N(U):U}if(function(t){if(!t||"object"!=typeof t)return!1;if("undefined"!=typeof HTMLElement&&t instanceof HTMLElement)return!0;return"string"==typeof t.nodeName&&"function"==typeof t.getAttribute}(e)){for(var B="<"+String(e.nodeName).toLowerCase(),z=e.attributes||[],G=0;G<z.length;G++)B+=" "+z[G].name+"="+T(E(z[G].value),"double",s);return B+=">",e.childNodes&&e.childNodes.length&&(B+="..."),B+="</"+String(e.nodeName).toLowerCase()+">"}if(C(e)){if(0===e.length)return"[]";var V=F(e,x);return y&&!function(t){for(var e=0;e<t.length;e++)if(P(t[e],"\n")>=0)return!1;return!0}(V)?"["+R(V,y)+"]":"[ "+V.join(", ")+" ]"}if(function(t){return!("[object Error]"!==L(t)||$&&"object"==typeof t&&$ in t)}(e)){var J=F(e,x);return 0===J.length?"["+String(e)+"]":"{ ["+String(e)+"] "+J.join(", ")+" }"}if("object"==typeof e&&c){if(O&&"function"==typeof e[O])return e[O]();if("function"==typeof e.inspect)return e.inspect()}if(function(t){if(!i||!t||"object"!=typeof t)return!1;try{i.call(t);try{l.call(t)}catch(t){return!0}return t instanceof Map}catch(t){}return!1}(e)){var H=[];return a.call(e,(function(t,n){H.push(x(n,e,!0)+" => "+x(t,e))})),j("Map",i.call(e),H,y)}if(function(t){if(!l||!t||"object"!=typeof t)return!1;try{l.call(t);try{i.call(t)}catch(t){return!0}return t instanceof Set}catch(t){}return!1}(e)){var W=[];return u.call(e,(function(t){W.push(x(t,e))})),j("Set",l.call(e),W,y)}if(function(t){if(!p||!t||"object"!=typeof t)return!1;try{p.call(t,p);try{d.call(t,d)}catch(t){return!0}return t instanceof WeakMap}catch(t){}return!1}(e))return D("WeakMap");if(function(t){if(!d||!t||"object"!=typeof t)return!1;try{d.call(t,d);try{p.call(t,p)}catch(t){return!0}return t instanceof WeakSet}catch(t){}return!1}(e))return D("WeakSet");if(function(t){if(!h||!t||"object"!=typeof t)return!1;try{return h.call(t),!0}catch(t){}return!1}(e))return D("WeakRef");if(function(t){return!("[object Number]"!==L(t)||$&&"object"==typeof t&&$ in t)}(e))return N(x(Number(e)));if(function(t){if(!t||"object"!=typeof t||!g)return!1;try{return g.call(t),!0}catch(t){}return!1}(e))return N(x(g.call(e)));if(function(t){return!("[object Boolean]"!==L(t)||$&&"object"==typeof t&&$ in t)}(e))return N(f.call(e));if(function(t){return!("[object String]"!==L(t)||$&&"object"==typeof t&&$ in t)}(e))return N(x(String(e)));if(!function(t){return!("[object Date]"!==L(t)||$&&"object"==typeof t&&$ in t)}(e)&&!function(t){return!("[object RegExp]"!==L(t)||$&&"object"==typeof t&&$ in t)}(e)){var q=F(e,x),Y=w?w(e)===Object.prototype:e instanceof Object||e.constructor===Object,X=e instanceof Object?"":"null prototype",Q=!Y&&$&&Object(e)===e&&$ in e?L(e).slice(8,-1):X?"Object":"",K=(Y||"function"!=typeof e.constructor?"":e.constructor.name?e.constructor.name+" ":"")+(Q||X?"["+[].concat(Q||[],X||[]).join(": ")+"] ":"");return 0===q.length?K+"{}":y?K+"{"+R(q,y)+"}":K+"{ "+q.join(", ")+" }"}return String(e)};var A=Object.prototype.hasOwnProperty||function(t){return t in this};function k(t,e){return A.call(t,e)}function L(t){return v.call(t)}function P(t,e){if(t.indexOf)return t.indexOf(e);for(var n=0,r=t.length;n<r;n++)if(t[n]===e)return n;return-1}function M(t){var e=t.charCodeAt(0),n={8:"b",9:"t",10:"n",12:"f",13:"r"}[e];return n?"\\"+n:"\\x"+(e<16?"0":"")+e.toString(16).toUpperCase()}function N(t){return"Object("+t+")"}function D(t){return t+" { ? }"}function j(t,e,n,r){return t+" ("+e+") {"+(r?R(n,r):n.join(", "))+"}"}function R(t,e){if(0===t.length)return"";var n="\n"+e.prev+e.base;return n+t.join(","+n)+"\n"+e.prev}function F(t,e){var n=C(t),r=[];if(n){r.length=t.length;for(var o=0;o<t.length;o++)r[o]=k(t,o)?e(t[o],t):""}for(var i in t)k(t,i)&&(n&&String(Number(i))===i&&i<t.length||(/[^\w$]/.test(i)?r.push(e(i,t)+": "+e(t[i],t)):r.push(i+": "+e(t[i],t))));if("function"==typeof y)for(var a=y(t),s=0;s<a.length;s++)x.call(t,a[s])&&r.push("["+e(a[s])+"]: "+e(t[a[s]],t));return r}},function(t,e){},function(t,e,n){"use strict";var r=n(203),o=Object.prototype.hasOwnProperty,i=Array.isArray,a={allowDots:!1,allowPrototypes:!1,allowSparse:!1,arrayLimit:20,charset:"utf-8",charsetSentinel:!1,comma:!1,decoder:r.decode,delimiter:"&",depth:5,ignoreQueryPrefix:!1,interpretNumericEntities:!1,parameterLimit:1e3,parseArrays:!0,plainObjects:!1,strictNullHandling:!1},s=function(t){return t.replace(/&#(\d+);/g,(function(t,e){return String.fromCharCode(parseInt(e,10))}))},c=function(t,e){return t&&"string"==typeof t&&e.comma&&t.indexOf(",")>-1?t.split(","):t},l=function(t,e,n,r){if(t){var i=n.allowDots?t.replace(/\.([^.[]+)/g,"[$1]"):t,a=/(\[[^[\]]*])/g,s=n.depth>0&&/(\[[^[\]]*])/.exec(i),l=s?i.slice(0,s.index):i,u=[];if(l){if(!n.plainObjects&&o.call(Object.prototype,l)&&!n.allowPrototypes)return;u.push(l)}for(var p=0;n.depth>0&&null!==(s=a.exec(i))&&p<n.depth;){if(p+=1,!n.plainObjects&&o.call(Object.prototype,s[1].slice(1,-1))&&!n.allowPrototypes)return;u.push(s[1])}return s&&u.push("["+i.slice(s.index)+"]"),function(t,e,n,r){for(var o=r?e:c(e,n),i=t.length-1;i>=0;--i){var a,s=t[i];if("[]"===s&&n.parseArrays)a=[].concat(o);else{a=n.plainObjects?Object.create(null):{};var l="["===s.charAt(0)&&"]"===s.charAt(s.length-1)?s.slice(1,-1):s,u=parseInt(l,10);n.parseArrays||""!==l?!isNaN(u)&&s!==l&&String(u)===l&&u>=0&&n.parseArrays&&u<=n.arrayLimit?(a=[])[u]=o:a[l]=o:a={0:o}}o=a}return o}(u,e,n,r)}};t.exports=function(t,e){var n=function(t){if(!t)return a;if(null!==t.decoder&&void 0!==t.decoder&&"function"!=typeof t.decoder)throw new TypeError("Decoder has to be a function.");if(void 0!==t.charset&&"utf-8"!==t.charset&&"iso-8859-1"!==t.charset)throw new TypeError("The charset option must be either utf-8, iso-8859-1, or undefined");var e=void 0===t.charset?a.charset:t.charset;return{allowDots:void 0===t.allowDots?a.allowDots:!!t.allowDots,allowPrototypes:"boolean"==typeof t.allowPrototypes?t.allowPrototypes:a.allowPrototypes,allowSparse:"boolean"==typeof t.allowSparse?t.allowSparse:a.allowSparse,arrayLimit:"number"==typeof t.arrayLimit?t.arrayLimit:a.arrayLimit,charset:e,charsetSentinel:"boolean"==typeof t.charsetSentinel?t.charsetSentinel:a.charsetSentinel,comma:"boolean"==typeof t.comma?t.comma:a.comma,decoder:"function"==typeof t.decoder?t.decoder:a.decoder,delimiter:"string"==typeof t.delimiter||r.isRegExp(t.delimiter)?t.delimiter:a.delimiter,depth:"number"==typeof t.depth||!1===t.depth?+t.depth:a.depth,ignoreQueryPrefix:!0===t.ignoreQueryPrefix,interpretNumericEntities:"boolean"==typeof t.interpretNumericEntities?t.interpretNumericEntities:a.interpretNumericEntities,parameterLimit:"number"==typeof t.parameterLimit?t.parameterLimit:a.parameterLimit,parseArrays:!1!==t.parseArrays,plainObjects:"boolean"==typeof t.plainObjects?t.plainObjects:a.plainObjects,strictNullHandling:"boolean"==typeof t.strictNullHandling?t.strictNullHandling:a.strictNullHandling}}(e);if(""===t||null==t)return n.plainObjects?Object.create(null):{};for(var u="string"==typeof t?function(t,e){var n,l={},u=e.ignoreQueryPrefix?t.replace(/^\?/,""):t,p=e.parameterLimit===1/0?void 0:e.parameterLimit,d=u.split(e.delimiter,p),h=-1,f=e.charset;if(e.charsetSentinel)for(n=0;n<d.length;++n)0===d[n].indexOf("utf8=")&&("utf8=%E2%9C%93"===d[n]?f="utf-8":"utf8=%26%2310003%3B"===d[n]&&(f="iso-8859-1"),h=n,n=d.length);for(n=0;n<d.length;++n)if(n!==h){var v,b,m=d[n],g=m.indexOf("]="),y=-1===g?m.indexOf("="):g+1;-1===y?(v=e.decoder(m,a.decoder,f,"key"),b=e.strictNullHandling?null:""):(v=e.decoder(m.slice(0,y),a.decoder,f,"key"),b=r.maybeMap(c(m.slice(y+1),e),(function(t){return e.decoder(t,a.decoder,f,"value")}))),b&&e.interpretNumericEntities&&"iso-8859-1"===f&&(b=s(b)),m.indexOf("[]=")>-1&&(b=i(b)?[b]:b),o.call(l,v)?l[v]=r.combine(l[v],b):l[v]=b}return l}(t,n):t,p=n.plainObjects?Object.create(null):{},d=Object.keys(u),h=0;h<d.length;++h){var f=d[h],v=l(f,u[f],n,"string"==typeof t);p=r.merge(p,v,n)}return!0===n.allowSparse?p:r.compact(p)}},function(t,e,n){var r=n(40),o=n(387),i=n(388);t.exports=function(t){var e=r(t);return i(e,o(e))+1}},function(t,e){t.exports=function(t){var e=new Date(t.getTime()),n=e.getTimezoneOffset();return e.setSeconds(0,0),6e4*n+e.getTime()%6e4}},function(t,e,n){var r=n(40);t.exports=function(t){var e=r(t),n=new Date(0);return n.setFullYear(e.getFullYear(),0,1),n.setHours(0,0,0,0),n}},function(t,e,n){var r=n(389);t.exports=function(t,e){var n=r(t),o=r(e),i=n.getTime()-6e4*n.getTimezoneOffset(),a=o.getTime()-6e4*o.getTimezoneOffset();return Math.round((i-a)/864e5)}},function(t,e,n){var r=n(40);t.exports=function(t){var e=r(t);return e.setHours(0,0,0,0),e}},function(t,e,n){var r=n(40),o=n(131),i=n(392);t.exports=function(t){var e=r(t),n=o(e).getTime()-i(e).getTime();return Math.round(n/6048e5)+1}},function(t,e,n){var r=n(40);t.exports=function(t,e){var n=e&&Number(e.weekStartsOn)||0,o=r(t),i=o.getDay(),a=(i<n?7:0)+i-n;return o.setDate(o.getDate()-a),o.setHours(0,0,0,0),o}},function(t,e,n){var r=n(205),o=n(131);t.exports=function(t){var e=r(t),n=new Date(0);return n.setFullYear(e,0,4),n.setHours(0,0,0,0),o(n)}},function(t,e,n){var r=n(204);t.exports=function(t){if(r(t))return!isNaN(t);throw new TypeError(toString.call(t)+" is not an instance of Date")}},function(t,e,n){var r=n(395),o=n(396);t.exports={distanceInWords:r(),format:o()}},function(t,e){t.exports=function(){var t={lessThanXSeconds:{one:"less than a second",other:"less than {{count}} seconds"},xSeconds:{one:"1 second",other:"{{count}} seconds"},halfAMinute:"half a minute",lessThanXMinutes:{one:"less than a minute",other:"less than {{count}} minutes"},xMinutes:{one:"1 minute",other:"{{count}} minutes"},aboutXHours:{one:"about 1 hour",other:"about {{count}} hours"},xHours:{one:"1 hour",other:"{{count}} hours"},xDays:{one:"1 day",other:"{{count}} days"},aboutXMonths:{one:"about 1 month",other:"about {{count}} months"},xMonths:{one:"1 month",other:"{{count}} months"},aboutXYears:{one:"about 1 year",other:"about {{count}} years"},xYears:{one:"1 year",other:"{{count}} years"},overXYears:{one:"over 1 year",other:"over {{count}} years"},almostXYears:{one:"almost 1 year",other:"almost {{count}} years"}};return{localize:function(e,n,r){var o;return r=r||{},o="string"==typeof t[e]?t[e]:1===n?t[e].one:t[e].other.replace("{{count}}",n),r.addSuffix?r.comparison>0?"in "+o:o+" ago":o}}}},function(t,e,n){var r=n(397);t.exports=function(){var t=["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],e=["January","February","March","April","May","June","July","August","September","October","November","December"],n=["Su","Mo","Tu","We","Th","Fr","Sa"],o=["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],i=["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],a=["AM","PM"],s=["am","pm"],c=["a.m.","p.m."],l={MMM:function(e){return t[e.getMonth()]},MMMM:function(t){return e[t.getMonth()]},dd:function(t){return n[t.getDay()]},ddd:function(t){return o[t.getDay()]},dddd:function(t){return i[t.getDay()]},A:function(t){return t.getHours()/12>=1?a[1]:a[0]},a:function(t){return t.getHours()/12>=1?s[1]:s[0]},aa:function(t){return t.getHours()/12>=1?c[1]:c[0]}};return["M","D","DDD","d","Q","W"].forEach((function(t){l[t+"o"]=function(e,n){return function(t){var e=t%100;if(e>20||e<10)switch(e%10){case 1:return t+"st";case 2:return t+"nd";case 3:return t+"rd"}return t+"th"}(n[t](e))}})),{formatters:l,formattingTokensRegExp:r(l)}}},function(t,e){var n=["M","MM","Q","D","DD","DDD","DDDD","d","E","W","WW","YY","YYYY","GG","GGGG","H","HH","h","hh","m","mm","s","ss","S","SS","SSS","Z","ZZ","X","x"];t.exports=function(t){var e=[];for(var r in t)t.hasOwnProperty(r)&&e.push(r);var o=n.concat(e).sort().reverse();return new RegExp("(\\[[^\\[]*\\])|(\\\\)?("+o.join("|")+"|.)","g")}},function(t,e,n){"use strict";var r=n(17),o=n(206),i=n(399),a=n(212);function s(t){var e=new i(t),n=o(i.prototype.request,e);return r.extend(n,i.prototype,e),r.extend(n,e),n}var c=s(n(209));c.Axios=i,c.create=function(t){return s(a(c.defaults,t))},c.Cancel=n(213),c.CancelToken=n(412),c.isCancel=n(208),c.all=function(t){return Promise.all(t)},c.spread=n(413),c.isAxiosError=n(414),t.exports=c,t.exports.default=c},function(t,e,n){"use strict";var r=n(17),o=n(207),i=n(400),a=n(401),s=n(212);function c(t){this.defaults=t,this.interceptors={request:new i,response:new i}}c.prototype.request=function(t){"string"==typeof t?(t=arguments[1]||{}).url=arguments[0]:t=t||{},(t=s(this.defaults,t)).method?t.method=t.method.toLowerCase():this.defaults.method?t.method=this.defaults.method.toLowerCase():t.method="get";var e=[a,void 0],n=Promise.resolve(t);for(this.interceptors.request.forEach((function(t){e.unshift(t.fulfilled,t.rejected)})),this.interceptors.response.forEach((function(t){e.push(t.fulfilled,t.rejected)}));e.length;)n=n.then(e.shift(),e.shift());return n},c.prototype.getUri=function(t){return t=s(this.defaults,t),o(t.url,t.params,t.paramsSerializer).replace(/^\?/,"")},r.forEach(["delete","get","head","options"],(function(t){c.prototype[t]=function(e,n){return this.request(s(n||{},{method:t,url:e,data:(n||{}).data}))}})),r.forEach(["post","put","patch"],(function(t){c.prototype[t]=function(e,n,r){return this.request(s(r||{},{method:t,url:e,data:n}))}})),t.exports=c},function(t,e,n){"use strict";var r=n(17);function o(){this.handlers=[]}o.prototype.use=function(t,e){return this.handlers.push({fulfilled:t,rejected:e}),this.handlers.length-1},o.prototype.eject=function(t){this.handlers[t]&&(this.handlers[t]=null)},o.prototype.forEach=function(t){r.forEach(this.handlers,(function(e){null!==e&&t(e)}))},t.exports=o},function(t,e,n){"use strict";var r=n(17),o=n(402),i=n(208),a=n(209);function s(t){t.cancelToken&&t.cancelToken.throwIfRequested()}t.exports=function(t){return s(t),t.headers=t.headers||{},t.data=o(t.data,t.headers,t.transformRequest),t.headers=r.merge(t.headers.common||{},t.headers[t.method]||{},t.headers),r.forEach(["delete","get","head","post","put","patch","common"],(function(e){delete t.headers[e]})),(t.adapter||a.adapter)(t).then((function(e){return s(t),e.data=o(e.data,e.headers,t.transformResponse),e}),(function(e){return i(e)||(s(t),e&&e.response&&(e.response.data=o(e.response.data,e.response.headers,t.transformResponse))),Promise.reject(e)}))}},function(t,e,n){"use strict";var r=n(17);t.exports=function(t,e,n){return r.forEach(n,(function(n){t=n(t,e)})),t}},function(t,e,n){"use strict";var r=n(17);t.exports=function(t,e){r.forEach(t,(function(n,r){r!==e&&r.toUpperCase()===e.toUpperCase()&&(t[e]=n,delete t[r])}))}},function(t,e,n){"use strict";var r=n(211);t.exports=function(t,e,n){var o=n.config.validateStatus;n.status&&o&&!o(n.status)?e(r("Request failed with status code "+n.status,n.config,null,n.request,n)):t(n)}},function(t,e,n){"use strict";t.exports=function(t,e,n,r,o){return t.config=e,n&&(t.code=n),t.request=r,t.response=o,t.isAxiosError=!0,t.toJSON=function(){return{message:this.message,name:this.name,description:this.description,number:this.number,fileName:this.fileName,lineNumber:this.lineNumber,columnNumber:this.columnNumber,stack:this.stack,config:this.config,code:this.code}},t}},function(t,e,n){"use strict";var r=n(17);t.exports=r.isStandardBrowserEnv()?{write:function(t,e,n,o,i,a){var s=[];s.push(t+"="+encodeURIComponent(e)),r.isNumber(n)&&s.push("expires="+new Date(n).toGMTString()),r.isString(o)&&s.push("path="+o),r.isString(i)&&s.push("domain="+i),!0===a&&s.push("secure"),document.cookie=s.join("; ")},read:function(t){var e=document.cookie.match(new RegExp("(^|;\\s*)("+t+")=([^;]*)"));return e?decodeURIComponent(e[3]):null},remove:function(t){this.write(t,"",Date.now()-864e5)}}:{write:function(){},read:function(){return null},remove:function(){}}},function(t,e,n){"use strict";var r=n(408),o=n(409);t.exports=function(t,e){return t&&!r(e)?o(t,e):e}},function(t,e,n){"use strict";t.exports=function(t){return/^([a-z][a-z\d\+\-\.]*:)?\/\//i.test(t)}},function(t,e,n){"use strict";t.exports=function(t,e){return e?t.replace(/\/+$/,"")+"/"+e.replace(/^\/+/,""):t}},function(t,e,n){"use strict";var r=n(17),o=["age","authorization","content-length","content-type","etag","expires","from","host","if-modified-since","if-unmodified-since","last-modified","location","max-forwards","proxy-authorization","referer","retry-after","user-agent"];t.exports=function(t){var e,n,i,a={};return t?(r.forEach(t.split("\n"),(function(t){if(i=t.indexOf(":"),e=r.trim(t.substr(0,i)).toLowerCase(),n=r.trim(t.substr(i+1)),e){if(a[e]&&o.indexOf(e)>=0)return;a[e]="set-cookie"===e?(a[e]?a[e]:[]).concat([n]):a[e]?a[e]+", "+n:n}})),a):a}},function(t,e,n){"use strict";var r=n(17);t.exports=r.isStandardBrowserEnv()?function(){var t,e=/(msie|trident)/i.test(navigator.userAgent),n=document.createElement("a");function o(t){var r=t;return e&&(n.setAttribute("href",r),r=n.href),n.setAttribute("href",r),{href:n.href,protocol:n.protocol?n.protocol.replace(/:$/,""):"",host:n.host,search:n.search?n.search.replace(/^\?/,""):"",hash:n.hash?n.hash.replace(/^#/,""):"",hostname:n.hostname,port:n.port,pathname:"/"===n.pathname.charAt(0)?n.pathname:"/"+n.pathname}}return t=o(window.location.href),function(e){var n=r.isString(e)?o(e):e;return n.protocol===t.protocol&&n.host===t.host}}():function(){return!0}},function(t,e,n){"use strict";var r=n(213);function o(t){if("function"!=typeof t)throw new TypeError("executor must be a function.");var e;this.promise=new Promise((function(t){e=t}));var n=this;t((function(t){n.reason||(n.reason=new r(t),e(n.reason))}))}o.prototype.throwIfRequested=function(){if(this.reason)throw this.reason},o.source=function(){var t;return{token:new o((function(e){t=e})),cancel:t}},t.exports=o},function(t,e,n){"use strict";t.exports=function(t){return function(e){return t.apply(null,e)}}},function(t,e,n){"use strict";t.exports=function(t){return"object"==typeof t&&!0===t.isAxiosError}},function(t,e,n){},function(t,e,n){"use strict";n(214)},function(t,e,n){},function(t,e,n){var r;function o(t){function n(){if(n.enabled){var t=n,o=+new Date,i=o-(r||o);t.diff=i,t.prev=r,t.curr=o,r=o;for(var a=new Array(arguments.length),s=0;s<a.length;s++)a[s]=arguments[s];a[0]=e.coerce(a[0]),"string"!=typeof a[0]&&a.unshift("%O");var c=0;a[0]=a[0].replace(/%([a-zA-Z%])/g,(function(n,r){if("%%"===n)return n;c++;var o=e.formatters[r];if("function"==typeof o){var i=a[c];n=o.call(t,i),a.splice(c,1),c--}return n})),e.formatArgs.call(t,a);var l=n.log||e.log||console.log.bind(console);l.apply(t,a)}}return n.namespace=t,n.enabled=e.enabled(t),n.useColors=e.useColors(),n.color=function(t){var n,r=0;for(n in t)r=(r<<5)-r+t.charCodeAt(n),r|=0;return e.colors[Math.abs(r)%e.colors.length]}(t),"function"==typeof e.init&&e.init(n),n}(e=t.exports=o.debug=o.default=o).coerce=function(t){return t instanceof Error?t.stack||t.message:t},e.disable=function(){e.enable("")},e.enable=function(t){e.save(t),e.names=[],e.skips=[];for(var n=("string"==typeof t?t:"").split(/[\s,]+/),r=n.length,o=0;o<r;o++)n[o]&&("-"===(t=n[o].replace(/\*/g,".*?"))[0]?e.skips.push(new RegExp("^"+t.substr(1)+"$")):e.names.push(new RegExp("^"+t+"$")))},e.enabled=function(t){var n,r;for(n=0,r=e.skips.length;n<r;n++)if(e.skips[n].test(t))return!1;for(n=0,r=e.names.length;n<r;n++)if(e.names[n].test(t))return!0;return!1},e.humanize=n(419),e.names=[],e.skips=[],e.formatters={}},function(t,e){var n=1e3,r=6e4,o=60*r,i=24*o;function a(t,e,n){if(!(t<e))return t<1.5*e?Math.floor(t/e)+" "+n:Math.ceil(t/e)+" "+n+"s"}t.exports=function(t,e){e=e||{};var s,c=typeof t;if("string"===c&&t.length>0)return function(t){if((t=String(t)).length>100)return;var e=/^((?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(t);if(!e)return;var a=parseFloat(e[1]);switch((e[2]||"ms").toLowerCase()){case"years":case"year":case"yrs":case"yr":case"y":return 315576e5*a;case"days":case"day":case"d":return a*i;case"hours":case"hour":case"hrs":case"hr":case"h":return a*o;case"minutes":case"minute":case"mins":case"min":case"m":return a*r;case"seconds":case"second":case"secs":case"sec":case"s":return a*n;case"milliseconds":case"millisecond":case"msecs":case"msec":case"ms":return a;default:return}}(t);if("number"===c&&!1===isNaN(t))return e.long?a(s=t,i,"day")||a(s,o,"hour")||a(s,r,"minute")||a(s,n,"second")||s+" ms":function(t){if(t>=i)return Math.round(t/i)+"d";if(t>=o)return Math.round(t/o)+"h";if(t>=r)return Math.round(t/r)+"m";if(t>=n)return Math.round(t/n)+"s";return t+"ms"}(t);throw new Error("val is not a non-empty string or a valid number. val="+JSON.stringify(t))}},function(t,e,n){var r=n(1),o=n(421),i=n(100);r({target:"Array",proto:!0},{fill:o}),i("fill")},function(t,e,n){"use strict";var r=n(13),o=n(82),i=n(15);t.exports=function(t){for(var e=r(this),n=i(e.length),a=arguments.length,s=o(a>1?arguments[1]:void 0,n),c=a>2?arguments[2]:void 0,l=void 0===c?n:o(c,n);l>s;)e[s++]=t;return e}},function(t,e,n){"use strict";n(218)},function(t,e,n){"use strict";n(219)},function(t,e,n){"use strict";n(220)},function(t,e,n){"use strict";n(221)},function(t,e,n){"use strict";n.r(e);n(140),n(244),n(252),n(254),n(20);function r(t,e,n,r,o,i,a){try{var s=t[i](a),c=s.value}catch(t){return void n(t)}s.done?e(c):Promise.resolve(c).then(r,o)}function o(t){return function(){var e=this,n=arguments;return new Promise((function(o,i){var a=t.apply(e,n);function s(t){r(a,o,i,s,c,"next",t)}function c(t){r(a,o,i,s,c,"throw",t)}s(void 0)}))}}n(163),n(34),n(23),n(26),n(41),n(22);var i=n(0);function a(t,e){for(var n in e)t[n]=e[n];return t}var s=/[!'()*]/g,c=function(t){return"%"+t.charCodeAt(0).toString(16)},l=/%2C/g,u=function(t){return encodeURIComponent(t).replace(s,c).replace(l,",")};function p(t){try{return decodeURIComponent(t)}catch(t){0}return t}var d=function(t){return null==t||"object"==typeof t?t:String(t)};function h(t){var e={};return(t=t.trim().replace(/^(\?|#|&)/,""))?(t.split("&").forEach((function(t){var n=t.replace(/\+/g," ").split("="),r=p(n.shift()),o=n.length>0?p(n.join("=")):null;void 0===e[r]?e[r]=o:Array.isArray(e[r])?e[r].push(o):e[r]=[e[r],o]})),e):e}function f(t){var e=t?Object.keys(t).map((function(e){var n=t[e];if(void 0===n)return"";if(null===n)return u(e);if(Array.isArray(n)){var r=[];return n.forEach((function(t){void 0!==t&&(null===t?r.push(u(e)):r.push(u(e)+"="+u(t)))})),r.join("&")}return u(e)+"="+u(n)})).filter((function(t){return t.length>0})).join("&"):null;return e?"?"+e:""}var v=/\/?$/;function b(t,e,n,r){var o=r&&r.options.stringifyQuery,i=e.query||{};try{i=m(i)}catch(t){}var a={name:e.name||t&&t.name,meta:t&&t.meta||{},path:e.path||"/",hash:e.hash||"",query:i,params:e.params||{},fullPath:_(e,o),matched:t?y(t):[]};return n&&(a.redirectedFrom=_(n,o)),Object.freeze(a)}function m(t){if(Array.isArray(t))return t.map(m);if(t&&"object"==typeof t){var e={};for(var n in t)e[n]=m(t[n]);return e}return t}var g=b(null,{path:"/"});function y(t){for(var e=[];t;)e.unshift(t),t=t.parent;return e}function _(t,e){var n=t.path,r=t.query;void 0===r&&(r={});var o=t.hash;return void 0===o&&(o=""),(n||"/")+(e||f)(r)+o}function x(t,e,n){return e===g?t===e:!!e&&(t.path&&e.path?t.path.replace(v,"")===e.path.replace(v,"")&&(n||t.hash===e.hash&&w(t.query,e.query)):!(!t.name||!e.name)&&(t.name===e.name&&(n||t.hash===e.hash&&w(t.query,e.query)&&w(t.params,e.params))))}function w(t,e){if(void 0===t&&(t={}),void 0===e&&(e={}),!t||!e)return t===e;var n=Object.keys(t).sort(),r=Object.keys(e).sort();return n.length===r.length&&n.every((function(n,o){var i=t[n];if(r[o]!==n)return!1;var a=e[n];return null==i||null==a?i===a:"object"==typeof i&&"object"==typeof a?w(i,a):String(i)===String(a)}))}function S(t){for(var e=0;e<t.matched.length;e++){var n=t.matched[e];for(var r in n.instances){var o=n.instances[r],i=n.enteredCbs[r];if(o&&i){delete n.enteredCbs[r];for(var a=0;a<i.length;a++)o._isBeingDestroyed||i[a](o)}}}}var O={name:"RouterView",functional:!0,props:{name:{type:String,default:"default"}},render:function(t,e){var n=e.props,r=e.children,o=e.parent,i=e.data;i.routerView=!0;for(var s=o.$createElement,c=n.name,l=o.$route,u=o._routerViewCache||(o._routerViewCache={}),p=0,d=!1;o&&o._routerRoot!==o;){var h=o.$vnode?o.$vnode.data:{};h.routerView&&p++,h.keepAlive&&o._directInactive&&o._inactive&&(d=!0),o=o.$parent}if(i.routerViewDepth=p,d){var f=u[c],v=f&&f.component;return v?(f.configProps&&$(v,i,f.route,f.configProps),s(v,i,r)):s()}var b=l.matched[p],m=b&&b.components[c];if(!b||!m)return u[c]=null,s();u[c]={component:m},i.registerRouteInstance=function(t,e){var n=b.instances[c];(e&&n!==t||!e&&n===t)&&(b.instances[c]=e)},(i.hook||(i.hook={})).prepatch=function(t,e){b.instances[c]=e.componentInstance},i.hook.init=function(t){t.data.keepAlive&&t.componentInstance&&t.componentInstance!==b.instances[c]&&(b.instances[c]=t.componentInstance),S(l)};var g=b.props&&b.props[c];return g&&(a(u[c],{route:l,configProps:g}),$(m,i,l,g)),s(m,i,r)}};function $(t,e,n,r){var o=e.props=function(t,e){switch(typeof e){case"undefined":return;case"object":return e;case"function":return e(t);case"boolean":return e?t.params:void 0;default:0}}(n,r);if(o){o=e.props=a({},o);var i=e.attrs=e.attrs||{};for(var s in o)t.props&&s in t.props||(i[s]=o[s],delete o[s])}}function T(t,e,n){var r=t.charAt(0);if("/"===r)return t;if("?"===r||"#"===r)return e+t;var o=e.split("/");n&&o[o.length-1]||o.pop();for(var i=t.replace(/^\//,"").split("/"),a=0;a<i.length;a++){var s=i[a];".."===s?o.pop():"."!==s&&o.push(s)}return""!==o[0]&&o.unshift(""),o.join("/")}function E(t){return t.replace(/\/\//g,"/")}var C=Array.isArray||function(t){return"[object Array]"==Object.prototype.toString.call(t)},I=G,A=N,k=function(t,e){return j(N(t,e),e)},L=j,P=z,M=new RegExp(["(\\\\.)","([\\/.])?(?:(?:\\:(\\w+)(?:\\(((?:\\\\.|[^\\\\()])+)\\))?|\\(((?:\\\\.|[^\\\\()])+)\\))([+*?])?|(\\*))"].join("|"),"g");function N(t,e){for(var n,r=[],o=0,i=0,a="",s=e&&e.delimiter||"/";null!=(n=M.exec(t));){var c=n[0],l=n[1],u=n.index;if(a+=t.slice(i,u),i=u+c.length,l)a+=l[1];else{var p=t[i],d=n[2],h=n[3],f=n[4],v=n[5],b=n[6],m=n[7];a&&(r.push(a),a="");var g=null!=d&&null!=p&&p!==d,y="+"===b||"*"===b,_="?"===b||"*"===b,x=n[2]||s,w=f||v;r.push({name:h||o++,prefix:d||"",delimiter:x,optional:_,repeat:y,partial:g,asterisk:!!m,pattern:w?F(w):m?".*":"[^"+R(x)+"]+?"})}}return i<t.length&&(a+=t.substr(i)),a&&r.push(a),r}function D(t){return encodeURI(t).replace(/[\/?#]/g,(function(t){return"%"+t.charCodeAt(0).toString(16).toUpperCase()}))}function j(t,e){for(var n=new Array(t.length),r=0;r<t.length;r++)"object"==typeof t[r]&&(n[r]=new RegExp("^(?:"+t[r].pattern+")$",B(e)));return function(e,r){for(var o="",i=e||{},a=(r||{}).pretty?D:encodeURIComponent,s=0;s<t.length;s++){var c=t[s];if("string"!=typeof c){var l,u=i[c.name];if(null==u){if(c.optional){c.partial&&(o+=c.prefix);continue}throw new TypeError('Expected "'+c.name+'" to be defined')}if(C(u)){if(!c.repeat)throw new TypeError('Expected "'+c.name+'" to not repeat, but received `'+JSON.stringify(u)+"`");if(0===u.length){if(c.optional)continue;throw new TypeError('Expected "'+c.name+'" to not be empty')}for(var p=0;p<u.length;p++){if(l=a(u[p]),!n[s].test(l))throw new TypeError('Expected all "'+c.name+'" to match "'+c.pattern+'", but received `'+JSON.stringify(l)+"`");o+=(0===p?c.prefix:c.delimiter)+l}}else{if(l=c.asterisk?encodeURI(u).replace(/[?#]/g,(function(t){return"%"+t.charCodeAt(0).toString(16).toUpperCase()})):a(u),!n[s].test(l))throw new TypeError('Expected "'+c.name+'" to match "'+c.pattern+'", but received "'+l+'"');o+=c.prefix+l}}else o+=c}return o}}function R(t){return t.replace(/([.+*?=^!:${}()[\]|\/\\])/g,"\\$1")}function F(t){return t.replace(/([=!:$\/()])/g,"\\$1")}function U(t,e){return t.keys=e,t}function B(t){return t&&t.sensitive?"":"i"}function z(t,e,n){C(e)||(n=e||n,e=[]);for(var r=(n=n||{}).strict,o=!1!==n.end,i="",a=0;a<t.length;a++){var s=t[a];if("string"==typeof s)i+=R(s);else{var c=R(s.prefix),l="(?:"+s.pattern+")";e.push(s),s.repeat&&(l+="(?:"+c+l+")*"),i+=l=s.optional?s.partial?c+"("+l+")?":"(?:"+c+"("+l+"))?":c+"("+l+")"}}var u=R(n.delimiter||"/"),p=i.slice(-u.length)===u;return r||(i=(p?i.slice(0,-u.length):i)+"(?:"+u+"(?=$))?"),i+=o?"$":r&&p?"":"(?="+u+"|$)",U(new RegExp("^"+i,B(n)),e)}function G(t,e,n){return C(e)||(n=e||n,e=[]),n=n||{},t instanceof RegExp?function(t,e){var n=t.source.match(/\((?!\?)/g);if(n)for(var r=0;r<n.length;r++)e.push({name:r,prefix:null,delimiter:null,optional:!1,repeat:!1,partial:!1,asterisk:!1,pattern:null});return U(t,e)}(t,e):C(t)?function(t,e,n){for(var r=[],o=0;o<t.length;o++)r.push(G(t[o],e,n).source);return U(new RegExp("(?:"+r.join("|")+")",B(n)),e)}(t,e,n):function(t,e,n){return z(N(t,n),e,n)}(t,e,n)}I.parse=A,I.compile=k,I.tokensToFunction=L,I.tokensToRegExp=P;var V=Object.create(null);function J(t,e,n){e=e||{};try{var r=V[t]||(V[t]=I.compile(t));return"string"==typeof e.pathMatch&&(e[0]=e.pathMatch),r(e,{pretty:!0})}catch(t){return""}finally{delete e[0]}}function H(t,e,n,r){var o="string"==typeof t?{path:t}:t;if(o._normalized)return o;if(o.name){var i=(o=a({},t)).params;return i&&"object"==typeof i&&(o.params=a({},i)),o}if(!o.path&&o.params&&e){(o=a({},o))._normalized=!0;var s=a(a({},e.params),o.params);if(e.name)o.name=e.name,o.params=s;else if(e.matched.length){var c=e.matched[e.matched.length-1].path;o.path=J(c,s,e.path)}else 0;return o}var l=function(t){var e="",n="",r=t.indexOf("#");r>=0&&(e=t.slice(r),t=t.slice(0,r));var o=t.indexOf("?");return o>=0&&(n=t.slice(o+1),t=t.slice(0,o)),{path:t,query:n,hash:e}}(o.path||""),u=e&&e.path||"/",p=l.path?T(l.path,u,n||o.append):u,f=function(t,e,n){void 0===e&&(e={});var r,o=n||h;try{r=o(t||"")}catch(t){r={}}for(var i in e){var a=e[i];r[i]=Array.isArray(a)?a.map(d):d(a)}return r}(l.query,o.query,r&&r.options.parseQuery),v=o.hash||l.hash;return v&&"#"!==v.charAt(0)&&(v="#"+v),{_normalized:!0,path:p,query:f,hash:v}}var W,q=function(){},Y={name:"RouterLink",props:{to:{type:[String,Object],required:!0},tag:{type:String,default:"a"},custom:Boolean,exact:Boolean,exactPath:Boolean,append:Boolean,replace:Boolean,activeClass:String,exactActiveClass:String,ariaCurrentValue:{type:String,default:"page"},event:{type:[String,Array],default:"click"}},render:function(t){var e=this,n=this.$router,r=this.$route,o=n.resolve(this.to,r,this.append),i=o.location,s=o.route,c=o.href,l={},u=n.options.linkActiveClass,p=n.options.linkExactActiveClass,d=null==u?"router-link-active":u,h=null==p?"router-link-exact-active":p,f=null==this.activeClass?d:this.activeClass,m=null==this.exactActiveClass?h:this.exactActiveClass,g=s.redirectedFrom?b(null,H(s.redirectedFrom),null,n):s;l[m]=x(r,g,this.exactPath),l[f]=this.exact||this.exactPath?l[m]:function(t,e){return 0===t.path.replace(v,"/").indexOf(e.path.replace(v,"/"))&&(!e.hash||t.hash===e.hash)&&function(t,e){for(var n in e)if(!(n in t))return!1;return!0}(t.query,e.query)}(r,g);var y=l[m]?this.ariaCurrentValue:null,_=function(t){X(t)&&(e.replace?n.replace(i,q):n.push(i,q))},w={click:X};Array.isArray(this.event)?this.event.forEach((function(t){w[t]=_})):w[this.event]=_;var S={class:l},O=!this.$scopedSlots.$hasNormal&&this.$scopedSlots.default&&this.$scopedSlots.default({href:c,route:s,navigate:_,isActive:l[f],isExactActive:l[m]});if(O){if(1===O.length)return O[0];if(O.length>1||!O.length)return 0===O.length?t():t("span",{},O)}if("a"===this.tag)S.on=w,S.attrs={href:c,"aria-current":y};else{var $=function t(e){var n;if(e)for(var r=0;r<e.length;r++){if("a"===(n=e[r]).tag)return n;if(n.children&&(n=t(n.children)))return n}}(this.$slots.default);if($){$.isStatic=!1;var T=$.data=a({},$.data);for(var E in T.on=T.on||{},T.on){var C=T.on[E];E in w&&(T.on[E]=Array.isArray(C)?C:[C])}for(var I in w)I in T.on?T.on[I].push(w[I]):T.on[I]=_;var A=$.data.attrs=a({},$.data.attrs);A.href=c,A["aria-current"]=y}else S.on=w}return t(this.tag,S,this.$slots.default)}};function X(t){if(!(t.metaKey||t.altKey||t.ctrlKey||t.shiftKey||t.defaultPrevented||void 0!==t.button&&0!==t.button)){if(t.currentTarget&&t.currentTarget.getAttribute){var e=t.currentTarget.getAttribute("target");if(/\b_blank\b/i.test(e))return}return t.preventDefault&&t.preventDefault(),!0}}var Q="undefined"!=typeof window;function K(t,e,n,r,o){var i=e||[],a=n||Object.create(null),s=r||Object.create(null);t.forEach((function(t){!function t(e,n,r,o,i,a){var s=o.path,c=o.name;0;var l=o.pathToRegexpOptions||{},u=function(t,e,n){n||(t=t.replace(/\/$/,""));if("/"===t[0])return t;if(null==e)return t;return E(e.path+"/"+t)}(s,i,l.strict);"boolean"==typeof o.caseSensitive&&(l.sensitive=o.caseSensitive);var p={path:u,regex:Z(u,l),components:o.components||{default:o.component},alias:o.alias?"string"==typeof o.alias?[o.alias]:o.alias:[],instances:{},enteredCbs:{},name:c,parent:i,matchAs:a,redirect:o.redirect,beforeEnter:o.beforeEnter,meta:o.meta||{},props:null==o.props?{}:o.components?o.props:{default:o.props}};o.children&&o.children.forEach((function(o){var i=a?E(a+"/"+o.path):void 0;t(e,n,r,o,p,i)}));n[p.path]||(e.push(p.path),n[p.path]=p);if(void 0!==o.alias)for(var d=Array.isArray(o.alias)?o.alias:[o.alias],h=0;h<d.length;++h){0;var f={path:d[h],children:o.children};t(e,n,r,f,i,p.path||"/")}c&&(r[c]||(r[c]=p))}(i,a,s,t,o)}));for(var c=0,l=i.length;c<l;c++)"*"===i[c]&&(i.push(i.splice(c,1)[0]),l--,c--);return{pathList:i,pathMap:a,nameMap:s}}function Z(t,e){return I(t,[],e)}function tt(t,e){var n=K(t),r=n.pathList,o=n.pathMap,i=n.nameMap;function a(t,n,a){var s=H(t,n,!1,e),l=s.name;if(l){var u=i[l];if(!u)return c(null,s);var p=u.regex.keys.filter((function(t){return!t.optional})).map((function(t){return t.name}));if("object"!=typeof s.params&&(s.params={}),n&&"object"==typeof n.params)for(var d in n.params)!(d in s.params)&&p.indexOf(d)>-1&&(s.params[d]=n.params[d]);return s.path=J(u.path,s.params),c(u,s,a)}if(s.path){s.params={};for(var h=0;h<r.length;h++){var f=r[h],v=o[f];if(et(v.regex,s.path,s.params))return c(v,s,a)}}return c(null,s)}function s(t,n){var r=t.redirect,o="function"==typeof r?r(b(t,n,null,e)):r;if("string"==typeof o&&(o={path:o}),!o||"object"!=typeof o)return c(null,n);var s=o,l=s.name,u=s.path,p=n.query,d=n.hash,h=n.params;if(p=s.hasOwnProperty("query")?s.query:p,d=s.hasOwnProperty("hash")?s.hash:d,h=s.hasOwnProperty("params")?s.params:h,l){i[l];return a({_normalized:!0,name:l,query:p,hash:d,params:h},void 0,n)}if(u){var f=function(t,e){return T(t,e.parent?e.parent.path:"/",!0)}(u,t);return a({_normalized:!0,path:J(f,h),query:p,hash:d},void 0,n)}return c(null,n)}function c(t,n,r){return t&&t.redirect?s(t,r||n):t&&t.matchAs?function(t,e,n){var r=a({_normalized:!0,path:J(n,e.params)});if(r){var o=r.matched,i=o[o.length-1];return e.params=r.params,c(i,e)}return c(null,e)}(0,n,t.matchAs):b(t,n,r,e)}return{match:a,addRoute:function(t,e){var n="object"!=typeof t?i[t]:void 0;K([e||t],r,o,i,n),n&&K(n.alias.map((function(t){return{path:t,children:[e]}})),r,o,i,n)},getRoutes:function(){return r.map((function(t){return o[t]}))},addRoutes:function(t){K(t,r,o,i)}}}function et(t,e,n){var r=e.match(t);if(!r)return!1;if(!n)return!0;for(var o=1,i=r.length;o<i;++o){var a=t.keys[o-1];a&&(n[a.name||"pathMatch"]="string"==typeof r[o]?p(r[o]):r[o])}return!0}var nt=Q&&window.performance&&window.performance.now?window.performance:Date;function rt(){return nt.now().toFixed(3)}var ot=rt();function it(){return ot}function at(t){return ot=t}var st=Object.create(null);function ct(){"scrollRestoration"in window.history&&(window.history.scrollRestoration="manual");var t=window.location.protocol+"//"+window.location.host,e=window.location.href.replace(t,""),n=a({},window.history.state);return n.key=it(),window.history.replaceState(n,"",e),window.addEventListener("popstate",pt),function(){window.removeEventListener("popstate",pt)}}function lt(t,e,n,r){if(t.app){var o=t.options.scrollBehavior;o&&t.app.$nextTick((function(){var i=function(){var t=it();if(t)return st[t]}(),a=o.call(t,e,n,r?i:null);a&&("function"==typeof a.then?a.then((function(t){bt(t,i)})).catch((function(t){0})):bt(a,i))}))}}function ut(){var t=it();t&&(st[t]={x:window.pageXOffset,y:window.pageYOffset})}function pt(t){ut(),t.state&&t.state.key&&at(t.state.key)}function dt(t){return ft(t.x)||ft(t.y)}function ht(t){return{x:ft(t.x)?t.x:window.pageXOffset,y:ft(t.y)?t.y:window.pageYOffset}}function ft(t){return"number"==typeof t}var vt=/^#\d/;function bt(t,e){var n,r="object"==typeof t;if(r&&"string"==typeof t.selector){var o=vt.test(t.selector)?document.getElementById(t.selector.slice(1)):document.querySelector(t.selector);if(o){var i=t.offset&&"object"==typeof t.offset?t.offset:{};e=function(t,e){var n=document.documentElement.getBoundingClientRect(),r=t.getBoundingClientRect();return{x:r.left-n.left-e.x,y:r.top-n.top-e.y}}(o,i={x:ft((n=i).x)?n.x:0,y:ft(n.y)?n.y:0})}else dt(t)&&(e=ht(t))}else r&&dt(t)&&(e=ht(t));e&&("scrollBehavior"in document.documentElement.style?window.scrollTo({left:e.x,top:e.y,behavior:t.behavior}):window.scrollTo(e.x,e.y))}var mt,gt=Q&&((-1===(mt=window.navigator.userAgent).indexOf("Android 2.")&&-1===mt.indexOf("Android 4.0")||-1===mt.indexOf("Mobile Safari")||-1!==mt.indexOf("Chrome")||-1!==mt.indexOf("Windows Phone"))&&window.history&&"function"==typeof window.history.pushState);function yt(t,e){ut();var n=window.history;try{if(e){var r=a({},n.state);r.key=it(),n.replaceState(r,"",t)}else n.pushState({key:at(rt())},"",t)}catch(n){window.location[e?"replace":"assign"](t)}}function _t(t){yt(t,!0)}function xt(t,e,n){var r=function(o){o>=t.length?n():t[o]?e(t[o],(function(){r(o+1)})):r(o+1)};r(0)}var wt={redirected:2,aborted:4,cancelled:8,duplicated:16};function St(t,e){return $t(t,e,wt.redirected,'Redirected when going from "'+t.fullPath+'" to "'+function(t){if("string"==typeof t)return t;if("path"in t)return t.path;var e={};return Tt.forEach((function(n){n in t&&(e[n]=t[n])})),JSON.stringify(e,null,2)}(e)+'" via a navigation guard.')}function Ot(t,e){return $t(t,e,wt.cancelled,'Navigation cancelled from "'+t.fullPath+'" to "'+e.fullPath+'" with a new navigation.')}function $t(t,e,n,r){var o=new Error(r);return o._isRouter=!0,o.from=t,o.to=e,o.type=n,o}var Tt=["params","query","hash"];function Et(t){return Object.prototype.toString.call(t).indexOf("Error")>-1}function Ct(t,e){return Et(t)&&t._isRouter&&(null==e||t.type===e)}function It(t){return function(e,n,r){var o=!1,i=0,a=null;At(t,(function(t,e,n,s){if("function"==typeof t&&void 0===t.cid){o=!0,i++;var c,l=Pt((function(e){var o;((o=e).__esModule||Lt&&"Module"===o[Symbol.toStringTag])&&(e=e.default),t.resolved="function"==typeof e?e:W.extend(e),n.components[s]=e,--i<=0&&r()})),u=Pt((function(t){var e="Failed to resolve async component "+s+": "+t;a||(a=Et(t)?t:new Error(e),r(a))}));try{c=t(l,u)}catch(t){u(t)}if(c)if("function"==typeof c.then)c.then(l,u);else{var p=c.component;p&&"function"==typeof p.then&&p.then(l,u)}}})),o||r()}}function At(t,e){return kt(t.map((function(t){return Object.keys(t.components).map((function(n){return e(t.components[n],t.instances[n],t,n)}))})))}function kt(t){return Array.prototype.concat.apply([],t)}var Lt="function"==typeof Symbol&&"symbol"==typeof Symbol.toStringTag;function Pt(t){var e=!1;return function(){for(var n=[],r=arguments.length;r--;)n[r]=arguments[r];if(!e)return e=!0,t.apply(this,n)}}var Mt=function(t,e){this.router=t,this.base=function(t){if(!t)if(Q){var e=document.querySelector("base");t=(t=e&&e.getAttribute("href")||"/").replace(/^https?:\/\/[^\/]+/,"")}else t="/";"/"!==t.charAt(0)&&(t="/"+t);return t.replace(/\/$/,"")}(e),this.current=g,this.pending=null,this.ready=!1,this.readyCbs=[],this.readyErrorCbs=[],this.errorCbs=[],this.listeners=[]};function Nt(t,e,n,r){var o=At(t,(function(t,r,o,i){var a=function(t,e){"function"!=typeof t&&(t=W.extend(t));return t.options[e]}(t,e);if(a)return Array.isArray(a)?a.map((function(t){return n(t,r,o,i)})):n(a,r,o,i)}));return kt(r?o.reverse():o)}function Dt(t,e){if(e)return function(){return t.apply(e,arguments)}}Mt.prototype.listen=function(t){this.cb=t},Mt.prototype.onReady=function(t,e){this.ready?t():(this.readyCbs.push(t),e&&this.readyErrorCbs.push(e))},Mt.prototype.onError=function(t){this.errorCbs.push(t)},Mt.prototype.transitionTo=function(t,e,n){var r,o=this;try{r=this.router.match(t,this.current)}catch(t){throw this.errorCbs.forEach((function(e){e(t)})),t}var i=this.current;this.confirmTransition(r,(function(){o.updateRoute(r),e&&e(r),o.ensureURL(),o.router.afterHooks.forEach((function(t){t&&t(r,i)})),o.ready||(o.ready=!0,o.readyCbs.forEach((function(t){t(r)})))}),(function(t){n&&n(t),t&&!o.ready&&(Ct(t,wt.redirected)&&i===g||(o.ready=!0,o.readyErrorCbs.forEach((function(e){e(t)}))))}))},Mt.prototype.confirmTransition=function(t,e,n){var r=this,o=this.current;this.pending=t;var i=function(t){!Ct(t)&&Et(t)&&(r.errorCbs.length?r.errorCbs.forEach((function(e){e(t)})):console.error(t)),n&&n(t)},a=t.matched.length-1,s=o.matched.length-1;if(x(t,o)&&a===s&&t.matched[a]===o.matched[s])return this.ensureURL(),i(function(t,e){var n=$t(t,e,wt.duplicated,'Avoided redundant navigation to current location: "'+t.fullPath+'".');return n.name="NavigationDuplicated",n}(o,t));var c=function(t,e){var n,r=Math.max(t.length,e.length);for(n=0;n<r&&t[n]===e[n];n++);return{updated:e.slice(0,n),activated:e.slice(n),deactivated:t.slice(n)}}(this.current.matched,t.matched),l=c.updated,u=c.deactivated,p=c.activated,d=[].concat(function(t){return Nt(t,"beforeRouteLeave",Dt,!0)}(u),this.router.beforeHooks,function(t){return Nt(t,"beforeRouteUpdate",Dt)}(l),p.map((function(t){return t.beforeEnter})),It(p)),h=function(e,n){if(r.pending!==t)return i(Ot(o,t));try{e(t,o,(function(e){!1===e?(r.ensureURL(!0),i(function(t,e){return $t(t,e,wt.aborted,'Navigation aborted from "'+t.fullPath+'" to "'+e.fullPath+'" via a navigation guard.')}(o,t))):Et(e)?(r.ensureURL(!0),i(e)):"string"==typeof e||"object"==typeof e&&("string"==typeof e.path||"string"==typeof e.name)?(i(St(o,t)),"object"==typeof e&&e.replace?r.replace(e):r.push(e)):n(e)}))}catch(t){i(t)}};xt(d,h,(function(){xt(function(t){return Nt(t,"beforeRouteEnter",(function(t,e,n,r){return function(t,e,n){return function(r,o,i){return t(r,o,(function(t){"function"==typeof t&&(e.enteredCbs[n]||(e.enteredCbs[n]=[]),e.enteredCbs[n].push(t)),i(t)}))}}(t,n,r)}))}(p).concat(r.router.resolveHooks),h,(function(){if(r.pending!==t)return i(Ot(o,t));r.pending=null,e(t),r.router.app&&r.router.app.$nextTick((function(){S(t)}))}))}))},Mt.prototype.updateRoute=function(t){this.current=t,this.cb&&this.cb(t)},Mt.prototype.setupListeners=function(){},Mt.prototype.teardown=function(){this.listeners.forEach((function(t){t()})),this.listeners=[],this.current=g,this.pending=null};var jt=function(t){function e(e,n){t.call(this,e,n),this._startLocation=Rt(this.base)}return t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e,e.prototype.setupListeners=function(){var t=this;if(!(this.listeners.length>0)){var e=this.router,n=e.options.scrollBehavior,r=gt&&n;r&&this.listeners.push(ct());var o=function(){var n=t.current,o=Rt(t.base);t.current===g&&o===t._startLocation||t.transitionTo(o,(function(t){r&&lt(e,t,n,!0)}))};window.addEventListener("popstate",o),this.listeners.push((function(){window.removeEventListener("popstate",o)}))}},e.prototype.go=function(t){window.history.go(t)},e.prototype.push=function(t,e,n){var r=this,o=this.current;this.transitionTo(t,(function(t){yt(E(r.base+t.fullPath)),lt(r.router,t,o,!1),e&&e(t)}),n)},e.prototype.replace=function(t,e,n){var r=this,o=this.current;this.transitionTo(t,(function(t){_t(E(r.base+t.fullPath)),lt(r.router,t,o,!1),e&&e(t)}),n)},e.prototype.ensureURL=function(t){if(Rt(this.base)!==this.current.fullPath){var e=E(this.base+this.current.fullPath);t?yt(e):_t(e)}},e.prototype.getCurrentLocation=function(){return Rt(this.base)},e}(Mt);function Rt(t){var e=window.location.pathname;return t&&0===e.toLowerCase().indexOf(t.toLowerCase())&&(e=e.slice(t.length)),(e||"/")+window.location.search+window.location.hash}var Ft=function(t){function e(e,n,r){t.call(this,e,n),r&&function(t){var e=Rt(t);if(!/^\/#/.test(e))return window.location.replace(E(t+"/#"+e)),!0}(this.base)||Ut()}return t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e,e.prototype.setupListeners=function(){var t=this;if(!(this.listeners.length>0)){var e=this.router.options.scrollBehavior,n=gt&&e;n&&this.listeners.push(ct());var r=function(){var e=t.current;Ut()&&t.transitionTo(Bt(),(function(r){n&&lt(t.router,r,e,!0),gt||Vt(r.fullPath)}))},o=gt?"popstate":"hashchange";window.addEventListener(o,r),this.listeners.push((function(){window.removeEventListener(o,r)}))}},e.prototype.push=function(t,e,n){var r=this,o=this.current;this.transitionTo(t,(function(t){Gt(t.fullPath),lt(r.router,t,o,!1),e&&e(t)}),n)},e.prototype.replace=function(t,e,n){var r=this,o=this.current;this.transitionTo(t,(function(t){Vt(t.fullPath),lt(r.router,t,o,!1),e&&e(t)}),n)},e.prototype.go=function(t){window.history.go(t)},e.prototype.ensureURL=function(t){var e=this.current.fullPath;Bt()!==e&&(t?Gt(e):Vt(e))},e.prototype.getCurrentLocation=function(){return Bt()},e}(Mt);function Ut(){var t=Bt();return"/"===t.charAt(0)||(Vt("/"+t),!1)}function Bt(){var t=window.location.href,e=t.indexOf("#");return e<0?"":t=t.slice(e+1)}function zt(t){var e=window.location.href,n=e.indexOf("#");return(n>=0?e.slice(0,n):e)+"#"+t}function Gt(t){gt?yt(zt(t)):window.location.hash=t}function Vt(t){gt?_t(zt(t)):window.location.replace(zt(t))}var Jt=function(t){function e(e,n){t.call(this,e,n),this.stack=[],this.index=-1}return t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e,e.prototype.push=function(t,e,n){var r=this;this.transitionTo(t,(function(t){r.stack=r.stack.slice(0,r.index+1).concat(t),r.index++,e&&e(t)}),n)},e.prototype.replace=function(t,e,n){var r=this;this.transitionTo(t,(function(t){r.stack=r.stack.slice(0,r.index).concat(t),e&&e(t)}),n)},e.prototype.go=function(t){var e=this,n=this.index+t;if(!(n<0||n>=this.stack.length)){var r=this.stack[n];this.confirmTransition(r,(function(){var t=e.current;e.index=n,e.updateRoute(r),e.router.afterHooks.forEach((function(e){e&&e(r,t)}))}),(function(t){Ct(t,wt.duplicated)&&(e.index=n)}))}},e.prototype.getCurrentLocation=function(){var t=this.stack[this.stack.length-1];return t?t.fullPath:"/"},e.prototype.ensureURL=function(){},e}(Mt),Ht=function(t){void 0===t&&(t={}),this.app=null,this.apps=[],this.options=t,this.beforeHooks=[],this.resolveHooks=[],this.afterHooks=[],this.matcher=tt(t.routes||[],this);var e=t.mode||"hash";switch(this.fallback="history"===e&&!gt&&!1!==t.fallback,this.fallback&&(e="hash"),Q||(e="abstract"),this.mode=e,e){case"history":this.history=new jt(this,t.base);break;case"hash":this.history=new Ft(this,t.base,this.fallback);break;case"abstract":this.history=new Jt(this,t.base);break;default:0}},Wt={currentRoute:{configurable:!0}};function qt(t,e){return t.push(e),function(){var n=t.indexOf(e);n>-1&&t.splice(n,1)}}Ht.prototype.match=function(t,e,n){return this.matcher.match(t,e,n)},Wt.currentRoute.get=function(){return this.history&&this.history.current},Ht.prototype.init=function(t){var e=this;if(this.apps.push(t),t.$once("hook:destroyed",(function(){var n=e.apps.indexOf(t);n>-1&&e.apps.splice(n,1),e.app===t&&(e.app=e.apps[0]||null),e.app||e.history.teardown()})),!this.app){this.app=t;var n=this.history;if(n instanceof jt||n instanceof Ft){var r=function(t){n.setupListeners(),function(t){var r=n.current,o=e.options.scrollBehavior;gt&&o&&"fullPath"in t&&lt(e,t,r,!1)}(t)};n.transitionTo(n.getCurrentLocation(),r,r)}n.listen((function(t){e.apps.forEach((function(e){e._route=t}))}))}},Ht.prototype.beforeEach=function(t){return qt(this.beforeHooks,t)},Ht.prototype.beforeResolve=function(t){return qt(this.resolveHooks,t)},Ht.prototype.afterEach=function(t){return qt(this.afterHooks,t)},Ht.prototype.onReady=function(t,e){this.history.onReady(t,e)},Ht.prototype.onError=function(t){this.history.onError(t)},Ht.prototype.push=function(t,e,n){var r=this;if(!e&&!n&&"undefined"!=typeof Promise)return new Promise((function(e,n){r.history.push(t,e,n)}));this.history.push(t,e,n)},Ht.prototype.replace=function(t,e,n){var r=this;if(!e&&!n&&"undefined"!=typeof Promise)return new Promise((function(e,n){r.history.replace(t,e,n)}));this.history.replace(t,e,n)},Ht.prototype.go=function(t){this.history.go(t)},Ht.prototype.back=function(){this.go(-1)},Ht.prototype.forward=function(){this.go(1)},Ht.prototype.getMatchedComponents=function(t){var e=t?t.matched?t:this.resolve(t).route:this.currentRoute;return e?[].concat.apply([],e.matched.map((function(t){return Object.keys(t.components).map((function(e){return t.components[e]}))}))):[]},Ht.prototype.resolve=function(t,e,n){var r=H(t,e=e||this.history.current,n,this),o=this.match(r,e),i=o.redirectedFrom||o.fullPath;return{location:r,route:o,href:function(t,e,n){var r="hash"===n?"#"+e:e;return t?E(t+"/"+r):r}(this.history.base,i,this.mode),normalizedTo:r,resolved:o}},Ht.prototype.getRoutes=function(){return this.matcher.getRoutes()},Ht.prototype.addRoute=function(t,e){this.matcher.addRoute(t,e),this.history.current!==g&&this.history.transitionTo(this.history.getCurrentLocation())},Ht.prototype.addRoutes=function(t){this.matcher.addRoutes(t),this.history.current!==g&&this.history.transitionTo(this.history.getCurrentLocation())},Object.defineProperties(Ht.prototype,Wt),Ht.install=function t(e){if(!t.installed||W!==e){t.installed=!0,W=e;var n=function(t){return void 0!==t},r=function(t,e){var r=t.$options._parentVnode;n(r)&&n(r=r.data)&&n(r=r.registerRouteInstance)&&r(t,e)};e.mixin({beforeCreate:function(){n(this.$options.router)?(this._routerRoot=this,this._router=this.$options.router,this._router.init(this),e.util.defineReactive(this,"_route",this._router.history.current)):this._routerRoot=this.$parent&&this.$parent._routerRoot||this,r(this,this)},destroyed:function(){r(this)}}),Object.defineProperty(e.prototype,"$router",{get:function(){return this._routerRoot._router}}),Object.defineProperty(e.prototype,"$route",{get:function(){return this._routerRoot._route}}),e.component("RouterView",O),e.component("RouterLink",Y);var o=e.config.optionMergeStrategies;o.beforeRouteEnter=o.beforeRouteLeave=o.beforeRouteUpdate=o.created}},Ht.version="3.5.1",Ht.isNavigationFailure=Ct,Ht.NavigationFailureType=wt,Ht.START_LOCATION=g,Q&&window.Vue&&window.Vue.use(Ht);var Yt=Ht;n(166),n(167),n(168),n(75),n(257),n(37),n(38),n(258);function Xt(t){t.locales&&Object.keys(t.locales).forEach((function(e){t.locales[e].path=e})),Object.freeze(t)}n(134);var Qt=n(53),Kt=(n(175),n(42),n(52),n(234),n(235),{NotFound:function(){return Promise.all([n.e(0),n.e(7)]).then(n.bind(null,524))},Category:function(){return Promise.all([n.e(0),n.e(1),n.e(6)]).then(n.bind(null,525))},Layout:function(){return Promise.all([n.e(0),n.e(1),n.e(3)]).then(n.bind(null,523))},Tag:function(){return Promise.all([n.e(0),n.e(1),n.e(4)]).then(n.bind(null,526))},Tags:function(){return Promise.all([n.e(0),n.e(1),n.e(5)]).then(n.bind(null,527))},TimeLines:function(){return Promise.all([n.e(0),n.e(1),n.e(9)]).then(n.bind(null,528))}}),Zt={"v-b2e3aa80":function(){return n.e(10).then(n.bind(null,529))},"v-846da578":function(){return n.e(11).then(n.bind(null,530))},"v-144b1220":function(){return n.e(12).then(n.bind(null,531))},"v-d5bebee2":function(){return n.e(13).then(n.bind(null,532))},"v-0a1a659b":function(){return n.e(14).then(n.bind(null,533))},"v-5c11c33b":function(){return n.e(15).then(n.bind(null,534))},"v-7c6aabea":function(){return n.e(16).then(n.bind(null,535))},"v-c6f25ac6":function(){return n.e(17).then(n.bind(null,536))},"v-59bb4d4a":function(){return n.e(18).then(n.bind(null,537))},"v-3225e486":function(){return n.e(19).then(n.bind(null,538))},"v-e571bd4a":function(){return n.e(20).then(n.bind(null,539))},"v-022d481b":function(){return n.e(21).then(n.bind(null,540))},"v-6c159fd9":function(){return n.e(22).then(n.bind(null,541))},"v-580c0e15":function(){return n.e(23).then(n.bind(null,542))},"v-2ee42e9b":function(){return n.e(24).then(n.bind(null,543))},"v-8f041e3a":function(){return n.e(26).then(n.bind(null,544))},"v-ecbbc74a":function(){return n.e(25).then(n.bind(null,545))},"v-015f1e9b":function(){return n.e(27).then(n.bind(null,546))},"v-55c82270":function(){return n.e(28).then(n.bind(null,547))},"v-b348e4ca":function(){return n.e(29).then(n.bind(null,548))},"v-10f6d00a":function(){return n.e(30).then(n.bind(null,549))},"v-3f89301b":function(){return n.e(31).then(n.bind(null,550))},"v-d2096aa0":function(){return n.e(32).then(n.bind(null,551))},"v-1559a70e":function(){return n.e(33).then(n.bind(null,552))},"v-deaef892":function(){return n.e(34).then(n.bind(null,553))},"v-2bfddaf5":function(){return n.e(35).then(n.bind(null,554))},"v-71599b9a":function(){return n.e(36).then(n.bind(null,555))},"v-62a88971":function(){return n.e(37).then(n.bind(null,556))},"v-04043ea2":function(){return n.e(38).then(n.bind(null,557))},"v-cd599026":function(){return n.e(39).then(n.bind(null,558))},"v-34a88f2b":function(){return n.e(40).then(n.bind(null,559))},"v-6004332e":function(){return n.e(41).then(n.bind(null,560))},"v-295365bd":function(){return n.e(42).then(n.bind(null,561))},"v-76ae860a":function(){return n.e(43).then(n.bind(null,562))},"v-5ffe1439":function(){return n.e(44).then(n.bind(null,563))},"v-874e03a0":function(){return n.e(45).then(n.bind(null,564))}};function te(t){var e=Object.create(null);return function(n){return e[n]||(e[n]=t(n))}}var ee=/-(\w)/g,ne=te((function(t){return t.replace(ee,(function(t,e){return e?e.toUpperCase():""}))})),re=/\B([A-Z])/g,oe=te((function(t){return t.replace(re,"-$1").toLowerCase()})),ie=te((function(t){return t.charAt(0).toUpperCase()+t.slice(1)}));function ae(t,e){if(e)return t(e)?t(e):e.includes("-")?t(ie(ne(e))):t(ie(e))||t(oe(e))}var se=Object.assign({},Kt,Zt),ce=function(t){return se[t]},le=function(t){return Zt[t]},ue=function(t){return Kt[t]},pe=function(t){return i.default.component(t)};function de(t){return ae(le,t)}function he(t){return ae(ue,t)}function fe(t){return ae(ce,t)}function ve(t){return ae(pe,t)}function be(){for(var t=arguments.length,e=new Array(t),n=0;n<t;n++)e[n]=arguments[n];return Promise.all(e.filter((function(t){return t})).map(function(){var t=o(regeneratorRuntime.mark((function t(e){var n;return regeneratorRuntime.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:if(ve(e)||!fe(e)){t.next=5;break}return t.next=3,fe(e)();case 3:n=t.sent,i.default.component(e,n.default);case 5:case"end":return t.stop()}}),t)})));return function(e){return t.apply(this,arguments)}}()))}function me(t,e){"undefined"!=typeof window&&window.__VUEPRESS__&&(window.__VUEPRESS__[t]=e)}n(76);n(44),n(54),n(77);var ge=n(93);function ye(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){var n=t&&("undefined"!=typeof Symbol&&t[Symbol.iterator]||t["@@iterator"]);if(null!=n){var r,o,i=[],a=!0,s=!1;try{for(n=n.call(t);!(a=(r=n.next()).done)&&(i.push(r.value),!e||i.length!==e);a=!0);}catch(t){s=!0,o=t}finally{try{a||null==n.return||n.return()}finally{if(s)throw o}}return i}}(t,e)||Object(ge.a)(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}n(176),n(133);var _e=n(222),xe=n.n(_e),we={created:function(){if(this.siteMeta=this.$site.headTags.filter((function(t){return"meta"===ye(t,1)[0]})).map((function(t){var e=ye(t,2);e[0];return e[1]})),this.$ssrContext){var t=this.getMergedMetaTags();this.$ssrContext.title=this.$title,this.$ssrContext.lang=this.$lang,this.$ssrContext.pageMeta=(e=t)?e.map((function(t){var e="<meta";return Object.keys(t).forEach((function(n){e+=" ".concat(n,'="').concat(t[n],'"')})),e+">"})).join("\n    "):"",this.$ssrContext.canonicalLink=Oe(this.$canonicalUrl)}var e},mounted:function(){this.currentMetaTags=Object(Qt.a)(document.querySelectorAll("meta")),this.updateMeta(),this.updateCanonicalLink()},methods:{updateMeta:function(){document.title=this.$title,document.documentElement.lang=this.$lang;var t=this.getMergedMetaTags();this.currentMetaTags=$e(t,this.currentMetaTags)},getMergedMetaTags:function(){var t=this.$page.frontmatter.meta||[];return xe()([{name:"description",content:this.$description}],t,this.siteMeta,Te)},updateCanonicalLink:function(){Se(),this.$canonicalUrl&&document.head.insertAdjacentHTML("beforeend",Oe(this.$canonicalUrl))}},watch:{$page:function(){this.updateMeta(),this.updateCanonicalLink()}},beforeDestroy:function(){$e(null,this.currentMetaTags),Se()}};function Se(){var t=document.querySelector("link[rel='canonical']");t&&t.remove()}function Oe(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";return t?'<link href="'.concat(t,'" rel="canonical" />'):""}function $e(t,e){if(e&&Object(Qt.a)(e).filter((function(t){return t.parentNode===document.head})).forEach((function(t){return document.head.removeChild(t)})),t)return t.map((function(t){var e=document.createElement("meta");return Object.keys(t).forEach((function(n){e.setAttribute(n,t[n])})),document.head.appendChild(e),e}))}function Te(t){for(var e=0,n=["name","property","itemprop"];e<n.length;e++){var r=n[e];if(t.hasOwnProperty(r))return t[r]+r}return JSON.stringify(t)}n(95);var Ee=n(223),Ce={mounted:function(){window.addEventListener("scroll",this.onScroll)},methods:{onScroll:n.n(Ee)()((function(){this.setActiveHash()}),300),setActiveHash:function(){for(var t=this,e=[].slice.call(document.querySelectorAll(".sidebar-link")),n=[].slice.call(document.querySelectorAll(".header-anchor")).filter((function(t){return e.some((function(e){return e.hash===t.hash}))})),r=Math.max(window.pageYOffset,document.documentElement.scrollTop,document.body.scrollTop),o=Math.max(document.documentElement.scrollHeight,document.body.scrollHeight),i=window.innerHeight+r,a=0;a<n.length;a++){var s=n[a],c=n[a+1],l=0===a&&0===r||r>=s.parentElement.offsetTop+10&&(!c||r<c.parentElement.offsetTop-10),u=decodeURIComponent(this.$route.hash);if(l&&u!==decodeURIComponent(s.hash)){var p=s;if(i===o)for(var d=a+1;d<n.length;d++)if(u===decodeURIComponent(n[d].hash))return;return this.$vuepress.$set("disableScrollBehavior",!0),void this.$router.replace(decodeURIComponent(p.hash),(function(){t.$nextTick((function(){t.$vuepress.$set("disableScrollBehavior",!1)}))}))}}}},beforeDestroy:function(){window.removeEventListener("scroll",this.onScroll)}},Ie=(n(96),n(94)),Ae=n.n(Ie),ke={mounted:function(){var t=this;Ae.a.configure({showSpinner:!1}),this.$router.beforeEach((function(t,e,n){t.path===e.path||i.default.component(t.name)||Ae.a.start(),n()})),this.$router.afterEach((function(){Ae.a.done(),t.isSidebarOpen=!1}))}},Le=n(224),Pe=n.n(Le),Me=(n(359),{mounted:function(){Pe.a.polyfill()}}),Ne=(n(30),n(360),Object.assign||function(t){for(var e=1;e<arguments.length;e++){var n=arguments[e];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(t[r]=n[r])}return t}),De=function(t){return"IMG"===t.tagName},je=function(t){return t&&1===t.nodeType},Re=function(t){return".svg"===(t.currentSrc||t.src).substr(-4).toLowerCase()},Fe=function(t){try{return Array.isArray(t)?t.filter(De):function(t){return NodeList.prototype.isPrototypeOf(t)}(t)?[].slice.call(t).filter(De):je(t)?[t].filter(De):"string"==typeof t?[].slice.call(document.querySelectorAll(t)).filter(De):[]}catch(t){throw new TypeError("The provided selector is invalid.\nExpects a CSS selector, a Node element, a NodeList or an array.\nSee: https://github.com/francoischalifour/medium-zoom")}},Ue=function(t){var e=document.createElement("div");return e.classList.add("medium-zoom-overlay"),e.style.background=t,e},Be=function(t){var e=t.getBoundingClientRect(),n=e.top,r=e.left,o=e.width,i=e.height,a=t.cloneNode(),s=window.pageYOffset||document.documentElement.scrollTop||document.body.scrollTop||0,c=window.pageXOffset||document.documentElement.scrollLeft||document.body.scrollLeft||0;return a.removeAttribute("id"),a.style.position="absolute",a.style.top=n+s+"px",a.style.left=r+c+"px",a.style.width=o+"px",a.style.height=i+"px",a.style.transform="",a},ze=function(t,e){var n=Ne({bubbles:!1,cancelable:!1,detail:void 0},e);if("function"==typeof window.CustomEvent)return new CustomEvent(t,n);var r=document.createEvent("CustomEvent");return r.initCustomEvent(t,n.bubbles,n.cancelable,n.detail),r};!function(t,e){void 0===e&&(e={});var n=e.insertAt;if(t&&"undefined"!=typeof document){var r=document.head||document.getElementsByTagName("head")[0],o=document.createElement("style");o.type="text/css","top"===n&&r.firstChild?r.insertBefore(o,r.firstChild):r.appendChild(o),o.styleSheet?o.styleSheet.cssText=t:o.appendChild(document.createTextNode(t))}}(".medium-zoom-overlay{position:fixed;top:0;right:0;bottom:0;left:0;opacity:0;transition:opacity .3s;will-change:opacity}.medium-zoom--opened .medium-zoom-overlay{cursor:pointer;cursor:zoom-out;opacity:1}.medium-zoom-image{cursor:pointer;cursor:zoom-in;transition:transform .3s cubic-bezier(.2,0,.2,1)!important}.medium-zoom-image--hidden{visibility:hidden}.medium-zoom-image--opened{position:relative;cursor:pointer;cursor:zoom-out;will-change:transform}");var Ge=function t(e){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},r=window.Promise||function(t){function e(){}t(e,e)},o=function(t){var e=t.target;e!==$?-1!==y.indexOf(e)&&v({target:e}):f()},i=function(){if(!x&&O.original){var t=window.pageYOffset||document.documentElement.scrollTop||document.body.scrollTop||0;Math.abs(w-t)>S.scrollOffset&&setTimeout(f,150)}},a=function(t){var e=t.key||t.keyCode;"Escape"!==e&&"Esc"!==e&&27!==e||f()},s=function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},e=t;if(t.background&&($.style.background=t.background),t.container&&t.container instanceof Object&&(e.container=Ne({},S.container,t.container)),t.template){var n=je(t.template)?t.template:document.querySelector(t.template);e.template=n}return S=Ne({},S,e),y.forEach((function(t){t.dispatchEvent(ze("medium-zoom:update",{detail:{zoom:T}}))})),T},c=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};return t(Ne({},S,e))},l=function(){for(var t=arguments.length,e=Array(t),n=0;n<t;n++)e[n]=arguments[n];var r=e.reduce((function(t,e){return[].concat(t,Fe(e))}),[]);return r.filter((function(t){return-1===y.indexOf(t)})).forEach((function(t){y.push(t),t.classList.add("medium-zoom-image")})),_.forEach((function(t){var e=t.type,n=t.listener,o=t.options;r.forEach((function(t){t.addEventListener(e,n,o)}))})),T},u=function(){for(var t=arguments.length,e=Array(t),n=0;n<t;n++)e[n]=arguments[n];O.zoomed&&f();var r=e.length>0?e.reduce((function(t,e){return[].concat(t,Fe(e))}),[]):y;return r.forEach((function(t){t.classList.remove("medium-zoom-image"),t.dispatchEvent(ze("medium-zoom:detach",{detail:{zoom:T}}))})),y=y.filter((function(t){return-1===r.indexOf(t)})),T},p=function(t,e){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};return y.forEach((function(r){r.addEventListener("medium-zoom:"+t,e,n)})),_.push({type:"medium-zoom:"+t,listener:e,options:n}),T},d=function(t,e){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};return y.forEach((function(r){r.removeEventListener("medium-zoom:"+t,e,n)})),_=_.filter((function(n){return!(n.type==="medium-zoom:"+t&&n.listener.toString()===e.toString())})),T},h=function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},e=t.target,n=function(){var t={width:document.documentElement.clientWidth,height:document.documentElement.clientHeight,left:0,top:0,right:0,bottom:0},e=void 0,n=void 0;if(S.container)if(S.container instanceof Object)e=(t=Ne({},t,S.container)).width-t.left-t.right-2*S.margin,n=t.height-t.top-t.bottom-2*S.margin;else{var r=(je(S.container)?S.container:document.querySelector(S.container)).getBoundingClientRect(),o=r.width,i=r.height,a=r.left,s=r.top;t=Ne({},t,{width:o,height:i,left:a,top:s})}e=e||t.width-2*S.margin,n=n||t.height-2*S.margin;var c=O.zoomedHd||O.original,l=Re(c)?e:c.naturalWidth||e,u=Re(c)?n:c.naturalHeight||n,p=c.getBoundingClientRect(),d=p.top,h=p.left,f=p.width,v=p.height,b=Math.min(l,e)/f,m=Math.min(u,n)/v,g=Math.min(b,m),y="scale("+g+") translate3d("+((e-f)/2-h+S.margin+t.left)/g+"px, "+((n-v)/2-d+S.margin+t.top)/g+"px, 0)";O.zoomed.style.transform=y,O.zoomedHd&&(O.zoomedHd.style.transform=y)};return new r((function(t){if(e&&-1===y.indexOf(e))t(T);else{if(O.zoomed)t(T);else{if(e)O.original=e;else{if(!(y.length>0))return void t(T);var r=y;O.original=r[0]}if(O.original.dispatchEvent(ze("medium-zoom:open",{detail:{zoom:T}})),w=window.pageYOffset||document.documentElement.scrollTop||document.body.scrollTop||0,x=!0,O.zoomed=Be(O.original),document.body.appendChild($),S.template){var o=je(S.template)?S.template:document.querySelector(S.template);O.template=document.createElement("div"),O.template.appendChild(o.content.cloneNode(!0)),document.body.appendChild(O.template)}if(document.body.appendChild(O.zoomed),window.requestAnimationFrame((function(){document.body.classList.add("medium-zoom--opened")})),O.original.classList.add("medium-zoom-image--hidden"),O.zoomed.classList.add("medium-zoom-image--opened"),O.zoomed.addEventListener("click",f),O.zoomed.addEventListener("transitionend",(function e(){x=!1,O.zoomed.removeEventListener("transitionend",e),O.original.dispatchEvent(ze("medium-zoom:opened",{detail:{zoom:T}})),t(T)})),O.original.getAttribute("data-zoom-src")){O.zoomedHd=O.zoomed.cloneNode(),O.zoomedHd.removeAttribute("srcset"),O.zoomedHd.removeAttribute("sizes"),O.zoomedHd.src=O.zoomed.getAttribute("data-zoom-src"),O.zoomedHd.onerror=function(){clearInterval(i),console.warn("Unable to reach the zoom image target "+O.zoomedHd.src),O.zoomedHd=null,n()};var i=setInterval((function(){O.zoomedHd.complete&&(clearInterval(i),O.zoomedHd.classList.add("medium-zoom-image--opened"),O.zoomedHd.addEventListener("click",f),document.body.appendChild(O.zoomedHd),n())}),10)}else if(O.original.hasAttribute("srcset")){O.zoomedHd=O.zoomed.cloneNode(),O.zoomedHd.removeAttribute("sizes"),O.zoomedHd.removeAttribute("loading");var a=O.zoomedHd.addEventListener("load",(function(){O.zoomedHd.removeEventListener("load",a),O.zoomedHd.classList.add("medium-zoom-image--opened"),O.zoomedHd.addEventListener("click",f),document.body.appendChild(O.zoomedHd),n()}))}else n()}}}))},f=function(){return new r((function(t){if(!x&&O.original){x=!0,document.body.classList.remove("medium-zoom--opened"),O.zoomed.style.transform="",O.zoomedHd&&(O.zoomedHd.style.transform=""),O.template&&(O.template.style.transition="opacity 150ms",O.template.style.opacity=0),O.original.dispatchEvent(ze("medium-zoom:close",{detail:{zoom:T}})),O.zoomed.addEventListener("transitionend",(function e(){O.original.classList.remove("medium-zoom-image--hidden"),document.body.removeChild(O.zoomed),O.zoomedHd&&document.body.removeChild(O.zoomedHd),document.body.removeChild($),O.zoomed.classList.remove("medium-zoom-image--opened"),O.template&&document.body.removeChild(O.template),x=!1,O.zoomed.removeEventListener("transitionend",e),O.original.dispatchEvent(ze("medium-zoom:closed",{detail:{zoom:T}})),O.original=null,O.zoomed=null,O.zoomedHd=null,O.template=null,t(T)}))}else t(T)}))},v=function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},e=t.target;return O.original?f():h({target:e})},b=function(){return S},m=function(){return y},g=function(){return O.original},y=[],_=[],x=!1,w=0,S=n,O={original:null,zoomed:null,zoomedHd:null,template:null};"[object Object]"===Object.prototype.toString.call(e)?S=e:(e||"string"==typeof e)&&l(e),S=Ne({margin:0,background:"#fff",scrollOffset:40,container:null,template:null},S);var $=Ue(S.background);document.addEventListener("click",o),document.addEventListener("keyup",a),document.addEventListener("scroll",i),window.addEventListener("resize",f);var T={open:h,close:f,toggle:v,update:s,clone:c,attach:l,detach:u,on:p,off:d,getOptions:b,getImages:m,getZoomedImage:g};return T},Ve=[we,Ce,ke,Me,{data:function(){return{zoom:null}},mounted:function(){this.updateZoom()},updated:function(){this.updateZoom()},methods:{updateZoom:function(){var t=this;setTimeout((function(){t.zoom&&t.zoom.detach(),t.zoom=Ge("img",{margin:16})}),1e3)}}}],Je={name:"GlobalLayout",computed:{layout:function(){var t=this.getLayout();return me("layout",t),i.default.component(t)}},methods:{getLayout:function(){if(this.$page.path){var t=this.$page.frontmatter.layout;return t&&(this.$vuepress.getLayoutAsyncComponent(t)||this.$vuepress.getVueComponent(t))?t:"Layout"}return"NotFound"}}},He=n(2),We=Object(He.a)(Je,(function(){var t=this.$createElement;return(this._self._c||t)(this.layout,{tag:"component"})}),[],!1,null,null,null).exports;!function(t,e,n){var r;switch(e){case"components":t[e]||(t[e]={}),Object.assign(t[e],n);break;case"mixins":t[e]||(t[e]=[]),(r=t[e]).push.apply(r,Object(Qt.a)(n));break;default:throw new Error("Unknown option name.")}}(We,"mixins",Ve);var qe=[{name:"v-b2e3aa80",path:"/",component:We,beforeEnter:function(t,e,n){be("Layout","v-b2e3aa80").then(n)}},{path:"/index.html",redirect:"/"},{name:"v-846da578",path:"/about/",component:We,beforeEnter:function(t,e,n){be("Layout","v-846da578").then(n)}},{path:"/about/index.html",redirect:"/about/"},{name:"v-144b1220",path:"/comment/",component:We,beforeEnter:function(t,e,n){be("Layout","v-144b1220").then(n)}},{path:"/comment/index.html",redirect:"/comment/"},{name:"v-d5bebee2",path:"/developer/android/base/01.learning_route.html",component:We,beforeEnter:function(t,e,n){be("Layout","v-d5bebee2").then(n)}},{name:"v-0a1a659b",path:"/developer/android/base/02.dev_environment.html",component:We,beforeEnter:function(t,e,n){be("Layout","v-0a1a659b").then(n)}},{name:"v-5c11c33b",path:"/developer/android/base/03.project_structure_resources.html",component:We,beforeEnter:function(t,e,n){be("Layout","v-5c11c33b").then(n)}},{name:"v-7c6aabea",path:"/developer/android/base/04.fundamentals_knowledge.html",component:We,beforeEnter:function(t,e,n){be("Layout","v-7c6aabea").then(n)}},{name:"v-c6f25ac6",path:"/developer/android/base/05.user_interface.html",component:We,beforeEnter:function(t,e,n){be("Layout","v-c6f25ac6").then(n)}},{name:"v-59bb4d4a",path:"/developer/android/base/06.00_ui_layout_components.html",component:We,beforeEnter:function(t,e,n){be("Layout","v-59bb4d4a").then(n)}},{name:"v-3225e486",path:"/developer/android/base/06.01_layout_components_linerlayout.html",component:We,beforeEnter:function(t,e,n){be("Layout","v-3225e486").then(n)}},{name:"v-e571bd4a",path:"/developer/android/base/06.02_layout_components_relativelayout.html",component:We,beforeEnter:function(t,e,n){be("Layout","v-e571bd4a").then(n)}},{name:"v-022d481b",path:"/developer/android/base/06.03_layout_components_absolutelayout.html",component:We,beforeEnter:function(t,e,n){be("Layout","v-022d481b").then(n)}},{name:"v-6c159fd9",path:"/developer/android/base/06.04_layout_components_framelayout.html",component:We,beforeEnter:function(t,e,n){be("Layout","v-6c159fd9").then(n)}},{name:"v-580c0e15",path:"/developer/android/base/06.05_layout_components_tablelayout.html",component:We,beforeEnter:function(t,e,n){be("Layout","v-580c0e15").then(n)}},{name:"v-2ee42e9b",path:"/developer/android/base/06.06_layout_components_gridlayout.html",component:We,beforeEnter:function(t,e,n){be("Layout","v-2ee42e9b").then(n)}},{name:"v-8f041e3a",path:"/developer/android/base/07.00_ui_control_components.html",component:We,beforeEnter:function(t,e,n){be("Layout","v-8f041e3a").then(n)}},{name:"v-ecbbc74a",path:"/developer/android/base/06.07_layout_components_constraintlayout.html",component:We,beforeEnter:function(t,e,n){be("Layout","v-ecbbc74a").then(n)}},{name:"v-015f1e9b",path:"/developer/android/base/07.01_ui_control_components_textview.html",component:We,beforeEnter:function(t,e,n){be("Layout","v-015f1e9b").then(n)}},{name:"v-55c82270",path:"/developer/android/base/",component:We,beforeEnter:function(t,e,n){be("Layout","v-55c82270").then(n)}},{path:"/developer/android/base/index.html",redirect:"/developer/android/base/"},{name:"v-b348e4ca",path:"/developer/java/informal_essay/thread_pool_executor.html",component:We,beforeEnter:function(t,e,n){be("Layout","v-b348e4ca").then(n)}},{name:"v-10f6d00a",path:"/developer/javasocket/01.tcp.html",component:We,beforeEnter:function(t,e,n){be("Layout","v-10f6d00a").then(n)}},{name:"v-3f89301b",path:"/developer/javasocket/02.udp.html",component:We,beforeEnter:function(t,e,n){be("Layout","v-3f89301b").then(n)}},{name:"v-d2096aa0",path:"/developer/javasocket/",component:We,beforeEnter:function(t,e,n){be("Layout","v-d2096aa0").then(n)}},{path:"/developer/javasocket/index.html",redirect:"/developer/javasocket/"},{name:"v-1559a70e",path:"/developer/rxjava2/01.rxjava2.html",component:We,beforeEnter:function(t,e,n){be("Layout","v-1559a70e").then(n)}},{name:"v-deaef892",path:"/developer/rxjava2/02.rxjava2.html",component:We,beforeEnter:function(t,e,n){be("Layout","v-deaef892").then(n)}},{name:"v-2bfddaf5",path:"/developer/rxjava2/03.rxjava2.html",component:We,beforeEnter:function(t,e,n){be("Layout","v-2bfddaf5").then(n)}},{name:"v-71599b9a",path:"/developer/rxjava2/04.rxjava2.html",component:We,beforeEnter:function(t,e,n){be("Layout","v-71599b9a").then(n)}},{name:"v-62a88971",path:"/developer/rxjava2/05.rxjava2.html",component:We,beforeEnter:function(t,e,n){be("Layout","v-62a88971").then(n)}},{name:"v-04043ea2",path:"/developer/rxjava2/06.rxjava2.html",component:We,beforeEnter:function(t,e,n){be("Layout","v-04043ea2").then(n)}},{name:"v-cd599026",path:"/developer/rxjava2/07.rxjava2.html",component:We,beforeEnter:function(t,e,n){be("Layout","v-cd599026").then(n)}},{name:"v-34a88f2b",path:"/developer/rxjava2/08.rxjava2.html",component:We,beforeEnter:function(t,e,n){be("Layout","v-34a88f2b").then(n)}},{name:"v-6004332e",path:"/developer/rxjava2/09.rxjava2.html",component:We,beforeEnter:function(t,e,n){be("Layout","v-6004332e").then(n)}},{name:"v-295365bd",path:"/developer/rxjava2/10.rxjava2.html",component:We,beforeEnter:function(t,e,n){be("Layout","v-295365bd").then(n)}},{name:"v-76ae860a",path:"/developer/rxjava2/11.rxjava2.html",component:We,beforeEnter:function(t,e,n){be("Layout","v-76ae860a").then(n)}},{name:"v-5ffe1439",path:"/developer/rxjava2/12.rxjava2.html",component:We,beforeEnter:function(t,e,n){be("Layout","v-5ffe1439").then(n)}},{name:"v-874e03a0",path:"/tutorial/gitbook/",component:We,beforeEnter:function(t,e,n){be("Layout","v-874e03a0").then(n)}},{path:"/tutorial/gitbook/index.html",redirect:"/tutorial/gitbook/"},{name:"v-b1564aac",path:"/tag/",component:We,beforeEnter:function(t,e,n){be("Tags","v-b1564aac").then(n)},meta:{pid:"tags",id:"tags"}},{path:"/tag/index.html",redirect:"/tag/"},{name:"v-ef9325c4",path:"/categories/",component:We,beforeEnter:function(t,e,n){be("FrontmatterKey","v-ef9325c4").then(n)},meta:{pid:"categories",id:"categories"}},{path:"/categories/index.html",redirect:"/categories/"},{name:"v-6319eb4e",path:"/timeline/",component:We,beforeEnter:function(t,e,n){be("TimeLines","v-6319eb4e").then(n)},meta:{pid:"timeline",id:"timeline"}},{path:"/timeline/index.html",redirect:"/timeline/"},{name:"v-77167f66",path:"/tag/Android 开发基础/",component:We,beforeEnter:function(t,e,n){be("Tag","v-77167f66").then(n)},meta:{pid:"tags",id:"Android 开发基础"}},{path:"/tag/Android 开发基础/index.html",redirect:"/tag/Android 开发基础/"},{name:"v-2dddd40c",path:"/tag/ThreadPoolExecutor/",component:We,beforeEnter:function(t,e,n){be("Tag","v-2dddd40c").then(n)},meta:{pid:"tags",id:"ThreadPoolExecutor"}},{path:"/tag/ThreadPoolExecutor/index.html",redirect:"/tag/ThreadPoolExecutor/"},{name:"v-1eedfa34",path:"/tag/随笔/",component:We,beforeEnter:function(t,e,n){be("Tag","v-1eedfa34").then(n)},meta:{pid:"tags",id:"随笔"}},{path:"/tag/随笔/index.html",redirect:"/tag/随笔/"},{name:"v-53105ce0",path:"/tag/JavaSocket/",component:We,beforeEnter:function(t,e,n){be("Tag","v-53105ce0").then(n)},meta:{pid:"tags",id:"JavaSocket"}},{path:"/tag/JavaSocket/index.html",redirect:"/tag/JavaSocket/"},{name:"v-c86f3322",path:"/tag/Rxjava2/",component:We,beforeEnter:function(t,e,n){be("Tag","v-c86f3322").then(n)},meta:{pid:"tags",id:"Rxjava2"}},{path:"/tag/Rxjava2/index.html",redirect:"/tag/Rxjava2/"},{name:"v-1cb99a9e",path:"/tag/Gitbook/",component:We,beforeEnter:function(t,e,n){be("Tag","v-1cb99a9e").then(n)},meta:{pid:"tags",id:"Gitbook"}},{path:"/tag/Gitbook/index.html",redirect:"/tag/Gitbook/"},{name:"v-41b76ade",path:"/categories/Android/",component:We,beforeEnter:function(t,e,n){be("Category","v-41b76ade").then(n)},meta:{pid:"categories",id:"Android"}},{path:"/categories/Android/index.html",redirect:"/categories/Android/"},{name:"v-6137bfcf",path:"/categories/Java/",component:We,beforeEnter:function(t,e,n){be("Category","v-6137bfcf").then(n)},meta:{pid:"categories",id:"Java"}},{path:"/categories/Java/index.html",redirect:"/categories/Java/"},{name:"v-1bc5ee9c",path:"/categories/JavaSocket/",component:We,beforeEnter:function(t,e,n){be("Category","v-1bc5ee9c").then(n)},meta:{pid:"categories",id:"JavaSocket"}},{path:"/categories/JavaSocket/index.html",redirect:"/categories/JavaSocket/"},{name:"v-41fa44e3",path:"/categories/Rxjava2/",component:We,beforeEnter:function(t,e,n){be("Category","v-41fa44e3").then(n)},meta:{pid:"categories",id:"Rxjava2"}},{path:"/categories/Rxjava2/index.html",redirect:"/categories/Rxjava2/"},{name:"v-7a290ddc",path:"/categories/Gitbook/",component:We,beforeEnter:function(t,e,n){be("Category","v-7a290ddc").then(n)},meta:{pid:"categories",id:"Gitbook"}},{path:"/categories/Gitbook/index.html",redirect:"/categories/Gitbook/"},{name:"v-6d3e9797",path:"/tag/Android 开发基础/page/2/",component:We,beforeEnter:function(t,e,n){be("Layout","v-6d3e9797").then(n)},meta:{pid:"tags",id:"Android 开发基础"}},{path:"/tag/Android 开发基础/page/2/index.html",redirect:"/tag/Android 开发基础/page/2/"},{name:"v-b4553724",path:"/tag/Rxjava2/page/2/",component:We,beforeEnter:function(t,e,n){be("Layout","v-b4553724").then(n)},meta:{pid:"tags",id:"Rxjava2"}},{path:"/tag/Rxjava2/page/2/index.html",redirect:"/tag/Rxjava2/page/2/"},{name:"v-574755c2",path:"/categories/Android/page/2/",component:We,beforeEnter:function(t,e,n){be("Layout","v-574755c2").then(n)},meta:{pid:"categories",id:"Android"}},{path:"/categories/Android/page/2/index.html",redirect:"/categories/Android/page/2/"},{name:"v-1ade81e4",path:"/categories/Java/page/2/",component:We,beforeEnter:function(t,e,n){be("Layout","v-1ade81e4").then(n)},meta:{pid:"categories",id:"Java"}},{path:"/categories/Java/page/2/index.html",redirect:"/categories/Java/page/2/"},{name:"v-2d761b7a",path:"/categories/Rxjava2/page/2/",component:We,beforeEnter:function(t,e,n){be("Layout","v-2d761b7a").then(n)},meta:{pid:"categories",id:"Rxjava2"}},{path:"/categories/Rxjava2/page/2/index.html",redirect:"/categories/Rxjava2/page/2/"},{path:"*",component:We}],Ye={title:"江明的个人网站",description:"专注互联网领域研究和软件技术的研发、挖掘与分享",base:"/",headTags:[["link",{rel:"icon",href:"/img/icon/favicon.ico",type:"image/x-icon"}],["link",{rel:"shortcut icon",href:"/img/icon/favicon.ico",type:"image/x-icon"}],["link",{rel:"bookmark",href:"/img/icon/favicon.ico",type:"image/x-icon"}],["meta",{"http-equiv":"X-UA-Compatible",content:"IE=edge,chrome=1"}],["meta",{name:"viewport",content:"width=device-width,initial-scale=1,user-scalable=no"}],["meta",{name:"Keywords",content:"江明,江明的个人网站,江明的博客,编程,Java,Android,Web,rxjava,vuepress,gitbook"}],["script",{language:"javascript",type:"text/javascript",src:"/js/unsupport.js"}],["script",{},'\n        var _hmt = _hmt || [];\n        (function() {\n          var hm = document.createElement("script");\n          hm.src = "https://hm.baidu.com/hm.js?9c9c4bc79a7c31469b6b94b190c2be1f";\n          var s = document.getElementsByTagName("script")[0]; \n          s.parentNode.insertBefore(hm, s);\n        })();\n        <\/script>            \n        '],["script",{language:"javascript",type:"text/javascript",src:"https://cdn.bootcdn.net/ajax/libs/jquery/3.5.1/jquery.min.js"}],["script",{language:"javascript",type:"text/javascript",src:"/js/mouse.click.text.effect.js"}]],pages:[{title:"Home",frontmatter:{home:!0,heroImage:"/img/icon/icon.png",heroImageStyle:{maxHeight:"260px",display:"block",margin:"6rem auto 1.5rem",borderRadius:"50%",boxShadow:"0 5px 18px rgba(0,0,0,0.2)"},heroText:"江明的个人主页",tagline:"放飞梦想，砥砺前行",actionText:"开始探索 →",actionLink:"/about/",features:[{title:"昨天",details:"天行健，君子以自強不息，地勢坤，君子以厚德载物。"},{title:"今天",details:"有智者立长志，无志者长立志。"},{title:"未来",details:"梦想不抛弃苦心追求的人，只要不停止追求，你们会沐浴在梦想的光辉之中。"}],footer:"Copyright © 2020-present JiangMing"},regularPath:"/",relativePath:"README.md",key:"v-b2e3aa80",path:"/",content:"  "},{title:"关于本站",frontmatter:{author:"JiangMing",sticky:1,title:"关于本站",date:"2021-04-16",sidebar:"auto",publish:!0,showSponsor:!0,isShowComments:!1},regularPath:"/about/",relativePath:"about/README.md",key:"v-846da578",path:"/about/",headers:[{level:2,title:"介绍",slug:"介绍"},{level:2,title:"探究",slug:"探究"},{level:2,title:"期待",slug:"期待"},{level:2,title:"联系",slug:"联系"},{level:2,title:"提示",slug:"提示"}],content:" 介绍 \n 欢迎来到 🎉  江明的个人网站™  🎉，本站是一个仅用于个人相关的展示与分享的网站！ \n 😄先简单自我介绍一下，本人目前从事于  软件编程研发  相关职业，也是一名全栈开发爱好者，热爱软件编程，电子数码和互联网行业！目前主要从事 智能汽车的车载系统领域 的软件研发工作，当然个人的兴趣爱好也不完全局限于工作的方面，也对互联网相关领域有着非常高的兴趣和探究精神，例如：对web、docker、C/C++、Java、Kotlin、Android、DataBase（SQL）、计算机网络、计算机系统等等方面，都很有兴趣并对其有所研究，并还在持续的探索中～ \n 探究 \n ⌛️在日常生活或者工作中，经常会学到一些知识或者遇到一些知识，都是需要什么学习什么，用什么查什么，没有形成一个系统的知识体系，在时间的流逝下，很多知识都会随之忘记了，如果可以通过书写笔记的方式来记录、回顾和总结的良好习惯的话，将会有很大的用处。 \n 学习是永无止境的，学的越多，才会发现自己的很多不足之处。正如站得高才能看得远，井底之蛙的眼光只有目光所到之处。在各自的领域，尽心耕耘，一份努力一份收获，多学习，多记录自己学到的知识，并能够很好的总结，不断提升自己的能力，也能分享给他人，授人以渔。 \n 👉综合考虑之下建立了本站，主要利用自己 空余 的时间来 记录和分享 自己在互联网和终端领域学习和实践的一些知识和经验以及生活上的日记。 \n 期待 \n ✉️如有共同的兴趣或者需要一起来沟通交流和探讨互联网、软件编程、电子数码或者其他方面的朋友， 期待并欢迎 大家 发送邮件 来一起沟通交流。有需要提出建议或者意见反馈，请到 留言板 进行留言，并留下您的联系方式，我将会一一反馈您的问题或者建议！ \n 联系 \n 📧 126 邮箱： jiangmingyx@126.com \n 📧 QQ 邮箱： jiangmingyx@qq.com \n 📧 Gmail 邮箱:  jiangmingyx@gmail.com \n 提示 \n 目前站点还在持续的维护和完善中，相关的文章也在逐步的整理中，敬请期待哦🚀🚀🚀~~~ \n "},{title:"留言板",frontmatter:{author:"JiangMing",title:"留言板",date:"2021-04-17 20:00:00",sidebar:!1,publish:!1,showSponsor:!1,isShowComments:!0},regularPath:"/comment/",relativePath:"comment/README.md",key:"v-144b1220",path:"/comment/",content:" 📝 欢迎大家在下方 评论区 或者 发送邮件 的方式，留下您的宝贵意见或建议... \n "},{title:"01. Android 入门基础学习路线",frontmatter:{author:"JiangMing",title:"01. Android 入门基础学习路线",date:"2021-05-01 10:00:00",sidebar:"auto",categories:["Android"],tags:["Android 开发基础"],publish:!0,showSponsor:!0},regularPath:"/developer/android/base/01.learning_route.html",relativePath:"developer/android/base/01.learning_route.md",key:"v-d5bebee2",path:"/developer/android/base/01.learning_route.html",headers:[{level:2,title:"学习路线参考",slug:"学习路线参考"}],content:" 本系列的教程属于 Android的基础入门应用开发教程 ，主要介绍  Android 应用入门基础开发 相关教程。一个人的精力是有限的，而且也有自己的工作忙，所以不可能去方方面面的详细的介绍每一个相关的知识点（软件的技术迭代也很快），这里主要还是介绍一些基础的概念和相关的示例，所以如需更深的知识体系，还是得自己学会主动去获取知识的能力。 \n 因为 Android 的体系庞大，内容丰富多样，所以这里将简单的描述总结了相关入门原生开发基础的学习方向和路线，当然知识是灵活的，一下内容可能会随着学习深入、Android的体系架构的变化等等因素随时变化，此处学习路线仅供参考。 \n 学习路线参考 \n \n Android的开发环境搭建 \n Android项目工程目录结构和应用资源 \n 应用基础知识概览 \n 用户界面以及常用的UI组件 \n 事件机制和处理 \n 应用数据存储 \n Android的四大组件 \n Intent组件 \n 绘图和动画 \n 多媒体开发 \n 位置数据 \n 网络编程 \n TODO... \n \n 还在持续更新和完善中... \n"},{title:"02. Android 开发环境搭建",frontmatter:{author:"JiangMing",title:"02. Android 开发环境搭建",date:"2021-05-02 16:10:26",sidebar:"auto",categories:["Android"],tags:["Android 开发基础"],publish:!0,showSponsor:!0},regularPath:"/developer/android/base/02.dev_environment.html",relativePath:"developer/android/base/02.dev_environment.md",key:"v-0a1a659b",path:"/developer/android/base/02.dev_environment.html",headers:[{level:2,title:"JDK 环境安装和配置（推荐）",slug:"jdk-环境安装和配置-推荐"},{level:3,title:"Windows中安装JDK",slug:"windows中安装jdk"},{level:3,title:"Ubuntu中安装JDK",slug:"ubuntu中安装jdk"},{level:3,title:"JDK相关工具的介绍",slug:"jdk相关工具的介绍"},{level:2,title:"Android Studio 安装",slug:"android-studio-安装"},{level:3,title:"下载AS安装包",slug:"下载as安装包"},{level:3,title:"Windows中安装AS",slug:"windows中安装as"},{level:3,title:"Ubuntu中安装AS",slug:"ubuntu中安装as"}],content:" 不同领域的开发人员，其开发的环境可能不太一样，比如大多数的互联网公司开发 Android 应用程序 （简称APP），因为只需要进行APP相关的开发即可，那么在  Windows  系统平台下就能满足需求；然而如果是涉及 Android ROM 平台相关的开发时候，可能需要在  Linux（Ubuntu） 系统环境下进行开发，因为可能涉及到AOSP（通俗来说就是安卓源码环境）环境的开发，需要通过 Linux 来编译整个 ROM 或者编译平台相关的 APP 开发。 \n 所以本教程将分别介绍  Windows  和  Ubuntu  系统中的Android 开发环境的搭建，由于目前绝大多数的 Android APP 相关的开发都是基于  Java  语言，所以建议大家先安装一下 JDK （Java 开发工具）环境，方便后续的很多调试和开发。 \n Android 应用的开发工具目前是主流官方提供的  Android Studio ，当然早期也有  Eclipse  的集成插件方式的开发工具，不过谷歌已经放弃了ADT（Eclipse Android 开发插件）的更新，官网上也取消的下载链接，所以这里将使用 Android Studio 来进行开发环境搭建和开发。 \n JDK 环境安装和配置（推荐） \n \n JDK 是Java Development Kit 缩写，中文称为Java开发套件。这是为Java应用程序开发提供了编译和执行环境，Java程序的开发和调试都依赖于它。 \n JDK 能够将Java程序编写为字节码文件，即.class文件，也可以打包这些class文件成JAR包。 \n \n 在较高版本的 Android studio 中可能已经不需要额外的安装JDK了，但是还是建议大家安装一下JDK，这样可能方便JAVA相关开发和使用JAVA提供的许多工具。 \n Windows中安装JDK \n 首先去 Oracle官网 下载合适的 JDK 安装包， 截止到目前推荐大家安装  Java SE 8  版本 。 \n 1. 下载安装包 \n 选择下载Java SE 8的JDK。 \n 2. 开始安装 \n 一般无特殊需求的情况，全部选择下一步默认安装即可。 \n 3. 配置环境变量 \n 安装完JDK后，需要设置一个 JAVA_HOME 的环境变量，它指向JDK的安装目录。 \n 4. 查看版本信息 \n 在  CMD  命令控制台中通过 java 命令查看一下版本信息，如果以上配置没有问题的话，就可以看到有版本信息的输出了，那么此时就完成JDK的安装和环境变量的配置了。 \n Ubuntu中安装JDK \n 注意 在Linux中，一般使用OpenJDK，因为OracleJDK是属于商业收费的，个人免费，在Ubuntu中开发的大多数是ROM开发，一般都是涉及商业的，所以建议在Ubuntu中安装OpenJDK，这个是完全开源免费的，Android的开发使用上也是没有任何问题的。 \n 当然如果有需要的话，也是可以去Oracle官网下载Linux版本的JDK使用的，这里就不在介绍了，有兴趣的可以自行下载研究。 \n 1. 开始安装 \n 在  Ubuntu  中安装JDK是非常简单的，只需要执行一句安装命令即可，这里同样选择安装  Java SE 8  版本的OpenJDK \n注意，这里使用通配符 '*' 表示安装 'openjdk-8' 所有相关的软件包，也可以只安装 'openjdk-8-jdk'。 \n$  sudo   apt-get   install  openjdk-8-*\n正在读取软件包列表 .. . 完成\n正在分析软件包的依赖关系树       \n正在读取状态信息 .. . 完成       \n注意，根据Glob  'openjdk-8-*'  选中了  'openjdk-8-jdk' \n注意，根据Glob  'openjdk-8-*'  选中了  'openjdk-8-jre' \n注意，根据Glob  'openjdk-8-*'  选中了  'openjdk-8-demo' \n注意，根据Glob  'openjdk-8-*'  选中了  'openjdk-8-jre-dcevm' \n注意，根据Glob  'openjdk-8-*'  选中了  'openjdk-8-jdk-headless' \n注意，根据Glob  'openjdk-8-*'  选中了  'openjdk-8-jre-zero' \n注意，根据Glob  'openjdk-8-*'  选中了  'openjdk-8-source' \n注意，根据Glob  'openjdk-8-*'  选中了  'openjdk-8-jre-headless' \n注意，根据Glob  'openjdk-8-*'  选中了  'openjdk-8-dbg' \n注意，根据Glob  'openjdk-8-*'  选中了  'openjdk-8-doc' \nopenjdk-8-jre-dcevm 已经是最新版  ( 8u112-2 ) 。\n建议安装：\n  visualvm icedtea-8-plugin fonts-ipafont-gothic fonts-ipafont-mincho\n  fonts-wqy-microhei fonts-wqy-zenhei\n下列软件包将被升级：\n  openjdk-8-dbg openjdk-8-demo openjdk-8-doc openjdk-8-jdk\n  openjdk-8-jdk-headless openjdk-8-jre openjdk-8-jre-headless\n  openjdk-8-jre-zero openjdk-8-source\n升级了  9  个软件包，新安装了  0  个软件包，要卸载  0  个软件包，有  49  个软件包未被升级。\n需要下载  0  B/103 MB 的归档。\n解压缩后会消耗  133  kB 的额外空间。\n您希望继续执行吗？  [ Y/n ]  y\n ( 正在读取数据库  .. . 系统当前共安装有  185082  个文件和目录。 ) \n正准备解包  .. ./0-openjdk-8-demo_8u292-b10-0ubuntu1~18.04_amd64.deb   .. .\n正在将 openjdk-8-demo  ( 8u292-b10-0ubuntu1~18.04 )  解包到  ( 8u282-b08-0ubuntu1~18.04 )  上  .. .\n正准备解包  .. ./1-openjdk-8-dbg_8u292-b10-0ubuntu1~18.04_amd64.deb   .. .\n正在将 openjdk-8-dbg:amd64  ( 8u292-b10-0ubuntu1~18.04 )  解包到  ( 8u282-b08-0ubuntu1~18.04 )  上  .. .\n正准备解包  .. ./2-openjdk-8-jdk_8u292-b10-0ubuntu1~18.04_amd64.deb   .. .\n正在将 openjdk-8-jdk:amd64  ( 8u292-b10-0ubuntu1~18.04 )  解包到  ( 8u282-b08-0ubuntu1~18.04 )  上  .. .\n正准备解包  .. ./3-openjdk-8-jdk-headless_8u292-b10-0ubuntu1~18.04_amd64.deb   .. .\n正在将 openjdk-8-jdk-headless:amd64  ( 8u292-b10-0ubuntu1~18.04 )  解包到  ( 8u282-b08-0ubuntu1~18.04 )  上  .. .\n正准备解包  .. ./4-openjdk-8-jre-zero_8u292-b10-0ubuntu1~18.04_amd64.deb   .. .\n正在将 openjdk-8-jre-zero:amd64  ( 8u292-b10-0ubuntu1~18.04 )  解包到  ( 8u282-b08-0ubuntu1~18.04 )  上  .. .\n正准备解包  .. ./5-openjdk-8-jre_8u292-b10-0ubuntu1~18.04_amd64.deb   .. .\n正在将 openjdk-8-jre:amd64  ( 8u292-b10-0ubuntu1~18.04 )  解包到  ( 8u282-b08-0ubuntu1~18.04 )  上  .. .\n正准备解包  .. ./6-openjdk-8-jre-headless_8u292-b10-0ubuntu1~18.04_amd64.deb   .. .\n正在将 openjdk-8-jre-headless:amd64  ( 8u292-b10-0ubuntu1~18.04 )  解包到  ( 8u282-b08-0ubuntu1~18.04 )  上  .. .\n正准备解包  .. ./7-openjdk-8-doc_8u292-b10-0ubuntu1~18.04_all.deb   .. .\n正在将 openjdk-8-doc  ( 8u292-b10-0ubuntu1~18.04 )  解包到  ( 8u282-b08-0ubuntu1~18.04 )  上  .. .\n正准备解包  .. ./8-openjdk-8-source_8u292-b10-0ubuntu1~18.04_all.deb   .. .\n正在将 openjdk-8-source  ( 8u292-b10-0ubuntu1~18.04 )  解包到  ( 8u282-b08-0ubuntu1~18.04 )  上  .. .\n正在设置 openjdk-8-doc  ( 8u292-b10-0ubuntu1~18.04 )   .. .\n正在设置 openjdk-8-jre-headless:amd64  ( 8u292-b10-0ubuntu1~18.04 )   .. .\n正在安装新版本配置文件 /etc/java-8-openjdk/security/java.security  .. .\n正在设置 openjdk-8-jdk-headless:amd64  ( 8u292-b10-0ubuntu1~18.04 )   .. .\n正在设置 openjdk-8-jre-zero:amd64  ( 8u292-b10-0ubuntu1~18.04 )   .. .\n正在设置 openjdk-8-jre:amd64  ( 8u292-b10-0ubuntu1~18.04 )   .. .\n正在设置 openjdk-8-dbg:amd64  ( 8u292-b10-0ubuntu1~18.04 )   .. .\n正在设置 openjdk-8-jdk:amd64  ( 8u292-b10-0ubuntu1~18.04 )   .. .\n正在设置 openjdk-8-demo  ( 8u292-b10-0ubuntu1~18.04 )   .. .\n正在设置 openjdk-8-source  ( 8u292-b10-0ubuntu1~18.04 )   .. .\n正在处理用于 hicolor-icon-theme  ( 0.17 -2 )  的触发器  .. .\n正在处理用于 mime-support  ( 3 .60ubuntu1 )  的触发器  .. .\n正在处理用于 desktop-file-utils  ( 0.23 -1ubuntu3.18.04.2 )  的触发器  .. .\n正在处理用于 libc-bin  ( 2.27 -3ubuntu1.4 )  的触发器  .. .\n正在处理用于 gnome-menus  ( 3.13 .3-11ubuntu1.1 )  的触发器  .. .\n 2. 查看版本信息 \n 在终端中执行命令查看安装的JDK版本信息，正常输出信息即安装成功了。 \n $ java -version\nopenjdk version  \"1.8.0_292\" \nOpenJDK Runtime Environment  ( build  1.8 .0_292-8u292-b10-0ubuntu1~18.04-b10 ) \nOpenJDK  64 -Bit Server VM  ( build  25.292 -b10, mixed mode ) \n JDK相关工具的介绍 \n JAVA_HOME 的 bin 目录下可以看到很多可执行文件，例如： \n \n java：这个可执行程序其实就是JVM，运行Java程序，就是启动JVM，然后让JVM执行指定的编译后的代码； \n javac：这是Java的编译器，它用于把Java源码文件（以 .java 后缀结尾）编译为Java字节码文件（以 .class 后缀结尾）； \n jar：用于把一组 .class 文件打包成一个 .jar 文件，便于发布； \n javadoc：用于从Java源码中自动提取注释并生成文档； \n jdb：Java调试器，用于开发阶段的运行调试。 \n ... \n Android Studio 安装 \n Android Studio  是Google官方推荐使用的Android 应用可视化开发工具，以下将简称 Android Studio为  AS 。 \n 下载AS安装包 \n 进入Android developer的 官网下载 最新版本的Android Studio，根据不同的平台，下载不同的软件安装包。 \n Windows中安装AS \n 打开运行下载的 Windows 平台的软件安装包，开始进行安装。 \n Ubuntu中安装AS \n 解压下载的Linux平台的Android Studio 的软件安装包到指定的安装目录下，再通过配置Ubuntu的桌面快捷方式就可以了。 \n 1. Ubuntu的AS安装目录： \n 2. 创建Ubuntu应用的快捷方式 \n 在  /usr/share/applications/  目录下创建  AndroidStudio.desktop 文件，并配置如下配置： \n 3. 打开程序 \n 通过打开 桌面的快捷方式 或者执行安装目录 bin目录下的studio.sh ，就打开Android Studio，进行相关的配置了。 \n \n \n \n \n \n \n 到了此时，Android的开发环境的搭建就已经结束了，有错误的地方或者迷惑的地方，欢迎大家到随时联系！ \n "},{title:"03. 应用项目工程结构和资源",frontmatter:{author:"JiangMing",title:"03. 应用项目工程结构和资源",date:"2021-05-03 12:53:54",sidebar:"auto",categories:["Android"],tags:["Android 开发基础"],publish:!0,showSponsor:!0},regularPath:"/developer/android/base/03.project_structure_resources.html",relativePath:"developer/android/base/03.project_structure_resources.md",key:"v-5c11c33b",path:"/developer/android/base/03.project_structure_resources.html",headers:[{level:2,title:"构建项目",slug:"构建项目"},{level:2,title:"项目结构",slug:"项目结构"},{level:3,title:"主要的结构",slug:"主要的结构"},{level:3,title:"重要的文件",slug:"重要的文件"},{level:2,title:"应用资源概览",slug:"应用资源概览"},{level:3,title:"第三方库",slug:"第三方库"},{level:3,title:"业务代码",slug:"业务代码"},{level:3,title:"res资源",slug:"res资源"},{level:2,title:"访问应用资源",slug:"访问应用资源"},{level:3,title:"在代码中访问资源",slug:"在代码中访问资源"},{level:3,title:"在 XML 中访问资源",slug:"在-xml-中访问资源"},{level:3,title:"访问原始文件",slug:"访问原始文件"},{level:3,title:"访问平台资源",slug:"访问平台资源"},{level:2,title:"利用资源提供最佳设备兼容性",slug:"利用资源提供最佳设备兼容性"}],content:' 如果您是首次接触 Android，并希望开始编写代码，请从下面 构建项目 开始了解相关知识。 \n 构建项目 \n 本节将介绍如何使用 Android Studio 创建新的 Android 项目，并介绍该项目中的相关的一些工程文件。 \n 如需创建新的 Android 项目，请按以下步骤操作： \n \n 安装最新版本的  Android Studio 。 \n 在  Welcome to Android Studio  窗口中，点击  Create New Project 。 \n \n \n \n 在  Select a Project Template  窗口中，选择  Empty Activity ，然后点击  Next 。 \n \n \n \n \n 在 Configure your project 窗口中，完成以下操作： \n \n 在  Name  字段中输入项目的名称。 \n 在  Package name  字段中输入项目包名。 \n 如果您想将项目放在其他文件夹中，请更改其  Save  位置。 \n 从  Language  下拉菜单中选择  Java  或  Kotlin 。 \n 在  Minimum SDK  字段中选择您的应用支持的最低 Android 版本。 \n 如果您的应用需要旧版库支持，请选中  Use legacy android.support libraries  复选框。 \n 其他选项保持原样。 \n \n \n \n 点击  Finish 。 \n \n \n \n \n 经过一段时间的处理后，Android Studio 创建的项目主窗口会出现。 \n 项目结构 \n 通过上面的步骤创建了一个新的Android 应用项目，下面花一点时间了解一下其中的重要的文件。 \n 首先，确保已打开  Project  窗口（依次选择  View > Tool Windows > Project ），并从该窗口顶部的下拉列表中选择 Android 视图。随后，您可以看到以下主要的项目结构： \n 主要的结构 \n 如果选择  Project  视图，您可以看到更多文件和目录。其中最重要的目录如下： \n \n \n module-name/     项目工程目录。 \n \n \n build/   包含构建输出。 \n \n \n libs/    包含专用库。 \n \n \n src/     包含相应模块在以下子目录中的所有代码和资源文件： \n \n \n androidTest/     包含在 Android 设备上运行的插桩测试的代码。如需了解详情，请参阅  Android 测试文档 。 \n \n \n main/    包含“主”源代码集文件：所有构建变体共享的 Android 代码和资源（其他构建变体的文件位于同级目录中，例如“debug”构建类型的文件位于  src/debug/  中）。 \n \n \n AndroidManifest.xml  描述应用及其各个组件的性质。如需了解详情，请参阅  AndroidManifest.xml  文档。 \n \n \n java/    包含 Java 源代码。 \n \n \n jni/     包含使用 Java 原生接口 (JNI) 的原生代码。如需了解详情，请参阅  Android NDK 文档 。 \n \n \n res/     包含应用资源，例如可绘制对象文件、布局文件和界面字符串。如需了解详情，请参阅 应用资源 。 \n \n \n assets/  包含应按原样编译为  .apk  文件的文件。您可以使用 URI 按照与典型文件系统相同的方式导航此目录，并使用  AssetManager  以字节流的形式读取文件。例如，此目录非常适合存储纹理和游戏数据。 \n \n \n \n \n test/    包含在主机 JVM 上运行的本地测试代码。 \n \n \n build.gradle （模块）    这定义了特定于模块的构建配置。 \n \n \n \n \n build.gradle （项目）  这定义了适用于所有模块的构建配置。该文件是项目不可或缺的一部分，因此您应该将其与所有其他源代码一起保留在修订版本控制系统中。 如需了解其他构建文件，请参阅 配置构建 。 \n 重要的文件 \n \n \n app > src > main > java > xxx > MainActivity \n 这是主 activity。它是应用的入口点。当您构建和运行应用时，系统会启动此  Activity  的实例并加载其布局。 \n \n \n app > src > main > res > layout > activity_main.xml \n 此 XML 文件定义了 activity 界面 (UI) 的布局。它包含一个  TextView  元素，其中具有“Hello, World!”文本 \n \n \n app > src > main> AndroidManifest.xml \n 清单文件 描述应用的基本特性并定义其每个组件。 \n \n \n build.gradle \n 有两个使用此名称的文件：一个针对项目“Project”，另一个针对应用模块“Module: app”。每个模块均有自己的  build.gradle  文件，但此项目当前仅有一个模块。使用每个模块的  build.gradle  文件控制  Gradle 插件 构建应用的方式。如需详细了解此文件，请参阅 配置 build 。 \n 应用资源概览 \n 资源是指代码使用的附加文件和静态内容，例如位图、布局定义、界面字符串、动画说明等。 \n 您应始终外部化应用资源（例如图像和代码中的字符串），以便单独对其进行维护。此外，您还应为特定设备配置提供备用资源，方法是将其进行分组并放入专门命名的资源目录中。在运行时，Android 会根据当前配置使用合适的资源。例如，您可能需根据屏幕尺寸提供不同的界面布局，或根据语言设置提供不同的字符串。 \n 外部化应用资源后，您便可使用在项目  R  类中生成的资源 ID 来访问这些资源。本文档会介绍如何对 Android 项目中的资源进行分组，如何为特定的设备配置提供备用资源，以及如何从您的应用代码或其他 XML 文件访问这些资源。 \n 第三方库 \n 在  app > libs  目录中存放需要使用的第三方的二进制库文件，如JAR，AAR等库文件。 \n 业务代码 \n 代码资源主要还是放在  app > main  目录下，目前常见有： \n \n \n java 目录 \n 包含 Java 源代码文件（以软件包名称分隔各文件，包括 JUnit 测试代码）。 \n \n \n aidl 目录 \n 存放 AIDL 接口相关的文件。 \n \n \n jni/cpp 目录 \n 存放包含使用 Java 原生接口 (JNI) 的原生代码，Native 相关开发的C、C++的相关代码文件。 \n res资源 \n 包含所有非代码资源（例如 XML 布局、界面字符串和位图图像），这些资源划分到相应的子目录中。如需详细了解所有可能的资源类型，请参阅 提供资源 。 \n 项目  res/  支持的资源目录： \n \n \n \n 目录 \n 资源类型 \n \n \n \n \n animator/ \n 用于定义 属性动画 的 XML 文件。 \n \n \n anim/ \n 用于定义 渐变动画 的 XML 文件。（属性动画也可保存在此目录中，但为了区分这两种类型，属性动画首选  animator/  目录。） \n \n \n color/ \n 用于定义颜色状态列表的 XML 文件。请参阅 颜色状态列表资源 \n \n \n drawable/ \n 位图文件（ .png 、 .9.png 、 .jpg 、 .gif ）或编译为以下可绘制对象资源子类型的 XML 文件：              位图文件、九宫格（可调整大小的位图）、 状态列表 、形状、动画可绘制对象、其他可绘制对象请参阅:  Drawable 资源 。 \n \n \n mipmap/ \n 适用于不同启动器图标密度的可绘制对象文件。如需了解有关使用  mipmap/  文件夹管理启动器图标的详细信息，请参阅 管理项目概览 。 \n \n \n layout/ \n 用于定义用户界面布局的 XML 文件。请参阅 布局资源 。 \n \n \n menu/ \n 用于定义应用菜单（如选项菜单、上下文菜单或子菜单）的 XML 文件。请参阅 菜单资源 。 \n \n \n raw/ \n 需以原始形式保存的任意文件。如要使用原始  InputStream  打开这些资源，请使用资源 ID（即  R.raw.filename ）调用  Resources.openRawResource() 。   但是，如需访问原始文件名和文件层次结构，则可以考虑将某些资源保存在  assets/  目录（而非  res/raw/ ）下。 assets/  中的文件没有资源 ID，因此您只能使用  AssetManager  读取这些文件。 \n \n \n values/ \n 包含字符串、整型数和颜色等简单值的 XML 文件。 其他  res/  子目录中的 XML 资源文件会根据 XML 文件名定义单个资源，而  values/  目录中的文件可描述多个资源。对于此目录中的文件， <resources>  元素的每个子元素均会定义一个资源。例如， <string>  元素会创建  R.string  资源， <color>  元素会创建  R.color  资源。 由于每个资源均使用自己的 XML 元素进行定义，因此您可以随意命名文件，并在某个文件中放入不同的资源类型。但是，您可能需要将独特的资源类型放在不同的文件中，使其一目了然。例如，对于可在此目录中创建的资源，下面给出了相应的文件名约定： arrays.xml：资源数组（ 类型数组 ）。 colors.xml： 颜色值 。 dimens.xml： 尺寸值 。  strings.xml： 字符串值 。 styles.xml： 样式 。 请参阅 字符串资源 、 样式资源 和 更多资源类型 。 \n \n \n xml/ \n 可在运行时通过调用  Resources.getXML()  读取的任意 XML 文件。各种 XML 配置文件（如 可搜索配置 ）都必须保存在此处。 \n \n \n font/ \n 带有扩展名的字体文件（如  .ttf 、 .otf  或  .ttc ），或包含  <font-family>  元素的 XML 文件。如需详细了解作为资源的字体，请参阅  XML 中的字体 。 \n \n \n \n 提示 切勿将资源文件直接保存在  res/  目录内，因为这样会造成编译错误。 \n 访问应用资源 \n 在应用中提供资源后，您可通过引用其资源 ID 来应用该资源。所有资源 ID 都在您项目的  R  类中进行定义，该类由  aapt  工具自动生成。 \n 编译应用时， aapt  会生成  R  类，其中包含  res/  目录中所有资源的资源 ID。每个资源类型都有对应的  R  子类（例如， R.drawable  对应所有可绘制对象资源），而该类型的每个资源都有对应的静态整型数（例如， R.drawable.icon ）。该整型数就是可用来检索资源的资源 ID。 \n 尽管资源 ID 是在  R  类中指定的，但您完全不需要在该类中查找资源 ID。资源 ID 始终由以下部分组成： \n \n 资源类型 ：每个资源都被分到一个“类型”组中，例如  string 、 drawable  和  layout 。如需了解有关不同类型的详细信息，请参阅 资源类型 。 \n 资源名称 ，它是不包括扩展名的文件名；或是 XML  android:name  属性中的值（如资源是字符串等简单值）。 \n \n 访问资源的方法有两种： 代码中使用 和 xml文件中使用 。 \n 在代码中访问资源 \n 您可以以方法参数的形式传递资源 ID，进而在代码中使用资源。例如，您可以设置一个  ImageView ，从而借助  setImageResource()  使用  res/drawable/myimage.png  资源： \n ImageView  imageView  =   ( ImageView )   findViewById ( R . id . myimageview ) ; \nimageView . setImageResource ( R . drawable . myimage ) ; \n \n 您还可利用  Resources  中的方法检索个别资源，并且您可通过  getResources()  获得该资源的实例。 \n 语法： \n 代码中引用资源的语法： [<package_name>.]R.<resource_type>.<resource_name> \n \n <package_name>  是资源所在包的名称（如果引用的资源来自您自己的资源包，则不需要）。 \n <resource_type>  是资源类型的  R  子类。 \n <resource_name>  是不带扩展名的资源文件名，或 XML 元素中的  android:name  属性值（若资源是简单值）。 \n \n 如需了解有关各资源类型及其引用方法的详细信息，请参阅 资源类型 。 \n 用例： \n 许多方法可接受资源 ID 参数，您可利用  Resources  中的方法检索资源。您可以通过  Context.getResources()  获得  Resources  的实例。 \n 以下是一些在代码中访问资源的示例： \n // Load a background for the current screen from a drawable resource \n getWindow ( ) . setBackgroundDrawableResource ( R . drawable . my_background_image )   ; \n\n // Set the Activity title by getting a string from the Resources object, because \n //  this method requires a CharSequence rather than a resource ID \n getWindow ( ) . setTitle ( getResources ( ) . getText ( R . string . main_title ) ) ; \n\n // Load a custom layout for the current screen \n setContentView ( R . layout . main_screen ) ; \n\n // Set a slide in animation by getting an Animation from the Resources object \nflipper . setInAnimation ( AnimationUtils . loadAnimation ( this , \n         R . anim . hyperspace_in ) ) ; \n\n // Set the text on a TextView object using a resource ID \n TextView  msgTextView  =   ( TextView )   findViewById ( R . id . msg ) ; \nmsgTextView . setText ( R . string . hello_message ) ; \n \n 注意： 切勿手动修改  R.java  文件 — 在您编译项目时， aapt  工具会生成该文件。下次编译时，所有更改都会被覆盖。 \n 在 XML 中访问资源 \n 您可以使用对现有资源的引用，为某些 XML 属性和元素定义值。创建布局文件时，为给您的微件提供字符串和图像，您会经常这样做。 \n 例如，如果您为布局添加  Button ，则应为按钮文本使用 字符串资源 ： \n < Button \n     android: layout_width = " fill_parent " \n     android: layout_height = " wrap_content " \n     android: text = " @string/submit "   /> \n \n 语法： \n XML 资源中引用资源的语法： @[<package_name>:]<resource_type>/<resource_name> \n \n <package_name>  是资源所在包的名称（如果引用的资源来自相同资源包，则不需要） \n <resource_type>  是资源类型的  R  子类 \n <resource_name>  是不带扩展名的资源文件名，或 XML 元素中的  android:name  属性值（若资源是简单值）。 \n \n 如需了解有关各资源类型及其引用方法的详细信息，请参阅 资源类型 。 \n 用例： \n 在某些情况下，您必须使用资源作为 XML 中的值（例如，对微件应用可绘制图像），但您也可在 XML 中任何接受简单值的地方使用资源。例如，如果您拥有以下资源文件，其中包括一个 颜色资源 和一个 字符串资源 ： \n <?xml version="1.0" encoding="utf-8"?> \n < resources > \n    < color   name = " opaque_red " > #f00 </ color > \n    < string   name = " hello " > Hello! </ string > \n </ resources > \n \n 在此情况下，您无需在资源引用中指定包名称，因为资源来自您自己的资源包。如要引用系统资源，则您需要加入包名称。 \n 例如： \n <?xml version="1.0" encoding="utf-8"?> \n < EditText   xmlns: android = " http://schemas.android.com/apk/res/android " \n     android: layout_width = " fill_parent " \n     android: layout_height = " fill_parent " \n     android: textColor = " @android:color/secondary_text_dark " \n     android: text = " @string/hello "   /> \n \n 请注意：您应始终使用字符串资源，以便将您的应用本地化为其他语言。如需了解有关创建备用资源（例如本地化字符串）的信息，请参阅 提供备用资源 。如需查看将应用本地化为其他语言的完整指南，请参阅 本地化 。 \n 您甚至可以在 XML 中使用资源创建别名。例如，您可以创建一个可绘制对象资源，将其作为另一个可绘制对象资源的别名： \n <?xml version="1.0" encoding="utf-8"?> \n < bitmap   xmlns: android = " http://schemas.android.com/apk/res/android " \n     android: src = " @drawable/other_drawable "   /> \n \n 这听起来多余，但对使用备用资源可能很有帮助。阅读更多关于 创建别名资源 的内容。 \n 引用样式属性 \n 利用样式属性资源，您可以在当前应用的主题背景中引用某个属性的值。借助引用样式属性，在自定义界面元素的外观时，您无需采用提供硬编码值这种方式，您可以通过为其设置样式，以匹配当前主题背景提供的标准变体来达成目的。引用样式属性的实质作用是，“在当前主题背景中使用此属性定义的样式”。 \n 如要引用样式属性，名称语法几乎与普通资源格式完全相同，区别在于您需将 at 符号 ( @ ) 改为问号 ( ? )，并且资源类型部分为可选项。 \n 语法： \n 引用样式属性语法： ?[<package_name>:][<resource_type>/]<resource_name> \n 例如，以下代码展示了如何通过引用属性来设置文本颜色设，使其匹配系统主题背景的“基本”文本颜色： \n < EditText   id = " text " \n     android: layout_width = " fill_parent " \n     android: layout_height = " wrap_content " \n     android: textColor = " ?android:textColorSecondary " \n     android: text = " @string/hello_world "   /> \n \n 在以上代码中， android:textColor  属性指定当前主题背景中某个样式属性的名称。Android 现在会将应用于  android:textColorSecondary  样式属性的值用作此微件中  android:textColor  的值。由于系统资源工具知道此环境中肯定存在某个属性资源，因此您无需显式声明类型（类型应为  ?android:attr/textColorSecondary ）— 您可以将  attr  类型排除在外。 \n 访问原始文件 \n 尽管并不常见，但您的确有可能需要访问原始文件和目录。如果确有需要，则将文件保存在  res/  中并没有用，因为从  res/  读取资源的唯一方法是使用资源 ID。您可以改为将资源保存在  assets/  目录中。 \n 保存在  assets/  目录中的文件 没有 资源 ID，因此您无法通过  R  类或在 XML 资源中引用它们。您可以改为采用类似普通文件系统的方式查询  assets/  目录中的文件，并利用  AssetManager  读取原始数据。 \n 不过，如果您只需要读取原始数据（例如视频文件或音频文件）的能力，则可将文件保存在  res/raw/  目录中，并利用  openRawResource()  读取字节流。 \n 访问平台资源 \n Android 包含许多标准资源，例如样式、主题背景和布局。如要访问这些资源，请通过  android  包名称限定您的资源引用。例如，您可以将 Android 提供的布局资源用于  ListAdapter  中的列表项： \n setListAdapter ( new   ArrayAdapter < String > ( this ,   android . R . layout . simple_list_item_1 ,  myarray ) ) ; \n \n 在上例中， simple_list_item_1  是平台为  ListView  中的项目所定义的布局资源。您可以使用该资源，而不必自行创建列表项布局。 \n 利用资源提供最佳设备兼容性 \n 为使应用支持多种设备配置，请务必为应用使用的每种资源类型 提供默认资源 ，这一点非常重要。 \n 例如，如果应用支持多种语言，请始终包含 不带 语言和区域限定符 的  values/  目录（用于保存字符串）。相反，如果您将所有字符串文件放入带有语言和区域限定符的目录中，且设备语言已设为您的字符串所不支持的语言，则应用在该设备上运行时将崩溃。但是，只要提供默认  values/  资源，应用便会正常运行（即使用户不理解该语言，但总比崩溃要好）。 \n 同样，如果您根据屏幕方向提供不同的布局资源，则应选择一个方向作为默认方向。例如，不要在  layout-land/  和  layout-port/  中分别提供横向和纵向的布局资源，而是保留其一作为默认设置，例如： layout/  用于横向， layout-port/  用于纵向。 \n 提供默认资源至关重要，这不仅是因为应用可能会在超出预期的配置上运行，也因为新版 Android  有时会添加旧版本不支持的配置限定符。如果您使用新的资源限定符，但希望维持对旧版 Android 的代码兼容性，则当旧版 Android  运行应用时，应用将在无默认资源的情况下崩溃，因为此时它无法使用以新限定符命名的资源。例如，如果您将  minSdkVersion  设置为 4，并使用 夜间模式 （ night  或  notnight ，API 级别 8 中的新增配置）限定所有可绘制对象资源，则 API 级别 4 设备无法访问可绘制对象资源，而且会崩溃。在此情况下，您可能希望  notnight  成为默认资源，所以您应排除该限定符，使可绘制对象资源位于  drawable/  或  drawable-night/  中。 \n 因此，为提供最佳的设备兼容性，请始终为应用正确运行所需的资源提供默认资源。然后，请使用配置限定符为特定的设备配置创建备用资源。 \n'},{title:"04. Android 基础知识概览",frontmatter:{author:"JiangMing",title:"04. Android 基础知识概览",date:"2021-05-03 17:20:30",sidebar:"auto",categories:["Android"],tags:["Android 开发基础"],publish:!0,showSponsor:!0},regularPath:"/developer/android/base/04.fundamentals_knowledge.html",relativePath:"developer/android/base/04.fundamentals_knowledge.md",key:"v-7c6aabea",path:"/developer/android/base/04.fundamentals_knowledge.html",headers:[{level:2,title:"系统架构",slug:"系统架构"},{level:2,title:"应用组件",slug:"应用组件"},{level:3,title:"Activity",slug:"activity"},{level:3,title:"服务",slug:"服务"},{level:3,title:"广播接收器",slug:"广播接收器"},{level:3,title:"内容提供程序",slug:"内容提供程序"},{level:2,title:"启动组件",slug:"启动组件"},{level:2,title:"清单文件",slug:"清单文件"},{level:3,title:"声明组件",slug:"声明组件"},{level:3,title:"声明组件功能",slug:"声明组件功能"},{level:3,title:"声明应用要求",slug:"声明应用要求"},{level:2,title:"应用资源",slug:"应用资源"}],content:' 您可以使用 Kotlin、Java 和 C++ 语言编写 Android 应用。Android SDK 工具会将您的代码连同任何数据和资源文件编译成一个 APK（ Android 软件包 ），即带有  .apk  后缀的归档文件。一个 APK 文件包含 Android 应用的所有内容，它也是 Android 设备用来安装应用的文件。 \n 每个 Android 应用都处于各自的安全沙盒中，并受以下 Android 安全功能的保护： \n \n Android 操作系统是一种多用户 Linux 系统，其中的每个应用都是一个不同的用户； \n 默认情况下，系统会为每个应用分配一个唯一的 Linux 用户 ID（该 ID 仅由系统使用，应用并不知晓）。系统会为应用中的所有文件设置权限，使得只有分配给该应用的用户 ID 才能访问这些文件； \n 每个进程都拥有自己的虚拟机 (VM)，因此应用代码独立于其他应用而运行。 \n 默认情况下，每个应用都在其自己的 Linux 进程内运行。Android 系统会在需要执行任何应用组件时启动该进程，然后当不再需要该进程或系统必须为其他应用恢复内存时，其便会关闭该进程。 \n \n Android 系统实现了 最小权限原则 。换言之，默认情况下，每个应用只能访问执行其工作所需的组件，而不能访问其他组件。这样便能创建非常安全的环境，在此环境中，应用无法访问其未获得权限的系统部分。不过，应用仍可通过一些途径与其他应用共享数据以及访问系统服务： \n \n 可以安排两个应用共享同一 Linux 用户 ID，在此情况下，二者便能访问彼此的文件。为节省系统资源，也可安排拥有相同用户 ID 的应用在同一 Linux 进程中运行，并共享同一 VM。应用还必须使用相同的证书进行签名。 \n 应用可以请求访问设备数据（如用户的联系人、短信消息、可装载存储装置（SD 卡）、相机、蓝牙等）的权限。用户必须明确授予这些权限。如需了解详细信息，请参阅 使用系统权限 。 \n 系统架构 \n Android 系统架构图： \n \n Android 系统架构包含以下组件： \n \n 应用框架 。应用框架最常被应用开发者使用。作为硬件开发者，您应该非常了解开发者 API，因为很多此类 API 都可以直接映射到底层 HAL 接口，并可提供与实现驱动程序相关的实用信息。 \n Binder IPC 。Binder 进程间通信 (IPC) 机制允许应用框架跨越进程边界并调用 Android 系统服务代码，这使得高级框架 API 能与 Android 系统服务进行交互。在应用框架级别，开发者无法看到此类通信的过程，但一切似乎都在“按部就班地运行”。 \n 系统服务 。系统服务是专注于特定功能的模块化组件，例如窗口管理器、搜索服务或通知管理器。应用框架 API 所提供的功能可与系统服务通信，以访问底层硬件。Android 包含两组服务：“系统”（诸如窗口管理器和通知管理器之类的服务）和“媒体”（与播放和录制媒体相关的服务）。 \n 硬件抽象层 (HAL) 。HAL 可定义一个标准接口以供硬件供应商实现，这可让 Android 忽略较低级别的驱动程序实现。借助 HAL，您可以顺利实现相关功能，而不会影响或更改更高级别的系统。HAL 实现会被封装成模块，并会由 Android 系统适时地加载。如需了解详情，请参阅： 硬件抽象层 (HAL) 。 \n Linux 内核 。开发设备驱动程序与开发典型的 Linux 设备驱动程序类似。Android 使用的 Linux 内核版本包含一些特殊的补充功能，例如低内存终止守护进程（一个内存管理系统，可更主动地保留内存）、唤醒锁定（一种  PowerManager  系统服务）、Binder IPC 驱动程序，以及对移动嵌入式平台来说非常重要的其他功能。这些补充功能主要用于增强系统功能，不会影响驱动程序开发。您可以使用任意版本的内核，只要它支持所需功能（如 Binder 驱动程序）即可。不过，我们建议您使用 Android 内核的最新版本。如需了解详情，请参阅： 构建内核 。 \n 应用组件 \n 应用组件是 Android 应用的基本构建块。每个组件都是一个入口点，系统或用户可通过该入口点进入您的应用。有些组件会依赖于其他组件。 \n 共有四种不同的应用组件类型： \n \n Activity \n 服务 \n 广播接收器 \n 内容提供程序 \n \n 每种类型的组件都有不同的用途和生命周期，后者会有专题来介绍这四大核心组件。这里可以通过下文的描述，简单了解一下这四种类型的组件和相关的概念。 \n Activity \n Activity  是与用户交互的入口点。它表示拥有界面的单个屏幕。例如，电子邮件应用可能有一个显示新电子邮件列表的  Activity、一个用于撰写电子邮件的 Activity 以及一个用于阅读电子邮件的 Activity。尽管这些 Activity  通过协作在电子邮件应用中形成一种紧密结合的用户体验，但每个 Activity 都独立于其他 Activity  而存在。因此，其他应用可以启动其中任何一个 Activity（如果电子邮件应用允许）。例如，相机应用可以启动电子邮件应用内用于撰写新电子邮件的  Activity，以便用户共享图片。Activity 有助于完成系统和应用程序之间的以下重要交互： \n \n \n 追踪用户当前关心的内容（屏幕上显示的内容），以确保系统继续运行托管 Activity 的进程。 \n \n \n 了解先前使用的进程包含用户可能返回的内容（已停止的 Activity），从而更优先保留这些进程。 \n \n \n 帮助应用处理终止其进程的情况，以便用户可以返回已恢复其先前状态的 Activity。 \n \n \n 提供一种途径，让应用实现彼此之间的用户流，并让系统协调这些用户流。（此处最经典的示例是共享。） \n \n \n 您需将 Activity 作为  Activity  类的子类来实现。如需了解有关  Activity  类的更多信息，请参阅  Activity  开发者指南 \n 服务 \n 服务 是一个通用入口点，用于因各种原因使应用在后台保持运行状态。它是一种在后台运行的组件，用于执行长时间运行的操作或为远程进程执行作业。服务不提供界面。例如，当用户使用其他应用时，服务可能会在后台播放音乐或通过网络获取数据，但这不会阻断用户与 Activity 的交互。诸如 Activity  等其他组件可以启动服务，使该服务运行或绑定到该服务，以便与其进行交互。事实上，有两种截然不同的语义服务可以告知系统如何管理应用：已启动服务会告知系统使其运行至工作完毕。此类工作可以是在后台同步一些数据，或者在用户离开应用后继续播放音乐。在后台同步数据或播放音乐也代表了两种不同类型的已启动服务，而这些服务可以修改系统处理它们的方式： \n \n 音乐播放是用户可直接感知的服务，因此，应用会向用户发送通知，表明其希望成为前台，从而告诉系统此消息；在此情况下，系统明白它应尽全力维持该服务进程运行，因为进程消失会令用户感到不快。 \n 通常，用户不会意识到常规后台服务正处于运行状态，因此系统可以更自由地管理其进程。如果系统需要使用 RAM 来处理用户更迫切关注的内容，则其可能允许终止服务（然后在稍后的某个时刻重启服务）。 \n \n 绑定服务之所以能运行，原因是某些其他应用（或系统）已表示希望使用该服务。从根本上讲，这是为另一个进程提供 API  的服务。因此，系统会知晓这些进程之间存在依赖关系，所以如果进程 A 绑定到进程 B 中的服务，系统便知道自己需使进程 B（及其服务）为进程 A  保持运行状态。此外，如果进程 A 是用户关心的内容，系统随即也知道将进程 B  视为用户关心的内容。由于存在灵活性（无论好坏），服务已成为非常有用的构建块，并且可实现各种高级系统概念。动态壁纸、通知侦听器、屏幕保护程序、输入方法、无障碍功能服务以及众多其他核心系统功能均可构建为在其运行时由应用实现、系统绑定的服务。 \n 您需将服务作为  Service  的子类来实现。如需了解有关  Service  类的更多信息，请参阅 服务 开发者指南。 \n 注意： 如果您的应用面向 Android 5.0（API 级别 21）或更高版本，请使用  JobScheduler  类来调度操作。JobScheduler 的优势在于，它能通过优化作业调度来降低功耗，以及使用  Doze  API，从而达到省电目的。如需了解有关使用此类的更多信息，请参阅  JobScheduler  参考文档。 \n 广播接收器 \n 借助 广播接收器 组件，系统能够在常规用户流之外向应用传递事件，从而允许应用响应系统范围内的广播通知。由于广播接收器是另一个明确定义的应用入口，因此系统甚至可以向当前未运行的应用传递广播。例如，应用可通过调度提醒来发布通知，以告知用户即将发生的事件。而且，通过将该提醒传递给应用的广播接收器，应用在提醒响起之前即无需继续运行。许多广播均由系统发起，例如，通知屏幕已关闭、电池电量不足或已拍摄照片的广播。应用也可发起广播，例如，通知其他应用某些数据已下载至设备，并且可供其使用。尽管广播接收器不会显示界面，但其可以 创建状态栏通知 ，在发生广播事件时提醒用户。但广播接收器更常见的用途只是作为通向其他组件的 通道 ，旨在执行极少量的工作。 \n 例如，它可能会根据带  JobScheduler  的事件调度  JobService  来执行某项工作 广播接收器作为  BroadcastReceiver  的子类实现，并且每条广播都作为  Intent  对象进行传递。如需了解详细信息，请参阅  BroadcastReceiver  类。 \n 内容提供程序 \n 内容提供程序 管理一组共享的应用数据，您可以将这些数据存储在文件系统、SQLite  数据库、网络中或者您的应用可访问的任何其他持久化存储位置。其他应用可通过内容提供程序查询或修改数据（如果内容提供程序允许）。例如，Android 系统可提供管理用户联系人信息的内容提供程序。因此，任何拥有适当权限的应用均可查询内容提供程序（如  ContactsContract.Data ），以读取和写入特定人员的相关信息。我们很容易将内容提供程序看作数据库上的抽象，因为其内置的大量 API 和支持时常适用于这一情况。但从系统设计的角度看，二者的核心目的不同。对系统而言，内容提供程序是应用的入口点，用于发布由 URI  架构识别的已命名数据项。因此，应用可以决定如何将其包含的数据映射到 URI 命名空间，进而将这些 URI  分发给其他实体。反之，这些实体也可使用分发的 URI 来访问数据。在管理应用的过程中，系统可以执行以下特殊操作： \n \n 分配 URI 无需应用保持运行状态，因此 URI 可在其所属的应用退出后继续保留。当系统必须从相应的 URI 检索应用数据时，系统只需确保所属应用仍处于运行状态。 \n 这些 URI 还会提供重要的细粒度安全模型。例如，应用可将其所拥有图像的 URI 放到剪贴板上，但将其内容提供程序锁定，以便其他应用程序无法随意访问它。当第二个应用尝试访问剪贴板上的 URI 时，系统可允许该应用通过临时的  URI 授权 来访问数据，这样便只能访问 URI 后面的数据，而非第二个应用中的其他任何内容。 \n \n 内容提供程序也适用于读取和写入您的应用不共享的私有数据。 \n 内容提供程序作为  ContentProvider  的子类实现，并且其必须实现一组标准 API，以便其他应用能够执行事务。如需了解详细信息，请参阅 内容提供程序 开发者指南。 \n Android  系统设计的独特之处在于，任何应用都可启动其他应用的组件。例如，当您想让用户使用设备相机拍摄照片时，另一个应用可能也可执行该操作，因而您的应用便可使用该应用，而非自行产生一个 Activity 来拍摄照片。您无需加入甚至链接到该相机应用的代码。只需启动拍摄照片的相机应用中的 Activity  即可。完成拍摄时，系统甚至会将照片返回您的应用，以便您使用。对用户而言，这就如同相机是您应用的一部分。 \n 当系统启动某个组件时，它会启动该应用的进程（如果尚未运行），并实例化该组件所需的类。例如，如果您的应用启动相机应用中拍摄照片的  Activity，则该 Activity 会在属于相机应用的进程（而非您的应用进程）中运行。因此，与大多数其他系统上的应用不同，Android  应用并没有单个入口点（即没有  main()  函数）。 \n 由于系统在单独的进程中运行每个应用，且其文件权限会限制对其他应用的访问，因此您的应用无法直接启动其他应用中的组件，但 Android 系统可以。如要启动其他应用中的组件，请向系统传递一条消息，说明启动特定组件的  Intent 。系统随后便会为您启动该组件。 \n 启动组件 \n 在四种组件类型中，有三种（Activity、服务和广播接收器）均通过异步消息  Intent  进行启动。Intent 会在运行时对各个组件进行互相绑定。您可以将 Intent 视为从其他组件（无论该组件是属于您的应用还是其他应用）请求操作的信使。 \n 您需使用  Intent  对象创建 Intent，该对象通过定义消息来启动特定组件（显式 Intent）或特定的组件 类型 （隐式 Intent）。 \n 对于 Activity 和服务，Intent 会定义要执行的操作（例如， 查看 或 发送 某内容），并且可指定待操作数据的 URI，以及正在启动的组件可能需要了解的信息。例如，Intent 可能会传达对 Activity  的请求，以便显示图像或打开网页。在某些情况下，您可以通过启动 Activity 来接收结果，这样 Activity 还会返回  Intent  中的结果。例如，您可以发出一个 Intent，让用户选取某位联系人并将其返回给您。返回 Intent 包含指向所选联系人的 URI。 \n 对于广播接收器，Intent 只会定义待广播的通知。例如，指示设备电池电量不足的广播只包含指示*“电池电量不足”*的已知操作字符串。 \n 与 Activity、服务和广播接收器不同，内容提供程序并非由 Intent 启动。相反，它们会在成为  ContentResolver  的请求目标时启动。内容解析程序会通过内容提供程序处理所有直接事务，因此通过提供程序执行事务的组件便无需执行事务，而是改为在  ContentResolver  对象上调用方法。这会在内容提供程序与请求信息的组件之间留出一个抽象层（以确保安全）。 \n 每种组件都有不同的启动方法： \n \n 如要启动 Activity，您可以向  startActivity()  或  startActivityForResult()  传递  Intent （当您想让 Activity 返回结果时），或者为其安排新任务。 \n 在 Android 5.0（API 级别 21）及更高版本中，您可以使用  JobScheduler  类来调度操作。对于早期 Android 版本，您可以通过向  startService()  传递  Intent  来启动服务（或对执行中的服务下达新指令）。您也可通过向将  bindService()  传递  Intent  来绑定到该服务。 \n 您可以通过向  sendBroadcast() 、 sendOrderedBroadcast()  或  sendStickyBroadcast()  等方法传递  Intent  来发起广播。 \n 您可以通过在  ContentResolver  上调用  query() ，对内容提供程序执行查询。 \n \n 如需了解有关 Intent 用法的详细信息，请参阅  Intent 和 Intent 过滤器 文档。以下文档将为您详细介绍如何启动特定组件： Activity 、 服务 、 BroadcastReceiver  和内容提供程序。 \n 清单文件 \n 在 Android 系统启动应用组件之前，系统必须通过读取应用的 清单 文件 ( AndroidManifest.xml ) 确认组件存在。您的应用必须在此文件中声明其所有组件，该文件必须位于应用项目目录的根目录中。 \n 除了声明应用的组件外，清单文件还有许多其他作用，如： \n \n 确定应用需要的任何用户权限，如互联网访问权限或对用户联系人的读取权限。 \n 根据应用使用的 API，声明应用所需的最低  API 级别 。 \n 声明应用使用或需要的硬件和软件功能，如相机、蓝牙服务或多点触摸屏幕。 \n 声明应用需要链接的 API 库（Android 框架 API 除外），如  Google 地图库 。 \n 声明组件 \n 清单文件的主要任务是告知系统应用组件的相关信息。例如，清单文件可按如下所示声明 Activity： \n <?xml version="1.0" encoding="utf-8"?> \n < manifest   ...   > \n     < application   android: icon = " @drawable/app_icon.png "   ...   > \n         < activity   android: name = " com.example.project.ExampleActivity " \n                   android: label = " @string/example_label "   ...   > \n         </ activity > \n        ...\n     </ application > \n </ manifest > \n \n 在  <application>  元素中， android:icon  属性指向标识应用的图标所对应的资源。 \n 在  <activity>  元素中， android:name  属性指定  Activity  子类的完全限定类名， android:label  属性指定用作 Activity 的用户可见标签的字符串。 \n 您必须使用以下元素声明所有应用组件： \n \n Activity 的  <activity>  元素。 \n 服务的  <service>  元素。 \n 广播接收器的  <receiver>  元素。 \n 内容提供程序的  <provider>  元素。 \n \n 如果未在清单文件中声明源代码中包含的 Activity、服务和内容提供程序，则这些组件对系统不可见，因此也永远不会运行。不过，您可以  BroadcastReceiver  对象的形式，在清单中声明或在代码中动态创建广播接收器；以及通过调用  registerReceiver() ，在系统中注册广播接收器。 \n 如需详细了解如何为您的应用构建清单文件，请参阅  AndroidManifest.xml 文件 文档。 \n 声明组件功能 \n 如上文 启动组件 中所述，您可以使用  Intent  来启动 Activity、服务和广播接收器。您可以通过在 Intent 中显式命名目标组件（使用组件类名）来使用  Intent 。您还可使用隐式 Intent，通过它来描述要执行的操作类型和待操作数据（可选）。借助隐式 Intent，系统能够在设备上找到可执行该操作的组件，并启动该组件。如果有多个组件可以执行 Intent 所描述的操作，则由用户选择使用哪一个组件。 \n 注意： 如果您使用 Intent 来启动  Service ，请使用 显式  Intent 来确保应用的安全性。使用隐式 Intent 启动服务存在安全隐患，因为您无法确定哪些服务将响应 Intent，且用户无法看到哪些服务已启动。从 Android 5.0（API 级别 21）开始，如果使用隐式 Intent 调用  bindService() ，系统会抛出异常。请勿为您的服务声明 Intent 过滤器。 \n 通过将收到的 Intent 与设备上其他应用的清单文件中提供的  Intent 过滤器 进行比较，系统便可识别能响应 Intent 的组件。 \n 在应用的清单文件中声明 Activity 时，您可以选择性地加入声明 Activity 功能的 Intent 过滤器，以便响应来自其他应用的 Intent。您可以将  ``  元素作为组件声明元素的子项进行添加，从而为您的组件声明 Intent 过滤器。 \n 例如，如果您构建的电子邮件应用包含用于撰写新电子邮件的 Activity，则可通过声明 Intent 过滤器来响应“send”Intent（目的是发送新电子邮件），如下方示例所示： \n < manifest   ...   > \n    ...\n     < application   ...   > \n         < activity   android: name = " com.example.project.ComposeEmailActivity " > \n             < intent-filter > \n                 < action   android: name = " android.intent.action.SEND "   /> \n                 < data   android: type = " */* "   /> \n                 < category   android: name = " android.intent.category.DEFAULT "   /> \n             </ intent-filter > \n         </ activity > \n     </ application > \n </ manifest > \n \n 如果另一个应用创建包含  ACTION_SEND  操作的 Intent 并将其传递到  startActivity() ，则系统可能会启动您的 Activity，以便用户能够草拟并发送电子邮件。 \n 如需了解有关创建 Intent 过滤器的详细信息，请参阅  Intent 和 Intent 过滤器 文档。 \n 声明应用要求 \n Android  设备多种多样，但并非所有设备都提供相同的特性和功能。以防将您的应用安装在缺少应用所需特性的设备上，您必须通过在清单文件中声明设备和软件要求，为该应用支持的设备类型明确定义一个配置文件。其中的大多数声明只是为了提供信息，系统并不会读取它们，但 Google Play 等外部服务会读取它们，以便在用户通过其设备搜索应用时为用户提供过滤功能。 \n 例如，如果您的应用需要相机功能，并使用 Android 2.1（ API 级别  7）中引入的 API，您必须在清单文件中声明以下要求，如下方示例所示： \n < manifest   ...   > \n     < uses-feature   android: name = " android.hardware.camera.any " \n                   android: required = " true "   /> \n     < uses-sdk   android: minSdkVersion = " 7 "   android: targetSdkVersion = " 19 "   /> \n    ...\n </ manifest > \n \n 通过示例中所述的声明， 没有 相机且 Android 版本 低于  2.1 的设备将无法从 Google Play 安装您的应用。不过，您可以声明您的应用使用相机，但并不 要求 必须使用。在此情况下，您的应用必须将  required  属性设置为  false ，并在运行时检查设备是否拥有相机，然后根据需要停用任何相机功能。 \n 如需详细了解如何管理应用与不同设备的兼容性，请参阅 设备兼容性 文档。 \n 应用资源 \n Android 应用并非仅包含代码，它还需要与源代码分离的资源，如图像、音频文件以及任何与应用的视觉呈现有关的内容。例如，您可以通过 XML 文件定义  Activity  界面的动画、菜单、样式、颜色和布局。借助应用资源，您无需修改代码即可轻松更新应用的各种特性。通过提供备用资源集，您可以针对各种设备配置（如不同的语言和屏幕尺寸）优化您的应用。 \n 对于您在 Android 项目中加入的每一项资源，SDK 构建工具均会定义唯一的整型 ID，您可以利用此 ID 来引用资源，这些资源或来自应用代码，或来自 XML 中定义的其他资源。例如，如果您的应用包含名为  logo.png  的图像文件（保存在  res/drawable/  目录中），则 SDK 工具会生成名为  R.drawable.logo  的资源 ID。此 ID 映射到应用特定的整型数，您可以利用它来引用该图像，并将其插入您的界面。 \n 如果提供与源代码分离的资源，则其中最重要的一个优点在于，您可以提供适用于不同设备配置的备用资源。例如，通过在 XML 中定义界面字符串，您可以将字符串翻译为其他语言，并将这些字符串保存在单独的文件中。然后，Android 系统会根据向资源目录名称追加的语言 限定符 （如为法语字符串值追加  res/values-fr/ ）和用户的语言设置，对您的界面应用相应的语言字符串。 \n Android 支持许多不同的备用资源 限定符 。限定符是资源目录名称中加入的短字符串，用于定义这些资源适用的设备配置。例如，您应根据设备的屏幕方向和尺寸为 Activity  创建不同的布局。当设备屏幕为纵向（长型）时，您可能想要一种垂直排列按钮的布局；但当屏幕为横向（宽型）时，可以按水平方向排列按钮。如要根据方向更改布局，您可以定义两种不同的布局，然后对每个布局的目录名称应用相应的限定符。然后，系统会根据当前设备方向自动应用相应的布局。 \n 如需详细了解可以在应用中加入的不同资源类型以及如何针对不同设备配置创建备用资源，请阅读 提供资源 。如要详细了解最佳做法和设计生产质量的稳健应用，请参阅 应用架构指南 。 \n 如果你认真的看到这里了，相信你已经对Android应用中的一些基础知识有了一定的了解和概念，下面就可以开始我们的应用开发之旅了！ \n'},{title:"05. Android 用户界面",frontmatter:{author:"JiangMing",title:"05. Android 用户界面",date:"2021-05-04 10:18:15",sidebar:"auto",categories:["Android"],tags:["Android 开发基础"],publish:!0,showSponsor:!0},regularPath:"/developer/android/base/05.user_interface.html",relativePath:"developer/android/base/05.user_interface.md",key:"v-c6f25ac6",path:"/developer/android/base/05.user_interface.html",headers:[{level:2,title:"默认的用户界面",slug:"默认的用户界面"},{level:3,title:"清单文件",slug:"清单文件"},{level:3,title:"界面代码",slug:"界面代码"},{level:3,title:"布局文件",slug:"布局文件"},{level:3,title:"运行应用",slug:"运行应用"},{level:2,title:"创建新的界面",slug:"创建新的界面"},{level:2,title:"创建新的布局",slug:"创建新的布局"},{level:2,title:"启动另一个Activity",slug:"启动另一个activity"}],content:' Android中的用户界面 UI（User Interface）主要是有  Activity 、 View 、 ViewGroup  三个部分构成。 \n Activity 是应用可交互界面的窗口，主要用于显示用户界面，用户通过Activity交互完成相关操作，一个App允许有多个Activity。 \n 在 Android APP 中，所有的用户界面元素都是由 View 和 ViewGroup 的对象构成的。 View是绘制在屏幕上的用户能与之交互的一个对象。而 ViewGroup 则是一个用于存放其他 View（和ViewGroup）对象的布局容器！  Android为我们提供了一个 View 和 ViewGroup 子类的集合，例如一些常用的输入控件(比如按钮和文本域)和各种各样的布局模式（比如线性或相对布局）等等。 \n \n 一般情况下，Android中的界面都是由Activity来提供一个窗口，在窗口中我们可以通过自定义的添加不同的 View 或者 ViewGroup 组件来向用户呈现一个可交互的界面。 \n 默认的用户界面 \n Android 中的界面都是由 Activity 构成的，Activity 提供了一个交互的窗口，我们将需要显示和交互的视图放在这个窗口上就可以显示出来并和用户进行一个交互的行为，Activity 是 Android 的四大组件之一，后续会有专题介绍，在这里简单了解下即可。 \n 通过  Android Studio  创建一个项目后，会有三个默认的重要界面文件： MainActivity.java ， activity_main.xml ， AndroidManifest.xml ，分别是应用的启动界面的 Activity 逻辑代码，启动界面的视图布局文件、清单文件，这个是一个最简单的用户界面组成。 \n 清单文件 \n AndroidManifest.xml 代码： \n <?xml version="1.0" encoding="utf-8"?> \n < manifest   xmlns: android = " http://schemas.android.com/apk/res/android " \n     package = " com.jm.android " > \n\n     < application \n         android: allowBackup = " true " \n         android: icon = " @mipmap/ic_launcher " \n         android: label = " @string/app_name " \n         android: roundIcon = " @mipmap/ic_launcher_round " \n         android: supportsRtl = " true " \n         android: theme = " @style/Theme.AndroidTutorial " > \n         < activity   android: name = " .MainActivity " > \n             < intent-filter > \n                 < action   android: name = " android.intent.action.MAIN "   /> \n\n                 < category   android: name = " android.intent.category.LAUNCHER "   /> \n             </ intent-filter > \n         </ activity > \n     </ application > \n\n </ manifest > \n \n 内容解析： \n \n manifest：清单文件配置的根节点，Android的定义规范。 \n package：定义了应用的包名。 \n application：应用相关配置的节点，可以配置应用相关的属性。 \n activity：Activity声明的节点（四大组件都是需要在应用节点下面注册才能使用的），可以配置Activity相关的配置。 \n intent-filter：intent过滤器配置，如上面的配置（固定action和category的属性），是配置应用的启动Activity的固定用法配置，当然也是可以配置自定义的Activity为启动界面的（关于Intent以及过滤器后续有专题介绍）。 \n 界面代码 \n MainActivity.java 代码： \n package   com . jm . android ; \n\n import   androidx . appcompat . app . AppCompatActivity ; \n\n import   android . os . Bundle ; \n\n public   class   MainActivity   extends   AppCompatActivity   { \n\n     @Override \n     protected   void   onCreate ( Bundle  savedInstanceState )   { \n         super . onCreate ( savedInstanceState ) ; \n         setContentView ( R . layout . activity_main ) ; \n     } \n } \n \n 内容解析： \n \n MainActivity：继承自Android的Activity对象，是界面的逻辑业务处理类，用于控制界面显示和交互业务逻辑。 \n onCreate：这个是重写的父类函数，是Activity的构建的生命周期的一部分，这个里面创建界面所需的布局资源和初始化一些相关的组件。必须要调用父类的实现方法，否则会出错。 \n setContentView：加载指定的布局文件，如： R.layout.activity_main ，构建其画面。 \n 可以根据需要自定义的重写父类的很多实现的方法函数，实现相关业务逻辑。 \n 布局文件 \n activity_main.xml 代码： \n <?xml version="1.0" encoding="utf-8"?> \n < androidx.constraintlayout.widget.ConstraintLayout   xmlns: android = " http://schemas.android.com/apk/res/android " \n     xmlns: app = " http://schemas.android.com/apk/res-auto " \n     xmlns: tools = " http://schemas.android.com/tools " \n     android: layout_width = " match_parent " \n     android: layout_height = " match_parent " \n     tools: context = " .MainActivity " > \n\n     < TextView \n         android: id = " @+id/tv_text " \n         android: layout_width = " wrap_content " \n         android: layout_height = " wrap_content " \n         android: text = " Hello World! " \n         app: layout_constraintBottom_toBottomOf = " parent " \n         app: layout_constraintLeft_toLeftOf = " parent " \n         app: layout_constraintRight_toRightOf = " parent " \n         app: layout_constraintTop_toTopOf = " parent "   /> \n\n </ androidx.constraintlayout.widget.ConstraintLayout > \n \n 内容解析： \n \n ConstraintLayout：根布局，这里使用的是支持库中的约束布局。 \n TextView：布局中的一个 UI 组件，这是一个文本组件，可以显示文字信息，通过 android 的配置属性定义表，可以定义id、文本、宽、高等等属性。 \n 当然在一个布局的文件里面，可以定义多个UI的组件，来显示丰富的界面。 \n 运行应用 \n 运行一个应用可以将项目编译后的  .apk  文件安装到 Android 设备中，当然开发阶段也是可以通过  Android Studio  直接将当前的项目编译打包并安装运行到指定的机器上。 \n 所以开发调试有： 真实设备 和 模拟器 两种方式来运行和调试我们的项目。 \n 在真实设备上运行 \n 按照以下步骤设置设备： \n \n 使用一根 USB 线将设备连接到开发机器。如果您是在 Windows 上开发的，则可能需要为设备 安装合适的 USB 驱动程序 。 \n 执行以下步骤，在 开发者选项 窗口中启用  USB 调试 ：\n \n 打开 设置 应用。 \n 如果您的设备使用 Android v8.0 或更高版本，请选择 系统 。否则，请继续执行下一步。 \n 滚动到底部，然后选择 关于手机 。 \n 滚动到底部，然后点按 版本号 七次。 \n 返回上一屏幕，滚动到底部，然后点按 开发者选项 。 \n 在 开发者选项 窗口中，向下滚动以查找并启用  USB 调试 。 \n \n \n \n 按照以下步骤操作，在设备上运行应用： \n \n 在 Android Studio 中，从工具栏中的运行/调试配置下拉菜单中选择您的应用。 \n 在工具栏中，从目标设备下拉菜单中选择要用来运行应用的设备。 \n \n \n 点击  Run   。 \n Android Studio 会在已连接的设备上安装您的应用并启动它。您现在会看到设备上的应用中显示了“Hello, World!”。 \n 在模拟器上运行 \n 按照以下步骤操作，在模拟器上运行应用： \n \n 在 Android Studio 中 创建一个 Android 虚拟设备 (AVD) ，模拟器可以使用该设备安装和运行您的应用。 \n 在工具栏中，从 运行 / 调试 配置下拉菜单中选择您的应用。 \n 从目标设备下拉菜单中，选择要用来运行应用的 AVD。 \n \n \n \n 点击  Run   。 \n Android Studio 会在已连接的设备上安装您的应用并启动它。您现在会看到设备上的应用中显示了“Hello, World!”。 \n 运行效果 \n 创建新的界面 \n 接下来一起来新建一个自定义的用户界面，创建一个具有文字组件，图片组件，按钮组件的一个界面。 \n Activity创建流程 \n 创建新的Activity \n 在 Android Studio 指定的包名路径下，右键选择创建一个  Empty Activity ，然后根据提示填写需要创建的 Activity 的 名称 ， 布局的名称 和 类型 等等相关信息，就可以就创建了一个用户界面的 Activity 了。 \n 创建新的布局 \n 在创建完界面（Activity后），接下来就开始我们自己的布局了。我们就创建一个简单的UI组件的界面，包含一个 文本组件 TextView 、 图片组件 ImageView 、 按钮组件 Button 。 \n 在 activity_demo.xml 布局文件中进行如下布局： \n <?xml version="1.0" encoding="utf-8"?> \n < LinearLayout   xmlns: android = " http://schemas.android.com/apk/res/android " \n     xmlns: app = " http://schemas.android.com/apk/res-auto " \n     xmlns: tools = " http://schemas.android.com/tools " \n     android: layout_width = " match_parent " \n     android: layout_height = " match_parent " \n     android: gravity = " center " \n     android: orientation = " vertical " \n     tools: context = " .activity.DemoActivity " > \n\n     < TextView \n         android: id = " @+id/tv_demo " \n         android: layout_width = " match_parent " \n         android: layout_height = " wrap_content " \n         android: layout_marginBottom = " 30dp " \n         android: gravity = " center " \n         android: text = " 这是一个文本组件，主要用来显示文本！ " \n         android: textSize = " 20sp "   /> \n\n     < ImageView \n         android: id = " @+id/iv_demo " \n         android: layout_width = " wrap_content " \n         android: layout_height = " wrap_content " \n         android: layout_marginBottom = " 30dp " \n         android: src = " @mipmap/ic_launcher "   /> \n\n     < Button \n         android: id = " @+id/btn_demo " \n         android: layout_width = " match_parent " \n         android: layout_height = " wrap_content " \n         android: text = " 按钮 "   /> \n </ LinearLayout > \n \n Android 提供了  ViewGroup  和  View  类的 XML 配置属性表，因此界面的大部分内容都在 XML 文件中定义。 \n 关于布局和相关 UI 组件的使用，将在后续详细来进行介绍，这里就简单的概括介绍一下这个布局： \n \n 首先这个布局的根布局采用的使用  LinearLayout  线性布局。 \n 文本控件  TextView ，并通过XML属性配置了一些相关的属性，如：android:text 表示显示的文本，android:textSize 表示字体的大小，android:gravity 字体的对齐方式等等。 \n 图片控件  ImageView ，通过 android:src 配置了需要显示的资源。 \n 按钮控件  Button ，显示一个按钮控件，通过  android:text 配置按钮的显示文本。 \n 几个共同的属性 android:id 指定了组件的ID，用于定位和标志此控件，android:layout_width/android:layout_height 表示组件的宽度/高度大小，可以指定大小或者指定计算大小规则。 \n \n 记得之前说过的 默认的启动 Activity  的配置方法吧，下面我们就将刚刚创建的  DemoActivity  设置为默认启动Activity，将  AndroidManifest.xml  配置如下： \n <?xml version="1.0" encoding="utf-8"?> \n < manifest   xmlns: android = " http://schemas.android.com/apk/res/android " \n     package = " com.jm.android " > \n\n     < application \n         android: allowBackup = " true " \n         android: icon = " @mipmap/ic_launcher " \n         android: label = " @string/app_name " \n         android: roundIcon = " @mipmap/ic_launcher_round " \n         android: supportsRtl = " true " \n         android: theme = " @style/Theme.AndroidTutorial " > \n        \n         < activity   android: name = " .MainActivity " > \n\n         </ activity > \n        \n         < activity   android: name = " .activity.DemoActivity " > \n             \x3c!-- 配置应用默认启动Activity的固定过滤器配置--\x3e \n             < intent-filter > \n                 < action   android: name = " android.intent.action.MAIN "   /> \n\n                 < category   android: name = " android.intent.category.LAUNCHER "   /> \n             </ intent-filter > \n         </ activity > \n        \n     </ application > \n\n </ manifest > \n \n 可以看到，其实就是将配置默认启动Activity的  intent-filter  配置到了DemoActivity 的配置节点中，那么此时我们的应用默认的启动界面就是 DemoActivity 了。 \n 布局显示效果： \n 启动另一个Activity \n 学习完了 Activity 的创建和布局的创建，在一个 App 中可以有很多Activity，接下来让我们一起了解一下如何去启动另外一个界面 Activity。 \n 启动 Activity 方式有很多，这个在后续的专题中会有 详细介绍 ，这里就简单的介绍一下最基础和常用的启动方式（通过 Activity 的 class 类来启动）。 \n 通过  Intent  对象来定义一个启动 Activity 的意图，然后通过Activity中的  startActivity  方法来启动另一个 Activity。 \n 这里使用  DemoActivity  中的按钮控件，实现点击后跳转到项目默认创建的  MainActivity  中，代码示例： \n public   class   DemoActivity   extends   AppCompatActivity   { \n\n     private   Button  mBtnDemo ; \n\n     @Override \n     protected   void   onCreate ( Bundle  savedInstanceState )   { \n         super . onCreate ( savedInstanceState ) ; \n         setContentView ( R . layout . activity_demo ) ; \n\t\t // 通过组件id来找到对应的控件对象 \n        mBtnDemo  =   findViewById ( R . id . btn_demo ) ; \n\n         // 设置按钮的点击事件监听 \n        mBtnDemo . setOnClickListener ( new   View . OnClickListener ( )   { \n             @Override \n             public   void   onClick ( View  v )   { \n                 // 启动并跳转到MainActivity界面 \n                 Intent  intent  =   new   Intent ( DemoActivity . this ,   MainActivity . class ) ; \n                 startActivity ( intent ) ; \n             } \n         } ) ; \n     } \n\n     @Override \n     protected   void   onDestroy ( )   { \n        mBtnDemo . setOnClickListener ( null ) ; \n         super . onDestroy ( ) ; \n     } \n } \n \n 实现的效果： \n \n 看到这里，我们就完成了基本的用户界面相关方面概念和知识的了解，有兴趣的朋友可以去实际的尝试一下，熟悉一下 Android 中用户界面相关的基本用法吧。 \n'},{title:"06. 常用的UI布局组件",frontmatter:{author:"JiangMing",title:"06. 常用的UI布局组件",date:"2021-05-04 18:16:18",sidebar:"auto",categories:["Android"],tags:["Android 开发基础"],publish:!0,showSponsor:!0},regularPath:"/developer/android/base/06.00_ui_layout_components.html",relativePath:"developer/android/base/06.00_ui_layout_components.md",key:"v-59bb4d4a",path:"/developer/android/base/06.00_ui_layout_components.html",content:" 本章来开始讲 Android 中的布局，Android 中有六大布局，分别是: \n \n LinearLayout（线性布局） \n RelativeLayout（相对布局） \n AbsoluteLayout（绝对布局） \n FrameLayout（帧布局） \n TableLayout（表格布局） \n GridLayout（网格布局） \n \n 不同的布局在界面的构建中有着不同的效果和体验，是构建用户界面不可缺少的一部分，学习页面的布局是非常重要的，也决定了以后对界面构建的能力和工作效率。 \n"},{title:"06.01 布局-LinearLayout",frontmatter:{author:"JiangMing",title:"06.01 布局-LinearLayout",date:"2021-05-05 10:16:18",sidebar:"auto",categories:["Android"],tags:["Android 开发基础"],publish:!0,showSponsor:!0},regularPath:"/developer/android/base/06.01_layout_components_linerlayout.html",relativePath:"developer/android/base/06.01_layout_components_linerlayout.md",key:"v-3225e486",path:"/developer/android/base/06.01_layout_components_linerlayout.html",headers:[{level:2,title:"常用属性",slug:"常用属性"},{level:2,title:"水平方向布局",slug:"水平方向布局"},{level:2,title:"垂直方向布局",slug:"垂直方向布局"},{level:2,title:"权重布局",slug:"权重布局"},{level:3,title:"均等分布",slug:"均等分布"},{level:3,title:"不等分布",slug:"不等分布"},{level:2,title:"设置分割线",slug:"设置分割线"}],content:' 今天我们要讲解是一个布局组件： LinearLayout（线性布局） ， LinearLayout  是一个视图组，用于使所有子视图在单个方向（垂直或水平）保持对齐。 \n LinearLayout  的所有子视图依次堆叠，因此无论子视图有多宽，垂直列表每行均只有一个子视图，水平列表将只有一行高（最高子视图的高度加上内边距）。 LinearLayout  会考虑子视图之间的边距以及每个子视图的对齐方式（右对齐、居中对齐或左对齐）。 \n 我们在屏幕适配中用的比较多的就是 LinearLayout 的 weight（权重属性） ，在这一节里，我们会详细地解析 LinearLayout，包括一些 基本的属性 、 weight属性的使用 ， divider绘制下划线 等特性。 \n 常用属性 \n 线性布局的常用属性有： \n \n \n id : 为该布局组件设置一个资源id，可以在使用的时候通过这个资源id获取到这个组件的对象。 \n \n \n layout_width ：布局的宽度，可以是一个固定大小值，也可以指定计算方式，自行计算宽度，有 match_parent （填满父容器）， wrap_content （根据自身组件实际大小）两种计算方式。 \n \n \n layout_height ：布局的高度，可以是一个固定大小值，也可以指定计算方式，自行计算宽度，有 match_parent （填满父容器）， wrap_content （根据自身组件实际大小）两种计算方式。 \n \n \n orientation ：布局的排列方向，有 horizontal （水平方向）， vertical （垂直方向，默认方向）。 \n \n \n layout_gravity ：控制自身组件在父容器中的对齐方式。 \n \n \n gravity ：控制组件内包含的子元素的对齐方式，如 left ， right ， top ， bottom ， center 等等，还可以组合使用，如： left|top 。 \n \n \n backgroud ：设置组件的背景，可以指定一个图片资源也可以是颜色资源。 \n \n \n 如果需要了解更多属性，请参考 官方API 。 \n 水平方向布局 \n orientation 属性为  horizontal  ，让子元素组件 水平方向 上布局，并且设置  gravity  为  center ，让子元素组件相对布局容器居中对齐。 \n 布局文件实现代码： \n <?xml version="1.0" encoding="utf-8"?> \n < LinearLayout   xmlns: android = " http://schemas.android.com/apk/res/android " \n     android: id = " @+id/ll_demo " \n     android: layout_width = " match_parent " \n     android: layout_height = " match_parent " \n     android: gravity = " center " \n     android: orientation = " horizontal " > \n\n     < TextView \n         android: layout_width = " wrap_content " \n         android: layout_height = " 300dp " \n         android: background = " #00ddff " \n         android: gravity = " center " \n         android: text = " one " \n         android: textSize = " 50sp "   /> \n\n     < TextView \n         android: layout_width = " match_parent " \n         android: layout_height = " 300dp " \n         android: background = " #FFC107 " \n         android: gravity = " center " \n         android: text = " two " \n         android: textSize = " 50sp "   /> \n </ LinearLayout > \n \n 最终效果图： \n 垂直方向布局 \n orientation 属性为  vertical  ，让子元素组件 垂直方向 上布局，并且设置  gravity  为  center ，让子元素组件相对布局容器居中对齐。 \n 布局文件实现代码： \n <?xml version="1.0" encoding="utf-8"?> \n < LinearLayout   xmlns: android = " http://schemas.android.com/apk/res/android " \n     android: id = " @+id/ll_demo " \n     android: layout_width = " match_parent " \n     android: layout_height = " match_parent " \n     android: gravity = " center " \n     android: orientation = " vertical " > \n\n     < TextView \n         android: layout_width = " match_parent " \n         android: layout_height = " 300dp " \n         android: background = " #00ddff " \n         android: gravity = " center " \n         android: text = " top " \n         android: textSize = " 50sp "   /> \n\n     < TextView \n         android: layout_width = " match_parent " \n         android: layout_height = " 300dp " \n         android: background = " #FFC107 " \n         android: gravity = " center " \n         android: text = " bottom " \n         android: textSize = " 50sp "   /> \n </ LinearLayout > \n \n 最终效果图： \n 权重布局 \n weight   布局权重属性 是在屏幕适配中最常使用的属性，顾名思义，就是将子部件按照 一定的权重配置的比例 进行水平方向或者垂直方向布局。 \n LinearLayout  使用  android:layout_weight  属性向视图分配“权重”值。如果拥有更大的权重值，视图便可展开，填充父视图中的任何剩余空间。子视图可指定权重值，然后系统会按照子视图所声明的权重值比例，为其分配视图组中的任何剩余空间。默认权重为零。 \n 均等分布 \n 如要创建线性布局，让每个子视图使用大小相同的屏幕空间，请将每个子视图的  android:layout_height  设置为 "0dp"（针对垂直布局），或将每个子视图的  android:layout_width  设置为 "0dp"（针对水平布局）。然后，请将每个视图的  android:layout_weight  设置为 "1"。 \n 这里以 水平方向的均等布局来举例 ，垂直方向类似： \n 布局示例代码： \n <?xml version="1.0" encoding="utf-8"?> \n < LinearLayout   xmlns: android = " http://schemas.android.com/apk/res/android " \n     android: layout_width = " match_parent " \n     android: layout_height = " match_parent " \n     android: gravity = " center " \n     android: orientation = " horizontal " > \n     \x3c!-- 比例 1: 1: 1 ，平均分配 --\x3e \n     < TextView \n         android: layout_width = " 0dp " \n         android: layout_height = " 300dp " \n         android: layout_weight = " 1 " \n         android: background = " #03A9F4 " \n         android: gravity = " center " \n         android: text = " one " \n         android: textSize = " 50sp "   /> \n\n     < TextView \n         android: layout_width = " 0dp " \n         android: layout_height = " 300dp " \n         android: layout_weight = " 1 " \n         android: background = " #8BC34A " \n         android: gravity = " center " \n         android: text = " two " \n         android: textSize = " 50sp "   /> \n\n     < TextView \n         android: layout_width = " 0dp " \n         android: layout_height = " 300dp " \n         android: layout_weight = " 1 " \n         android: background = " #FF5722 " \n         android: gravity = " center " \n         android: text = " three " \n         android: textSize = " 50sp "   /> \n\n </ LinearLayout > \n \n 布局显示效果： \n 不等分布 \n 您也可创建线性布局，让子元素使用大小不同的屏幕空间： \n \n 如果有三个文本字段，其中两个声明权重为 1，另一个未赋予权重，那么没有权重的第三个文本字段就不会展开，而仅占据其内容所需的区域。另一方面，另外两个文本字段将以同等幅度展开，填充测量三个字段后仍剩余的空间。 \n 如果有三个文本字段，其中两个字段声明权重为 1，而为第三个字段赋予权重 2（而非 0），那么现在相当于声明第三个字段比另外两个字段更为重要，因此，该字段将获得总剩余空间的一半，而其他两个字段均享余下的空间。 \n \n 布局代码示例： \n <?xml version="1.0" encoding="utf-8"?> \n < LinearLayout   xmlns: android = " http://schemas.android.com/apk/res/android " \n     android: layout_width = " match_parent " \n     android: layout_height = " match_parent " \n     android: gravity = " center " \n     android: orientation = " vertical " > \n\n     \x3c!-- 比例 1 ：1 ：（内容适应）--\x3e \n     < LinearLayout \n         android: layout_width = " match_parent " \n         android: layout_height = " 300dp " \n         android: orientation = " horizontal " > \n\n         < TextView \n             android: layout_width = " 0dp " \n             android: layout_height = " match_parent " \n             android: layout_weight = " 1 " \n             android: background = " #03A9F4 " \n             android: gravity = " center " \n             android: text = " one " \n             android: textSize = " 50sp "   /> \n\n         < TextView \n             android: layout_width = " 0dp " \n             android: layout_height = " match_parent " \n             android: layout_weight = " 1 " \n             android: background = " #8BC34A " \n             android: gravity = " center " \n             android: text = " two " \n             android: textSize = " 50sp "   /> \n\n         < TextView \n             android: layout_width = " 100dp " \n             android: layout_height = " match_parent " \n             android: background = " #FF5722 " \n             android: gravity = " center " \n             android: text = " three " \n             android: textSize = " 50sp "   /> \n     </ LinearLayout > \n\n     \x3c!-- 比例 1 ：1 ：2 --\x3e \n     < LinearLayout \n         android: layout_width = " match_parent " \n         android: layout_height = " 300dp " \n         android: layout_marginTop = " 20dp " \n         android: orientation = " horizontal " > \n\n         < TextView \n             android: layout_width = " 0dp " \n             android: layout_height = " match_parent " \n             android: layout_weight = " 1 " \n             android: background = " #03A9F4 " \n             android: gravity = " center " \n             android: text = " one " \n             android: textSize = " 50sp "   /> \n\n         < TextView \n             android: layout_width = " 0dp " \n             android: layout_height = " match_parent " \n             android: layout_weight = " 1 " \n             android: background = " #8BC34A " \n             android: gravity = " center " \n             android: text = " two " \n             android: textSize = " 50sp "   /> \n\n         < TextView \n             android: layout_width = " 0dp " \n             android: layout_height = " match_parent " \n             android: layout_weight = " 2 " \n             android: background = " #FF5722 " \n             android: gravity = " center " \n             android: text = " three " \n             android: textSize = " 50sp "   /> \n     </ LinearLayout > \n\n </ LinearLayout > \n \n 布局显示效果： \n 设置分割线 \n LinearLayout的 divider属性 ，可以为 LinearLayout 设置 分割线  。 \n \n \n android:divider：设置分割线资源，可以是图片、drawable、color等资源。 \n \n \n android:showDividers：设置分割线的位置：none(无)、beginning(开始)、end(结束)、middle(每两个组件间) 。 \n \n \n dividerPadding：设置分割线的内边距 padding。 \n \n \n 分割线布局代码： \n <?xml version="1.0" encoding="utf-8"?> \n < LinearLayout   xmlns: android = " http://schemas.android.com/apk/res/android " \n     android: layout_width = " match_parent " \n     android: layout_height = " match_parent " \n     android: divider = " @color/design_default_color_error " \n     android: dividerPadding = " 10dp " \n     android: orientation = " vertical " \n     android: showDividers = " middle " > \n\n     < TextView \n         android: layout_width = " match_parent " \n         android: layout_height = " wrap_content " \n         android: gravity = " center " \n         android: layout_margin = " 10dp " \n         android: text = " one "   /> \n\n     < TextView \n         android: layout_width = " match_parent " \n         android: layout_height = " wrap_content " \n         android: gravity = " center " \n         android: layout_margin = " 10dp " \n         android: text = " two "   /> \n\n     < Button \n         android: layout_width = " wrap_content " \n         android: layout_height = " wrap_content " \n         android: layout_margin = " 10dp " \n         android: text = " 按钮1 "   /> \n\n     < Button \n         android: layout_width = " wrap_content " \n         android: layout_height = " wrap_content " \n         android: layout_margin = " 10dp " \n         android: text = " 按钮2 "   /> \n\n     < Button \n         android: layout_width = " wrap_content " \n         android: layout_height = " wrap_content " \n         android: layout_margin = " 10dp " \n         android: text = " 按钮3 "   /> \n </ LinearLayout > \n \n 效果显示： \n \n 注意事项： 当  android:orientation="vertical"  时， 只有水平方向的设置才起作用，垂直方向的设置不起作用。 即此时只有：left，right，center_horizontal 是生效的。 \n 当  android:orientation="horizontal"  时， 只有垂直方向的设置才起作用，水平方向的设置不起作用。 即此时只有：top，bottom，center_vertical 是生效的。 \n 关于线性布局 LinearLayout 的介绍到这里就结束了，线性布局可以很好的在线性方向上（水平或者垂直）上进行相关的权重的布局，对于相对性的布局就有很大的局限性了，所以在开发中常见的用法就是使用其权重的特性来进行相关的界面布局。 \n'},{title:"06.02 布局-RelativeLayout",frontmatter:{author:"JiangMing",title:"06.02 布局-RelativeLayout",date:"2021-05-16 16:24:33",sidebar:"auto",categories:["Android"],tags:["Android 开发基础"],publish:!0,showSponsor:!0},regularPath:"/developer/android/base/06.02_layout_components_relativelayout.html",relativePath:"developer/android/base/06.02_layout_components_relativelayout.md",key:"v-e571bd4a",path:"/developer/android/base/06.02_layout_components_relativelayout.html",headers:[{level:2,title:"基本属性",slug:"基本属性"},{level:2,title:"根据父容器相对布局",slug:"根据父容器相对布局"},{level:2,title:"根据兄弟组件定位",slug:"根据兄弟组件定位"}],content:' 上一节对 LinearLayout 进行了详细的解析，LinearLayout 也是我们用的比较多的一个布局，我们更多的时候更钟情于他的  weight(权重)属性 ， 比例划分 对屏幕适配还是帮助蛮大的；但是使用 LinearLayout 的时候也有很多的问题，就是当界面设计比较复杂的时候，需要嵌套多层的 LinearLayout，这样就会降低  UI Render  的渲染速度和效率。 \n 如果使用  RelativeLayout（相对布局）  的话，可能仅仅需要一层就可以完成了， 以 父容器 或者 兄弟组件 参考 +  margin  +  padding  就可以设置组件的显示位置 ，还是比较方便的。相对布局其实通俗一点来说的话，可以理解是一个 参考布局 的方式，参考 父布局 或者 同级组件 的一个相对的参考位置，如：相对父布局的中间位置等。 \n \n 注意：相对布局的 一个相对属性只会在一个方向上生效 ，一般都是使用多个不同方向属性来进行布局，最常用的就是同时使用水平和垂直方向的属性进行布局。 \n 基本属性 \n \n gravity：设置布局容器内的对齐方式。 \n ignoreGravity：设置是否忽略 gravity 属性。 \n layout_margin：设置组件的上下左右的外边距（组件与父容器的边距），与之对应的还分别有layout_marginLeft（左）、layout_marginTop（上）、layout_marginRight（右）、layout_marginBottom（下）等等单独方向的外边距属性。 \n padding：设置组件的内边距（组件和内部元素之间的边距），与之对应的还分别有paddingLeft（左）、paddingTop（上）、paddingRight（右）、paddingBottom（下）等等单独方向的内边距属性。 \n \n margin  和  padding  属性是所有  View  相关组件的共通性属性，分别控制 外边距 和 内边距 ，也有的人称 margin 是 偏移 ，padding 是 填充 ，其实无论怎么叫法，理解其中的含义和使用方法才是本质。 \n 如果需要了解 RelativeLayout 的更多属性，请参考 官方API 。 \n margin 和 padding 理解示意图： \n \n 参考示例代码： \n <?xml version="1.0" encoding="utf-8"?> \n < RelativeLayout   xmlns: android = " http://schemas.android.com/apk/res/android " \n     android: layout_width = " match_parent " \n     android: layout_height = " match_parent " \n     android: background = " #5A5151 " > \n\n     < TextView \n         android: layout_width = " wrap_content " \n         android: layout_height = " wrap_content " \n         android: layout_marginLeft = " 50dp " \n         android: layout_marginTop = " 300dp " \n         android: background = " #00ddcc " \n         android: text = " margin（left: 5dp, top: 300dp） "   /> \n\n     < TextView \n         android: layout_width = " wrap_content " \n         android: layout_height = " wrap_content " \n         android: background = " #FFEB3B " \n         android: paddingLeft = " 50dp " \n         android: paddingTop = " 15dp " \n         android: text = " padding（left: 50dp, top: 15dp） "   /> \n\n </ RelativeLayout > \n \n 示例运行效果： \n 根据父容器相对布局 \n \n layout_alignParentLeft：参考父布局左对齐。 \n layout_alignParentTop：参考父布局顶部对齐。 \n layout_alignParentRight：参考父布局右对齐。 \n layout_alignParentBottom：参考父布局底部对齐。 \n layout_centerHorizontal：参考父布局水平居中。 \n layout_centerVertical：参考父布局垂直居中。 \n layout_centerInParent：参考父布局的中间（水平和垂直居中）位置。 \n layout_alignParentStart：当前配置是  LTR （从左到右，默认的阅读方式）时则等价 layout_alignParentLeft，如果是  RTL （Right To Left是一种阿拉伯语、波斯语等情况下从右往左的阅读方式）时则等价 layout_alignParentRight。 \n layout_alignParentEnd：当前配置是  LTR （从左到右，默认的阅读方式）时则等价 layout_alignParentRight，如果是  RTL （Right To Left是一种阿拉伯语、波斯语等情况下从右往左的阅读方式）时则等价 layout_alignParentLeft。 \n \n 理解示意图： \n \n 参考示例代码： \n <?xml version="1.0" encoding="utf-8"?> \n < RelativeLayout   xmlns: android = " http://schemas.android.com/apk/res/android " \n     android: layout_width = " match_parent " \n     android: layout_height = " match_parent " \n     android: background = " #5A5151 " > \n\n     < TextView \n         android: layout_width = " wrap_content " \n         android: layout_height = " wrap_content " \n         android: layout_alignParentLeft = " true " \n         android: layout_marginTop = " 30dp " \n         android: background = " #FFEB3B " \n         android: text = " alignParentLeft "   /> \n\n     < TextView \n         android: layout_width = " wrap_content " \n         android: layout_height = " wrap_content " \n         android: layout_alignParentRight = " true " \n         android: layout_marginTop = " 30dp " \n         android: background = " #00ddcc " \n         android: text = " alignParentRight "   /> \n\n     < TextView \n         android: layout_width = " wrap_content " \n         android: layout_height = " wrap_content " \n         android: layout_alignParentTop = " true " \n         android: layout_marginLeft = " 150dp " \n         android: background = " #03A9F4 " \n         android: text = " alignParentTop "   /> \n\n     < TextView \n         android: layout_width = " wrap_content " \n         android: layout_height = " wrap_content " \n         android: layout_alignParentBottom = " true " \n         android: layout_marginLeft = " 150dp " \n         android: background = " #FF5722 " \n         android: text = " alignParentBottom "   /> \n\n     < TextView \n         android: layout_width = " wrap_content " \n         android: layout_height = " wrap_content " \n         android: layout_centerInParent = " true " \n         android: background = " #cccccc " \n         android: text = " centerInParent "   /> \n\n     < TextView \n         android: layout_width = " wrap_content " \n         android: layout_height = " wrap_content " \n         android: layout_centerVertical = " true " \n         android: background = " #673AB7 " \n         android: text = " centerVertical "   /> \n\n     < TextView \n         android: layout_width = " wrap_content " \n         android: layout_height = " wrap_content " \n         android: layout_centerHorizontal = " true " \n         android: layout_marginTop = " 100dp " \n         android: background = " #4CAF50 " \n         android: text = " centerHorizontal "   /> \n </ RelativeLayout > \n \n 示例运行效果： \n 根据兄弟组件定位 \n \n layout_toLeftOf：参考组件的左边。 \n layout_toRightOf：参考组件的右边。 \n layout_above：参考组件的上方。 \n layout_below：参考组件的下方。 \n layout_alignLeft：对齐于参考组件的左边界。 \n layout_alignRight：对齐于参考组件的右边界。 \n layout_alignTop：对齐于参考组件的上边界。 \n layout_alignBottom：对齐于参考组件的下边界。 \n \n \n 兄弟组件：指的是布局中在 同一级节点中 的组件。 \n \n 理解示意图： \n \n 参考示例代码： \n 组件方向代码参考： \n <?xml version="1.0" encoding="utf-8"?> \n < RelativeLayout   xmlns: android = " http://schemas.android.com/apk/res/android " \n     android: layout_width = " match_parent " \n     android: layout_height = " match_parent " \n     android: background = " #5A5151 " > \n\n     < TextView \n         android: id = " @+id/tv_center " \n         android: layout_width = " wrap_content " \n         android: layout_height = " wrap_content " \n         android: layout_centerInParent = " true " \n         android: background = " #03A9F4 " \n         android: padding = " 10dp " \n         android: text = " 参考组件 "   /> \n    \n     < TextView \n         android: layout_width = " wrap_content " \n         android: layout_height = " wrap_content " \n         android: layout_toLeftOf = " @id/tv_center " \n         android: background = " #EF7272 " \n         android: padding = " 10dp " \n         android: text = " toLeftOf "   /> \n\n     < TextView \n         android: layout_width = " wrap_content " \n         android: layout_height = " wrap_content " \n         android: layout_toRightOf = " @id/tv_center " \n         android: background = " #56F258 " \n         android: padding = " 10dp " \n         android: text = " toRightOf "   /> \n\n     < TextView \n         android: layout_width = " wrap_content " \n         android: layout_height = " wrap_content " \n         android: layout_above = " @id/tv_center " \n         android: background = " #F17509 " \n         android: padding = " 10dp " \n         android: text = " above "   /> \n\n     < TextView \n         android: layout_width = " wrap_content " \n         android: layout_height = " wrap_content " \n         android: layout_below = " @id/tv_center " \n         android: background = " #673AB7 " \n         android: padding = " 10dp " \n         android: text = " below "   /> \n </ RelativeLayout > \n \n 组件边界代码参考： \n <?xml version="1.0" encoding="utf-8"?> \n < RelativeLayout   xmlns: android = " http://schemas.android.com/apk/res/android " \n     android: layout_width = " match_parent " \n     android: layout_height = " match_parent " \n     android: background = " #5A5151 " > \n\n     < TextView \n         android: id = " @+id/tv_center " \n         android: layout_width = " 200dp " \n         android: layout_height = " 200dp " \n         android: layout_centerInParent = " true " \n         android: background = " #03A9F4 " \n         android: gravity = " center " \n         android: padding = " 10dp " \n         android: text = " 参考组件 "   /> \n\n     < TextView \n         android: layout_width = " wrap_content " \n         android: layout_height = " wrap_content " \n         android: layout_alignLeft = " @id/tv_center " \n         android: background = " #EF7272 " \n         android: padding = " 10dp " \n         android: text = " alignLeft "   /> \n\n     < TextView \n         android: layout_width = " wrap_content " \n         android: layout_height = " wrap_content " \n         android: layout_alignRight = " @id/tv_center " \n         android: background = " #56F258 " \n         android: padding = " 10dp " \n         android: text = " alignRight "   /> \n\n     < TextView \n         android: layout_width = " wrap_content " \n         android: layout_height = " wrap_content " \n         android: layout_alignTop = " @id/tv_center " \n         android: background = " #F17509 " \n         android: padding = " 10dp " \n         android: text = " alignTop "   /> \n\n     < TextView \n         android: layout_width = " wrap_content " \n         android: layout_height = " wrap_content " \n         android: layout_alignBottom = " @id/tv_center " \n         android: background = " #673AB7 " \n         android: padding = " 10dp " \n         android: text = " alignBottom "   /> \n </ RelativeLayout > \n \n 示例运行效果： \n \n \n 关于 RelativeLayout 的介绍就结束了，本节我们知道了利用相对布局组件中的 相对参考 的属性，可以进行更灵活和更方便的界面布局。 \n'},{title:"06.03 布局-AbsoluteLayout",frontmatter:{author:"JiangMing",title:"06.03 布局-AbsoluteLayout",date:"2021-05-22 11:35:56",sidebar:"auto",categories:["Android"],tags:["Android 开发基础"],publish:!0,showSponsor:!0},regularPath:"/developer/android/base/06.03_layout_components_absolutelayout.html",relativePath:"developer/android/base/06.03_layout_components_absolutelayout.md",key:"v-022d481b",path:"/developer/android/base/06.03_layout_components_absolutelayout.html",headers:[{level:2,title:"位置属性",slug:"位置属性"},{level:2,title:"示例代码",slug:"示例代码"},{level:2,title:"示例效果",slug:"示例效果"}],content:' AbsoluteLayout （绝对布局），又叫做坐标布局，可以直接指定布局内子元素的绝对坐标位置。允许您指定其子级的精确位置（x/y坐标）的布局。与没有绝对定位的其他类型的布局相比，绝对布局的灵活性更低，更难维护。 \n 绝对布局一般用于 特殊场景 ，正常的互联网 App 中用的很少，因为绝对布局的方式使用的 绝对的坐标 进行布局，这个在不同的设备（尺寸不同）上显示就会有问题，适配性较差。但是在特殊领域，像指定的统一设备严格按照 UI 设计的样式开发情景下，如车载设备、广告设备、工程设备等等需要像素级别校准设计的场景，才会用到绝对布局。 \n 位置属性 \n \n android:layout_x：设置组件的  X  轴坐标。 \n android:layout_y：设置组件的  Y  轴坐标。 \n \n 如果需要了解 AbsoluteLayout 的更多属性，请参考 官方API 。 \n 理解示意图： \n 示例代码 \n <?xml version="1.0" encoding="utf-8"?> \n < AbsoluteLayout   xmlns: android = " http://schemas.android.com/apk/res/android " \n     android: layout_width = " match_parent " \n     android: layout_height = " match_parent " \n     android: background = " #5A5151 " > \n\n     < TextView \n         android: layout_width = " wrap_content " \n         android: layout_height = " wrap_content " \n         android: layout_x = " 100px " \n         android: layout_y = " 200px " \n         android: background = " #03A9F4 " \n         android: text = " layout_x=100px, layout_y=200px "   /> \n\n </ AbsoluteLayout > \n 示例效果 \n \n 通过本节知道绝对布局是通过精确位置（x/y坐标）的布局，常用于精确的特殊领域。 \n'},{title:"06.04 布局-FrameLayout",frontmatter:{author:"JiangMing",title:"06.04 布局-FrameLayout",date:"2021-05-22 12:26:16",sidebar:"auto",categories:["Android"],tags:["Android 开发基础"],publish:!0,showSponsor:!0},regularPath:"/developer/android/base/06.04_layout_components_framelayout.html",relativePath:"developer/android/base/06.04_layout_components_framelayout.md",key:"v-6c159fd9",path:"/developer/android/base/06.04_layout_components_framelayout.html",headers:[{level:2,title:"前景图像属性",slug:"前景图像属性"},{level:2,title:"示例代码",slug:"示例代码"},{level:2,title:"示例效果",slug:"示例效果"}],content:' FrameLayout  （帧布局）是 Android 布局中比较简单的一种布局。 \n 帧布局为每个加入其中的控件创建一个空白区域（称为一帧，每个控件占据一 帧）。釆用帧布局方式设计界面时，在屏幕左上角位置开始显示一个控件，如果添加多个控件，这些控件会按照 顺序 在屏幕的左上角位置开始 依次堆叠 显示。 \n 前景图像属性 \n \n android:foreground：设置帧布局容器的前景图像。 \n android:foregroundGravity：设置前景图像显示的位置。 \n \n 如果需要了解 FrameLayout 的更多属性，请参考 官方API 。 \n \n 前景图像：在帧布局的最顶层显示，不会被布局容器内其他组件覆盖的图像。 \n \n 理解示意图： \n 示例代码 \n <?xml version="1.0" encoding="utf-8"?> \n < FrameLayout   xmlns: android = " http://schemas.android.com/apk/res/android " \n     android: layout_width = " match_parent " \n     android: layout_height = " match_parent " \n     android: background = " #5A5151 " \n     android: foreground = " @mipmap/ic_launcher_round " \n     android: foregroundGravity = " right|bottom " > \n\n     < TextView \n         android: layout_width = " 350dp " \n         android: layout_height = " 300dp " \n         android: layout_x = " 100px " \n         android: layout_y = " 200px " \n         android: background = " #03A9F4 " \n         android: gravity = " right|center_vertical " \n         android: text = " 组件1 " \n         android: textSize = " 30sp "   /> \n\n     < TextView \n         android: layout_width = " 250dp " \n         android: layout_height = " 260dp " \n         android: layout_x = " 100px " \n         android: layout_y = " 200px " \n         android: background = " #8BC34A " \n         android: gravity = " right|center_vertical " \n         android: text = " 组件2 " \n         android: textSize = " 30sp "   /> \n\n     < TextView \n         android: layout_width = " 150dp " \n         android: layout_height = " 200dp " \n         android: layout_x = " 100px " \n         android: layout_y = " 200px " \n         android: background = " #FFC107 " \n         android: gravity = " right|center_vertical " \n         android: text = " 组件3 " \n         android: textSize = " 30sp "   /> \n\n </ FrameLayout > \n 示例效果 \n \n 通过本节知道帧布局是界面上是一帧一帧显示的，常用于游戏的开发。 \n'},{title:"06.05 布局-TableLayout",frontmatter:{author:"JiangMing",title:"06.05 布局-TableLayout",date:"2021-05-23 10:26:16",sidebar:"auto",categories:["Android"],tags:["Android 开发基础"],publish:!0,showSponsor:!0},regularPath:"/developer/android/base/06.05_layout_components_tablelayout.html",relativePath:"developer/android/base/06.05_layout_components_tablelayout.md",key:"v-580c0e15",path:"/developer/android/base/06.05_layout_components_tablelayout.html",headers:[{level:2,title:"常用属性",slug:"常用属性"},{level:2,title:"示例代码",slug:"示例代码"},{level:2,title:"示例效果",slug:"示例效果"}],content:' TableLayout  （表格布局）是使用表格的方式来排列组件，就是一种将子级排列成 行 和 列 的布局。TableLayout 由许多  TableRow  对象组成，每个对象都定义一行（实际上，您也可以使用其他 View 子类组件）。TableLayout 容器不显示其行，列或单元格的边界线。每行有零个或多个单元格；每个单元可以容纳一个 View 对象。该表的列与具有最多单元格的行一样多。表格可以将单元格留空。单元格可以跨列，就像在 HTML 中一样。 \n 列的宽度由该列中具有最宽单元格的行定义。但是，TableLayout 可以通过调用  setColumnShrinkable()  将某些列指定为可收缩，可拉伸  setColumnStretchable() 。如果标记为可收缩，则可以缩小列宽以使表格适合其父对象。如果标记为可拉伸，则其宽度可以扩展以适合任何额外的空间。该表的总宽度由其父容器定义。重要的是要记住，列可以同时收缩和伸展。在这种情况下，列将更改其大小以始终用尽可用空间，但永远不会更多。最后，您可以通过调用隐藏列  setColumnCollapsed() 。 \n TableLayout 的子元素 不能指定   layout_width  属性。宽度始终为  MATCH_PARENT 。但是，该  layout_height  属性可以由子级定义。默认值为  ViewGroup.LayoutParams.WRAP_CONTENT 。如果子元素是一个 TableRow，那么高度永远是  ViewGroup.LayoutParams.WRAP_CONTENT 。 \n 单元必须以递增的列顺序（以代码和 XML 的形式）添加到行中。列号从 0 开始。如果您没有为子单元格指定列号，它将自动递增到下一个可用列。 如果您跳过列号，它将被视为该行中的空单元格 。 \n 尽管 TableLayout 的典型子元素是  TableRow ，但实际上您可以将任何 View 子类用作 TableLayout 的直接子级。视图将显示为跨越所有表列的单行。 \n 常用属性 \n 全局属性（TableLayout的属性） \n \n collapseColumns： 隐藏 从0开始的索引列（设置需要 被隐藏 的列的索引序号），多列之间必须用逗号隔开，如：1, 2。 \n shrinkColumns： 收缩 从0开始的索引列（设置允许 被收缩 的列的列索引序号），当可收缩的列太宽（内容太多时）不会被挤出屏幕，多列之间用逗号隔开（1, 2），可以通过  *  代替收缩所有列，注意一列能同时表示收缩和拉伸 。 \n stretchColumns： 拉伸 从0开始的索引列（设置运行 被拉伸 的列的列索引序号），以填满剩下的多余空白空间，多列之间必须用逗号隔开（1, 2），  你可以通过  *  代替收缩所有列，注意一列能同时表示收缩和拉伸。 \n \n 局部属性（TableLayout的内部组件属性） \n \n layout_column：该控件显示在布局的 列位置 ，当属性设置为 0 ，则该控件显示在第1列。 \n layout_span：该控件在布局中占据 列数量 ，当属性设置为 2 ，则该控件占据两列。 \n \n 如果需要了解 TableLayout 的更多属性，请参考 官方API 。 \n 理解示意图： \n 示例代码 \n <?xml version="1.0" encoding="utf-8"?> \n < LinearLayout   xmlns: android = " http://schemas.android.com/apk/res/android " \n     android: layout_width = " match_parent " \n     android: layout_height = " match_parent " \n     android: orientation = " vertical " > \n\n     \x3c!-- collapseColumns="0" 隐藏第一列元素 --\x3e \n     < TableLayout \n         android: layout_width = " match_parent " \n         android: layout_height = " wrap_content " \n         android: layout_marginBottom = " 10dp " \n         android: background = " #5A5151 " \n         android: collapseColumns = " 0 " > \n\n         < TableRow \n             android: layout_width = " match_parent " \n             android: layout_height = " match_parent " \n             android: layout_gravity = " center " > \n\n             < Button \n                 android: layout_width = " wrap_content " \n                 android: layout_height = " wrap_content " \n                 android: text = " 1 "   /> \n\n             < Button \n                 android: layout_width = " wrap_content " \n                 android: layout_height = " wrap_content " \n                 android: text = " 2 "   /> \n\n             < Button \n                 android: layout_width = " wrap_content " \n                 android: layout_height = " wrap_content " \n                 android: text = " 3 "   /> \n\n             < Button \n                 android: layout_width = " wrap_content " \n                 android: layout_height = " wrap_content " \n                 android: text = " 4 "   /> \n\n             < Button \n                 android: layout_width = " wrap_content " \n                 android: layout_height = " wrap_content " \n                 android: text = " 5 "   /> \n\n         </ TableRow > \n     </ TableLayout > \n\n     \x3c!-- android:shrinkColumns="1" 设置允许第2列元素收缩，以便元素全部显示，不会将其他组件挤出屏幕 --\x3e \n     < TableLayout \n         android: layout_width = " match_parent " \n         android: layout_height = " wrap_content " \n         android: layout_marginBottom = " 10dp " \n         android: background = " #5A5151 " \n         android: shrinkColumns = " 1 " > \n\n         < TableRow \n             android: layout_width = " match_parent " \n             android: layout_height = " match_parent " \n             android: gravity = " center_vertical " > \n\n             < Button \n                 android: layout_width = " wrap_content " \n                 android: layout_height = " wrap_content " \n                 android: text = " 1 "   /> \n\n             < Button \n                 android: layout_width = " wrap_content " \n                 android: layout_height = " wrap_content " \n                 android: background = " #FF9800 " \n                 android: text = " 2222222222222222222222222222 "   /> \n\n             < Button \n                 android: layout_width = " wrap_content " \n                 android: layout_height = " wrap_content " \n                 android: text = " 3 "   /> \n\n             < Button \n                 android: layout_width = " wrap_content " \n                 android: layout_height = " wrap_content " \n                 android: text = " 4 "   /> \n\n             < Button \n                 android: layout_width = " wrap_content " \n                 android: layout_height = " wrap_content " \n                 android: text = " 5 "   /> \n\n         </ TableRow > \n     </ TableLayout > \n\n     \x3c!-- android:stretchColumns="2" 设置允许第3列元素拉伸，填满剩余的空间--\x3e \n     < TableLayout \n         android: layout_width = " match_parent " \n         android: layout_height = " wrap_content " \n         android: layout_marginBottom = " 10dp " \n         android: background = " #5A5151 " \n         android: stretchColumns = " 2 " > \n\n         < TableRow \n             android: layout_width = " match_parent " \n             android: layout_height = " match_parent " \n             android: gravity = " center_vertical " > \n\n             < Button \n                 android: layout_width = " wrap_content " \n                 android: layout_height = " wrap_content " \n                 android: text = " 1 "   /> \n\n             < Button \n                 android: layout_width = " wrap_content " \n                 android: layout_height = " wrap_content " \n                 android: text = " 2 "   /> \n\n             < Button \n                 android: layout_width = " wrap_content " \n                 android: layout_height = " wrap_content " \n                 android: background = " #8BC34A " \n                 android: text = " 3 "   /> \n\n         </ TableRow > \n     </ TableLayout > \n\n     \x3c!--\n        android:layout_span="2"：设置占用2列空间\n        android:layout_column="3"：设置在第三列位置（索引从1开始）\n        注意：\n        1. 这两个属性都需要在多行多列的情况下才有效\n        2. layout_column计算列位置是所有行中的最少列数为参考的\n    --\x3e \n     < TableLayout \n         android: layout_width = " match_parent " \n         android: layout_height = " wrap_content " \n         android: layout_marginBottom = " 10dp " \n         android: background = " #5A5151 " > \n\n         < TableRow \n             android: layout_width = " match_parent " \n             android: layout_height = " match_parent " \n             android: gravity = " center_vertical " > \n\n             < Button \n                 android: layout_width = " wrap_content " \n                 android: layout_height = " wrap_content " \n                 android: layout_span = " 2 " \n                 android: background = " #2196F3 " \n                 android: text = " 1 "   /> \n\n             < Button \n                 android: layout_width = " wrap_content " \n                 android: layout_height = " wrap_content " \n                 android: text = " 2 "   /> \n\n             < Button \n                 android: layout_width = " wrap_content " \n                 android: layout_height = " wrap_content " \n                 android: text = " 3 "   /> \n\n\n         </ TableRow > \n\n         < TableRow \n             android: layout_width = " match_parent " \n             android: layout_height = " match_parent " \n             android: gravity = " center_vertical " > \n\n             < Button \n                 android: layout_width = " wrap_content " \n                 android: layout_height = " wrap_content " \n                 android: text = " 4 "   /> \n\n             < Button \n                 android: layout_width = " wrap_content " \n                 android: layout_height = " wrap_content " \n                 android: text = " 5 "   /> \n\n             < Button \n                 android: layout_width = " wrap_content " \n                 android: layout_height = " wrap_content " \n                 android: layout_column = " 3 " \n                 android: background = " #2196F3 " \n                 android: text = " 6 "   /> \n\n         </ TableRow > \n     </ TableLayout > \n\n </ LinearLayout > \n 示例效果 \n \n 通过本节知道了表格布局是使用表格的方式来排列组件的，常用于需要表格化显示的布局场景。 \n'},{title:"06.06 布局-GridLayout",frontmatter:{author:"JiangMing",title:"06.06 布局-GridLayout",date:"2021-05-23 15:30:20",sidebar:"auto",categories:["Android"],tags:["Android 开发基础"],publish:!0,showSponsor:!0},regularPath:"/developer/android/base/06.06_layout_components_gridlayout.html",relativePath:"developer/android/base/06.06_layout_components_gridlayout.md",key:"v-2ee42e9b",path:"/developer/android/base/06.06_layout_components_gridlayout.html",headers:[{level:2,title:"特性介绍",slug:"特性介绍"},{level:2,title:"相关属性",slug:"相关属性"},{level:2,title:"示例代码",slug:"示例代码"},{level:2,title:"示例效果",slug:"示例效果"}],content:' GridLayout  （网格布局），Android 4.0 后推出的，将其子级放置在 矩形网格 中的布局。与 TableLayout（表格布局）有点类似，但是功能更多，相对可用性也更高。 \n \n 主要的特性： \n \n 可以设置布局中组件的排列方式。 \n 可以自定义网格布局有多少行，多少列。 \n 可以直接设置组件位于某行某列。 \n 可以设置组件横跨几行或者几列。 \n 特性介绍 \n 网格布局由一组无限细的线组成，这些细线将可视区域划分为多个 单元 。在整个 API 中，网格线由网格 索引 引用。具有 N 列的网格具有 N+1 个从 0 到 N（含）的网格索引。无论如何配置 GridLayout，网格索引 0 都固定在容器的前边缘，而网格索引 N 则固定在其后边缘（在考虑填充之后）。 \n 行和列规格 \n 子项占据一个或多个连续的单元，这由它们的 rowSpec 和  columnSpec 布局参数定义。每个规范都定义了要占用的行或列的集合。以及应该如何在生成的单元格组中对齐子元素。尽管单元格通常不会在 GridLayout中 重叠，但是 GridLayout 不会阻止将子级定义为占据相同的单元格或单元格组。但是，在这种情况下，不能保证子代在布局操作完成后不会重叠。 \n 默认单元分配 \n 如果一个子元素不指定希望占据单元格的行和列索引，GridLayout 使用其 orientation 、 rowCount 和 columnCount 属性自动指定单元格位置。 \n 空间 \n 子级之间的空间可以通过使用专用空间视图的实例或通过设置 leftMargin 、 topMargin 、 rightMargin 和 bottomMargin 布局参数来指定。 useDefaultMargins  设置该属性后，将根据平台的主流 UI 样式指南自动分配子级周围的默认边距。如此定义的每个边距都可以通过分配适当的布局参数来独立地覆盖。默认值通常会在组件之间产生合理的间距，但默认值可能会在平台的不同版本之间发生变化。 \n 多余的空间分布 \n 从 API 21开始，GridLayout 的剩余空间分布符合重量原则。如果未指定权重，则遵循先前的约定，并且如果列和行的视图在其组内指定某种形式的对齐方式，则将其视为灵活的。 \n 因此，视图的灵活性受其 对齐方式 的影响，对齐方式通常通过设置 layout_gravity 子级布局参数的属性来定义 。如果沿给定的 轴 定义了 权重 或 对齐 方式，则该组件将在该方向上 具有柔韧性 。如果未设置权重或对齐方式，则假定该组件 不灵活 。 \n 同一行或列组中的多个组件被认为是 并行运行的 。仅当其中的 所有 组件都是灵活的时，这样的组才是灵活的。位于公共边界两侧的行和列组将被视为 串联操作 。如果这两个元素 之一 组成的复合组是柔性的，则该复合组是柔性的。 \n 要使列拉伸，请确保其中的所有组件都定义了权重或重力。若要防止列拉伸，请确保列中的某个组件未定义 weight  或  gravity 。 \n 当灵活性原则不能完全消除歧义时，GridLayout 的算法倾向于更接近其右边缘和下边缘的行和列。更准确地说，GridLayout 将其每个布局参数视为一组变量中的约束，这些变量定义了沿给定轴的网格线。在布局过程中，GridLayout 解决约束，以便将唯一的解决方案返回到所有变量小于或等于任何其他有效解决方案中相应值的约束。 \n 布局中GONE属性组件的含义 \n 出于布局目的，GridLayout 将  visibility  状态为 gone 的视图视为 具有零宽度和零高度 的组件。这与忽略被标记为完全消失的视图的策略有着微妙的区别。例如，如果一个已标记的视图在一列中是单独的，则当且仅当视图上未定义重力时，该列将自身折叠为零宽度。如果定义了重力，则已标记的视图对布局没有影响，容器的布局应与从未添加视图一样。在多余的空间分布期间，过去的视图被认为是零权重的。 \n 这些语句同样适用于行和列，以及行或列的组。 \n 有关 GridLayout 使用的布局参数的完整描述，请参见  GridLayout.LayoutParams 。 \n 相关属性 \n 全局属性（GridLayout的属性） \n \n orientation：设置排列方式， vertical （垂直方向，默认属性）， horizontal （水平方向）。 \n rowCount：设置布局的行数。 \n columnCount：设置布局的列数。 \n \n 局部属性（GridLayout的内部组件属性） \n \n layout_row：指定组件所在 行 的位置，索引位置从 0 开始。 \n layout_column：指定组件所在 列 的位置，索引位置从 0 开始。 \n layout_rowSpan：设置占用几行空间。 \n layout_columnSpan：设置占用几列空间。 \n \n 如果需要了解 GridLayout 的更多属性，请参考 官方API 。 \n \n 网格布局中在可以不指定  layout_width  和  layout_heigh  属性，可以自适应内容的网格大小。设置组件横跨几行或者几列后，可以根据需要设置一个填充属性： android:layout_gravity = "fill" 。 \n 如：layout_gravity="fill"，android:layout_rowSpan="2"， 表示在水平方向上填充组件所占用的  2  行空间。 \n \n 理解示意图： \n 示例代码 \n <?xml version="1.0" encoding="utf-8"?> \n < GridLayout   xmlns: android = " http://schemas.android.com/apk/res/android " \n     android: layout_width = " match_parent " \n     android: layout_height = " wrap_content " \n     android: rowCount = " 5 " \n     android: columnCount = " 4 " \n     android: orientation = " horizontal " > \n\n     < Button   android: text = " 1 "   /> \n\n     < Button   android: text = " 2 "   /> \n\n     < Button   android: text = " 3 "   /> \n\n     < Button \n         android: layout_row = " 1 " \n         android: background = " #2196F3 " \n         android: text = " 4 "   /> \n\n     < Button \n         android: layout_column = " 3 " \n         android: background = " #FF5722 " \n         android: text = " 5 "   /> \n\n     < Button \n         android: layout_rowSpan = " 2 " \n         android: layout_gravity = " fill " \n         android: background = " #FFC107 " \n         android: text = " 6 "   /> \n\n     < Button \n         android: layout_columnSpan = " 2 " \n         android: layout_gravity = " fill " \n         android: background = " #E91E63 " \n         android: text = " 7 "   /> \n\n     < Button   android: text = " 8 "   /> \n\n     < Button   android: text = " 9 "   /> \n\n     < Button \n         android: visibility = " gone " \n         android: text = " 10 "   /> \n\n     < Button   android: text = " 11 "   /> \n\n </ GridLayout > \n 示例效果 \n \n 通过本节知道网格布局是 矩形网格 的一种布局，常用于需要网格化布局显示的场景，如：在线商城商品的展示布局场景。 \n'},{title:"07. 常用的UI控件",frontmatter:{author:"JiangMing",title:"07. 常用的UI控件",date:"2021-08-07 10:28:05",sidebar:"auto",categories:["Android"],tags:["Android 开发基础"],publish:!0,showSponsor:!0},regularPath:"/developer/android/base/07.00_ui_control_components.html",relativePath:"developer/android/base/07.00_ui_control_components.md",key:"v-8f041e3a",path:"/developer/android/base/07.00_ui_control_components.html",content:" UI 控件的使用是 Android 界面构建的重要组成部分 ，其中 Android 提供了很多基础的控件，如： TextView 、 Button 、 ImageView 、 EditText 、 ListView 等等常用的控件，我们可以直接使用或者组合新的控件使用。 \n 开始之前先来介绍和了解一下 Android 的 UI 中常用的布局大小尺寸相关单位的知识。 \n 由于 Android 厂商非常多，各种尺寸的 android 手机、平板、设备层出不穷，Google 公司为了解决分辨率过多的问题，在 Android 的开发文档中定义了 px 、 dip（dp） 、 sp ，方便开发者适配不同分辨率的Android设备，对于一名合格程序员来说理解并掌握适配是必须的。 \n 基础概念 : \n \n \n \n 名称 \n 解释 \n \n \n \n \n px \n 像素点，一个像素点为1px \n \n \n dp \n 即dip，像素密度 \n \n \n sp \n 同dp，但是可以根据系统字体偏好缩放 \n \n \n dpi \n 每英寸的像素数，也叫做屏幕密度 \n \n \n \n 先来了解一下dpi，dpi 全称是  dots per inch ，对角线每英寸的像素点的个数，也是 衡量设备显示精细度效果的重要参数 。 \n 计算公式如下： \n \n \n height和width即为长宽的像素，平方和即为对角线的像素个数，size即我们常说的5寸手机、4寸手机中的5和4，即对角线的长度。所以，一同尺寸的手机，分辨率越高，dpi越高。分辨率相同，屏幕对角线英寸数越小，dpi越高。 \n \n dp 也叫 dip，是  device independent pixels ，设备不依赖像素的一个单位。安卓开发用的单位，官方规定：当设备的 dpi 为 160dpi 时，1dp=1px。 \n 计算公式如下： \n \n \n 如：将一个控件设置长度为1dp，那么在160dpi上该控件长度为1px，在240dpi的屏幕上该控件的长度为1*240/160=1.5个像素点。 \n \n px 和 dp之间的关系，android中的dp在渲染前会将dp转为px，计算公式： \n \n px = density * dp; \n density = dpi / 160; \n px = dp * (dpi / 160); \n \n 其中 density  在每个设备上都是固定的， DPI / 160 = density ， 屏幕的总 px 宽度 / 屏幕的总 dp 宽度 = density（可以理解1dp中包含像素的个数） \n Android 中 px 与 dp 互转方式： \n /**\n*  dp 转成为 px\n*/ \n public   static   int   dip2px ( Context  context ,   float  dpValue )   { \n     final   float  scale  =  context . getResources ( ) . getDisplayMetrics ( ) . density ; \n     return   ( int )   ( dpValue  *  scale  +   0.5f ) ; \n } \n\n /**\n*  px 转成为 dp\n*/ \n public   static   int   px2dip ( Context  context ,   float  pxValue )   { \n     final   float  scale  =  context . getResources ( ) . getDisplayMetrics ( ) . density ; \n     return   ( int )   ( pxValue  /  scale  +   0.5f ) ; \n } \n \n \n 之所以后面加上0.5f是因为 float 类型的 1.1 和1.9 强转成int类型后，会失去精准度变成 int类型的1， 而如果咱们想四舍五入的话，把他们都加上0.5f，这样转换出来的结果就是： \n 1.4 + 0.5 = 1.9 转为int 还是1，而1.5 + 0.5 = 2.0 转换成int后就是2，正好是四舍五入，这样就保证值相对精准。 \n \n 接下来篇章将主要来介绍 Android 的常用控件和使用。 \n"},{title:"06.07 布局-ConstraintLayout",frontmatter:{author:"JiangMing",title:"06.07 布局-ConstraintLayout",date:"2021-06-14 18:17:54",sidebar:"auto",categories:["Android"],tags:["Android 开发基础"],publish:!0,showSponsor:!0},regularPath:"/developer/android/base/06.07_layout_components_constraintlayout.html",relativePath:"developer/android/base/06.07_layout_components_constraintlayout.md",key:"v-ecbbc74a",path:"/developer/android/base/06.07_layout_components_constraintlayout.html",headers:[{level:2,title:"约束布局的优势",slug:"约束布局的优势"},{level:2,title:"添加开发依赖",slug:"添加开发依赖"},{level:2,title:"约束条件说明",slug:"约束条件说明"},{level:2,title:"使用约束布局",slug:"使用约束布局"},{level:3,title:"相对定位",slug:"相对定位"},{level:3,title:"设置边距",slug:"设置边距"},{level:3,title:"居中和偏移",slug:"居中和偏移"},{level:3,title:"角度定位",slug:"角度定位"},{level:3,title:"可见行为",slug:"可见行为"},{level:3,title:"尺寸约束",slug:"尺寸约束"},{level:3,title:"链式布局",slug:"链式布局"},{level:3,title:"辅助工具",slug:"辅助工具"},{level:3,title:"小结",slug:"小结"}],content:' 约束布局  ConstraintLayout  是一个 ViewGroup，以  support  包的方式来提供兼容版本的使用方式，可以在 Api9（android 2.3） 以上的 Android 系统使用它，它的出现主要是为了解决布局嵌套过多的问题，以灵活的方式定位和调整小部件。从 Android Studio 2.3 起，官方的模板默认使用 ConstraintLayout。 \n ConstraintLayout  可让您使用扁平视图层次结构（无嵌套视图组）创建复杂的大型布局。它与  RelativeLayout  相似，其中所有的视图均根据同级视图与父布局之间的关系进行布局，但其灵活性要高于  RelativeLayout ，并且更易于与 Android Studio 的布局编辑器配合使用。 \n ConstraintLayout  的所有功能均可直接通过 Android Studio 的布局编辑器的可视化工具来使用，因为布局 API 和布局编辑器是专为彼此构建的，因此，您完全可以通过拖放的形式（而非修改 XML）来构建布局。当然作为一名程序猿来说，可视化带来方便的同时也可能会带来一些不可控的因素或者冗余的布局元素，所以日常布局中还是建议自己通过代码精确的布局，方便理解和更细腻的元素控制。 \n 约束布局的优势 \n 在开发过程中经常能遇到一些复杂的UI，可能会出现布局嵌套过多的问题，嵌套得越多，设备绘制视图所需的时间和计算功耗也就越多。 \n ConstraintLayout 使用起来比 RelativeLayout 更灵活，性能更出色，最重要的是 ConstraintLayout 可以按照比例约束控件位置和尺寸，能够更好地适配屏幕大小不同的机型。 \n 添加开发依赖 \n 如需在项目中使用  ConstraintLayout ，请按以下步骤操作： \n \n 确保您的  maven.google.com  代码库已在 项目级 的  build.gradle  文件中声明： \n \n     repositories  { \n         google ( ) \n     } \n \n \n 将该库作为依赖项添加到 模块级 的  build.gradle  文件中，如以下示例所示。请注意，最新版本可能与示例中显示的不同： \n \n dependencies  { \n    implementation  "androidx.constraintlayout:constraintlayout:2.0.4" \n     // To use constraintlayout in compose \n    implementation  "androidx.constraintlayout:constraintlayout-compose:1.0.0-alpha06" \n } \n \n \n 在工具栏或同步通知中，点击  Sync Project with Gradle Files 。 \n \n 现在，您可以在项目工程模块中使用  ConstraintLayout  来构建布局了。 \n 约束条件说明 \n 要在  ConstraintLayout   中定义某个视图的位置，您必须为该视图添加至少一个 水平约束条件 和一个 垂直约束条件 。每个约束条件均表示与其他视图、父布局或隐形引导线之间连接或对齐方式。每个约束条件均定义了视图在竖轴或者横轴上的位置；因此每个视图在每个轴上都必须至少有一个约束条件，但通常情况下会需要更多约束条件。 \n 使用约束布局 \n 相对定位 \n 相对定位是在 ConstraintLayout 中基本约束构建布局的方式之一，约束允许 一个部件相对位置 相对于 另一个部件相对位置 进行定位。 \n 水平轴：left,  right, start, end \n 垂直轴：top,  bottom, baseline（text 文本属性） \n 相对定位的约束示意图： \n \n 常见的相对定位属性： \n \n layout_constraintLeft_toLeftOf \n layout_constraintLeft_toRightOf \n layout_constraintRight_toLeftOf \n layout_constraintRight_toRightOf \n layout_constraintTop_toTopOf \n layout_constraintTop_toBottomOf \n layout_constraintBottom_toTopOf \n layout_constraintBottom_toBottomOf \n layout_constraintBaseline_toBaselineOf \n layout_constraintStart_toEndOf \n layout_constraintStart_toStartOf \n layout_constraintEnd_toStartOf \n layout_constraintEnd_toEndOf \n \n 它们都带一个引用  id  到另一个参考约束的部件，或者父部件(它将引用父容器，即ConstraintLayout），如果约束参考的是父容器的话，指定参考对象为： parent  即可。 \n \n 可以简单理解是将部件的 指定的位置侧 约束到任何 其他部件的一个位置侧 。 \n \n 示例1：相对父布局居中： \n      < Button \n         android: layout_width = " wrap_content " \n         android: layout_height = " wrap_content " \n         app: layout_constraintLeft_toLeftOf = " parent " \n         app: layout_constraintTop_toTopOf = " parent " \n         app: layout_constraintRight_toRightOf = " parent " \n         app: layout_constraintBottom_toBottomOf = " parent " /> \n \n 示例2：组件B的左侧约束在组件A的右侧： \n \n xml布局方式为： \n < Button \n     android: id = " @+id/btn_a "   ...   /> \n\n \x3c!-- 按钮B的左侧被约束到按钮A的右侧 --\x3e \n < Button  \n     android: id = " @+id/btn_b "   ... \n     app: layout_constraintLeft_toRightOf = " @+id/btn_a "   /> \n \n 示例3：不同高度的文本组件对齐： \n \n xml布局方式为： \n < TextView \n     android: id = " @+id/tv1 " \n     ... /> \n\n < TextView \n     android: id = " @+id/tv2 " \n     app: layout_constraintLeft_toRightOf = " @+id/tv1 "  \n     app: layout_constraintBaseline_toBaselineOf = " @+id/tv1 " \n     ... /> \n 设置边距 \n \n 可以通过设置 边距 （ margin ），将应用于组件的相应方向的边距约束，强制将边距作为目标和源端之间的空间。 \n 布局边距属性（不同的方向）： \n \n android:layout_marginStart \n android:layout_marginEnd \n android:layout_marginLeft \n android:layout_marginTop \n android:layout_marginRight \n android:layout_marginBottom \n \n \n 注意： \n 控件必须在布局里约束一个相对位置，边距只能大于或等于零，并取对应的尺寸单位参数。 \n \n 示例： \n xml布局： \n <?xml version="1.0" encoding="utf-8"?> \n < androidx.constraintlayout.widget.ConstraintLayout   xmlns: android = " http://schemas.android.com/apk/res/android " \n     xmlns: app = " http://schemas.android.com/apk/res-auto " \n     android: layout_width = " match_parent " \n     android: layout_height = " match_parent " > \n\n     < Button \n         android: layout_width = " wrap_content " \n         android: layout_height = " wrap_content " \n         android: layout_marginLeft = " 50dp " \n         android: layout_marginTop = " 50dp " \n         android: text = " Button1 " \n         app: layout_constraintLeft_toLeftOf = " parent " \n         app: layout_constraintTop_toTopOf = " parent "   /> \n\n </ androidx.constraintlayout.widget.ConstraintLayout > \n \n 效果：按钮组件确定了相对约束（左，右方向参考父布局）的位置后，此时设置按钮的左边距为 50dp 距离，顶部边距为 50dp 。 \n \n 如果组件参考的目标  visibility  设置了  View.GONE  （不可见）属性，这时可以设置  goneMargin  属性来设置参考目标不可见时的边距。 \n goneMargin 不同方向的边距属性： \n \n layout_goneMarginStart \n layout_goneMarginEnd \n layout_goneMarginLeft \n layout_goneMarginTop \n layout_goneMarginRight \n layout_goneMarginBottom \n \n 示例： \n xml布局： \n <?xml version="1.0" encoding="utf-8"?> \n < androidx.constraintlayout.widget.ConstraintLayout   xmlns: android = " http://schemas.android.com/apk/res/android " \n     xmlns: app = " http://schemas.android.com/apk/res-auto " \n     android: layout_width = " match_parent " \n     android: layout_height = " match_parent " > \n\n     < Button \n         android: id = " @+id/btn1 " \n         android: layout_width = " wrap_content " \n         android: layout_height = " wrap_content " \n         android: text = " Button1 " \n         android: visibility = " gone " \n         app: layout_constraintLeft_toLeftOf = " parent " \n         app: layout_constraintTop_toTopOf = " parent "   /> \n    \n     < Button \n         android: id = " @+id/btn2 " \n         android: layout_width = " wrap_content " \n         android: layout_height = " wrap_content " \n         android: text = " Button2 " \n         app: layout_constraintLeft_toRightOf = " @id/btn1 " \n         app: layout_constraintTop_toTopOf = " parent " \n         app: layout_goneMarginLeft = " 100dp "   /> \n\n </ androidx.constraintlayout.widget.ConstraintLayout > \n \n 效果： \n 当 Button1 组件的  visibility="visible"  时，Button2 组件的左边距为 0。 \n \n 当 Button1 组件的  visibility="gone"  时，Button2 组件的左边距为 100dp。 \n 居中和偏移 \n 1. 居中 \n \n 约束布局中将控件居中的方法：通过在水平或者垂直的方向上参考目标设置为  parent 且添加方向 相反的约束 来完成水平或垂直方向的居中效果。 \n 水平居中： \n layout_constraintLeft_toLeftOf="parent"\nlayout_constraintRight_toRightOf="parent"\n \n 垂直居中： \n layout_constraintTop_toTopOf="parent"\nlayout_constraintBottom_toBottomOf="parent"\n \n 水平和垂直居中（布局内居中）： \n layout_constraintLeft_toLeftOf="parent"\nlayout_constraintTop_toTopOf="parent"\nlayout_constraintRight_toRightOf="parent"\nlayout_constraintBottom_toBottomOf="parent"\n \n 示例： \n xml布局： \n <?xml version="1.0" encoding="utf-8"?> \n < androidx.constraintlayout.widget.ConstraintLayout   xmlns: android = " http://schemas.android.com/apk/res/android " \n     xmlns: app = " http://schemas.android.com/apk/res-auto " \n     android: layout_width = " match_parent " \n     android: layout_height = " match_parent " > \n    \n     \x3c!-- 水平方向：left，right 约束居中 --\x3e \n     < Button \n         android: id = " @+id/btn1 " \n         android: layout_width = " wrap_content " \n         android: layout_height = " wrap_content " \n         android: text = " Button1 " \n         app: layout_constraintLeft_toLeftOf = " parent " \n         app: layout_constraintRight_toRightOf = " parent " \n         app: layout_constraintTop_toTopOf = " parent "   /> \n    \n     \x3c!-- 垂直方向：top，bottom 约束居中 --\x3e \n     < Button \n         android: id = " @+id/btn2 " \n         android: layout_width = " wrap_content " \n         android: layout_height = " wrap_content " \n         android: text = " Button2 " \n         app: layout_constraintBottom_toBottomOf = " parent " \n         app: layout_constraintLeft_toLeftOf = " parent " \n         app: layout_constraintTop_toTopOf = " parent "   /> \n    \n     \x3c!-- 整体布局内居中：left，right，top，bottom 水平和垂直方向约束居中 --\x3e \n     < Button \n         android: id = " @+id/btn3 " \n         android: layout_width = " wrap_content " \n         android: layout_height = " wrap_content " \n         android: text = " Button3 " \n         app: layout_constraintBottom_toBottomOf = " parent " \n         app: layout_constraintLeft_toLeftOf = " parent " \n         app: layout_constraintRight_toRightOf = " parent " \n         app: layout_constraintTop_toTopOf = " parent "   /> \n </ androidx.constraintlayout.widget.ConstraintLayout > \n \n 效果： \n 2. 偏移 \n \n 约束布局中的同方向上遇到相反的约束时，默认是将小部件居中，但是您可以使用偏移（Bias）属性调整位置，使其偏向一方。 \n 偏移的属性： \n \n layout_constraintHorizontal_bias ：水平方向偏移量，范围 0.0~1.0（0~100%）。 \n layout_constraintVertical_bias ：垂直方向偏移量，范围 0.0~1.0（0~100%）。 \n \n 示例： \n xml布局： \n <?xml version="1.0" encoding="utf-8"?> \n < androidx.constraintlayout.widget.ConstraintLayout   xmlns: android = " http://schemas.android.com/apk/res/android " \n     xmlns: app = " http://schemas.android.com/apk/res-auto " \n     android: layout_width = " match_parent " \n     android: layout_height = " match_parent " >     \n    \n     \x3c!--水平居中，水平方向上偏移20% --\x3e \n     < Button \n         android: layout_width = " wrap_content " \n         android: layout_height = " wrap_content " \n         android: text = " Button1 " \n         app: layout_constraintHorizontal_bias = " 0.2 " \n         app: layout_constraintLeft_toLeftOf = " parent " \n         app: layout_constraintRight_toRightOf = " parent " \n         app: layout_constraintTop_toTopOf = " parent "   />     \n    \n     \x3c!--垂直居中，垂直方向上偏移80% --\x3e \n     < Button \n         android: layout_width = " wrap_content " \n         android: layout_height = " wrap_content " \n         android: text = " Button2 " \n         app: layout_constraintBottom_toBottomOf = " parent " \n         app: layout_constraintLeft_toLeftOf = " parent " \n         app: layout_constraintTop_toTopOf = " parent " \n         app: layout_constraintVertical_bias = " 0.8 "   /> \n </ androidx.constraintlayout.widget.ConstraintLayout > \n \n 效果：Button1 水平居中后在水平方向偏移20%，Button2 垂直居中后在垂直方向偏移80% 。 \n 角度定位 \n \n \n 1.1 版本 中新增的功能，以一定的 角度 和 距离 约束一个部件中心相对于另一个部件中心进行布局定位。 \n 角度定位的属性： \n \n layout_constraintCircle  : 参考的组件的id。 \n layout_constraintCircleRadius  : 到参考部件中心的距离。 \n layout_constraintCircleAngle  : 部件应该处于哪个角度（取值范围: 0 ~ 360 ）。 \n \n 示例： \n xml布局： \n <?xml version="1.0" encoding="utf-8"?> \n < androidx.constraintlayout.widget.ConstraintLayout   xmlns: android = " http://schemas.android.com/apk/res/android " \n     xmlns: app = " http://schemas.android.com/apk/res-auto " \n     android: layout_width = " match_parent " \n     android: layout_height = " match_parent " >     \n    \n     \x3c!-- 被参考的组件 --\x3e \n     < Button \n         android: id = " @+id/btn1 " \n         android: layout_width = " wrap_content " \n         android: layout_height = " wrap_content " \n         android: text = " Button1 " \n         app: layout_constraintBottom_toBottomOf = " parent " \n         app: layout_constraintLeft_toLeftOf = " parent " \n         app: layout_constraintRight_toRightOf = " parent " \n         app: layout_constraintTop_toTopOf = " parent "   />     \n    \n     \x3c!-- 参考btn1组件, 角度45°，距离150dp --\x3e \n     < Button \n         android: id = " @+id/btn2 " \n         android: layout_width = " wrap_content " \n         android: layout_height = " wrap_content " \n         android: text = " Button2 " \n         app: layout_constraintCircle = " @id/btn1 " \n         app: layout_constraintCircleAngle = " 45 " \n         app: layout_constraintCircleRadius = " 150dp " \n         app: layout_constraintLeft_toLeftOf = " parent " \n         app: layout_constraintTop_toTopOf = " parent "   /> \n </ androidx.constraintlayout.widget.ConstraintLayout > \n \n 效果： \n 可见行为 \n ConstraintLayout 对于标记可见性为  View.GONE  的组件有特殊的处理。通常情况下被标记可见性为 View.GONE 的组件，其表现为不显示，也不是布局本身的一部分。但是 ConstraintLayout 中会将其认为是一个尺寸大小为 0 的组件，如果与其他组件存在约束行为的话，在不可见时仍然后有效。 \n \n \n 如上面示意图所示： \n A 有一个50dp边距到其容器的一侧，B 只有100dp到 A，当标记 A 消失，B 将具有100dp的边距到容器。因此，您可以指定连接到窗口小部件已被标记为消失的窗口小部件，如  goneMarginXXX  属性可以指定在 A 消失时的边距大小。 \n 尺寸约束 \n 可以通过四种不同方式指定组件的尺寸，有具体的尺寸大小，WRAP_CONTENT，MATCH_CONSTRAINT（0dp），宽高比等方式实现。 \n 1. 使用指定的尺寸 \n 可以指定组件的  android:layout_width  和  android:layout_height  属性来指定具体的组件大小。 \n 例如：  指定组件的宽度为100dp大小，高度为80dp大小。 \n android:layout_width="100dp"\nandroid:layout_height="80dp"\n 2. 使用WRAP_CONTENT \n 当控件的高度或宽度为wrap_content时，让控件自己计算大小，可以使用下列属性来控制 最大 、 最小 的高度或宽度： \n \n android:minWidth ： 最小的宽度 \n android:minHeight ： 最小的高度 \n android:maxWidth ： 最大的宽度 \n android:maxHeight ： 最大的高度 \n \n 注意：  当ConstraintLayout为1.1版本以下时，使用这些属性需要加上强制约束，如下所示： \n \n app:layout_constrainedWidth="true|false" \n app:layout_constrainedHeight="true|false" \n 3. 使用MATCH_CONSTRAINT \n 当维度设置为match_constraint（尺寸为0dp）时，默认行为是使结果大小取所有空间。 \n 提供了几种额外的修饰符: \n \n layout_constraintWidth_min  : 设置最小宽度约束 \n layout_constraintHeight_min  : 设置最小高度约束 \n layout_constraintWidth_max  : 设置最大宽度约束 \n layout_constraintHeight_max  : 设置最大高度约束 \n layout_constraintWidth_percent  : 设置宽度的占用比例，取值：0.0 ~ 1.0 \n layout_constraintHeight_percent  : 设置高度的占用比例，取值：0.0 ~ 1.0 \n \n 注意：  如果需要使用 占用比例（percent） ，需要进行以下设置： \n \n 尺寸应设置为  match_constraint（0dp） \n 默认值应设置为： app:layout_constraintWidth_default="percent"  或 app:layout_constraintHeight_default="percent" \n 然后将  layout_constraintwidth_percent  或  layout_constraintheight_percent 属性设置为0到1之间的值 \n \n 官方不推荐在 ConstraintLayout 中使用 match_parent，可以设置 0dp (MATCH_CONSTRAINT) 配合约束代替 match_parent 。 \n WRAP_CONTENT 和 MATCH_CONSTRAINT（0dp）是 ConstraintLayout 1.1 版本中新增的。 \n 4. 使用宽高比 \n 您还可以将部件的一个维度（宽度或者高度）定义为另一个的比例，但是，需要将至少一个受约束的维度设置为0dp（即，match_constraint），并将属性 layout_constraintDimensionRatio 设置为给定的比率。 \n 比率的表示方式有两种： \n \n float 类型的数值，其含义表示为  “宽:高”  的比率数值。 \n "width:height" 表达式，表示  “宽:高”  的比率。 \n \n 示例： \n xml布局： \n <?xml version="1.0" encoding="utf-8"?> \n < androidx.constraintlayout.widget.ConstraintLayout   xmlns: android = " http://schemas.android.com/apk/res/android " \n     xmlns: app = " http://schemas.android.com/apk/res-auto " \n     android: layout_width = " match_parent " \n     android: layout_height = " match_parent " \n     android: background = " #787373 " > \n\n     \x3c!-- 指定高度值，宽高比率约束为：1:3 --\x3e \n     < ImageView \n         android: layout_width = " 0dp " \n         android: layout_height = " 200dp " \n         app: layout_constraintDimensionRatio = " 1:3 " \n         android: background = " #2196F3 " \n         app: layout_constraintLeft_toLeftOf = " parent " \n         app: layout_constraintRight_toRightOf = " parent " \n         app: layout_constraintTop_toTopOf = " parent "   /> \n\n     \x3c!-- 自适应高度，宽度充满最大约束，宽高比率约束为：1:1 --\x3e \n     < Button \n         android: layout_width = " 0dp " \n         android: layout_height = " wrap_content " \n         app: layout_constraintDimensionRatio = " 1:1 " \n         android: text = " 1:1 " \n         app: layout_constraintBottom_toBottomOf = " parent " \n         app: layout_constraintLeft_toLeftOf = " parent " \n         app: layout_constraintRight_toRightOf = " parent " \n         app: layout_constraintTop_toTopOf = " parent "   /> \n\n     \x3c!-- 使用float数值来表示宽高比率为：1.5（2:1） --\x3e \n     < Button \n         android: layout_width = " 0dp " \n         android: layout_height = " wrap_content " \n         app: layout_constraintDimensionRatio = " 2.0 " \n         android: text = " 1.5 (2:1) " \n         app: layout_constraintLeft_toLeftOf = " parent " \n         app: layout_constraintRight_toRightOf = " parent " \n         app: layout_constraintBottom_toBottomOf = " parent "   /> \n    \n </ androidx.constraintlayout.widget.ConstraintLayout > \n \n 效果： \n \n 如果两个尺寸设置为  Match_Constraint（0dp） ，在一个维度方向上有相反的约束，则可以使用最大填充的比率。在这种情况下，系统 设置满足宽度的最大维度，并维护指定的宽高比 。为了基于另一个特定的侧面来限制一个特定侧，您可以通过添加字母W（用于约束宽度）或H（用于约束高度）， 指示约束分母是宽或者高 ，由逗号分隔： \n 1. 指定 W 约束分母，此时 16：9 = 高：宽\napp:layout_constraintDimensionRatio="W,16:9"\n\n2. 指定 H 约束分母，此时 16：9 = 宽：高\napp:layout_constraintDimensionRatio="H,16:9"\n \n 示例： \n xml布局： \n \n 指定 W,16:9 约束布局 \n \n <?xml version="1.0" encoding="utf-8"?> \n < androidx.constraintlayout.widget.ConstraintLayout   xmlns: android = " http://schemas.android.com/apk/res/android " \n     xmlns: app = " http://schemas.android.com/apk/res-auto " \n     android: layout_width = " match_parent " \n     android: layout_height = " match_parent " \n     android: background = " #787373 " > \n\n     < TextView \n         android: id = " @+id/tv " \n         android: layout_width = " 0dp " \n         android: layout_height = " 0dp " \n         app: layout_constraintDimensionRatio = " W,16:9 " \n         android: background = " #FF5722 " \n         android: gravity = " top|center_horizontal " \n         android: textSize = " 20sp " \n         app: layout_constraintTop_toTopOf = " parent " \n         app: layout_constraintLeft_toLeftOf = " parent " \n         app: layout_constraintRight_toRightOf = " parent " /> \n\n </ androidx.constraintlayout.widget.ConstraintLayout > \n \n \n 指定 H,16:9 约束布局 \n \n <?xml version="1.0" encoding="utf-8"?> \n < androidx.constraintlayout.widget.ConstraintLayout   xmlns: android = " http://schemas.android.com/apk/res/android " \n     xmlns: app = " http://schemas.android.com/apk/res-auto " \n     android: layout_width = " match_parent " \n     android: layout_height = " match_parent " \n     android: background = " #787373 " > \n\n     < TextView \n         android: id = " @+id/tv " \n         android: layout_width = " 0dp " \n         android: layout_height = " 0dp " \n         app: layout_constraintDimensionRatio = " H,16:9 " \n         android: background = " #FF5722 " \n         android: gravity = " top|center_horizontal " \n         android: textSize = " 20sp " \n         app: layout_constraintTop_toTopOf = " parent " \n         app: layout_constraintLeft_toLeftOf = " parent " \n         app: layout_constraintRight_toRightOf = " parent " /> \n\n </ androidx.constraintlayout.widget.ConstraintLayout > \n \n 效果： \n \n 指定 W,16:9 约束效果： \n \n \n \n 指定 H,16:9 约束效果： \n 链式布局 \n 链是一组视图，这些视图通过双向位置约束条件相互链接到一起，链中的视图可以垂直或水平分布。 \n 1. 创建一个链布局 \n 两个或以上控件通过在单个轴上（水平或垂直）的方式约束在一起，另一个轴可以单独约束，就可以认为是他们是一条链。 \n \n 示例： \n xml布局： \n <?xml version="1.0" encoding="utf-8"?> \n < androidx.constraintlayout.widget.ConstraintLayout   xmlns: android = " http://schemas.android.com/apk/res/android " \n     xmlns: app = " http://schemas.android.com/apk/res-auto " \n     android: layout_width = " match_parent " \n     android: layout_height = " match_parent " \n     android: background = " #787373 " \n     android: paddingTop = " 10dp " > \n\n     < TextView \n         android: id = " @+id/tv1 " \n         android: layout_width = " wrap_content " \n         android: layout_height = " wrap_content " \n         android: text = " Text1 " \n         android: background = " #03A9F4 " \n         app: layout_constraintTop_toTopOf = " parent " \n         app: layout_constraintLeft_toLeftOf = " parent " \n         app: layout_constraintRight_toLeftOf = " @+id/tv2 "   /> \n\n     < TextView \n         android: id = " @+id/tv2 " \n         android: layout_width = " wrap_content " \n         android: layout_height = " wrap_content " \n         android: text = " Text2 " \n         android: background = " #03A9F4 " \n         app: layout_constraintTop_toTopOf = " parent " \n         app: layout_constraintLeft_toRightOf = " @+id/tv1 " \n         app: layout_constraintRight_toLeftOf = " @+id/tv3 "   /> \n\n     < TextView \n         android: id = " @+id/tv3 " \n         android: layout_width = " wrap_content " \n         android: layout_height = " wrap_content " \n         android: text = " Text3 " \n         android: background = " #03A9F4 " \n         app: layout_constraintTop_toTopOf = " parent " \n         app: layout_constraintLeft_toRightOf = " @+id/tv2 " \n         app: layout_constraintRight_toRightOf = " parent "   /> \n\n </ androidx.constraintlayout.widget.ConstraintLayout > \n \n 效果： \n 2. 链头 \n 一条链的第一个控件是这条链的链头，我们可以在链头中设置  layout_constraintHorizontal_chainStyle  或者  layout_constraintVertical_chainStyle  来改变整条链的水平或者垂直方向的样式。 \n \n 注意：对于水平链，链头是最左边的小部件，对于垂直链，链头是最上面的小部件。 \n chainStyle 可以采用以下几种样式之一： \n \n Spread ：视图是均匀分布的（在考虑外边距之后），这也是默认的样式。 \n Spread inside ：第一个和最后一个视图固定在链两端的约束边界上，其余视图均匀分布。 \n Weighted ：当链设置为  spread  或  spread inside  时，您可以通过将一个或多个视图设置为“match constraints”( 0dp ) 来填充剩余空间。默认情况下，设置为“match constraints”的每个视图之间的空间均匀分布，但您可以使用  layout_constraintHorizontal_weight  和  layout_constraintVertical_weight  属性为每个视图分配重要性权重。如果您熟悉 线性布局 中的  layout_weight  的话，就会知道该样式与它的原理是相同的。因此，权重值最高的视图获得的空间最大；相同权重的视图获得同样大小的空间。 \n Packed ：视图打包在一起（在考虑外边距之后）， 然后，您可以通过更改链的头视图偏差调整整条链的偏差（左/右或上/下）。 \n \n \n 示例： \n xml布局： \n <?xml version="1.0" encoding="utf-8"?> \n < androidx.constraintlayout.widget.ConstraintLayout   xmlns: android = " http://schemas.android.com/apk/res/android " \n     xmlns: app = " http://schemas.android.com/apk/res-auto " \n     android: layout_width = " match_parent " \n     android: layout_height = " match_parent " \n     android: background = " #787373 " \n     android: paddingTop = " 10dp " > \n\n     \x3c!-- 1. spread style chain --\x3e \n     < TextView \n         android: id = " @+id/tv1 " \n         android: layout_width = " wrap_content " \n         android: layout_height = " wrap_content " \n         android: text = " Text1 " \n         android: background = " #03A9F4 " \n         app: layout_constraintHorizontal_chainStyle = " spread " \n         app: layout_constraintTop_toTopOf = " parent " \n         app: layout_constraintLeft_toLeftOf = " parent " \n         app: layout_constraintRight_toLeftOf = " @+id/tv2 "   /> \n\n     < TextView \n         android: id = " @+id/tv2 " \n         android: layout_width = " wrap_content " \n         android: layout_height = " wrap_content " \n         android: text = " Text2 " \n         android: background = " #FF9800 " \n         app: layout_constraintTop_toTopOf = " parent " \n         app: layout_constraintLeft_toRightOf = " @+id/tv1 " \n         app: layout_constraintRight_toLeftOf = " @+id/tv3 "   /> \n\n     < TextView \n         android: id = " @+id/tv3 " \n         android: layout_width = " wrap_content " \n         android: layout_height = " wrap_content " \n         android: text = " Text3 " \n         android: background = " #4CAF50 " \n         app: layout_constraintTop_toTopOf = " parent " \n         app: layout_constraintLeft_toRightOf = " @+id/tv2 " \n         app: layout_constraintRight_toRightOf = " parent "   /> \n\n     \x3c!-- 2. spread_inside style chain --\x3e \n     < TextView \n         android: id = " @+id/tv4 " \n         android: layout_width = " wrap_content " \n         android: layout_height = " wrap_content " \n         android: layout_marginTop = " 100dp " \n         android: text = " Text4 " \n         android: background = " #03A9F4 " \n         app: layout_constraintHorizontal_chainStyle = " spread_inside " \n         app: layout_constraintTop_toTopOf = " parent " \n         app: layout_constraintLeft_toLeftOf = " parent " \n         app: layout_constraintRight_toLeftOf = " @+id/tv5 "   /> \n\n     < TextView \n         android: id = " @+id/tv5 " \n         android: layout_width = " wrap_content " \n         android: layout_height = " wrap_content " \n         android: layout_marginTop = " 100dp " \n         android: text = " Text5 " \n         android: background = " #FF9800 " \n         app: layout_constraintTop_toTopOf = " parent " \n         app: layout_constraintLeft_toRightOf = " @+id/tv4 " \n         app: layout_constraintRight_toLeftOf = " @+id/tv6 "   /> \n\n     < TextView \n         android: id = " @+id/tv6 " \n         android: layout_width = " wrap_content " \n         android: layout_height = " wrap_content " \n         android: layout_marginTop = " 100dp " \n         android: text = " Text6 " \n         android: background = " #4CAF50 " \n         app: layout_constraintTop_toTopOf = " parent " \n         app: layout_constraintLeft_toRightOf = " @+id/tv5 " \n         app: layout_constraintRight_toRightOf = " parent "   /> \n\n     \x3c!-- 3. weighted chain --\x3e \n     < TextView \n         android: id = " @+id/tv7 " \n         android: layout_width = " 0dp " \n         android: layout_height = " wrap_content " \n         android: layout_marginTop = " 200dp " \n         android: text = " Text7 " \n         android: background = " #03A9F4 " \n         app: layout_constraintHorizontal_weight = " 1 " \n         app: layout_constraintTop_toTopOf = " parent " \n         app: layout_constraintLeft_toLeftOf = " parent " \n         app: layout_constraintRight_toLeftOf = " @+id/tv5 "   /> \n\n     < TextView \n         android: id = " @+id/tv8 " \n         android: layout_width = " 0dp " \n         android: layout_height = " wrap_content " \n         android: layout_marginTop = " 200dp " \n         android: text = " Text8 " \n         android: background = " #FF9800 " \n         app: layout_constraintHorizontal_weight = " 2 " \n         app: layout_constraintTop_toTopOf = " parent " \n         app: layout_constraintLeft_toRightOf = " @+id/tv7 " \n         app: layout_constraintRight_toLeftOf = " @+id/tv9 "   /> \n\n     < TextView \n         android: id = " @+id/tv9 " \n         android: layout_width = " 0dp " \n         android: layout_height = " wrap_content " \n         android: layout_marginTop = " 200dp " \n         android: text = " Text9 " \n         android: background = " #4CAF50 " \n         app: layout_constraintHorizontal_weight = " 3 " \n         app: layout_constraintTop_toTopOf = " parent " \n         app: layout_constraintLeft_toRightOf = " @+id/tv8 " \n         app: layout_constraintRight_toRightOf = " parent "   /> \n\n     \x3c!-- 4. packed style chain --\x3e \n     < TextView \n         android: id = " @+id/tv10 " \n         android: layout_width = " wrap_content " \n         android: layout_height = " wrap_content " \n         android: layout_marginTop = " 300dp " \n         android: text = " Text10 " \n         android: background = " #03A9F4 " \n         app: layout_constraintHorizontal_chainStyle = " packed " \n         app: layout_constraintTop_toTopOf = " parent " \n         app: layout_constraintLeft_toLeftOf = " parent " \n         app: layout_constraintRight_toLeftOf = " @+id/tv11 "   /> \n\n     < TextView \n         android: id = " @+id/tv11 " \n         android: layout_width = " wrap_content " \n         android: layout_height = " wrap_content " \n         android: layout_marginTop = " 300dp " \n         android: text = " Text11 " \n         android: background = " #FF9800 " \n         app: layout_constraintHorizontal_chainStyle = " packed " \n         app: layout_constraintTop_toTopOf = " parent " \n         app: layout_constraintLeft_toRightOf = " @+id/tv10 " \n         app: layout_constraintRight_toLeftOf = " @+id/tv12 "   /> \n\n     < TextView \n         android: id = " @+id/tv12 " \n         android: layout_width = " wrap_content " \n         android: layout_height = " wrap_content " \n         android: layout_marginTop = " 300dp " \n         android: text = " Text12 " \n         android: background = " #4CAF50 " \n         app: layout_constraintTop_toTopOf = " parent " \n         app: layout_constraintLeft_toRightOf = " @+id/tv11 " \n         app: layout_constraintRight_toRightOf = " parent "   /> \n\n     \x3c!-- 5. packed style chain with bias --\x3e \n     < TextView \n         android: id = " @+id/tv13 " \n         android: layout_width = " wrap_content " \n         android: layout_height = " wrap_content " \n         android: layout_marginTop = " 400dp " \n         android: text = " Text13 " \n         android: background = " #03A9F4 " \n         app: layout_constraintHorizontal_bias = " 0.3 " \n         app: layout_constraintHorizontal_chainStyle = " packed " \n         app: layout_constraintTop_toTopOf = " parent " \n         app: layout_constraintLeft_toLeftOf = " parent " \n         app: layout_constraintRight_toLeftOf = " @+id/tv14 "   /> \n\n     < TextView \n         android: id = " @+id/tv14 " \n         android: layout_width = " wrap_content " \n         android: layout_height = " wrap_content " \n         android: layout_marginTop = " 400dp " \n         android: text = " Text14 " \n         android: background = " #FF9800 " \n         app: layout_constraintHorizontal_chainStyle = " packed " \n         app: layout_constraintTop_toTopOf = " parent " \n         app: layout_constraintLeft_toRightOf = " @+id/tv13 " \n         app: layout_constraintRight_toLeftOf = " @+id/tv15 "   /> \n\n     < TextView \n         android: id = " @+id/tv15 " \n         android: layout_width = " wrap_content " \n         android: layout_height = " wrap_content " \n         android: layout_marginTop = " 400dp " \n         android: text = " Text15 " \n         android: background = " #4CAF50 " \n         app: layout_constraintTop_toTopOf = " parent " \n         app: layout_constraintLeft_toRightOf = " @+id/tv14 " \n         app: layout_constraintRight_toRightOf = " parent "   /> \n\n </ androidx.constraintlayout.widget.ConstraintLayout > \n \n 效果： \n \n 提示： 当对链中的元素使用边距时，边距是可加的。例如，在水平链上，如果一个元素定义的右边距为10dp，而下一个元素定义的左边距为5dp，那么这两个元素之间的结果边距为15dp。 \n 辅助工具 \n 1. Guideline \n Guildline  引导线约束，您可以添加垂直或水平的引导线来约束视图，并且用户看不到该引导线。可以根据相对于布局边缘的 dp 单位或百分比在布局中定位引导线。 \n \n Guildline  的主要属性： \n orientation ：垂直vertical，水平horizontal \n layout_constraintGuide_begin ：开始位置 \n layout_constraintGuide_end ：结束位置 \n layout_constraintGuide_percent ：距离顶部的百分比（orientation = horizontal 时则为距离左边） \n \n \n 示例： \n xml布局： \n <?xml version="1.0" encoding="utf-8"?> \n < androidx.constraintlayout.widget.ConstraintLayout   xmlns: android = " http://schemas.android.com/apk/res/android " \n     xmlns: app = " http://schemas.android.com/apk/res-auto " \n     android: layout_width = " match_parent " \n     android: layout_height = " match_parent " \n     android: background = " #787373 " \n     android: paddingTop = " 10dp " > \n\n     < androidx.constraintlayout.widget.Guideline \n         android: id = " @+id/gl1 " \n         android: layout_width = " wrap_content " \n         android: layout_height = " wrap_content " \n         android: orientation = " vertical " \n         app: layout_constraintGuide_begin = " 30dp "   /> \n\n     < androidx.constraintlayout.widget.Guideline \n         android: id = " @+id/gl2 " \n         android: layout_width = " wrap_content " \n         android: layout_height = " wrap_content " \n         android: orientation = " vertical " \n         app: layout_constraintGuide_end = " 30dp "   /> \n\n     < androidx.constraintlayout.widget.Guideline \n         android: id = " @+id/gl3 " \n         android: layout_width = " wrap_content " \n         android: layout_height = " wrap_content " \n         android: orientation = " vertical " \n         app: layout_constraintGuide_percent = " 0.3 "   /> \n\n     < androidx.constraintlayout.widget.Guideline \n         android: id = " @+id/gl4 " \n         android: layout_width = " wrap_content " \n         android: layout_height = " wrap_content " \n         android: orientation = " horizontal " \n         app: layout_constraintGuide_percent = " 0.5 "   /> \n\n     \x3c!-- 布局参考Guideline：gl3 --\x3e \n     < TextView \n         android: layout_width = " 50dp " \n         android: layout_height = " wrap_content " \n         android: layout_marginLeft = " 24dp " \n         android: layout_marginTop = " 100dp " \n         android: background = " #FF9800 " \n         android: gravity = " center " \n         android: text = " Text " \n         android: textSize = " 20sp " \n         app: layout_constraintLeft_toLeftOf = " @id/gl3 " \n         app: layout_constraintTop_toTopOf = " parent "   /> \n\n </ androidx.constraintlayout.widget.ConstraintLayout > \n \n 效果： \n 2. Barrier \n Barrier  屏障约束，与引导线类似，屏障是一条隐藏的线，您可以用它来约束视图。屏障不会定义自己的位置；相反，屏障的位置会随着其中所含视图的位置而移动。如果您希望将视图 限制到一组视图 而不是某个特定视图，这就非常有用。 \n \n 如上图所示，如果 C 需要在 A 和 B 的右侧，但是 A 和 B 的宽度大小不是固定的，这个时候就可以使用屏障约束来实现了， Barrier 可以在多个控件的一侧建立一个 屏障约束 。 \n Barrier  的常用属性： \n \n barrierDirection ：屏障所在的位置，可设置的值有：bottom、end、left、right、start、top \n constraint_referenced_ids ：屏障引用的控件，可设置多个(用“,”隔开) \n barrierAllowsGoneWidgets ：允许引用的组件的 visibility 属性是 gone 状态 \n barrierMargin ：屏障的所在位置的边距大小 \n \n 示例： \n xml布局： \n < androidx.constraintlayout.widget.ConstraintLayout   xmlns: android = " http://schemas.android.com/apk/res/android " \n     xmlns: app = " http://schemas.android.com/apk/res-auto " \n     android: layout_width = " match_parent " \n     android: layout_height = " match_parent " \n     android: background = " #787373 " \n     android: paddingTop = " 10dp " > \n\n     < TextView \n         android: id = " @+id/tv_a " \n         android: layout_width = " 100dp " \n         android: layout_height = " wrap_content " \n         android: layout_marginTop = " 50dp " \n         android: background = " #8BC34A " \n         android: gravity = " center " \n         android: text = " A " \n         app: layout_constraintLeft_toLeftOf = " parent " \n         app: layout_constraintTop_toTopOf = " parent "   /> \n\n     < TextView \n         android: id = " @+id/tv_b " \n         android: layout_width = " 150dp " \n         android: layout_height = " wrap_content " \n         android: layout_marginTop = " 150dp " \n         android: background = " #03A9F4 " \n         android: gravity = " center " \n         android: text = " B " \n         app: layout_constraintLeft_toLeftOf = " parent " \n         app: layout_constraintTop_toTopOf = " parent "   /> \n\n     \x3c!-- 在组件A和B的右侧实现一个屏障 --\x3e \n     < androidx.constraintlayout.widget.Barrier \n         android: id = " @+id/barr_ab_right " \n         android: layout_width = " wrap_content " \n         android: layout_height = " wrap_content " \n         app: barrierDirection = " right " \n         app: barrierAllowsGoneWidgets = " true " \n         app: barrierMargin = " 20dp " \n         app: constraint_referenced_ids = " tv_a,tv_b "   /> \n\n     < TextView \n         android: id = " @+id/tv_c " \n         android: layout_width = " 150dp " \n         android: layout_height = " wrap_content " \n         android: layout_marginTop = " 100dp " \n         android: background = " #FF5722 " \n         android: gravity = " center " \n         android: text = " C " \n         app: layout_constraintLeft_toLeftOf = " @id/barr_ab_right " \n         app: layout_constraintTop_toTopOf = " parent "   /> \n\n </ androidx.constraintlayout.widget.ConstraintLayout > \n \n 效果： \n 3. Group \n Group  可以把多个控件归为一组，方便统一控制这一组控件。 \n 常用的属性： \n \n constraint_referenced_ids ：引用的控件组id，可设置多个(用“,”隔开) \n \n 示例： \n 有 6 个两列并排的组件，用 Group 把组件 4 和组件 6 归为一组，再设置这组控件的可见性为 invisible，此时组件 4 和组件 6 都将不可见。 \n xml布局： \n <?xml version="1.0" encoding="utf-8"?> \n < androidx.constraintlayout.widget.ConstraintLayout   xmlns: android = " http://schemas.android.com/apk/res/android " \n     xmlns: app = " http://schemas.android.com/apk/res-auto " \n     android: layout_width = " match_parent " \n     android: layout_height = " match_parent " \n     android: background = " #787373 " \n     android: paddingTop = " 10dp " > \n\n     < TextView \n         android: id = " @+id/tv1 " \n         android: layout_width = " wrap_content " \n         android: layout_height = " wrap_content " \n         android: text = " Text1 " \n         android: background = " #03A9F4 " \n         app: layout_constraintHorizontal_chainStyle = " spread " \n         app: layout_constraintTop_toTopOf = " parent " \n         app: layout_constraintLeft_toLeftOf = " parent " \n         app: layout_constraintRight_toLeftOf = " @+id/tv2 "   /> \n\n     < TextView \n         android: id = " @+id/tv2 " \n         android: layout_width = " wrap_content " \n         android: layout_height = " wrap_content " \n         android: text = " Text2 " \n         android: background = " #FF9800 " \n         app: layout_constraintTop_toTopOf = " parent " \n         app: layout_constraintLeft_toRightOf = " @+id/tv1 " \n         app: layout_constraintRight_toLeftOf = " @+id/tv3 "   /> \n\n     < TextView \n         android: id = " @+id/tv3 " \n         android: layout_width = " wrap_content " \n         android: layout_height = " wrap_content " \n         android: text = " Text3 " \n         android: background = " #4CAF50 " \n         app: layout_constraintTop_toTopOf = " parent " \n         app: layout_constraintLeft_toRightOf = " @+id/tv2 " \n         app: layout_constraintRight_toRightOf = " parent "   /> \n\n     < TextView \n         android: id = " @+id/tv4 " \n         android: layout_width = " wrap_content " \n         android: layout_height = " wrap_content " \n         android: layout_marginTop = " 100dp " \n         android: text = " Text4 " \n         android: background = " #03A9F4 " \n         app: layout_constraintTop_toTopOf = " parent " \n         app: layout_constraintLeft_toLeftOf = " parent " \n         app: layout_constraintRight_toLeftOf = " @+id/tv5 "   /> \n\n     < TextView \n         android: id = " @+id/tv5 " \n         android: layout_width = " wrap_content " \n         android: layout_height = " wrap_content " \n         android: layout_marginTop = " 100dp " \n         android: text = " Text5 " \n         android: background = " #FF9800 " \n         app: layout_constraintTop_toTopOf = " parent " \n         app: layout_constraintLeft_toRightOf = " @+id/tv4 " \n         app: layout_constraintRight_toLeftOf = " @+id/tv6 "   /> \n\n     < TextView \n         android: id = " @+id/tv6 " \n         android: layout_width = " wrap_content " \n         android: layout_height = " wrap_content " \n         android: layout_marginTop = " 100dp " \n         android: text = " Text6 " \n         android: background = " #4CAF50 " \n         app: layout_constraintTop_toTopOf = " parent " \n         app: layout_constraintLeft_toRightOf = " @+id/tv5 " \n         app: layout_constraintRight_toRightOf = " parent "   /> \n\n     \x3c!-- 将组件4，6归为一组，并控制组不可见 --\x3e \n     < androidx.constraintlayout.widget.Group \n         android: layout_width = " wrap_content " \n         android: layout_height = " wrap_content " \n         app: constraint_referenced_ids = " tv4,tv6 " \n         android: visibility = " invisible "   /> \n\n </ androidx.constraintlayout.widget.ConstraintLayout > \n \n 效果： \n 4. Placeholder \n Placeholder  指的是占位符。一个 View占位符 ，当指定一个 Placeholder 的  content属性 为另一个 view 的 id 时，该 view 本身就会被 gone 掉，然后装载到 Placeholder 的位置。相当于把一个 View 当前位置移动到另外指定的位置。 \n 注意： 目前测试下来，目标 View 和 Placeholder 的宽和高必须是 wrap_content 才有效果，否则的话可能显示有问题，或者显示不出来，所以此项功能暂时不推荐使用，局限性比较大。 \n 示例： \n xml布局： \n <?xml version="1.0" encoding="utf-8"?> \n < androidx.constraintlayout.widget.ConstraintLayout   xmlns: android = " http://schemas.android.com/apk/res/android " \n     xmlns: app = " http://schemas.android.com/apk/res-auto " \n     android: layout_width = " match_parent " \n     android: layout_height = " match_parent " \n     android: background = " #787373 " > \n\n     \x3c!-- 占位符位于屏幕中心 --\x3e \n     < androidx.constraintlayout.widget.Placeholder \n         android: id = " @+id/placeholder " \n         android: layout_width = " wrap_content " \n         android: layout_height = " wrap_content " \n         app: content = " @+id/tv " \n         app: layout_constraintLeft_toLeftOf = " parent " \n         app: layout_constraintRight_toRightOf = " parent " \n         app: layout_constraintBottom_toBottomOf = " parent " \n         app: layout_constraintTop_toTopOf = " parent "   /> \n\n     \x3c!-- 目标组件位于左上角 --\x3e \n     < TextView \n         android: id = " @+id/tv " \n         android: layout_width = " wrap_content " \n         android: layout_height = " wrap_content " \n         android: padding = " 20dp " \n         android: text = " TextView " \n         android: textSize = " 20sp " \n         android: gravity = " center " \n         android: background = " #00BCD4 " \n         app: layout_constraintTop_toTopOf = " parent " \n         app: layout_constraintLeft_toLeftOf = " parent "   /> \n\n </ androidx.constraintlayout.widget.ConstraintLayout > \n \n 效果： \n 5. Optimizer \n 当使用  MATCH_CONSTRAINT(0dp)  约束时， ConstraintLayout  将对控件进行  2  次测量，ConstraintLayout在1.1中可以通过设置  layout_optimizationLevel  决定控件在哪方面进行优化，可设置的值有： \n \n none ：无优化 \n standard ：仅优化直接约束和屏障约束（默认） \n direct ：优化直接约束 \n barrier ：优化屏障约束 \n chain ：优化链约束 \n dimensions ：优化尺寸测量 \n 小结 \n 本章主要介绍了  ConstraintLayout  的基本语法和使用方式，一些辅助布局工具的使用，ConstraintLayout可以在 Android Studio 的可视化视图工具中，只需要托拉拽就可以完成整个布局，这里就不在介绍了，有需求的可以查看  官方可视化工具的使用 ，这里还是推荐大家使用代码的方式来精准布局，这样的话组件之间的关系是便于维护的。 \n'},{title:"07.01 控件-TextView",frontmatter:{author:"JiangMing",title:"07.01 控件-TextView",date:"2021-08-08 14:10:15",sidebar:"auto",categories:["Android"],tags:["Android 开发基础"],publish:!0,showSponsor:!0},regularPath:"/developer/android/base/07.01_ui_control_components_textview.html",relativePath:"developer/android/base/07.01_ui_control_components_textview.md",key:"v-015f1e9b",path:"/developer/android/base/07.01_ui_control_components_textview.html",headers:[{level:2,title:"常用属性",slug:"常用属性"},{level:2,title:"drawable属性设置图片",slug:"drawable属性设置图片"},{level:2,title:"autoLink属性识别链接",slug:"autolink属性识别链接"},{level:2,title:"html格式支持",slug:"html格式支持"},{level:2,title:"SpannableString富文本",slug:"spannablestring富文本"},{level:2,title:"文本跑马灯效果示例",slug:"文本跑马灯效果示例"},{level:2,title:"小结",slug:"小结"}],content:' TextView  是向用户显示文本的控件。如果需要显示文本信息的话，那么默认的 TextView 控件将是一个很好的选择，同时它也有很多属性来控制文本的显示方式。 \n 常用属性 \n \n id ：为控件设置一个组件id，根据id，我们可以在Java代码中通过findViewById()的方法获取到该对象，然后进行相关属性的设置，又或者使用RelativeLayout时，参考组件用的也是id。 \n layout_width ：组件的宽度，一般写： wrap_content 或者 match_parent(fill_parent) ，前者是控件显示的内容多大，控件就多大，而后者会填满该控件所在的父容器；当然也可以设置成特定的大小，如100dp大小。 \n layout_height ：组件的高度，一般写： wrap_content 或者 match_parent(fill_parent) ，前者是控件显示的内容多大，控件就多大，而后者会填满该控件所在的父容器；当然也可以设置成特定的大小，如100dp大小。 \n gravity ：设置控件中内容的对齐方向，可以设置 center ， left ， top ， right ， bottom  等等属性来控制对齐的方向。 \n text ：设置显示的文本内容，通用规范是把字符串写到string.xml文件中，然后通过@String/xxx取得对应的字符串内容的，非强制要求，而直接写文本的方式一般是用于测试使用。 \n textColor ：设置字体颜色，通用规范是将颜色字符串写在colors.xml文件中，然后通过@color/xxx取得对应的颜色值的，非强制要求，而直接写颜色的方式一般是用于测试使用。 \n textStyle ：设置字体风格，三个可选值： normal （正常）， bold （加粗）， italic （斜体）。 \n textSize ：字体大小，常用的单位一般是用sp，也可以使用px，dp等单位。 \n background ：控件的背景，可以理解为填充整个控件的背景，可以是图片或者color。 \n maxLength ：限制显示的文本长度，超出部分不显示。 \n lines ：设置文本的行数，设置两行就显示两行，即使第二行没有数据。 \n maxLines ：设置文本的最大显示行数，与width或者layout_width结合使用，超出部分自动换行，超出行数将不显示。 \n singleLine ：设置单行显示。当超过一行文本时，默认结尾...表示。 \n ellipsize ：设置当文字过长时,该控件该如何显示。有如下值设置：”start” 省略号显示在开头；”end” 省略号显示在结尾；”middle” 省略号显示在中间；”marquee” 以跑马灯的方式显示(动画横向移动)。 \n lineSpacingExtra ：设置行间距，如"3dp"。 \n lineSpacingMultiplier ：设置行间距的倍数，如"1.2"倍。 \n ... 更多属性可参考官方文档： TextView 。 \n \n 提示： TextView 控件中的大多数属性一般都可以使用  xml  或者  代码  的方式来进行设置，如： text  属性，可以在 xml 中使用  android:text  属性进行设置或使用代码（java） setText(xxx)  的方式来设置。 \n 示例： \n xml布局 \n < TextView \n     android: layout_width = " 200dp " \n     android: layout_height = " wrap_content " \n     android: text = " This is a simple textview example! " \n     android: background = " #2196F3 " \n     android: gravity = " center " \n     android: textSize = " 20sp " \n     android: textColor = " #ccc " \n     android: textStyle = " bold " \n     android: singleLine = " true " \n     android: ellipsize = " middle " /> \n \n 效果： \n drawable属性设置图片 \n drawableXxx ，可以设置文本四个方向的图片: \n drawableTop : 设置上面方向的drawable资源 \n drawableButtom : 设置下面方向的drawable资源 \n drawableLeft : 设置左侧方向的drawable资源 \n drawableRight : 设置右侧方向的drawable资源 \n drawablePadding ：来设置图片与文字间的间距 \n 示例： \n xml布局： \n <?xml version="1.0" encoding="utf-8"?> \n < LinearLayout   xmlns: android = " http://schemas.android.com/apk/res/android " \n     android: orientation = " vertical " \n     android: layout_width = " match_parent " \n     android: layout_height = " match_parent " \n     android: gravity = " center " \n     android: background = " #787373 " > \n\n     < TextView \n         android: layout_width = " wrap_content " \n         android: layout_height = " wrap_content " \n         android: drawableLeft = " @drawable/icon_test " \n         android: drawableTop = " @drawable/icon_test " \n         android: drawableRight = " @drawable/icon_test " \n         android: drawableBottom = " @drawable/icon_test " \n         android: drawablePadding = " 10dp " \n         android: textColor = " #00BCD4 " \n         android: textSize = " 15sp " \n         android: text = " 图片文本 " /> \n\n </ LinearLayout > \n \n 效果： \n \n drawableXxx 资源并不能在XML自行设置大小，所以我们需要在代码（Java）中来进行一个修改。 \n 示例： \n 代码： \n TextView  tv  =   findViewById ( R . id . tv_demo ) ; \n Drawable [ ]  drawables  =  tv . getCompoundDrawables ( ) ; \n // 数组0~3下标,依次代表的是:左上右下的坐标点的位置 \n // 宽：距离文字左边缘开始50~150，高：距离文字顶部0~300 \ndrawables [ 1 ] . setBounds ( 50 ,   0 ,   150 ,   300 ) ; \n // 为TextView重新设置drawable资源数组，没有图片可以用null代替 \ntv . setCompoundDrawables ( drawables [ 0 ] ,  drawables [ 1 ] ,  drawables [ 2 ] , drawables [ 3 ] ) ; \n \n 效果： \n autoLink属性识别链接 \n 当文字中含有 网址（URL） ， email ， 电话号码 等等情况的时候，我们可以通过设置  autoLink  属性；当我们点击文字中对应部分的文字，即可跳转至某默认APP来处理，如：一个 web 网址，点击后跳转至 web 浏览器界面（存在的情况）。 \n 属性 ： \n autoLink ：有  web ,  phone ,  email ,  map ,  none ,  all  等属性设置自动识别的链接类型 \n \n all  就是全部都包含,自动识别协议头。 \n 也可以在代码（Java）中可以使用  setAutoLinkMask(Linkify.ALL) ，此时  autolink  会自动识别，但是还要为这个 TextView 设置  setMovementMethod(LinkMovementMethod.getInstance())  否则点击没有相应的动作效果。 \n \n 示例： \n xml布局： \n <?xml version="1.0" encoding="utf-8"?> \n < LinearLayout   xmlns: android = " http://schemas.android.com/apk/res/android " \n     android: orientation = " vertical " \n     android: layout_width = " match_parent " \n     android: layout_height = " match_parent " \n     android: gravity = " center " > \n\n     < TextView \n         android: layout_width = " wrap_content " \n         android: layout_height = " wrap_content " \n         android: autoLink = " all " \n         android: text = " 百度网址： www.baidu.com "   /> \n\n     < TextView \n         android: layout_width = " wrap_content " \n         android: layout_height = " wrap_content " \n         android: layout_marginTop = " 50dp " \n         android: autoLink = " all " \n         android: text = " 移动客服： 18212345678 "   /> \n\n </ LinearLayout > \n \n 效果： \n html格式支持 \n TextView 除了显示普通文本外，TextView 还预定义了一些类似于  HTML  的标签，通过这些标签，我们可以使  TextView 显示不同的字体颜色，大小，字体，甚至是显示图片，或者链接等等，只要使用 HTML 中的一些标记的标签，加上  android.text.HTML  类的支持，即可完成上述功能。 \n HTML （超文本标记语言——HyperText Markup Language）是构成 Web 世界的一砖一瓦。HTML 使用“标记”（markup）来注明文本、图片和其他内容，以便于在 Web 浏览器中显示。 \n Android 中也不是全部支持的，这里简单的列举几种常见的支持的标签： \n \n < font >：设置颜色和字体 \n < big >：设置字体大号 \n < small >：设置字体小号 \n < i >< b >：斜体粗体 \n < a >：链接网址 \n < img >：图片 \n \n 示例： \n 示例代码： \n TextView  tv  =   findViewById ( R . id . tv_demo ) ; \n // 设置带html便签的文本 \n // 红色字体颜色标签，加粗文本 \n String  htmlTxt  =   "<font color=\'red\'><b>百度一下：</b></font> " ; \n // 超链接标签 \nhtmlTxt  +=   "<a href = \'http://www.baidu.com\'>点此进入百度</a>" ; \n // 使用Html类进行格式设置 \ntv . setText ( Html . fromHtml ( htmlTxt ) ) ; \n // 需要设置此方法才能生效 \ntv . setMovementMethod ( LinkMovementMethod . getInstance ( ) ) ; \n \n 效果： \n \n 对于 图片标签 的使用，需要使用  Html.ImageGetter  来进行处理。 \n 示例： \n 示例代码： \n TextView  tvImg  =   findViewById ( R . id . tv_img ) ; \n String  htmlImg  =   "图片标签：<img src=\'icon_test\' />" ; \ntvImg . setText ( Html . fromHtml ( htmlImg ,   new   Html . ImageGetter ( )   { \n     @Override \n     public   Drawable   getDrawable ( String  source )   { \n         Context  context  =   getBaseContext ( ) ; \n         int  identifier  =   getResources ( ) . getIdentifier ( source , \n                                                       "drawable" , \n                                                      context . getPackageName ( ) ) ; \n         Drawable  drawable  =  context . getResources ( ) . getDrawable ( identifier ) ; \n         // 注意：如果不设置边界，无法显示 \n        drawable . setBounds ( 0 , \n                            0 , \n                           drawable . getIntrinsicWidth ( ) , \n                           drawable . getIntrinsicHeight ( ) ) ; \n         return  drawable ; \n     } \n } ,   null ) ) ; \n \n 效果： \n SpannableString富文本 \n SpannableString  可以实现文字的背景，颜色，删除线，下划线等等富文本功能。 \n 常用的Api有： \n \n BackgroundColorSpan ：背景色 \n ClickableSpan ：文本可点击，有点击事件 \n ForegroundColorSpan ：文本颜色（前景色） \n MaskFilterSpan ：修饰效果，如模糊(BlurMaskFilter)、浮雕(EmbossMaskFilter) \n MetricAffectingSpan ：父类，一般不用 \n RasterizerSpan ：光栅效果 \n StrikethroughSpan ：删除线（中划线） \n SuggestionSpan ：相当于占位符 \n UnderlineSpan ：下划线 \n AbsoluteSizeSpan ：绝对大小（文本字体） \n DynamicDrawableSpan ：设置图片，基于文本基线或底部对齐。 \n ImageSpan ：图片 \n RelativeSizeSpan ：相对大小（文本字体） \n ReplacementSpan ：父类，一般不用 \n ScaleXSpan ：基于x轴缩放 \n StyleSpan ：字体样式：粗体、斜体等 \n SubscriptSpan ：下标（数学公式会用到） \n SuperscriptSpan ：上标（数学公式会用到） \n TextAppearanceSpan ：文本外貌（包括字体、大小、样式和颜色） \n TypefaceSpan ：文本字体 \n URLSpan ：文本超链接 \n \n 示例： \n 示例代码： \n TextView  tv  =   findViewById ( R . id . tv_demo ) ; \n SpannableString  ss  =   new   SpannableString ( "红色字体蓝色背景电话斜体下划线删除线可点击图片" ) ; \n // 指定的flags: Spanned.SPAN_EXCLUSIVE_EXCLUSIVE \n // flags是对可以输入新文本的控件才会起作用，如果你是对TextView操作，flags用哪个都一样的 \n int  flags  =   Spanned . SPAN_EXCLUSIVE_EXCLUSIVE ; \n // 下标从0开始的话，区间：[start, end] \n // 标记文字颜色 \nss . setSpan ( new   ForegroundColorSpan ( Color . RED ) ,   0 ,   4 ,  flags ) ; \n // 标记文字背景颜色 \nss . setSpan ( new   BackgroundColorSpan ( Color . BLUE ) ,   4 ,   8 ,  flags ) ; \n // 标记超链接文本 \nss . setSpan ( new   URLSpan ( "tel:10086" ) ,   8 ,   10 ,  flags ) ; \n // 标记斜体文本 \nss . setSpan ( new   StyleSpan ( Typeface . ITALIC ) ,   10 ,   12 ,  flags ) ; \n // 标记下划线文本 \nss . setSpan ( new   UnderlineSpan ( ) ,   12 ,   15 ,  flags ) ; \n // 标记删除线文本 \nss . setSpan ( new   StrikethroughSpan ( ) ,   15 ,   18 ,  flags ) ; \n // 标记可点击的文本 \nss . setSpan ( new   ClickableSpan ( )   { \n     @Override \n     public   void   onClick ( @NonNull   View  widget )   { \n         Toast . makeText ( getBaseContext ( ) ,   "可点击文本的点击事件" ,   Toast . LENGTH_LONG ) . show ( ) ; \n     } \n } ,   18 ,   21 ,  flags ) ; \n // 标记图片替换文本 \n Drawable  drawable  =   getBaseContext ( ) . getResources ( ) . getDrawable ( R . drawable . icon_test ) ; \n // 需要设置边界，否则无法显示 \ndrawable . setBounds ( 0 , \n                    0 , \n                   drawable . getIntrinsicWidth ( ) , \n                   drawable . getIntrinsicHeight ( ) ) ; \n ImageSpan  imageSpan  =   new   ImageSpan ( drawable ,   ImageSpan . ALIGN_BASELINE ) ; \nss . setSpan ( imageSpan ,   21 ,   23 ,  flags ) ; \n // 需要设置此方法才可以使用文本中的动作 \ntv . setMovementMethod ( LinkMovementMethod . getInstance ( ) ) ; \ntv . setText ( ss ) ; \n \n 效果： \n 文本跑马灯效果示例 \n 这里简单实现一个 TextView 的跑马灯的效果。 \n 示例： \n xml布局： \n <?xml version="1.0" encoding="utf-8"?> \n < LinearLayout   xmlns: android = " http://schemas.android.com/apk/res/android " \n     android: orientation = " vertical " \n     android: layout_width = " match_parent " \n     android: layout_height = " match_parent " \n     android: gravity = " center " > \n\n     < TextView \n         android: id = " @+id/tv_demo " \n         android: layout_width = " match_parent " \n         android: layout_height = " wrap_content " \n         android: singleLine = " true " \n         android: ellipsize = " marquee " \n         android: focusable = " true " \n         android: focusableInTouchMode = " true " \n         android: marqueeRepeatLimit = " marquee_forever " \n         android: text = " 你好，世界! 你好，世界! 你好，世界! 你好，世界! 你好，世界! 你好，世界!  " \n         android: textSize = " 16sp " /> \n    \n </ LinearLayout > \n \n 提示： 实现跑马灯的效果的话，除了上面的 xml 属性设置外，还需要控件获得  focus ，在代码（java）中调用： requestFocus()  即可。 \n 效果： \n 小结 \n 到这里， TextView 控件的相关特性和常用的操作就介绍到这里了，还有未完善的地方，可以参考官方文档： TextView 。 \n'},{title:"Android 背景和介绍",frontmatter:{author:"JiangMing",title:"Android 背景和介绍",date:"2021-05-01 09:30:54",sidebar:"auto",categories:["Android"],tags:["Android 开发基础"],publish:!0,showSponsor:!0},regularPath:"/developer/android/base/",relativePath:"developer/android/base/README.md",key:"v-55c82270",path:"/developer/android/base/",headers:[{level:2,title:"Android的来源",slug:"android的来源"},{level:2,title:"重要的发展历程",slug:"重要的发展历程"},{level:2,title:"走进Android",slug:"走进android"},{level:2,title:"开发参考网站",slug:"开发参考网站"}],content:" Android （安卓）是一种基于 Linux 内核（不包含 GNU 组件）的自由及开放源代码的 操作系统 。主要使用于 移动设备 ，如 智能手机 和 平板电脑 ，由美国 Google 公司和 开放手机联盟 领导及开发。 \n Android操作系统最初由 Andy Rubin 开发，主要支持 手机 。2005年8月由Google收购注资。2007年11月，Google与84家硬件制造商、软件开发商及电信营运商组建开放手机联盟共同研发改良Android系统。随后Google以Apache开源许可证的授权方式，发布了Android的源代码。第一部Android智能手机发布于2008年10月。Android逐渐扩展到平板电脑及其他领域上，如 电视 、 数码相机 、 游戏机 、 智能手表 等。2011年第一季度，Android在全球的市场份额首次超过 塞班系统 ，跃居全球第一。 2013年的第四季度，Android平台手机的全球市场份额已经达到78.1%。2013年09月24日 谷歌 开发的操作系统Android在迎来了5岁生日，全世界采用这款系统的设备数量已经达到10亿台。 \n 时至今日，Android的覆盖范围已经非常广泛，普遍用于 移动端 、 车机 、 智能物联网 、 专业终端 等等相关领域，有着完善的 软件生态 和不错的 硬件兼容 能力。其发展的趋势和前景不容小觑，其开发者全球也是非常广泛，可玩性也比较高，也给未来智能领域带来非常高的期待~ \n Android的来源 \n Android一词的本义指“ 机器人 ”，同时也是 Google 于2007年11月5日宣布的基于 Linux 平台的 开源 手机操作系统的名称，该平台由 操作系统 、中间件、 用户界面 和 应用软件 组成。 \n Android一词最早出现于法国作家利尔亚当（Auguste Villiers de l'Isle-Adam）在1886年发表的 科幻小说 《 未来夏娃 》（ L'ève future ）中。他将外表像人的机器起名为Android。 \n Android的 Logo 是由Ascender公司设计的，诞生于2010年，其设计灵感源于男女厕所门上的图形符号，于是布洛克绘制了一个简单的机器人，它的躯干就像锡罐的形状，头上还有两根天线，Android小机器人便诞生了。其中的文字使用了Ascender公司专门制作的称之为“Droid ” 的字体。Android是一个全身绿色的机器人， 绿色 也是Android的标志。 颜色 采用了PMS 376C和RGB中 十六进制 的#A4C639来绘制，这是Android操作 系统 的 品牌 象征。有时候，它们还会使用纯文字的 Logo 。 \n 2012年7月美国科技博客网站BusinessInsider评选出二十一世纪十款最重要电子产品，Android 操作系统 和 iPhone 等榜上有名。 \n 重要的发展历程 \n \n \n 2003年10月， Andy Rubin  等人创建Android公司，并组建Android团队。 \n \n \n 2005年8月17日， Google 低调收购了 成立 仅22个月的高科技企业Android及其团队。安迪鲁宾成为Google公司工程部副总裁，继续负责Android项目。 \n \n \n 2007年11月5日，谷歌公司正式向外界展示了这款名为Android的操作系统，并且在这天谷歌宣布建立一个全球性的联盟组织，该组织由34家手机制造商、软件开发商、 电信运营商 以及芯片制造商共同组成，并与84家硬件制造商、软件开发商及电信营运商组成 开放手持设备联盟 （Open Handset Alliance）来共同研发改良Android系统，这一联盟将支持谷歌发布的手机操作系统以及应用软件，Google以Apache免费开源许可证的授权方式，发布了Android的源代码。 \n \n \n 2008年，在GoogleI/O大会上， 谷歌 提出了AndroidHAL架构图，在同年8月18号，Android获得了 美国联邦通信委员会 （ FCC ）的批准，在2008年9月，谷歌正式发布了Android 1.0系统，这也是Android系统最早的版本。 \n \n \n 2009年4月，谷歌正式推出了Android 1.5这款手机，从Android 1.5版本开始，谷歌开始将Android的版本以甜品的名字命名，Android 1.5命名为Cupcake（纸杯蛋糕）。该系统与Android 1.0相比有了很大的改进。 \n \n \n 2009年9月，谷歌发布了Android 1.6的正式版，并且推出了搭载Android 1.6正式版的手机HTC Hero（G3），凭借着出色的外观设计以及全新的Android  1.6操作系统，HTC Hero（G3）成为当时全球最受欢迎的手机。Android 1.6也有一个有趣的甜品名称，它被称为Donut（甜甜圈）。 \n \n \n 2010年2月，Linux内核开发者Greg Kroah-Hartman将Android的驱动程序从Linux内核“状态树”（“staging tree”）上除去，从此，Android与Linux开发主流将分道扬镳。在同年5月份，谷歌正式发布了Android 2.2操作系统。谷歌将Android 2.2操作系统命名为Froyo，翻译完名为冻酸奶。 \n \n \n 2010年10月，谷歌宣布Android系统达到了第一个里程碑，即电子市场上获得官方数字认证的Android应用数量已经达到了10万个，Android系统的应用增长非常迅速。在2010年12月，谷歌正式发布了Android 2.3操作系统Gingerbread （姜饼）。 \n \n \n 2011年1月，谷歌称每日的Android设备新用户数量达到了30万部，到2011年7月，这个数字增长到55万部，而Android系统设备的用户总数达到了1.35亿，Android系统已经成为智能手机领域占有量最高的系统。 \n \n \n 2011年8月2日，Android手机已占据全球智能机市场48%的份额，并在亚太地区市场占据统治地位，终结了Symbian（ 塞班系统 ）的霸主地位，跃居全球第一。 \n \n \n 2011年9月，Android系统的应用数目已经达到了48万，而在智能手机市场，Android系统的占有率已经达到了43%。继续在排在移动操作系统首位。谷歌将会发布全新的Android 4.0操作系统，这款系统被谷歌命名为Ice Cream Sandwich（冰激凌三明治）。 \n \n \n 2012年1月6日，谷歌Android Market已有10万开发者推出超过40万活跃的应用，大多数的应用程序为免费。Android  Market应用程序商店目录在新年首周周末突破40万基准，距离突破30万应用仅4个月。在2011年早些时候，Android  Market从20万增加到30万应用也花了四个月 。 \n \n \n 2013年11月1日，Android4.4正式发布，从具体功能上讲，Android4.4提供了各种实用小功能，新的Android系统更智能，添加更多的Emoji表情图案，UI的改进也更现代，如全新的HelloiOS7半透明效果。 \n \n \n 2015年，网络安全公司Zimperium研究人员警告，安卓(Android)存在“致命”安全漏洞,黑客发送一封彩信便能在用户毫不知情的情况下完全控制手机。 \n \n \n 2018年10月，谷歌表示，将于2018年12月6日停止Android系统中的Nearby Notifications（附近通知）服务，因为Android用户收到太多的附近商家推销信息的垃圾邮件。 \n \n \n 2020年3月，谷歌的Android安全公告中提到，新更新已经提供了CVE-2020-0069补丁来解决针对联发科芯片的一个严重安全漏洞  。 \n \n \n ... \n 走进Android \n 在看完上述的  Android  的概念和相关介绍后，我们知道了 Android（安卓）是一个基于 Linux 内核的操作系统，主要用于智能手机领域，但是 Android 并不局限在智能手机领域，最近几年在汽车、物联网、工业、医疗等等方面都有着很大的发展和潜力。 \n 经过这十几年的发展，Android 已经在我们的身边随处可见了，手机（华为、小米、OPPO、VIVO...）、平板电脑、广告演示、红绿灯智能辅助设备、智能小产品等等...相信未来Android也会给大家的生活带来无限精彩和乐趣，让我们一起期待吧~ \n 开发参考网站 \n \n Android Developer官网 ：  https://developer.android.google.cn/index.html  (国内域名) \n Android Developer官网 ：  https://developer.android.com/index.html  (公网域名) \n \n"},{title:"Java 线程池详解（ThreadPoolExecutor）",frontmatter:{author:"JiangMing",title:"Java 线程池详解（ThreadPoolExecutor）",date:"2021-05-24 19:28:02",sidebar:"auto",categories:["Java"],tags:["ThreadPoolExecutor","随笔"],publish:!0,showSponsor:!0},regularPath:"/developer/java/informal_essay/thread_pool_executor.html",relativePath:"developer/java/informal_essay/thread_pool_executor.md",key:"v-b348e4ca",path:"/developer/java/informal_essay/thread_pool_executor.html",headers:[{level:2,title:"1. 线程池的特点",slug:"_1-线程池的特点"},{level:2,title:"2. 创建线程池的方式",slug:"_2-创建线程池的方式"},{level:3,title:"Executors 创建线程池",slug:"executors-创建线程池"},{level:3,title:"ThreadPoolExecutor 创建线程池",slug:"threadpoolexecutor-创建线程池"},{level:2,title:"3. 线程池执行流程",slug:"_3-线程池执行流程"},{level:2,title:"4. 提交的任务对象",slug:"_4-提交的任务对象"},{level:2,title:"5. 提交任务的方式",slug:"_5-提交任务的方式"},{level:2,title:"6. 几种工作队列",slug:"_6-几种工作队列"},{level:2,title:"7. 几种拒绝策略",slug:"_7-几种拒绝策略"},{level:2,title:"8. 几种常用的线程池",slug:"_8-几种常用的线程池"},{level:3,title:"newFixedThreadPool",slug:"newfixedthreadpool"},{level:3,title:"newCachedThreadPool",slug:"newcachedthreadpool"},{level:3,title:"newSingleThreadExecutor",slug:"newsinglethreadexecutor"},{level:3,title:"newScheduledThreadPool",slug:"newscheduledthreadpool"},{level:2,title:"9. 线程池异常处理",slug:"_9-线程池异常处理"},{level:3,title:"Future 处理异常",slug:"future-处理异常"},{level:3,title:"Thread 异常处理器",slug:"thread-异常处理器"},{level:3,title:"ThreadGroup 异常处理器",slug:"threadgroup-异常处理器"},{level:3,title:"Thread 默认线程异常处理器",slug:"thread-默认线程异常处理器"},{level:2,title:"10. 线程池状态",slug:"_10-线程池状态"},{level:2,title:"11. 线程池的使用",slug:"_11-线程池的使用"},{level:3,title:"Executors 使用示例",slug:"executors-使用示例"},{level:3,title:"ThreadPoolExecutor 使用示例",slug:"threadpoolexecutor-使用示例"},{level:2,title:"总结",slug:"总结"}],content:' 什么是 线程池 ？简单理解，它就是一个用于管理 线程 的池子。掌握并发编程以及线程池是一名程序员的基本要求，相信在日常编程开发中也会经常直接或者间接的用到线程池（例如网络访问，数据处理等场景），求职面试过程中，几乎都会被问到有关于线程池的相关问题。 \n 1. 线程池的特点 \n \n 管理线程，避免增加创建线程和销毁线程的资源损耗 ，因为线程对象的创建、运行、停止、销毁都是需要资源的开销的。 \n 提高响应速度 ，相对于从线程池拿一个现有的线程去执行任务和重新去创建一条线程执行，速度肯定慢很多。 \n 可重复利用资源  ，线程任务执行完毕后，可以再放回池子等待下次使用，可以达到重复利用的效果，节省资源。 \n 2. 创建线程池的方式 \n Executors 创建线程池 \n Java 中可以使用 Executors 快捷 的创建线程池，只需要调用 Executors 中相应的便捷创建线程池的方法即可，比如 Executors.newFixedThreadPool(int nThreads) ，当然了，方便的同时，为我们埋下了潜在的各种局限性和隐患（OOM，资源耗尽等）。Executors 中创建线程池的快捷方法，实际上是调用了 ThreadPoolExecutor 的对应的构造方法（定时任务使用的是 ScheduledThreadPoolExecutor ）。 \n Executors 快速创建线程池的几种方法如下： \n \n \n \n 方法名 \n 功能 \n \n \n \n \n newFixedThreadPool(int nThreads) \n 创建固定大小的线程池 \n \n \n newSingleThreadExecutor() \n 创建只有一个线程的线程池 \n \n \n newCachedThreadPool() \n 创建一个不限线程数上限的线程池，任何提交的任务都将立即执行 \n \n \n newScheduledThreadPool() \n 创建一个线程池，该线程池可以安排任务在给定延迟后运行，或定期执行 \n \n \n \n 提示： 学习、测试、验证、小业务等场景使用  Executors  快捷方式创建线程池应该没有什么大的问题，但是在生产环境、复杂业务等场景就不建议使用了，因为便捷的使用方法所带来的很多潜在的隐患问题是无法控制的，推荐使用 ThreadPoolExecutor 的构造方法进行精确配置方法来创建线程池。 \n ThreadPoolExecutor 创建线程池 \n 线程池可以通过  ThreadPoolExecutor  构造函数来 精确 创建，一起来看一下构造函数： \n public   ThreadPoolExecutor ( int  corePoolSize , \n                               int  maximumPoolSize , \n                               long  keepAliveTime , \n                               TimeUnit  unit , \n                               BlockingQueue < Runnable >  workQueue , \n                               ThreadFactory  threadFactory , \n                               RejectedExecutionHandler  handler )   { \n        . . . \n     } \n \n 构造函数的相关参数介绍： \n \n corePoolSize：  线程池核心线程数最大值，线程池长期维持的线程数，即使线程处于Idle状态，也不会回收。 \n maximumPoolSize：  线程池最大线程数大小，线程池线程数量的上限。 \n keepAliveTime：  线程池中 非核心线程 空闲的存活时间大小，超过这个时间，多余的线程会被回收。 \n TimeUnit：  非核心线程空闲存活时间的单位。 \n BlockingQueue：  存放任务的阻塞队列。 \n ThreadFactory：  用于设置创建线程的工厂（新线程的产生方式），可以给创建的线程设置有意义的名字，可方便排查问题。 \n RejectedExecutionHandler：  线程池的饱和拒绝策略。 \n 3. 线程池执行流程 \n 线程池的工作流程介绍 \n \n If fewer than corePoolSize threads are running, the Executor always prefers adding a new thread rather than queuing. \n If corePoolSize or more threads are running, the Executor always prefers queuing a request rather than adding a new thread. \n If a request cannot be queued, a new thread is created unless this would exceed maximumPoolSize, in which case, the task will be rejected. \n \n 核心线程 -> 任务队列 -> 最大线程数 -> 拒绝策略 \n 执行流程示意图： \n 4. 提交的任务对象 \n 可以向线程池 提交的任务 有两种： Runnable 和 Callable ，二者的区别如下： \n \n 方法签名不同， void Runnable.run() ,  V Callable.call() throws Exception 。 \n 是否允许有返回值， Callable 允许有返回值。 \n 是否允许抛出异常， Callable 允许抛出异常。 \n \n \n Callable 是 JDK1.5 时加入的接口，作为 Runnable 的一种补充，允许有返回值，允许抛出异常。 \n 5. 提交任务的方式 \n \n \n \n 提交方式 \n 是否关心返回结果 \n \n \n \n \n Future  submit(Callable  task) \n 是 \n \n \n void execute(Runnable command) \n 否 \n \n \n Future<?> submit(Runnable task) \n 否，虽然返回Future，但是其get()方法总是返回null \n 6. 几种工作队列 \n \n ArrayBlockingQueue： 数组队列 ，是一个用数组实现的有界阻塞队列，按FIFO排序量。 \n LinkedBlockingQueue： 链表队列 ，基于链表结构的阻塞队列，按 FIFO 排序任务，容量可以选择进行设置，不设置的话，将是一个无边界的阻塞队列，最大长度为 Integer.MAX_VALUE，吞吐量通常要高于 ArrayBlockingQuene；newFixedThreadPool 线程池使用了这个队列。 \n DelayQueue： 延迟队列 ，是一个任务定时周期的延迟执行的队列。根据指定的执行时间从小到大排序，否则根据插入到队列的先后排序。newScheduledThreadPool线程池使用了这个队列。 \n PriorityBlockingQueue： 优先级队列 ，是具有优先级的无界阻塞队列。 \n SynchronousQueue： 同步队列 ，一个不存储元素的阻塞队列，每个插入操作必须等到另一个线程调用移除操作，否则插入操作一直处于阻塞状态，吞吐量通常要高于LinkedBlockingQuene，newCachedThreadPool 线程池使用了这个队列。 \n 7. 几种拒绝策略 \n \n \n \n 拒绝策略 \n 拒绝行为 \n \n \n \n \n AbortPolicy \n 抛出RejectedExecutionException \n \n \n DiscardPolicy \n 什么也不做，直接丢弃任务 \n \n \n DiscardOldestPolicy \n 丢弃执行队列中最老的任务，尝试为当前提交的任务腾出位置 \n \n \n CallerRunsPolicy \n 交给线程池调用所在的线程进行处理，由提交任务者执行这个任务 \n 8. 几种常用的线程池 \n newFixedThreadPool \n 固定数目线程的线程池 ， 线程池特点： \n \n 核心线程数和最大线程数大小一样 \n 没有所谓的非空闲时间，即keepAliveTime为0 \n 阻塞队列为无界队列LinkedBlockingQueue \n \n 工作机制示意图： \n newCachedThreadPool \n 可缓存线程的线程池 ， 线程池特点： \n \n 核心线程数为 0 \n 最大线程数为 Integer.MAX_VALUE \n 阻塞队列是 SynchronousQueue \n 非核心线程空闲存活时间为 60 秒 \n \n 当提交任务的速度大于处理任务的速度时，每次提交一个任务，就必然会创建一个线程。极端情况下会创建过多的线程，耗尽 CPU 和内存资源。由于空闲 60 秒的线程会被终止，长时间保持空闲的 CachedThreadPool 不会占用任何资源。 \n 工作机制示意图： \n newSingleThreadExecutor \n 单线程的线程池 ， 线程池特点： \n \n 核心线程数为1 \n 最大线程数也为1 \n 阻塞队列是LinkedBlockingQueue \n keepAliveTime为0 \n \n 工作机制示意图： \n newScheduledThreadPool \n 定时及周期执行的线程池 ， 线程池特点： \n \n 最大线程数为Integer.MAX_VALUE \n 阻塞队列是DelayedWorkQueue \n keepAliveTime为0 \n scheduleAtFixedRate() ：按某种速率周期执行 \n scheduleWithFixedDelay()：在某个延迟后执行 \n \n 工作原理与 Timer 类似，但是精确度比 Timer 高。 \n \n 简单工作原理： \n \n 添加一个任务。 \n 线程池中的线程从 DelayQueue 中取任务。 \n 线程从 DelayQueue 中获取 time 大于等于当前时间的task。 \n 执行完后修改这个 task 的 time 为下次被执行的时间。 \n 这个 task 放回DelayQueue队列中。 \n 9. 线程池异常处理 \n 在使用线程池处理任务的时候，任务代码可能抛出  Exception ，抛出异常后，我们可能无法感知任务出现了异常，因此我们需要考虑线程池异常情况。 \n Future 处理异常 \n submit() 方法提交  Callable  任务对象可以返回一个  Future  对象，submit 方法本身不会传递结果和任务执行过程中的异常，线程池的处理结果、以及处理过程中的异常都被包装到 Future 中，并在调用 Future.get() 方法时获取，执行过程中的异常会被 捕获并包装 成 ExecutionException 。 \n 示例代码： \n ExecutorService  pool  =   Executors . newFixedThreadPool ( 1 ) ; \n Future < Integer >  future  =  pool . submit ( new   Callable < Integer > ( )   { \n     @Override \n     public   Integer   call ( )   throws   Exception   { \n         throw   new   Exception ( "futureExceptionHandler test!" ) ; \n     } \n } ) ; \n\n try   { \n     Integer  result  =  future . get ( ) ; \n     System . out . println ( "--\x3e "   +  result ) ; \n }   catch   ( InterruptedException  e )   { \n    e . printStackTrace ( ) ; \n }   catch   ( ExecutionException  e )   { \n     // 捕获的线程异常处理 \n     System . out . println ( "--\x3e "   +  e . getMessage ( ) ) ; \n    e . printStackTrace ( ) ; \n } \n \n 运行结果： \n --\x3e java.lang.Exception: futureExceptionHandler test!\njava.util.concurrent.ExecutionException: java.lang.Exception: futureExceptionHandler test!\n\tat java.util.concurrent.FutureTask.report(FutureTask.java:122)\n\tat java.util.concurrent.FutureTask.get(FutureTask.java:192)\n\tat org.jm.demo.ThreadPoolFunc.futureExceptionHandler(ThreadPoolFunc.java:17)\n\tat org.jm.demo.Main.main(Main.java:5)\nCaused by: java.lang.Exception: futureExceptionHandler test!\nCaused by: java.lang.Exception: futureExceptionHandler test!\n\n\tat org.jm.demo.ThreadPoolFunc$1.call(ThreadPoolFunc.java:12)\n\tat org.jm.demo.ThreadPoolFunc$1.call(ThreadPoolFunc.java:9)\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\n\tat java.lang.Thread.run(Thread.java:748)\n Thread 异常处理器 \n 使用  Thread  对象中的  setUncaughtExceptionHandler()  方法来给当前工作的线程设置一个异常监听处理，这个只能用于未被捕获的异常，所以 不能 使用线程池的  submit  方式提交执行任务，因为submit方法自己捕获了异常并进行了处理，可以使用  execute  的方式来提交执行任务，进行线程异常监听捕获处理。 \n \n JDK5 之后允许我们在每一个Thread对象上添加一个异常处理器  UncaughtExceptionHandler  。 Thread.UncaughtExceptionHandler.uncaughtException() 方法会在线程因 未捕获的异常 而面临死亡时被调用。 \n \n 示例代码： \n ExecutorService  pool  =   Executors . newFixedThreadPool ( 1 ,   new   ThreadFactory ( )   { \n     @Override \n     public   Thread   newThread ( Runnable  r )   { \n         Thread  thread  =   new   Thread ( r ) ; \n        thread . setUncaughtExceptionHandler ( new   Thread . UncaughtExceptionHandler ( )   { \n             @Override \n             public   void   uncaughtException ( Thread  t ,   Throwable  e )   { \n                 // 线程异常捕获处理 \n                 System . out . println ( "--\x3e "   +  e ) ; \n                e . printStackTrace ( ) ; \n             } \n         } ) ; \n         return  thread ; \n     } \n } ) ; \n\npool . execute ( new   Runnable ( )   { \n     @Override \n     public   void   run ( )   { \n         System . out . println ( "--\x3e run" ) ; \n         String  str  =   null ; \n        str . toString ( ) ; \n     } \n } ) ; \n \n 运行结果： \n --\x3e run\n--\x3e java.lang.NullPointerException\njava.lang.NullPointerException\n\tat org.jm.demo.ThreadPoolFunc$3.run(ThreadPoolFunc.java:49)\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\n\tat java.lang.Thread.run(Thread.java:748)\n ThreadGroup 异常处理器 \n 可以给线程对象设置到  ThreadGroup  中，可以分组进行不同异常场景的处理。 \n 示例代码： \n ExecutorService  pool  =   Executors . newFixedThreadPool ( 1 ,   new   ThreadFactory ( )   { \n     // 创建一个线程组，实现异常捕获方法 \n     private   ThreadGroup  mThreadGroup  =   new   ThreadGroup ( "threadGroup" )   { \n         @Override \n         public   void   uncaughtException ( Thread  t ,   Throwable  e )   { \n             // 线程组异常捕获处理 \n             System . out . println ( "--\x3e "   +  e ) ; \n            e . printStackTrace ( ) ; \n         } \n     } ; \n\n     @Override \n     public   Thread   newThread ( Runnable  r )   { \n         Thread  thread  =   new   Thread ( mThreadGroup ,  r ) ; \n         return  thread ; \n     } \n } ) ; \n\npool . execute ( new   Runnable ( )   { \n     @Override \n     public   void   run ( )   { \n         System . out . println ( "--\x3e run" ) ; \n         String  str  =   null ; \n        str . toString ( ) ; \n     } \n } ) ; \n \n 运行结果： \n --\x3e run\n--\x3e java.lang.NullPointerException\njava.lang.NullPointerException\n\tat org.jm.demo.ThreadPoolFunc$5.run(ThreadPoolFunc.java:77)\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\n\tat java.lang.Thread.run(Thread.java:748)\n Thread 默认线程异常处理器 \n Java  中可以通过  Thread.setDefaultUncaughtExceptionHandler()  静态方法设置一个默认的线程异常捕获监听处理。当线程出现异常时，如果我们 没有指定线程的异常处理器 ，而且 线程组也没有设置异常处理器 ，那么就会使用默认的线程异常处理器。 \n 示例代码： \n // 设置默认线程异常处理 \n Thread . setDefaultUncaughtExceptionHandler ( new   Thread . UncaughtExceptionHandler ( )   { \n     @Override \n     public   void   uncaughtException ( Thread  t ,   Throwable  e )   { \n         // 线程默认异常捕获处理 \n         System . out . println ( "--\x3e "   +  e ) ; \n        e . printStackTrace ( ) ; \n     } \n } ) ; \n ExecutorService  pool  =   Executors . newFixedThreadPool ( 1 ) ; \npool . execute ( new   Runnable ( )   { \n     @Override \n     public   void   run ( )   { \n         System . out . println ( "--\x3e run" ) ; \n         String  str  =   null ; \n        str . toString ( ) ; \n     } \n } ) ; \n \n 运行结果： \n --\x3e run\n--\x3e java.lang.NullPointerException\njava.lang.NullPointerException\n\tat org.jm.demo.ThreadPoolFunc$7.run(ThreadPoolFunc.java:97)\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\n\tat java.lang.Thread.run(Thread.java:748)\n 10. 线程池状态 \n 线程池有这 5 种状态： RUNNING ， SHUTDOWN ， STOP ， TIDYING ， TERMINATED 。 \n \n \n \n 线程状态 \n 说明 \n \n \n \n \n RUNNING \n 1. 该状态的线程池会接收新任务，并处理阻塞队列中的任务。 2. 调用线程池的shutdown()方法，可以切换到SHUTDOWN状态。 3. 调用线程池的shutdownNow()方法，可以切换到STOP状态。 \n \n \n SHUTDOWN \n 1. 该状态的线程池不会接收新任务，但会处理阻塞队列中的任务。 2. 队列为空，并且线程池中执行的任务也为空,进入TIDYING状态。 \n \n \n STOP \n 1. 该状态的线程不会接收新任务，也不会处理阻塞队列中的任务，而且会中断正在运行的任务； 2. 线程池中执行的任务为空,进入TIDYING状态; \n \n \n TIDYING \n 1. 该状态表明所有的任务已经运行终止，记录的任务数量为0。 2. terminated()执行完毕，进入TERMINATED状态。 \n \n \n TERMINATED \n 该状态表示线程池彻底终止。 \n \n \n \n 状态流程示意图： \n 11. 线程池的使用 \n Executors 使用示例 \n /**\n* Executors 线程池使用示例。\n*/ \n\n // Runnable任务执行对象 \n Runnable  runnable  =   new   Runnable ( )   { \n     @Override \n     public   void   run ( )   { \n         System . out . println ( "--\x3e runnable run" ) ; \n         String  str  =   null ; \n        str . toString ( ) ; \n     } \n } ; \n\n // Callable任务执行对象 \n Callable < Integer >  callable  =   new   Callable < Integer > ( )   { \n     @Override \n     public   Integer   call ( )   throws   Exception   { \n         System . out . println ( "--\x3e callable call" ) ; \n         return   1 ; \n     } \n } ; \n\n // 1. newFixedThreadPool \n ExecutorService  pool1  =   Executors . newFixedThreadPool ( 1 ,   new   ThreadFactory ( )   { \n     @Override \n     public   Thread   newThread ( Runnable  r )   { \n         return   new   Thread ( r ) ; \n     } \n } ) ; \n\n // 2. newCachedThreadPool \n ExecutorService  pool2  =   Executors . newCachedThreadPool ( new   ThreadFactory ( )   { \n     @Override \n     public   Thread   newThread ( Runnable  r )   { \n         return   new   Thread ( r ) ; \n     } \n } ) ; \n\n // 3. newSingleThreadExecutor \n ExecutorService  pool3  =   Executors . newSingleThreadExecutor ( new   ThreadFactory ( )   { \n     @Override \n     public   Thread   newThread ( Runnable  r )   { \n         return   new   Thread ( r ) ; \n     } \n } ) ; \n\n /**\n* 线程池任务执行使用示例。\n*/ \n // 通过execute执行任务 \npool1 . execute ( runnable ) ; \n // 通过submit执行runnable任务 \n Future < ? >  submit1  =  pool1 . submit ( runnable ) ; \n // 通过submit执行callable任务 \n Future < Integer >  submit2  =  pool1 . submit ( callable ) ; \n // 通过submit执行runnable任务，执行成功后会通过Future返回resultObject \n int  resultObject  =   100 ; \n Future < Integer >  submit3  =  pool1 . submit ( runnable ,  resultObject ) ; \n try   { \n     // get()方法总是返回null \n     Integer  result1  =  submit2 . get ( ) ; \n     System . out . println ( "--\x3e result1 = "   +  result1 ) ; \n\n     // 正常成功执行完毕情况，返回callable中的call()的返回值 \n     Integer  result2  =  submit2 . get ( ) ; \n     System . out . println ( "---\x3e result2 = "   +  result2 ) ; \n\n     // 正常成功执行完毕情况，返回调用时传入的resultObject \n     Integer  result3  =  submit3 . get ( ) ; \n     System . out . println ( "---\x3e result3 = "   +  result3 ) ; \n }   catch   ( InterruptedException  e )   { \n    e . printStackTrace ( ) ; \n }   catch   ( ExecutionException  e )   { \n    e . printStackTrace ( ) ; \n }   catch   ( Exception  e )   { \n    e . printStackTrace ( ) ; \n } \n\n // 4. newScheduledThreadPool \n ScheduledExecutorService  pool4  =   Executors . newScheduledThreadPool ( 1 ,   new   ThreadFactory ( )   { \n     @Override \n     public   Thread   newThread ( Runnable  r )   { \n         return   new   Thread ( r ) ; \n     } \n } ) ; \n\n /**\n* 线程池计划任务基本示例。\n*/ \n // 在指定延迟时间后执行runnable任务 \n ScheduledFuture < ? >  schedule1  =  pool4 . schedule ( runnable ,   1 ,   TimeUnit . SECONDS ) ; \n\n // 在指定延迟时间后执行callable任务 \n ScheduledFuture < Integer >  schedule2  =  pool4 . schedule ( callable ,   1 ,   TimeUnit . SECONDS ) ; \n\n // 固定速率周期执行runnable任务 \n ScheduledFuture < ? >  schedule3  =  pool4 . scheduleAtFixedRate ( runnable ,   0 ,   3 ,   TimeUnit . SECONDS ) ; \n\n // 指定延迟后执行runnable任务 \n ScheduledFuture < ? >  scheduled4  =  pool4 . scheduleWithFixedDelay ( runnable ,   1 ,   3 ,   TimeUnit . SECONDS ) ; \n ThreadPoolExecutor 使用示例 \n /**\n* ThreadPoolExecutor 线程池使用示例。\n*/ \n\n // Runnable任务执行对象 \n Runnable  runnable  =   new   Runnable ( )   { \n     @Override \n     public   void   run ( )   { \n         System . out . println ( "--\x3e runnable run" ) ; \n         String  str  =   null ; \n        str . toString ( ) ; \n     } \n } ; \n\n // Callable任务执行对象 \n Callable < Integer >  callable  =   new   Callable < Integer > ( )   { \n     @Override \n     public   Integer   call ( )   throws   Exception   { \n         System . out . println ( "--\x3e callable call" ) ; \n         return   1 ; \n     } \n } ; \n\n ThreadPoolExecutor  poolExecutor  =   new   ThreadPoolExecutor ( \n     3 ,    // 指定核心线程数为3 \n     10 ,   // 指定线程池最大线程数为10 \n     10 ,   // 指定非核心线程存活时间数值为10 \n     TimeUnit . SECONDS ,     // 非核心线程存活时间的单位为秒 \n     new   LinkedBlockingQueue < > ( 10 ) ,   // 指定阻塞队列为链表队列，也可以自定义实现 \n     new   ThreadFactory ( )   {     // 自定义线程创建工厂对象，也可以使用默认的Executors.defaultThreadFactory()工厂对象 \n         @Override \n         public   Thread   newThread ( Runnable  r )   { \n             return   new   Thread ( r ) ; \n         } \n     } , \n     new   RejectedExecutionHandler ( )   {      // 自定义拒绝策略，也可以使用默认的几种拒绝策略 \n         @Override \n         public   void   rejectedExecution ( Runnable  r ,   ThreadPoolExecutor  executor )   { \n             // 自定义拒绝策略，丢弃任务，打印线程池饱和信息 \n             System . out . println ( "pool is full!" ) ; \n         } \n     } \n ) ; \n\n // 通过execute执行任务 \npoolExecutor . execute ( runnable ) ; \n // 通过submit执行runnable任务 \n Future < ? >  submit1  =  poolExecutor . submit ( runnable ) ; \n // 通过submit执行callable任务 \n Future < Integer >  submit2  =  poolExecutor . submit ( callable ) ; \n // 通过submit执行runnable任务，执行成功后会通过Future返回resultObject \n int  resultObject  =   100 ; \n Future < Integer >  submit3  =  poolExecutor . submit ( runnable ,  resultObject ) ; \n\n try   { \n     // get()方法总是返回null \n     Integer  result1  =  submit2 . get ( ) ; \n     System . out . println ( "--\x3e result1 = "   +  result1 ) ; \n\n     // 正常成功执行完毕情况，返回callable中的call()的返回值 \n     Integer  result2  =  submit2 . get ( ) ; \n     System . out . println ( "---\x3e result2 = "   +  result2 ) ; \n\n     // 正常成功执行完毕情况，返回调用时传入的resultObject \n     Integer  result3  =  submit3 . get ( ) ; \n     System . out . println ( "---\x3e result3 = "   +  result3 ) ; \n }   catch   ( InterruptedException  e )   { \n    e . printStackTrace ( ) ; \n }   catch   ( ExecutionException  e )   { \n    e . printStackTrace ( ) ; \n }   catch   ( Exception  e )   { \n    e . printStackTrace ( ) ; \n } \n 总结 \n ThreadPoolExecutor 通过几个核心的参数来定义不同类型的线程池，适用于不同的使用场景，其中在任务提交时，会依次判断 corePoolSize， workQueque， 及 maximumPoolSize，不同的状态不同的处理。在复杂庞大的业务处理场景中线程池会 提高执行效率 ， 减少资源的消耗 ， 可重复利用资源 等等优点。 \n'},{title:"JavaSocket系列-TCP链接",frontmatter:{author:"JiangMing",title:"JavaSocket系列-TCP链接",date:"2021-04-24 12:05:19",sidebar:"auto",categories:["Java","JavaSocket"],tags:["JavaSocket"],publish:!0,showSponsor:!0},regularPath:"/developer/javasocket/01.tcp.html",relativePath:"developer/javasocket/01.tcp.md",key:"v-10f6d00a",path:"/developer/javasocket/01.tcp.html",headers:[{level:2,title:"简单介绍",slug:"简单介绍"},{level:2,title:"实现流程",slug:"实现流程"},{level:2,title:"创建服务端代码",slug:"创建服务端代码"},{level:2,title:"创建客户端代码",slug:"创建客户端代码"},{level:2,title:"使用示例",slug:"使用示例"},{level:2,title:"运行示例",slug:"运行示例"}],content:' 简单介绍 \n 基于  TCP/IP协议  的  Java 方式的Socket实现，它是  流套接字 (SOCK_STREAM)  的一种传输类型，是  面向连接  的服务类型。通过 Socket 数据流的方式进行通信和交互，特点是稳定性链接和长链接，适合重要数据、长时间持续通信、安全交互等等场景。 \n 其实 socket 在我们日常使用的许多互联网软件中是很常见的，用于需要稳定和长时间的连接进行相关交互的场景，接下来开始我们的 JavaSocket TCP 的相关实战吧~ \n 实现流程 \n \n 服务端创建一个指定端口的  ServerSocket ； \n 开启服务端Socket的监听，等待客户端的链接后接受并处理客户端请求； \n 创建一个客户端  SocketClient ，链接到指定 IP和端口 的  ServerSocket ； \n 客户端链接完成后，发送请求给服务端并接受服务端的响应产生交互行为。 \n 在服务完成指定的任务后，需要关闭客户端和服务端之间的连接，服务端也可以根据需要是否需要继续监听连接请求，决定是否关闭服务程序。 \n 创建服务端代码 \n public   class   SocketServer   { \n     private   static   final   String  TAG  =   ServerSocket . class . getSimpleName ( ) ; \n     private   int  port ; \n     private   boolean  receive  =   true ; \n     private   ServerSocket  serverSocket ; \n\n     /**\n     * 创建一个指定port的SocketServer对象.\n     *\n     * @param port 绑定指定的port.\n     */ \n     public   SocketServer ( int  port )   { \n         this . port  =  port ; \n     } \n\n     /**\n     * 创建SocketServer，并绑定指定的port，接收客户端的访问.\n     *\n     * @throws IOException\n     */ \n     public   synchronized   void   run ( )   throws   IOException   { \n        serverSocket  =   new   ServerSocket ( port ) ; \n        receive  =   true ; \n         while   ( receive )   { \n             System . out . println ( TAG  +   " run: Server receiving..." ) ; \n             Socket  accept  =  serverSocket . accept ( ) ; \n             byte [ ]  buff  =   new   byte [ 1024   *   8 ] ; \n             // 连接设备的address \n             InetAddress  inetAddress  =  accept . getInetAddress ( ) ; \n             // 连接设备的port \n             int  port  =  accept . getPort ( ) ; \n             System . out . println ( TAG  +   " run: receive ==> client address = "   +  inetAddress  +   ", port = "   +  port ) ; \n             // 获取设备的输入流 \n             InputStream  inputStream  =  accept . getInputStream ( ) ; \n             // 接收数据的字符缓冲 \n             StringBuilder  sb  =   new   StringBuilder ( ) ; \n             while   ( true )   { \n                 int  len  =  inputStream . read ( buff ) ; \n                 if   ( len  ==   - 1 )   {      // 断开链接 \n                     break ; \n                 } \n                 // 将读取的字节流转换为字符对象，并append到StringBuilder中 \n                sb . append ( new   String ( buff ,   0 ,  len ,   StandardCharsets . UTF_8 ) ) ; \n                 // 将接收到的消息打印出来 \n                 System . out . println ( TAG  +   " run: receive msg = "   +  sb . toString ( ) . trim ( ) ) ; \n                 // 回复客户端消息 \n                accept . getOutputStream ( ) . write ( ( "Server msg has receive: msg = "   +  sb . toString ( ) ) . getBytes ( StandardCharsets . UTF_8 ) ) ; \n                 // 清除StringBuilder中的数据 \n                sb . delete ( 0 ,  sb . length ( ) ) ; \n             } \n             // 关闭相关流对象 \n            inputStream . close ( ) ; \n            accept . close ( ) ; \n         } \n     } \n\n     /**\n     * 关闭SocketServer.\n     *\n     * @throws IOException\n     */ \n     public   void   shutDown ( )   throws   IOException   { \n         System . out . println ( TAG  +   " shutDown:" ) ; \n         if   ( null   !=  serverSocket )   { \n            receive  =   false ; \n            serverSocket . close ( ) ; \n         } \n     } \n\n } \n 创建客户端代码 \n public   class   SocketClient   { \n     private   static   final   String  TAG  =   SocketClient . class . getSimpleName ( ) ; \n     private   Socket  socket ; \n     private   OutputStream  outputStream ; \n     private   InputStream  inputStream ; \n     private   volatile   boolean  isReceiving  =   false ; \n\n     /**\n     * 创建一个SocketClient，并且连接到指定host和port的Server.\n     *\n     * @param host 目标Server的host.\n     * @param port 目标Server的port.\n     * @throws IOException\n     */ \n     public   SocketClient ( String  host ,   int  port )   throws   IOException   { \n        socket  =   new   Socket ( host ,  port ) ; \n        outputStream  =  socket . getOutputStream ( ) ; \n        inputStream  =  socket . getInputStream ( ) ; \n     } \n\n     /**\n     * 向Server发送指定的msg数据.\n     *\n     * @param msg 发送的字符串数据.\n     * @throws IOException\n     */ \n     public   synchronized   void   sendMessage ( String  msg )   throws   IOException   { \n         if   ( null   !=  msg  &&  msg . length ( )   >   0   &&   null   !=  outputStream )   { \n            outputStream . write ( msg . getBytes ( StandardCharsets . UTF_8 ) ) ; \n            outputStream . flush ( ) ; \n             System . out . println ( TAG  +   " sendMessage: msg is send, msg = "   +  msg ) ; \n         } \n     } \n\n     /**\n     * 断开Server的连接.\n     *\n     * @throws IOException\n     */ \n     public   synchronized   void   disConnect ( )   throws   IOException   { \n        isReceiving  =   false ; \n         if   ( null   !=  socket )   { \n             if   ( null   !=  outputStream )   { \n                outputStream . close ( ) ; \n             } \n             if   ( null   !=  inputStream )   { \n                inputStream . close ( ) ; \n             } \n            inputStream  =   null ; \n            outputStream  =   null ; \n            socket . close ( ) ; \n            socket  =   null ; \n             System . out . println ( TAG  +   " disConnect: " ) ; \n         } \n     } \n\n     /**\n     * 接收Server的消息.\n     */ \n     public   void   receiveMessage ( )   { \n         if   ( ! isReceiving )   { \n            isReceiving  =   true ; \n             new   Thread ( new   Runnable ( )   { \n                 @Override \n                 public   void   run ( )   { \n                     if   ( null   !=  inputStream )   { \n                         StringBuilder  sb  =   new   StringBuilder ( ) ; \n                         try   { \n                             while   ( true )   { \n                                 byte [ ]  buff  =   new   byte [ 1024   *   8 ] ; \n                                 int  readLen  =  inputStream . read ( buff ) ; \n                                 if   ( readLen  ==   - 1 )   {     // 断开链接 \n                                     break ; \n                                 } \n                                sb . append ( new   String ( buff ,   0 ,  readLen ,   StandardCharsets . UTF_8 ) ) ; \n                                 System . out . println ( TAG  +   " run: receiveMessage msg = "   +  sb . toString ( ) . trim ( ) ) ; \n                                sb . delete ( 0 ,  sb . length ( ) ) ;    // 一条消息读取结束，清除缓存 \n                             } \n                         }   catch   ( Exception  e )   { \n                            isReceiving  =   false ; \n                             System . out . println ( TAG  +   " receiveMessage finish" ) ; \n                         } \n                     } \n                 } \n             } ) . start ( ) ; \n         }   else   { \n             System . out . println ( TAG  +   " receiveMessage: SocketClient has receiving..." ) ; \n         } \n     } \n } \n 使用示例 \n /**\n* Java Tcp Socket Demo.\n*\n* @throws IOException\n*/ \n public   static   void   javaTcpSocketDemo ( )   throws   Exception   { \n     // 启动一个JavaServerServer，绑定一个端口号，并监听客户端的链接 \n     SocketServer  socketServer  =   new   SocketServer ( 9999 ) ; \n     new   Thread ( new   Runnable ( )   { \n         @Override \n         public   void   run ( )   { \n             try   { \n                 // 开启Server \n                socketServer . run ( ) ; \n             }   catch   ( IOException  e )   { \n                e . printStackTrace ( ) ; \n             } \n         } \n     } ) . start ( ) ; \n\n     Thread . sleep ( 500 ) ;   // 多线程延迟，防止异步创建对象不同步问题 \n     // 本处ip是本地host，也可以是局域网下Server设备的实际ip \n     SocketClient  client  =   new   SocketClient ( "127.0.0.1" ,   9999 ) ; \n    client . receiveMessage ( ) ;   // 客户端接收回复消息 \n\n     // 接收输入的数据发送给Server \n     Scanner  scanner  =   new   Scanner ( System . in ) ; \n     while   ( true )   { \n         Thread . sleep ( 500 ) ;   // 数据输入发送间隔设置为500ms \n         System . out . println ( "\\n==> [Client --\x3e Server]请输入发送的消息(输入quit退出):" ) ; \n         String  s  =  scanner . nextLine ( ) ; \n         if   ( "quit" . equals ( s ) )   { \n            client . disConnect ( ) ; \n            socketServer . shutDown ( ) ; \n             break ; \n         } \n         // 发送输入的字符串数据 \n        client . sendMessage ( s ) ; \n     } \n     System . out . println ( "------------------------- javaTcpSocketDemo finished -------------------------" ) ; \n } \n 运行示例 \n 运行程序后， SocketClient  通过控制台的输入的数据向  ServerSocket  发送了数据，服务端收到消息后反馈给客户端一个已经接收消息的反馈消息，最后客户端执行断开链接，当前的链接结束。 \n ServerSocket run: Server receiving .. .\nServerSocket run: receive  == >  client address  =  /127.0.0.1, port  =   41710 \n\n == >   [ Client -- >  Server ] 请输入发送的消息 ( 输入quit退出 ) :\nHello JavaSocket, I am JiangMing.\nSocketClient sendMessage: msg is send, msg  =  Hello JavaSocket, I am JiangMing.\nServerSocket run: receive msg  =  Hello JavaSocket, I am JiangMing.\nSocketClient run: receiveMessage msg  =  Server msg has receive: msg  =  Hello JavaSocket, I am JiangMing.\n\n == >   [ Client -- >  Server ] 请输入发送的消息 ( 输入quit退出 ) :\nquit\nSocketClient disConnect: \nServerSocket shutDown:\nSocketClient receiveMessage finish\n \n 可以看到，程序已经成功的运行起来，Socket客户端（SocketClient）与服务端（ServerSocket）已经运行并产生了数据的交互了，好了 简单的JavaSocket的TCP链接 的使用介绍就到此结束了，有兴趣的朋友可以去参考相关资料，进行更深一步的研究~ \n'},{title:"JavaSocket系列-UDP链接",frontmatter:{author:"JiangMing",title:"JavaSocket系列-UDP链接",date:"2021-04-26 17:07:30",sidebar:"auto",categories:["Java","JavaSocket"],tags:["JavaSocket"],publish:!0,showSponsor:!0},regularPath:"/developer/javasocket/02.udp.html",relativePath:"developer/javasocket/02.udp.md",key:"v-3f89301b",path:"/developer/javasocket/02.udp.html",headers:[{level:2,title:"简单介绍",slug:"简单介绍"},{level:2,title:"UDP传输类型",slug:"udp传输类型"},{level:2,title:"实现流程",slug:"实现流程"},{level:2,title:"创建服务端代码",slug:"创建服务端代码"},{level:3,title:"单播服务端代码",slug:"单播服务端代码"},{level:3,title:"组播和广播服务端代码",slug:"组播和广播服务端代码"},{level:2,title:"创建客户端代码",slug:"创建客户端代码"},{level:3,title:"单播客户端代码",slug:"单播客户端代码"},{level:3,title:"组播和广播客户端代码",slug:"组播和广播客户端代码"},{level:2,title:"网卡的接口相关工具类代码",slug:"网卡的接口相关工具类代码"},{level:2,title:"使用示例",slug:"使用示例"},{level:2,title:"运行示例",slug:"运行示例"}],content:' 简单介绍 \n 基于  UDP协议  的  Java 方式Socket的实现，它是  数据报套接字 (SOCK_DGRAM)  的一种传输类型，是  面向无连接  的服务类型。在选择UDP作为传输协议时必须要谨慎，在网络质量令人十分不满意的环境下，UDP协议数据包丢失会比较严重。 \n 相关参考 UDP 是User Datagram Protocol的简称， 中文名是用户数据报协议，是OSI（Open System Interconnection，开放式系统互联） 参考模型中一种无连接的传输层协议，提供面向事务的简单不可靠信息传送服务，IETF RFC 768 是UDP的正式规范。UDP在IP报文的协议号是17。 \n 由于UDP的特性：它不属于连接型协议，因而具有资源消耗小，处理速度快的优点，所以通常音频、视频和普通数据在传送时使用UDP较多，因为它们即使偶尔丢失一两个数据包，也不会对接收结果产生太大影响。比如我们聊天用的ICQ和 QQ 就是使用的UDP协议。 \n 接下来一起来开始 JavaSocket UDP 的相关实战吧~ \n UDP传输类型 \n UDP是通过数据报的方式来进行通信的，但是在发送和结束的有一下几种分类： \n \n 单播（点对点） \n 组播（一对多） \n 广播（全员广播，可以理解是一种特殊的组播） \n \n 需要注意 组播 和 广播 的方式只能用于局域网通信，并受限于以下的各种条件: \n \n 部分路由器或者网络设备可能有所限制，无法完成此项功能； \n 部分机器可能安装了虚拟机，可能需要关闭虚拟网卡后才可以正常使用； \n 部分系统可能有防火墙原因，广播可能发送或者接收异常，请关闭防护墙后试试； \n 其他情况的网络限制原因... \n 实现流程 \n \n \n 创建一个UDPServer，监听指定端口的UDP数据； \n \n \n 创建一个UDPClient，发送不同UDP类型的数据； \n \n \n 服务端接受到数据处理（可以反馈客户端），服务端同样可以接受服务反馈的消息进行相应处理； \n \n \n 在数据交互结束后根据需要可以分别关闭相应的服务端或者客户端程序。 \n 创建服务端代码 \n 提示 由于广播是组播的一种特殊的实现，所以广播和组播的服务端公用一份代码实例。 \n \n 组播是有特定的类型的IP的 \n 广播可以是局域网全局广播或者指定网段广播，取决于当前网络环境的特定的广播地址 \n 单播服务端代码 \n public   class   UdpSocketServer   { \n     private   static   final   String  TAG  =   UdpSocketServer . class . getSimpleName ( ) ; \n     private   DatagramSocket  mDatagramSocket ; \n     private   int  mPort ; \n     private   volatile   boolean  isShutDown  =   true ; \n     private   volatile   boolean  isRunning  =   false ; \n     /**\n     * 创建一个UdpSocketServer对象，用于接收UDP客户端发送的消息.\n     *\n     * @param port 接收数据的端口号.\n     * @throws Exception\n     */ \n     public   UdpSocketServer ( int  port )   throws   Exception   { \n        mPort  =  port ; \n        mDatagramSocket  =   new   DatagramSocket ( mPort ) ; \n        mDatagramSocket . setBroadcast ( true ) ;   // 部分操作系统可能需要申请广播才可以使用 \n        isShutDown  =   false ; \n     } \n\n     /**\n     * 开始启动数据接收监听以及回复数据.\n     */ \n     public   void   run ( )   { \n         if   ( ! isRunning )   { \n             try   { \n                 while   ( ! isShutDown )   { \n                     byte [ ]  buff  =   new   byte [ 1024   *   8 ] ; \n                     DatagramPacket  dp  =   new   DatagramPacket ( buff ,  buff . length ) ; \n                     System . out . println ( TAG  +   " run: Server receiving..." ) ; \n                    mDatagramSocket . receive ( dp ) ; \n                     String  data  =   new   String ( dp . getData ( ) ,   StandardCharsets . UTF_8 ) . trim ( ) ; \n                     System . out . println ( TAG  +   " run: server receiveMessage,  remoteAddress = "   +  dp . getAddress ( ) \n                             +   ", port = "   +  dp . getPort ( )   +   ", data = "   +  data ) ; \n\n                     String  repose  =   "[Server]: Client Msg is Received" ; \n                     byte [ ]  repBuf  =  repose . getBytes ( ) ; \n                    dp . setData ( repBuf ) ; \n                    mDatagramSocket . send ( dp ) ; \n                     System . out . println ( TAG  +   " run:  Server has replied to the Message!" ) ; \n                 } \n             }   catch   ( Exception  e )   { \n                isRunning  =   false ; \n                 System . out . println ( TAG  +   " run: exception = "   +  e . getMessage ( ) ) ; \n             } \n         }   else   { \n             System . out . println ( TAG  + " run: UdpSocketServer has running..." ) ; \n         } \n     } \n\n     /**\n     * 关闭Socket链接，如果还在执行接收或者发送的情况，可能会在相应位置出现异常，忽略即可.\n     */ \n     public   void   shutDown ( )   { \n        isRunning  =   false ; \n        isShutDown  =   true ; \n         try   { \n            mDatagramSocket . close ( ) ; \n         }   catch   ( Exception  e )   { \n             System . out . println ( TAG  +   " shutDown" ) ; \n         } \n         System . out . println ( TAG  +   " shutDown" ) ; \n     } \n\n } \n 组播和广播服务端代码 \n /**\n * 关于组播地址的分类参考：\n * <p>224.0.0.0～224.0.0.255为预留的组播地址（永久组地址），地址224.0.0.0保留不做分配，其它地址供路由协议使用；\n * <p>224.0.1.0～224.0.1.255是公用组播地址，可以用于Internet；\n * <p>224.0.2.0～238.255.255.255为用户可用的组播地址（临时组地址）；\n * <p>239.0.0.0～239.255.255.255为本地管理组播地址，仅在特定的本地范围内有效。\n */ \n public   class   UdpMulticastSocketServer   { \n     private   static   final   String  TAG  =   UdpMulticastSocketServer . class . getSimpleName ( ) ; \n     private   MulticastSocket  mMultiSocket ; \n     private   InetAddress  mMultiGroupInetAddress ; \n     private   int  mPort ; \n     private   volatile   boolean  isShutDown  =   true ; \n     private   volatile   boolean  isRunning  =   false ; \n\n     /**\n     * 创建一个UdpMultiSocketServer对象，可以绑定到指定的组播地址以及端口上，监听并回复消息.\n     *\n     * @param groupAddress 多播的地址.\n     * @param port         多播的端口号.\n     * @throws Exception\n     */ \n     public   UdpMulticastSocketServer ( NetworkInterface  networkInterface , \n                                     InetAddress  groupAddress ,   int  port )   throws   Exception   { \n        mMultiGroupInetAddress  =  groupAddress ; \n        mPort  =  port ; \n        mMultiSocket  =   new   MulticastSocket ( mPort ) ; \n        mMultiSocket . setNetworkInterface ( networkInterface ) ;   // 设置指定的网卡设备 \n        mMultiSocket . joinGroup ( mMultiGroupInetAddress ) ;   // 加入到指定的多播地址上 \n        isShutDown  =   false ; \n     } \n\n     /**\n     * 开始运行并接收多播地址和端口的消息.\n     */ \n     public   void   run ( )   { \n         if   ( ! isRunning )   { \n            isRunning  =   true ; \n             try   { \n                 while   ( ! isShutDown )   { \n                     byte [ ]  buff  =   new   byte [ 1024 ] ; \n                     DatagramPacket  dp  =   new   DatagramPacket ( buff ,  buff . length ) ; \n                     System . out . println ( TAG  +   " run: Server receiving..." ) ; \n                    mMultiSocket . receive ( dp ) ; \n                     // 处理接收到的消息 \n                     String  remoteAddress  =  dp . getAddress ( ) . getHostAddress ( ) ; \n                     int  port  =  dp . getPort ( ) ; \n                     String  data  =   new   String ( dp . getData ( ) ,   CharsetUtil . UTF_8 ) . trim ( ) ; \n                     System . out . println ( TAG  +   " run: server receiveMessage, remoteAddress = "   +  remoteAddress\n                             +   ", port = "   +  port\n                             +   ", data = "   +  data ) ; \n\n                     // 回复Client消息 \n                     String  repose  =   "[Server]: Client Msg is Received" ; \n                    dp . setData ( repose . getBytes ( CharsetUtil . UTF_8 ) ) ; \n                    mMultiSocket . send ( dp ) ; \n                 } \n             }   catch   ( Exception  e )   { \n                isRunning  =   false ; \n                 System . out . println ( TAG  +   " run: exception = "   +  e . getMessage ( ) ) ; \n             } \n         }   else   { \n             System . out . println ( TAG  +   " run: UdpMulticastSocketServer has running..." ) ; \n         } \n     } \n\n     /**\n     * 关闭Socket链接，如果还在执行接收或者发送的情况，可能会在相应位置出现异常，忽略即可.\n     */ \n     public   void   shutDown ( )   { \n        isRunning  =   false ; \n        isShutDown  =   true ; \n         try   { \n            mMultiSocket . close ( ) ; \n         }   catch   ( Exception  e )   { \n             System . out . println ( TAG  +   " shutDown" ) ; \n         } \n         System . out . println ( TAG  +   " shutDown" ) ; \n     } \n } \n 创建客户端代码 \n 由于广播是组播的一种特殊的实现，所以广播和组播的客户端也公用一份代码实例。 \n 单播客户端代码 \n public   class   UdpSocketClient   { \n     private   static   final   String  TAG  =   UdpSocketClient . class . getSimpleName ( ) ; \n     private   DatagramSocket  mDatagramSocket ; \n     private   DatagramPacket  mDatagramPacket ; \n     private   byte [ ]  buff  =   new   byte [ 1024   *   8 ] ; \n     private   InetAddress  mAddress ; \n     private   int  mPort ; \n     private   volatile   boolean  isShutDown  =   true ; \n     private   volatile   boolean  isReceiving  =   false ; \n\n     /**\n     * 创建UdpSocketClient对象.\n     *\n     * @param address 发送数据的服务的InetAddress.\n     * @param port    发送数据的服务的端口号.\n     * @throws Exception\n     */ \n     public   UdpSocketClient ( InetAddress  address ,   int  port )   throws   Exception   { \n        mAddress  =  address ; \n        mPort  =  port ; \n        mDatagramSocket  =   new   DatagramSocket ( ) ; \n        mDatagramPacket  =   new   DatagramPacket ( buff ,  buff . length ,  mAddress ,  mPort ) ; \n        isShutDown  =   false ;   // 标记是否关闭 \n     } \n\n     /**\n     * 发送数据给目标Server.\n     *\n     * @param msg 需要发送的字符串数据.\n     * @throws Exception\n     */ \n     public   synchronized   void   sendMessage ( String  msg )   throws   Exception   { \n         if   ( ! isShutDown  &&   null   !=  msg  &&  msg . length ( )   >   0 )   { \n            mDatagramPacket . setData ( msg . getBytes ( StandardCharsets . UTF_8 ) ) ; \n            mDatagramSocket . send ( mDatagramPacket ) ; \n             System . out . println ( TAG  +   " sendMessage: msg = "   +  msg ) ; \n         } \n     } \n\n     /**\n     * 开始接收Server回复的数据消息.\n     */ \n     public   synchronized   void   receiveData ( )   { \n         if   ( ! isReceiving )   { \n            isReceiving  =   true ; \n             new   Thread ( new   Runnable ( )   { \n                 @Override \n                 public   void   run ( )   { \n                     while   ( ! isShutDown )   { \n                         try   { \n                             byte [ ]  revBuff  =   new   byte [ 1024   *   8 ] ; \n                             DatagramPacket  revDatagramPacket  =   new   DatagramPacket ( revBuff ,  revBuff . length ) ; \n                            mDatagramSocket . receive ( revDatagramPacket ) ; \n                             String  rData  =   new   String ( revDatagramPacket . getData ( ) ,   0 , \n                                    revDatagramPacket . getLength ( ) ,   StandardCharsets . UTF_8 ) ; \n                             System . out . println ( TAG  +   " receiveData:  remoteAddress = "   +  revDatagramPacket . getAddress ( ) \n                                     +   ", port = "   +  revDatagramPacket . getPort ( )   +   ", data = "   +  rData ) ; \n                         }   catch   ( Exception  e )   { \n                            isReceiving  =   false ; \n                             System . out . println ( TAG  +   " receiveData: exception = "   +  e . getMessage ( ) ) ; \n                         } \n                     } \n                 } \n             } ) . start ( ) ; \n         }   else   { \n             System . out . println ( TAG  +   " receiveData: UdpSocketClient has receiving..." ) ; \n         } \n     } \n\n     /**\n     * 关闭Socket链接，如果还在执行接收或者发送的情况，可能会在相应位置出现异常，忽略即可.\n     */ \n     public   synchronized   void   shutDown ( )   { \n        isReceiving  =   false ; \n        isShutDown  =   true ; \n         try   { \n            mDatagramSocket . close ( ) ; \n         }   catch   ( Exception  e )   { \n             System . out . println ( TAG  +   " shutDown" ) ; \n         } \n         System . out . println ( TAG  +   " shutDown" ) ; \n     } \n\n } \n 组播和广播客户端代码 \n /**\n * 关于组播地址的分类参考：\n * <p>224.0.0.0～224.0.0.255为预留的组播地址（永久组地址），地址224.0.0.0保留不做分配，其它地址供路由协议使用；\n * <p>224.0.1.0～224.0.1.255是公用组播地址，可以用于Internet；\n * <p>224.0.2.0～238.255.255.255为用户可用的组播地址（临时组地址），全网范围内有效；\n * <p>239.0.0.0～239.255.255.255为本地管理组播地址，仅在特定的本地范围内有效。\n */ \n public   class   UdpMulticastSocketClient   { \n     private   static   final   String  TAG  =   UdpMulticastSocketClient . class . getSimpleName ( ) ; \n     private   MulticastSocket  mMultiSocket ; \n     private   InetAddress  mMultiInetAddress ; \n     private   int  mPort ; \n     private   volatile   boolean  isShutDown  =   true ; \n     private   volatile   boolean  isReceiving  =   false ; \n\n     /**\n     * 创建一个UdpMultiSocketClient对象，可以发送一个指定的多播（组播）消息，并可以接收回复消息.\n     *\n     * @param groupAddress 多播的地址.\n     * @param port         多播的端口号.\n     * @throws Exception\n     */ \n     public   UdpMulticastSocketClient ( InetAddress  groupAddress ,   int  port )   throws   Exception   { \n        mMultiInetAddress  =  groupAddress ; \n        mPort  =  port ; \n        mMultiSocket  =   new   MulticastSocket ( ) ; \n        isShutDown  =   false ; \n     } \n\n     /**\n     * 可以向指定的多播组发送一个消息，所有在指定的组地址以及端口号的设备都可以接收到.\n     *\n     * @param msg 发送的字符串消息.\n     * @throws Exception\n     */ \n     public   synchronized   void   sendMessage ( String  msg )   throws   Exception   { \n         if   ( ! isShutDown  &&   null   !=  msg  &&  msg . length ( )   >   0 )   { \n             byte [ ]  buff  =  msg . getBytes ( CharsetUtil . UTF_8 ) ; \n             DatagramPacket  dp  =   new   DatagramPacket ( buff ,  buff . length ,  mMultiInetAddress ,  mPort ) ; \n            mMultiSocket . send ( dp ) ; \n             System . out . println ( TAG  +   " sendMessage: msg = "   +  msg ) ; \n         }   else   { \n             System . out . println ( TAG  +   " sendMessage: msg is invalid!" ) ; \n         } \n     } \n\n     /**\n     * 接收回复的消息.\n     */ \n     public   synchronized   void   receiveData ( )   { \n         if   ( ! isReceiving )   { \n            isReceiving  =   true ; \n             new   Thread ( new   Runnable ( )   { \n                 @Override \n                 public   void   run ( )   { \n                     try   { \n                         while   ( ! isShutDown )   { \n                             byte [ ]  buff  =   new   byte [ 1024   *   8 ] ; \n                             DatagramPacket  dp  =   new   DatagramPacket ( buff ,  buff . length ) ; \n                            mMultiSocket . receive ( dp ) ; \n\n                             InetAddress  address  =  dp . getAddress ( ) ; \n                             int  port  =  dp . getPort ( ) ; \n                             String  data  =   new   String ( dp . getData ( ) ,   CharsetUtil . UTF_8 ) . trim ( ) ; \n                             System . out . println ( TAG  +   " receiveData: remoteAddress = "   +  address . getHostAddress ( ) \n                                     +   ", port = "   +  port\n                                     +   ", data = "   +  data ) ; \n                         } \n                     }   catch   ( Exception  e )   { \n                        isReceiving  =   false ; \n                         System . out . println ( TAG  +   " receiveData: exception = "   +  e . getMessage ( ) ) ; \n                     } \n                 } \n             } ) . start ( ) ; \n         }   else   { \n             System . out . println ( TAG  +   " receiveData: UdpMulticastSocketClient has receiving..." ) ; \n         } \n     } \n\n     /**\n     * 关闭Socket链接，如果还在执行接收或者发送的情况，可能会在相应位置出现异常，忽略即可.\n     */ \n     public   synchronized   void   shutDown ( )   { \n        isReceiving  =   false ; \n        isShutDown  =   true ; \n         try   { \n            mMultiSocket . close ( ) ; \n         }   catch   ( Exception  e )   { \n             System . out . println ( TAG  +   " shutDown" ) ; \n         } \n         System . out . println ( TAG  +   " shutDown" ) ; \n     } \n\n } \n 网卡的接口相关工具类代码 \n /**\n * 网卡相关接口（NetworkInterface）的工具操作类对象\n */ \n public   class   NetworkInterfaceUtil   { \n\n     /**\n     * 获取当前设备的所有网卡的NetworkInterface对象集合\n     *\n     * @return 设备的所有网卡的NetworkInterface对象集合\n     * @throws Exception\n     */ \n     public   static   Enumeration < NetworkInterface >   getNetworkInterfaces ( )   throws   Exception   { \n         Enumeration < NetworkInterface >  interfaces  =   NetworkInterface . getNetworkInterfaces ( ) ; \n         return  interfaces ; \n     } \n\n     /**\n     * 从当前设备中可用网卡中选择一个网卡NetworkInterface对象\n     *\n     * @return 选择的一个可用的网卡NetworkInterface对象\n     * @throws Exception\n     */ \n     public   static   NetworkInterface   choseNetworkInterface ( )   throws   Exception   { \n         Enumeration < NetworkInterface >  interfaces  =   getNetworkInterfaces ( ) ; \n         if   ( null   !=  interfaces )   { \n             List < NetworkInterface >  interfaceList  =   new   ArrayList < > ( ) ; \n             while   ( interfaces . hasMoreElements ( ) )   { \n                 NetworkInterface  networkInterface  =  interfaces . nextElement ( ) ; \n                 // 当前正在运行的网卡 \n                 if   ( networkInterface . isUp ( ) )   { \n                    interfaceList . add ( networkInterface ) ; \n                 } \n             } \n             if   ( interfaceList . size ( )   >   0 )   { \n                 // 打印每个NetworkInterface对象的相关消息 \n                 System . out . println ( "**************** NetworkInterfaces ****************" ) ; \n                 for   ( int  i  =   0 ;  i  <  interfaceList . size ( ) ;  i ++ )   { \n                     NetworkInterface  networkInterface  =  interfaceList . get ( i ) ; \n                     byte [ ]  bytes  =  networkInterface . getHardwareAddress ( ) ; \n                     StringBuffer  sb  =   new   StringBuffer ( ) ; \n                     if   ( null   !=  bytes )   { \n                         for   ( int  j  =   0 ;  j  <  bytes . length ;  j ++ )   { \n                            sb . append ( String . format ( "%02x" ,  bytes [ j ] ) ) ; \n                             if   ( j  <   ( bytes . length  -   1 ) )   { \n                                sb . append ( ":" ) ; \n                             } \n                         } \n                     } \n                     String  hardwareAddress  =  sb . toString ( ) ; \n\n                     // 获取当前interface的所有Addresses \n                     List < InterfaceAddress >  interfaceAddresses  =  networkInterface . getInterfaceAddresses ( ) ; \n\n                     System . out . println ( "["   +   ( i  +   1 )   +   "]. networkInterface: "   + \n                             "\\n\\t > name = "   +  networkInterface . getDisplayName ( ) \n                             +   ",\\n\\t > isLoopback = "   +  networkInterface . isLoopback ( ) \n                             +   ",\\n\\t > isVirtual = "   +  networkInterface . isVirtual ( ) \n                             +   ",\\n\\t > supportsMulticast = "   +  networkInterface . supportsMulticast ( ) \n                             +   ",\\n\\t > MTU = "   +  networkInterface . getMTU ( ) \n                             +   ",\\n\\t > hardwareAddress = "   +   ( hardwareAddress . length ( )   >   0   ?  hardwareAddress  :   null ) \n                             +   ",\\n\\t > interfaceAddress = "   +  interfaceAddresses ) ; \n                 } \n                 System . out . println ( "["   +   ( interfaceList . size ( )   +   1 )   +   "]. exit" ) ; \n                 System . out . println ( "***************************************************\\n" ) ; \n\n                 // 接收用户输入的功能序号选择对应的NetworkInterface或者退出 \n                 Scanner  scanner  =   new   Scanner ( System . in ) ; \n                 while   ( true )   { \n                     System . out . print ( "==> 请选择一个支持功能操作的网卡（NetworkInterface）序号：" ) ; \n                     int  num ; \n                     try   { \n                        num  =  scanner . nextInt ( ) ; \n                     }   catch   ( Exception  e )   { \n                         System . out . println ( "==> 您输入的序号错误，请重新输入!" ) ; \n                        scanner  =   new   Scanner ( System . in ) ; \n                         continue ; \n                     } \n                     if   ( num  >   0   &&  num  <=  interfaceList . size ( ) )   { \n                         // 返回选择项的NetworkInterface \n                         return  interfaceList . get ( num  -   1 ) ; \n                     }   else   if   ( num  ==   ( interfaceList . size ( )   +   1 ) )   { \n                         System . exit ( 0 ) ; \n                     }   else   { \n                         System . out . println ( "==> 您输入的序号错误，请重新输入!" ) ; \n                     } \n                 } \n             } \n         } \n         return   null ; \n     } \n\n     /**\n     * 选择一个可用的局域网全局广播方式或者指定网段广播方式的地址\n     *\n     * @return 返回一个可用的广播地址InetAddress对象\n     */ \n     public   static   InetAddress   choseBroadcastAddress ( )   { \n         InetAddress  broadcastAddress  =   null ; \n         Scanner  scanner  =   new   Scanner ( System . in ) ; \n         while   ( true )   { \n             System . out . println ( ) ; \n             System . out . println ( "******************* 请选择一个广播的方式 *******************" ) ; \n             System . out . println ( "[1]. 局域网全网段广播(部分网路设备不支持或者有限制)" ) ; \n             System . out . println ( "[2]. 指定网段局域网(选择一个指定网段的广播地址)" ) ; \n             System . out . println ( "[3]. Exit" ) ; \n             System . out . println ( "*********************************************************\\n" ) ; \n             System . out . print ( "==> 请选择广播的方式：" ) ; \n             int  num ; \n             try   { \n                 // 广播方式选择 \n                num  =  scanner . nextInt ( ) ; \n                 // 1. 局域网全网段广播，注意：部分路由器或者网络设备可能有所限制，无法完成广播 \n                 if   ( num  ==   1 )   { \n                    broadcastAddress  =   InetAddress . getByName ( "255.255.255.255" ) ; \n                     break ; \n                 }   else   if   ( num  ==   2 )   { \n                     // 2. 局域网指定网段广播，根据当前的设备所处的网段的广播地址 \n                     NetworkInterface  networkInterface  =   NetworkInterfaceUtil . choseNetworkInterface ( ) ; \n                     List < InterfaceAddress >  interfaceAddresses  =  networkInterface . getInterfaceAddresses ( ) ; \n                     List < InetAddress >  broadcasts  =   new   ArrayList < > ( ) ; \n                     // 3. 遍历获取当前网卡的所有可用的广播地址 \n                     if   ( interfaceAddresses . size ( )   >   0 )   { \n                         System . out . println ( "******************* 选择当前网卡的一个可用的广播 *******************" ) ; \n                         for   ( int  i  =   0 ;  i  <  interfaceAddresses . size ( ) ;  i ++ )   { \n                             InetAddress  broadcast  =  interfaceAddresses . get ( i ) . getBroadcast ( ) ; \n                             if   ( null   !=  broadcast )   { \n                                 System . out . println ( "["   +  i  +   "]. "   +  broadcast . getHostAddress ( ) ) ; \n                                broadcasts . add ( broadcast ) ; \n                             } \n                         } \n                         System . out . println ( "****************************************************************\\n" ) ; \n                     }   else   { \n                         System . out . println ( "==> 此interface broadcast 不可用，请重新选择！" ) ; \n                         continue ; \n                     } \n                     System . out . print ( "==> 请选择具体一个广播地址对象：" ) ; \n                     // 4. 选择选中NetworkInterface的指定网段广播地址 \n                    num  =  scanner . nextInt ( ) ; \n                    broadcastAddress  =  broadcasts . get ( num  -   1 ) ; \n                     break ; \n                 }   else   if   ( num  ==   3 )   { \n                     System . exit ( 0 ) ; \n                 }   else   { \n                     System . out . println ( "==> 您输入的序号错误，请重新选择!" ) ; \n                     continue ; \n                 } \n             }   catch   ( Exception  e )   { \n                 System . out . println ( "==> 您输入的序号错误，请重新选择!" ) ; \n                scanner  =   new   Scanner ( System . in ) ; \n                 continue ; \n             } \n         } \n         // 5. 返回选中的广播地址对象 \n         return  broadcastAddress ; \n     } \n\n } \n 使用示例 \n /**\n* Java Udp Socket Demo.\n*\n* @throws IOException\n*/ \n public   static   void   javaUdpSocketDemo ( )   throws   Exception   { \n     // 创建Server对象 \n     UdpSocketServer  udpSocketServer  =   new   UdpSocketServer ( 9999 ) ; \n     new   Thread ( new   Runnable ( )   { \n         @Override \n         public   void   run ( )   { \n             // 开启Server \n            udpSocketServer . run ( ) ; \n         } \n     } ) . start ( ) ; \n\n     // 本处ip是本地host，也可以是局域网下Server设备的实际ip \n     InetAddress  address  =   InetAddress . getByName ( "127.0.0.1" ) ; \n     // 创建Client对象 \n     UdpSocketClient  udpSocketClient  =   new   UdpSocketClient ( address ,   9999 ) ; \n    udpSocketClient . receiveData ( ) ;   // 客户端接收回复消息 \n\n     Thread . sleep ( 500 ) ;   // 多线程延迟，防止异步创建对象不同步问题 \n\n     // 接收输入的数据发送给Server \n     Scanner  scanner  =   new   Scanner ( System . in ) ; \n     while   ( true )   { \n         System . out . println ( "\\n==> [Client --\x3e Server]请输入发送的消息(输入quit退出):" ) ; \n         String  s  =  scanner . nextLine ( ) ; \n         if   ( "quit" . equals ( s ) )   { \n             System . out . println ( "==> javaUdpSocketDemo is quitting..." ) ; \n            udpSocketServer . shutDown ( ) ; \n            udpSocketClient . shutDown ( ) ; \n             break ; \n         } \n         // 发送输入的字符串数据 \n        udpSocketClient . sendMessage ( s ) ; \n         Thread . sleep ( 500 ) ;   // 数据输入发送间隔设置为500ms \n     } \n\n     System . out . println ( "------------------------- javaUdpSocketDemo finished -------------------------" ) ; \n } \n\n /**\n* Java Multicast Udp Socket Demo.\n* <p>\n* 注意：<br>\n* 1) 部分机器可能安装了虚拟机，可能需要关闭虚拟网卡后才可以正常使用.<br>\n* 2) 部分系统可能有防火墙原因，广播可能发送或者接收异常，请关闭防护墙后试试.<br>\n* 3) 部分路由器或者网络设备可能有所限制，无法完成此项功能.\n*\n* <p>\n* 关于组播地址的分类：<br>\n* 224.0.0.0～224.0.0.255为预留的组播地址（永久组地址），地址224.0.0.0保留不做分配，其它地址供路由协议使用；<br>\n* 224.0.1.0～224.0.1.255是公用组播地址，可以用于Internet；<br>\n* 224.0.2.0～238.255.255.255为用户可用的组播地址（临时组地址），全网范围内有效；<br>\n* 239.0.0.0～239.255.255.255为本地管理组播地址，仅在特定的本地范围内有效。<br>\n*\n* @throws Exception\n*/ \n public   static   void   javaMulticastUdpSocketDemo ( )   throws   Exception   { \n     // 检查和获取可用的网卡设备，并选择一个网卡设置 \n     NetworkInterface  networkInterface  =   NetworkInterfaceUtil . choseNetworkInterface ( ) ; \n     if   ( null   ==  networkInterface )   { \n         System . out . println ( "nettyMulticastUdpSocketDemo： 网络异常，请检查网络设备是否可用！" ) ; \n         return ; \n     } \n\n     // 指定多播的地址和端口号 \n     InetAddress  multiInetAddress  =   InetAddress . getByName ( "239.0.0.1" ) ; \n     int  port  =   9999 ; \n\n     // 创建多播Server对象 \n     UdpMulticastSocketServer  multiSocketServer  =   new   UdpMulticastSocketServer ( networkInterface , \n            multiInetAddress ,  port ) ; \n     new   Thread ( new   Runnable ( )   { \n         @Override \n         public   void   run ( )   { \n             // 开启Server \n            multiSocketServer . run ( ) ; \n         } \n     } ) . start ( ) ; \n\n     // 创建多播Client对象 \n     UdpMulticastSocketClient  multiSocketClient  =   new   UdpMulticastSocketClient ( multiInetAddress ,   9999 ) ; \n    multiSocketClient . receiveData ( ) ;      // 客户端接收回复消息 \n\n     Thread . sleep ( 500 ) ;   // 多线程延迟，防止异步创建对象不同步问题 \n\n     // 接收输入的数据发送给Server \n     Scanner  scanner  =   new   Scanner ( System . in ) ; \n     while   ( true )   { \n         System . out . println ( "\\n==> [Client --\x3e Server]请输入发送的消息(输入quit退出):" ) ; \n         String  s  =  scanner . nextLine ( ) ; \n         if   ( "quit" . equals ( s ) )   { \n             System . out . println ( "==> javaBroadcastUdpSocketDemo is quitting..." ) ; \n            multiSocketClient . shutDown ( ) ; \n            multiSocketServer . shutDown ( ) ; \n             break ; \n         } \n         // 发送输入的字符串数据 \n        multiSocketClient . sendMessage ( s ) ; \n         Thread . sleep ( 500 ) ;   // 数据输入发送间隔设置为500ms \n     } \n } \n\n /**\n* Java Broadcast Udp Socket Demo.\n* <p>\n* 注意：<br>\n* 1) 部分机器可能安装了虚拟机，可能需要关闭虚拟网卡后才可以正常使用.<br>\n* 2) 部分系统可能有防火墙原因，广播可能发送或者接收异常，请关闭防护墙后试试.\n* 3) 部分路由器或者网络设备可能有所限制，无法完成此项功能.\n*\n* @throws Exception\n*/ \n public   static   void   javaBroadcastUdpSocketDemo ( )   throws   Exception   { \n     // 创建Server对象 \n     UdpSocketServer  udpBroadcastSocketServer  =   new   UdpSocketServer ( 9999 ) ; \n     new   Thread ( new   Runnable ( )   { \n         @Override \n         public   void   run ( )   { \n             // 开启Server \n            udpBroadcastSocketServer . run ( ) ; \n         } \n     } ) . start ( ) ; \n\n     Thread . sleep ( 500 ) ;   // 多线程延迟，防止异步创建对象不同步问题 \n     // 广播方式选择: 局域网全局广播或者指定网段广播 \n     InetAddress  broadcastAddress  =   NetworkInterfaceUtil . choseBroadcastAddress ( ) ; \n     System . out . println ( "==> 选择的broadcastAddress = "   +  broadcastAddress . getHostAddress ( ) ) ; \n\n     // 创建广播Client对象 \n     UdpSocketClient  udpBroadcastSocketClient  =   new   UdpSocketClient ( broadcastAddress ,   9999 ) ; \n    udpBroadcastSocketClient . receiveData ( ) ;   // 客户端接收回复消息 \n\n     Thread . sleep ( 500 ) ;   // 多线程延迟，防止异步创建对象不同步问题 \n\n     // 接收输入的数据发送给Server \n     Scanner  scanner  =   new   Scanner ( System . in ) ; \n     while   ( true )   { \n         System . out . println ( "\\n==> [Client --\x3e Server]请输入发送的消息(输入quit退出):" ) ; \n        scanner . reset ( ) ; \n         String  s  =  scanner . nextLine ( ) ; \n         if   ( "quit" . equals ( s ) )   { \n             System . out . println ( "==> javaBroadcastUdpSocketDemo is quitting..." ) ; \n            udpBroadcastSocketServer . shutDown ( ) ; \n            udpBroadcastSocketClient . shutDown ( ) ; \n             break ; \n         } \n         // 发送输入的字符串数据 \n        udpBroadcastSocketClient . sendMessage ( s ) ; \n         Thread . sleep ( 500 ) ;   // 数据输入发送间隔设置为500ms \n     } \n     Thread . sleep ( 500 ) ;   // 多线程关闭延迟 \n     System . out . println ( "------------------------- javaBroadcastUdpSocketDemo finished -------------------------" ) ; \n } \n 运行示例 \n单播示例 \nUdpSocketServer run: Server receiving .. .\n\n == >   [ Client -- >  Server ] 请输入发送的消息 ( 输入quit退出 ) :\nHello, I am JiangMing.\nUdpSocketClient sendMessage: msg  =  Hello, I am JiangMing.\nUdpSocketServer run: server receiveMessage,  remoteAddress  =  /127.0.0.1, port  =   50464 , data  =  Hello, I am JiangMing.\nUdpSocketServer run:  Server has replied to the Message ! \nUdpSocketServer run: Server receiving .. .\nUdpSocketClient receiveData:  remoteAddress  =  /127.0.0.1, port  =   9999 , data  =   [ Server ] : Client Msg is Received\n\n == >   [ Client -- >  Server ] 请输入发送的消息 ( 输入quit退出 ) :\nquit\n == >  javaUdpSocketDemo is quitting .. .\nUdpSocketServer shutDown\nUdpSocketClient shutDown\n------------------------- javaUdpSocketDemo finished -------------------------\nUdpSocketServer run: exception  =  Socket closed\nUdpSocketClient receiveData: exception  =  Socket closed\n组播示例 \n**************** NetworkInterfaces ****************\n [ 1 ] . networkInterface: \n\t  >  name  =  eno1,\n\t  >  isLoopback  =  false,\n\t  >  isVirtual  =  false,\n\t  >  supportsMulticast  =  true,\n\t  >  MTU  =   1500 ,\n\t  >  hardwareAddress  =  4c:ed:fb:cb:13:49,\n\t  >  interfaceAddress  =   [ /fe80:0:0:0:d790:aae3:d0e0:f77d%eno1/64  [ null ] , /192.168.1.106/24  [ /192.168.1.255 ] ] \n [ 2 ] . networkInterface: \n\t  >  name  =  lo,\n\t  >  isLoopback  =  true,\n\t  >  isVirtual  =  false,\n\t  >  supportsMulticast  =  false,\n\t  >  MTU  =   65536 ,\n\t  >  hardwareAddress  =  null,\n\t  >  interfaceAddress  =   [ /0:0:0:0:0:0:0:1%lo/128  [ null ] , /127.0.0.1/8  [ null ] ] \n [ 3 ] .  exit \n***************************************************\n\n == >  请选择一个支持功能操作的网卡（NetworkInterface）序号：1\nUdpMulticastSocketServer run: Server receiving .. .\n\n == >   [ Client -- >  Server ] 请输入发送的消息 ( 输入quit退出 ) :\nHello, send a multicast data.\nUdpMulticastSocketClient sendMessage: msg  =  Hello, send a multicast data.\nUdpMulticastSocketServer run: server receiveMessage, remoteAddress  =   192.168 .1.106, port  =   50273 , data  =  Hello, send a multicast data.\nUdpMulticastSocketServer run: Server receiving .. .\nUdpMulticastSocketClient receiveData: remoteAddress  =   192.168 .1.106, port  =   9999 , data  =   [ Server ] : Client Msg is Received\n\n == >   [ Client -- >  Server ] 请输入发送的消息 ( 输入quit退出 ) :\nquit\n == >  javaBroadcastUdpSocketDemo is quitting .. .\nUdpMulticastSocketClient shutDown\nUdpMulticastSocketServer shutDown\nUdpMulticastSocketClient receiveData: exception  =  Socket closed\nUdpMulticastSocketServer run: exception  =  Socket closed\n广播示例 \nUdpSocketServer run: Server receiving .. .\n\n******************* 请选择一个广播的方式 *******************\n [ 1 ] . 局域网全网段广播 ( 部分网路设备不支持或者有限制 ) \n [ 2 ] . 指定网段局域网 ( 选择一个指定网段的广播地址 ) \n [ 3 ] . Exit\n*********************************************************\n\n == >  请选择广播的方式：1\n == >  选择的broadcastAddress  =   255.255 .255.255\n\n == >   [ Client -- >  Server ] 请输入发送的消息 ( 输入quit退出 ) :\nHello, send a broadcast date.\nUdpSocketClient sendMessage: msg  =  Hello, send a broadcast date.\nUdpSocketServer run: server receiveMessage,  remoteAddress  =  /192.168.1.106, port  =   45952 , data  =  Hello, send a broadcast date.\nUdpSocketServer run:  Server has replied to the Message ! \nUdpSocketServer run: Server receiving .. .\nUdpSocketClient receiveData:  remoteAddress  =  /192.168.1.106, port  =   9999 , data  =   [ Server ] : Client Msg is Received\n\n == >   [ Client -- >  Server ] 请输入发送的消息 ( 输入quit退出 ) :\nquit\n == >  javaBroadcastUdpSocketDemo is quitting .. .\nUdpSocketServer shutDown\nUdpSocketClient shutDown\nUdpSocketServer run: exception  =  Socket closed\nUdpSocketClient receiveData: exception  =  Socket closed\n------------------------- javaBroadcastUdpSocketDemo finished -------------------------\n \n 好了，以上简单介绍了一下UDP的概念和相关的传输类型，并将不同的传输类型演示了如何使用的参考代码，到此大家就可以去实际操作一下了， JavaSocket UDP 的实现就介绍到这里了。 \n'},{title:"JavaSocket系列介绍",frontmatter:{author:"JiangMing",title:"JavaSocket系列介绍",date:"2021-04-24 11:57:05",sidebar:"auto",categories:["Java","JavaSocket"],tags:["JavaSocket"],publish:!0,showSponsor:!0},regularPath:"/developer/javasocket/",relativePath:"developer/javasocket/README.md",key:"v-d2096aa0",path:"/developer/javasocket/",headers:[{level:2,title:"简单介绍",slug:"简单介绍"},{level:2,title:"表示形式",slug:"表示形式"},{level:2,title:"主要类型",slug:"主要类型"},{level:2,title:"工作流程",slug:"工作流程"},{level:2,title:"主要特点",slug:"主要特点"}],content:" Socket  的中文描述是 套接字 ，所谓套接字，就是对网络中不同主机上的应用进程之间进行双向通信的端点的抽象。一个套接字就是网络上进程通信的一端，提供了应用层进程利用网络协议交换数据的机制。从所处的地位来讲，套接字上联应用进程，下联网络协议栈，是应用程序通过网络协议进行通信的接口，是应用程序与网络协议根进行交互的接口。 \n 实现Socket的方式有很多，不同的系统平台，不同的编程语言等都有不同的实现方式，本教程将针对  Java  语言进行一个  JavaSocket  系列的相关使用的实践教程。 \n 接下来，一起了解一下  Socket  的相关的概念和介绍吧~ \n 简单介绍 \n 套接字是通信的基石，是支持 TCP/IP协议 的路通信的基本操作单元。可以将套接字看作不同主机间的进程进行双间通信的端点，它构成了单个主机内及整个网络间的编程界面。套接字存在于通信域中，通信域是为了处理一般的线程通过套接字通信而引进的一种抽象概念。套接字通常和同一个域中的套接字交换数据(数据交换也可能穿越域的界限，但这时一定要执行某种解释程序)，各种进程使用这个相同的域互相之间用Internet协议簇来进行通信。 \n Socket(套接字)可以看成是两个网络应用程序进行通信时，各自通信连接中的端点，这是一个逻辑上的概念。它是网络环境中 进程间通信 的API(应用程序编程接口)，也是可以被命名和寻址的通信端点，使用中的每一个套接字都有其类型和一个与之相连进程。通信时其中一个网络应用程序将要传输的一段信息写入它所在主机的 Socket中，该 Socket通过与 网络接口卡 (NIC)相连的传输介质将这段信息送到另外一台主机的 Socket中，使对方能够接收到这段信息。 Socket是由IP地址和端口结合的，提供向应用层进程传送数据包的机制 。 \n 表示形式 \n 套接字 Socket=（IP地址：端口号），套接字的表示方法是点分十进制的lP地址后面写上端口号，中间用冒号或逗号隔开。每一个传输层连接唯一地被通信两端的两个端点（即两个套接字）所确定。 \n 例如：如果IP地址是192.168.1.1，端口号是22，那么得到套接字就是：192.168.1.1:22 \n 主要类型 \n 1. 流套接字 (SOCK_STREAM) \n 流套接字用于提供面向连接、可靠的数据传输服务。该服务将保证数据能够实现无差错、无重复送，并按顺序接收。流套接字之所以能够实现可靠的数据服务，原因在于其使用了 传输控制协议 ，即 TCP (The Transmission Control Protocol) 协议 。 \n 2. 数据报套接字 (SOCK_DGRAM) \n 数据报套接字提供一种无连接的服务。该服务并不能保证数据传输的可靠性,数据有可能在传输过程中丢失或出现数据重复，且无法保证顺序地接收到数据。数据报套接字使用UDP( User DatagramProtocol)协议进行数据的传输。由于数据报套接字不能保证数据传输的可靠性，对于有可能出现的数据丢失情况，需要在程序中做相应的处理。 \n 3. 原始套接字 (SOCK_RAW) \n 原始套接字与标准套接字(标准套接字指的是前面介绍的流套接字和数据报套接字)的区别在于：原始套接字可以读写内核没有处理的IP数据包，而流套接字只能读取TCP协议的数据，数据报套接字只能读取UDP协议的数据。因此，如果要访问其他协议发送的数据必须使用原始套接。 \n 工作流程 \n 要通过互联网进行通信，至少需要一对套接字，其中一个运行于客户端，我们称之为 Client Socket，另一个运行于服务器端，我们称之为 Server Socket。 \n 根据连接启动的方式以及本地套接字要连接的目标，套接字之间的连接过程可以分为三个步骤： \n 1. 服务器监听 \n 所谓服务器监听，是指服务器端套接字并不定位具体的客户端套接字，而是处于等待连接的状态，实时监控网络状态。 \n 2. 客户端请求 \n 所谓客户端请求，是指由客户端的套接字提出连接请求，要连接的目标是服务器端的套接字。为此，客户端的套接字必须首先描述它要连接的服务器的套接字，指出服务器端套接字的地址和端口号，然后就向服务器端接字提出连接请求。 \n 3. 连接确认 \n 所谓连接确认，是指当服务器端套接字监听到或者说接收到客户端套接字的连接请求，就会响应客户端套接字的请求，建立一个新的线程，并把服务器端套接字的描述发送给客户端。一旦客户端确认了此描述，连接就建立好了。而服务器端套接字继续处于监听状态，接收其他客户端套接字的连接请求 。 \n 主要特点 \n 根据套接字的不同类型，可以将套接字调用分为 面向连接服务 和 无连接服务 。 \n 面向连接服务的主要特点如下： \n (1) 数据传输过程必须经过建立连接、维护连接和释放连接3个阶段； \n (2) 在传输过程中，各分组不需要携带目的主机的地址； \n (3) 可靠性好，但由于协议复杂，通信效率不高。 \n 面向无连接服务的主要特点如下： \n (1) 不需要连接的各个阶段； \n (2) 每个分组都携带完整的目的主机地址，在系统中独立传送； \n (3) 由于没有顺序控制，所以接收方的分组可能出现乱序、重复和丢失现象； \n (4) 通信效率高，但可靠性不能确保。 \n"},{title:"1. Rxjava2详细介绍",frontmatter:{author:"JiangMing",title:"1. Rxjava2详细介绍",date:"2019-12-30 22:22:17",sidebar:"auto",categories:["Java","Rxjava2"],tags:["Rxjava2"],publish:!0,showSponsor:!0},regularPath:"/developer/rxjava2/01.rxjava2.html",relativePath:"developer/rxjava2/01.rxjava2.md",key:"v-1559a70e",path:"/developer/rxjava2/01.rxjava2.html",headers:[{level:2,title:"前言",slug:"前言"},{level:2,title:"RX介绍",slug:"rx介绍"},{level:2,title:"Rx模式",slug:"rx模式"},{level:2,title:"Rx使用依赖：",slug:"rx使用依赖"},{level:2,title:"Rxjava的入门基础",slug:"rxjava的入门基础"},{level:3,title:"1. Observable",slug:"_1-observable"},{level:3,title:"2. Flowable",slug:"_2-flowable"},{level:3,title:"3. Single",slug:"_3-single"},{level:3,title:"4. Completable",slug:"_4-completable"},{level:3,title:"5. Maybe",slug:"_5-maybe"},{level:3,title:"6. Subject",slug:"_6-subject"},{level:3,title:"7. Scheduler",slug:"_7-scheduler"},{level:2,title:"小结：",slug:"小结"}],content:' 前言 \n 现在我们可以看到越来越多的开发者都在使用 Rx 相关的技术进行 App，Java 后端等领域进行开发。在开源的社区以及互联网公司，Rx、响应式编程、函数式都是热门的存在。所以笔者将结合自身的学习以及实际使用情况，写一个针对 Rxjava2 的系列文章，一起学习和使用 Rxjava 所带来的便捷。 \n 笔者将利用工作之余，结合 ReactiveX 官方  Wiki  对 Rxjava 的定义与介绍，对相关基础知识、基本操作，常用部分的 API 进行整理，并加上个人理解和相关操作的示例。 \n 相关参考链接： \n \n 官网 \n Wiki \n GitHub \n Api-Doc \n \n 实例代码： \n \n \n 代码下载 \n Github \n Gitee（码云） \n RX介绍 \n ReactiveX的历史 \n ReactiveX  是Reactive Extensions的缩写，一般简写为Rx，最初是LINQ的一个扩展，由微软的架构师Erik Meijer领导的团队开发，在2012年11月开源，Rx是一个编程模型，目标是提供一致的编程接口，帮助开发者更方便的处理异步数据流，Rx库支持.NET、JavaScript和C++，Rx近几年越来越流行了，现在已经支持几乎全部的流行编程语言了，Rx的大部分语言库由ReactiveX这个组织负责维护，比较流行的有RxJava/RxJS/Rx.NET，社区网站是reactivex.io。 \n 什么是ReactiveX \n 微软给的定义是，Rx是一个函数库，让开发者可以利用可观察序列和LINQ风格查询操作符来编写异步和基于事件的程序，使用Rx，开发者可以用Observables表示异步数据流，用LINQ操作符查询异步数据流， 用Schedulers参数化异步数据流的并发处理，Rx可以这样定义：Rx = Observables + LINQ + Schedulers。 \n ReactiveX.io给的定义是，Rx是一个使用可观察数据流进行 异步编程 的编程接口，ReactiveX结合了 观察者模式 、 迭代器模式 和 函数式编程 的精华。 \n RxJava 到底是什么 \n RxJava 在 GitHub 主页上的自我介绍是 "a library for composing asynchronous and event-based programs using observable sequences for the Java VM"（一个在 Java VM 上使用 可观测的序列来组成异步的、基于事件的程序的库 ）。这就是 RxJava ，概括得非常精准。 \n 然而，对于初学者来说，这还是比较含蓄难懂的。因为它是一个 总结 ，而初学者更需要一个入门的介绍或者理解。其实， RxJava 的本质可以总结为 异步 的概念。说到本质上，它就是一个实现 异步操作 的库。RxJava 的异步实现，是通过一种扩展的 观察者模式 来实现的。 \n RxJava 优点 \n 同样是做 异步 ，为什么去使用它，而不用现成的 Thread，ThreadPoolExecutor，Android的AsyncTask / Handler / ... ？其实就是 简洁，易用  ! \n 异步操作很关键的一点是程序的简洁性，因为在调度过程比较复杂的情况下，异步代码经常会既难写也难被读懂。 正如Android 创造的 AsyncTask 和Handler ，其实都是为了让异步代码更加简洁。RxJava 的优势也是简洁，但它的简洁的与众不同之处在于， 随着程序逻辑变得越来越复杂，它依然能够保持简洁 。 \n 名词定义 \n \n Reactive 直译为反应性的，有活性的，根据上下文一般翻译为反应式、响应式。 \n Iterable 可迭代对象，支持以迭代器的形式遍历，许多语言中都存在这个概念。 \n Observable 可观察对象，在Rx中定义为更强大的Iterable，在观察者模式中是被观察的对象，一旦数据产生或发生变化，会通过某种方式通知观察者或订阅者。 \n Observer 观察者对象，监听Observable发射的数据并做出响应，Subscriber是它的一个特殊实现。 \n emit 直译为发射，发布，发出，含义是Observable在数据产生或变化时发送通知给Observer，调用Observer对应的方法，文章里一律译为发射。 \n items 直译为项目，条目，在Rx里是指Observable发射的数据项，文章里一律译为数据，数据项。 \n Rx模式 \n 使用观察者模式 \n \n 创建：Rx可以方便的创建事件流和数据流 \n 组合：Rx使用查询式的操作符组合和变换数据流 \n 监听：Rx可以订阅任何可观察的数据流并执行操作 \n \n 简化代码 \n \n 函数式风格：对可观察数据流使用无副作用的输入输出函数，避免了程序里错综复杂的状态 \n 简化代码：Rx的操作符通通常可以将复杂的难题简化为很少的几行代码 \n 异步错误处理：传统的try/catch没办法处理异步计算，Rx提供了合适的错误处理机制 \n 轻松使用并发：Rx的Observables和Schedulers让开发者可以摆脱底层的线程同步和各种\n并发问题 \n \n 使用Observable的优势 \n Rx扩展了观察者模式用于支持数据和事件序列，添加了一些操作符，它让你可以声明式的组合这些序列，而无需关注底层的实现：如线程、同步、线程安全、并发数据结构和非阻塞IO。 \n Observable通过使用最佳的方式访问异步数据序列填补了这个间隙。 \n \n \n \n 类型 \n 单个数据 \n 多个数据 \n \n \n \n \n 同步 \n T getData() \n Iterable <T>  getData \n \n \n 异步 \n Future <T>  getData() \n Observable <T>  getData() \n \n \n \n Rx的Observable模型让你可以像使用集合数据一样操作异步事件流，对异步事件流使用各种\n简单、可组合的操作。 \n 1. Observable可组合 \n 对于单层的异步操作来说，Java中Future对象的处理方式是非常简单有效的，但是一旦涉及到嵌套，它们就开始变得异常繁琐和复杂。使用Future很难很好的组合带条件的异步执行流程（考虑到运行时各种潜在的问题，甚至可以说是不可能的），当然，要想实现还是可以做到的，但是非常困难，或许你可以用 Future.get() ，但这样做，异步执行的优势就完全没有了。从另一方面说，Rx的bservable一开始就是为组合异步数据流准备的。 \n 2. Observable更灵活 \n Rx的Observable不仅支持处理单独的标量值（就像Future可以做的），也支持数据序列，甚至是无穷的数据流。 Observable 是一个抽象概念，适用于任何场景。Observable拥有它的近亲Iterable的全部优雅与灵活。 \n Observable是异步的双向push，Iterable是同步的单向pull，对比： \n \n \n \n 事件 \n Iterable(pull) \n Observable(push) \n \n \n \n \n 获取数据 \n T next() \n onNext(T) \n \n \n 异常处理 \n throws Exception \n onError(Exception) \n \n \n 任务完成 \n !hasNext() \n onCompleted \n \n \n \n 3. Observable无偏见 \n Rx对于对于并发性或异步性没有任何特殊的偏好，Observable可以用任何方式实现，线程池、事件循环、非阻塞IO、Actor模式，任何满足你的需求的，你擅长或偏好的方式都可以。无论你选择怎样实现它，无论底层实现是阻塞的还是非阻塞的，客户端代码将所有与Observable的交互都当做是异步的。 \n Rx使用依赖： \n 下列是笔者使用的版本（可根据实际情况进行选择）： \n \n 使用Gradle依赖： implementation "io.reactivex.rxjava2:rxjava:2.2.12" \n 使用Maven依赖或者Jar包下载 ： Rxjava 2.2.12 \n 其他版本以及相关下载 ： Maven \n Rxjava的入门基础 \n 1. Observable \n 1.1 观察者模式 \n 基本概念： Observable  (可观察者，即被观察者)、 Observer   (观察者)、  subscribe  (订阅)、 事件 。Observable 和 Observer 通过 subscribe() 方法实现订阅关系，从而 Observable 可以在需要的时候发出事件来通知 Observer（观察者观察被观察者的通知事件）。 \n 在RxJava中，一个实现了 Observer 接口的对象可以订阅 (subscribe) 一个 Observable 类的实例。订阅者(subscriber) 对 Observable 发射 (emit) 的任何数据或数据序列作出响应。这种模式 简化了并发操作，因为它不需要阻塞等待 Observable 发射数据，而是创建了一个处于待命状态的观察者哨兵，哨兵在未来某个时刻响应Observable的通知。 \n RxJava 的事件回调方法:   onSubscribe()  、 onNext()  、  onCompleted()  和  onError() 。 \n \n onSubscribe(): 当被观察者被观察者订阅的时候触发。 \n onNext(): 当被观察者发送数据的时候通过此方法通知观察者数据变换。 \n onCompleted(): 事件队列完结。RxJava 不仅把每个事件单独处理，还会把它们看做一个队列。RxJava 规定，当不会再有新的 onNext() 发出时，需要触发 onCompleted() 方法作为标志。 \n onError(): 事件队列异常。在事件处理过程中出异常时，onError() 会被触发，同时队列自动终止，不允许再有事件发出。 \n \n 注意：  在一个正确运行的事件序列中,  onCompleted() 和 onError() 有且只有一个，并且是事件序列中的最后一个。需要注意的是，onCompleted() 和 onError() 二者也是互斥的，即在队列中调用了其中一个，就不应该再调用另一个。 \n 1.2 Consumer 和 Action \n 这两个词意思分别是  消费者 （可以理解为消费被观察者发射出来的事件）和  行为 （可以理解为响应被观察者的行为）。对于 Observer 中的 4 个回调方法，我们未必都能用得到，如果只需要用到其中的一部分，就需要 Consumer 和 Action 上场了。 \n 简单示例： \n \t // 1. 进行订阅，subscribe(Observer) \n\tobservable . subscribe ( observer ) ; \n\t\t\n\t System . out . println ( "---------------------------------------------" ) ; \n\t // 2. 进行订阅，subscribe(Consumer onNext) \n\tobservable . subscribe ( nextConsumer ) ; \n\t\n\t System . out . println ( "---------------------------------------------" ) ; \n\t // 3. 进行订阅，subscribe(Consumer onNext, Consumer onError) \n\tobservable . subscribe ( nextConsumer ,  errorConsumer ) ; \n\t\t\n\t System . out . println ( "---------------------------------------------" ) ; \n\t // 4. 进行订阅，subscribe(Consumer onNext, Consumer onError, Action onCompleted) \n\tobservable . subscribe ( nextConsumer ,  errorConsumer ,  completedAction ) ; \n\t\t\n\t System . out . println ( "---------------------------------------------" ) ; \n\t // 5. 进行订阅，subscribe(Consumer onNext, Consumer onError, Action onCompleted, Consumer onSubscribe) \n\tobservable . subscribe ( nextConsumer ,  errorConsumer ,  completedAction ,  onSubscribeComsumer ) ; \n \n 1.3 Observable的分类 \n 在RxJava中，Observable 有 Hot 与 Cold 之分。 \n \n Hot Observable : 无论有没有观察者进行订阅，事件始终都会发生。当有多个观察者订阅时，Hot Observable此时与订阅者们的关系时一对多的关系，可以与多个订阅者共享信息。 \n Cold Observable : 只有有观察者订阅了，才开始执行数据流的发送，并且与观察者时一对一的关系。当有多个不同的订阅者时，消息是重新完整发送的，也就是说对于订阅者们来说，它们的事件是彼此独立的。 \n \n \n Javadoc:  Observable \n 2. Flowable \n Rxjava2.x 中有这么一个被观察者  Flowable ，同样作为被观察者，它和Observable有什么区别呢，在Rxjava2中，Observable不再支持背压，而新增的Flowable支持背压，何为 背压 ，就是 异步场景 下上游发送事件的速度大于下游处理事件的速度所产生的现象。 \n \n \n 提示：在本系列后面会有详细的单独篇章来介绍和如何使用背压。 \nJavadoc:  Flowable \n 3. Single \n Single  类似于 Observable，不同的是，它总是只发射一个值，或者一个错误通知，而不是发射一系列的值。 \n 因此，不同于Observable需要三个方法 onNext,  onError,  onCompleted，订阅Single只需要两个方法： \n \n onSuccess: Single发射单个的值到这个方法 \n onError: 如果无法发射需要的值，Single发射一个Throwable对象到这个方法 \n \n Single 只会调用这两个方法中的一个，而且只会调用一次，调用了任何一个方法之后，订阅关系终止。 \n \n 示例代码: \n \t // Single: 只发送 onSuccess or onError 通知,并且只会发送一次, 第一次发送数据后的都不会在处理 \n\t Single . create ( new   SingleOnSubscribe < String > ( )   { \n\t\n\t\t\t @Override \n\t\t\t public   void   subscribe ( SingleEmitter < String >  emitter )   throws   Exception   { \n\t\t\t\temitter . onSuccess ( "Success" ) ; \t\t\t // 发送success通知 \n\t\t\t\temitter . onSuccess ( "Success2" ) ; \t\t // 只能发送一次通知,后续不在处理 \n\t\t\t } \n\t } ) . subscribe ( new   BiConsumer < String ,   Throwable > ( )   { \n\t\n\t\t\t @Override \n\t\t\t public   void   accept ( String  t1 ,   Throwable  t2 )   throws   Exception   { \n\t\t\t\t System . out . println ( "--\x3e accept: t1 = "   +  t1  +   ",  t2 = "   +  t2 ) ; \n\t\t\t } \n\t } ) ; \n \n 输出: \n --\x3e accept: t1 = Success,  t2 = null\n \n \n 提示：Single 可以通过  toXXX   方法转换为 Observable, Flowable, Completable与Maybe。 \nJavadoc:  Single \n 4. Completable \n Completable 在创建后，不会发射任何数据, 只有  onComplete  与  onError 事件，同时没有Observable中的一些操作符，如 map，flatMap。通常与  andThen  操作符结合使用。 \n \n 示例代码： \n \t // 1. Completable：只发送complete 或 error 事件,不发送任何数据 \n\t Completable . fromAction ( new   Action ( )   { \n\n\t\t @Override \n\t\t public   void   run ( )   throws   Exception   { \n\t\t\t System . out . println ( "Hello World! This is Completable." ) ; \n\t\t } \n\t } ) . subscribe ( new   CompletableObserver ( )   { \n\n\t\t @Override \n\t\t public   void   onSubscribe ( Disposable  d )   { \n\t\t\t System . out . println ( "--\x3e onSubscribe" ) ; \n\t\t } \n\n\t\t @Override \n\t\t public   void   onError ( Throwable  e )   { \n\t\t\t System . out . println ( "--\x3e onError" ) ; \n\t\t } \n\n\t\t @Override \n\t\t public   void   onComplete ( )   { \n\t\t\t System . out . println ( "--\x3e onComplete" ) ; \n\t\t } \n\t } ) ; \n\n\t System . out . println ( "----------------------------------------------" ) ; \n\t // 2. 与 andThen 结合使用，当Completable执行完onCompleted后，执行andThen里的任务 \n\t Completable . create ( new   CompletableOnSubscribe ( )   { \n\n\t\t @Override \n\t\t public   void   subscribe ( CompletableEmitter  emitter )   throws   Exception   { \n\t\t\t Thread . sleep ( 1000 ) ; \n\t\t\t System . out . println ( "--\x3e completed" ) ; \n\t\t\temitter . onComplete ( ) ; \n\t\t } \n\t } ) . andThen ( Observable . range ( 1 ,   5 ) ) . subscribe ( new   Consumer < Integer > ( )   { \n\n\t\t @Override \n\t\t public   void   accept ( Integer  t )   throws   Exception   { \n\t\t\t System . out . println ( "--\x3e accept: "   +  t ) ; \n\t\t } \n\t } ) ; \n \n 输出： \n --\x3e onSubscribe\nHello World! This is Completable.\n--\x3e onComplete\n----------------------------------------------\n--\x3e completed\n--\x3e accept: 1\n--\x3e accept: 2\n--\x3e accept: 3\n--\x3e accept: 4\n--\x3e accept: 5\n \n \n 提示：Completable 可以通过  toXXX   方法转换为 Observable, Flowable, Single与Maybe。 \nJavadoc:  Completable \n 5. Maybe \n Maybe 是 Rxjava 2.x 以后的新类型，只能发射 0 或者 1 项数据，即使后续有多个数据，后面的数据也不会被处理。可以看做是 Single 与 Completable 结合。 \n \n 示例代码： \n \t // Maybe 只发送0个或者1个数据，后续数据将被忽略 \n\t Maybe . create ( new   MaybeOnSubscribe < String > ( )   { \n\n\t\t @Override \n\t\t public   void   subscribe ( MaybeEmitter < String >  emitter )   throws   Exception   { \n\t\t\t // 如果先发送了，将会调用MaybeObserver的onCompleted方法，如果有数据发送或者调用onError，则不会去调用 \n\t\t\t // emitter.onComplete(); \n\t\t\temitter . onSuccess ( "Hello" ) ;   // 如果发送了第一个数据后续数据将不会被处理 \n\t\t\temitter . onSuccess ( "World" ) ; \n\t\t } \n\t } ) . subscribe ( new   MaybeObserver < String > ( )   { \n\n\t\t @Override \n\t\t public   void   onSubscribe ( Disposable  d )   { \n\t\t\t System . out . println ( "--\x3e onSubscribe" ) ; \n\t\t } \n\n\t\t @Override \n\t\t public   void   onSuccess ( String  t )   { \n\t\t\t System . out . println ( "--\x3e onSuccess: "   +  t ) ; \n\t\t } \n\n\t\t @Override \n\t\t public   void   onError ( Throwable  e )   { \n\t\t\t System . out . println ( "--\x3e onError: "   +  e ) ; \n\t\t } \n\n\t\t @Override \n\t\t public   void   onComplete ( )   { \n\t\t\t System . out . println ( "--\x3e onComplete" ) ; \n\t\t } \n\t } ) ; \n \n 输出： \n --\x3e onSubscribe\n--\x3e onSuccess: Hello\n \n \n 提示：Maybe 可以通过  toXXX   方法转换为 Observable, Flowable, Single与Completable。 \nJavadoc:  Maybe \n 6. Subject \n Subject  可以看成是一个桥梁或者代理，在 RxJava 实现中，它同时充当了  Observer  和  Observable  的角色。因为它是一个Observer，它可以订阅一个或多个 Observable；又因为它是一个 Observable ，它可以转发它收到(Observe)的数据，也可以发射新的数据。 \n 它既可以是数据源observerable，也可以是数据的订阅者Observer。这个可以通过源码来了解一下。 \n public   abstract   class   Subject < T >   extends   Observable < T >   implements   Observer < T >   { \n     . . . \n } \n \n Subject 实际上还是 Observable，不过它因为实现了Observer接口，可以通过onNext、onComplete、onError方法发射和终止发射数据。 \n 注意：  不要使用 just(T) 、 from(T) 、 create(T) 来使用Subject，因为会把Subject转换为Obserable。 \n 在 Rxjava 中，官方一共为我们提供了几种Subject： \n \n AsyncSubject （仅释放接收到的最后一个数据） \n BehaviorSubject （释放订阅前最后一个数据和订阅后接收到的所有数据） \n PublishSubject （释放订阅后接收到的数据） \n ReplaySubject （释放接收到的所有数据） \n UnicastSubject (仅支持订阅一次的Subject) \n Serialized（串行化） \n TestSubject（在2.x中被TestScheduler和TestObserver替代） \n 6.1 AsyncSubject \n AsyncSubject  仅释放 onComplete() 之前的最后一个数据（必须调用subject.onComplete()才会发送数据，否则观察者不会接收到任何数据）。 \n 可以获取数据业务逻辑的最后的结果数据。 \n \n 注意：  如果因异常（Error）终止，将不会向后续的Observer释放数据，但是会向Observer传递一个异常通知。 \n 实例代码： \n \t // 注意: 不要使用just(T)、from(T)、create(T)来使用Subject，因为会把Subject转换为Obserable \n\t // 无论订阅的时候AsyncSubject是否Completed，均可以收到最后一个值的回调 \n\t AsyncSubject < String >  asyncSubject  =   AsyncSubject . create ( ) ; \n\tasyncSubject . onNext ( "emitter 1" ) ; \n\tasyncSubject . onNext ( "emitter 2" ) ; \n\tasyncSubject . onNext ( "emitter 3" ) ; \n\tasyncSubject . onNext ( "emitter 4" ) ; \n\tasyncSubject . onNext ( "emitter 5" ) ;   // 此时订阅后将近发送此项数据 \n\t // asyncSubject.onNext(1/0 + ""); // 发生error时将不会有数据发射，仅发送error通知 \n\tasyncSubject . onComplete ( ) ; \n\n\t // 订阅后只会接收最后一个数据 \n\tasyncSubject . subscribe ( new   Observer < String > ( )   { \n\n\t\t @Override \n\t\t public   void   onSubscribe ( Disposable  d )   { \n\t\t\t System . out . println ( "--\x3e onSubscribe" ) ; \n\t\t } \n\n\t\t @Override \n\t\t public   void   onNext ( String  t )   { \n\t\t\t System . out . println ( "--\x3e onNext = "   +  t ) ; \n\t\t } \n\n\t\t @Override \n\t\t public   void   onError ( Throwable  e )   { \n\t\t\t System . out . println ( "--\x3e onError = "   +  e ) ; \n\t\t } \n\n\t\t @Override \n\t\t public   void   onComplete ( )   { \n\t\t\t System . out . println ( "--\x3e onComplete" ) ; \n\t\t } \n\t } ) ; \n \n 输出： \n --\x3e onSubscribe\n--\x3e onNext = emitter 5\n--\x3e onComplete\n \n \n Javadoc:  AsyncSubject \n 6.2 BehaviorSubject \n 当观察者订阅  BehaviorSubject  时，它开始发射原始Observable在订阅前的最后一个发射的数据（如果此时还没有收到任何数据，它会发射一个默认值），然后继续发射其它任何来自原始Observable的数据。 \n 可以缓存订阅前最后一次发出的数据，以及订阅后发送的所有数据。 \n \n 注意：  如果因异常（Error）终止，将不会向后续的Observer释放数据，但是会向Observer传递一个异常通知。 \n 实例代码： \n \t // 创建无默认值的BehaviorSubject \n\t BehaviorSubject < Integer >  subject  =   BehaviorSubject . create ( ) ; \n\t // 创建有默认值的BehaviorSubject \n\t BehaviorSubject < Integer >  subjectDefault  =   BehaviorSubject . createDefault ( - 1 ) ; \n\t\n\t // 观察者对象 \n\t Observer < Integer >  observer  =   new   Observer < Integer > ( )   { \n\n\t\t @Override \n\t\t public   void   onSubscribe ( Disposable  d )   { \n\t\t\t System . out . println ( "--------------------------------" ) ; \t\n\t\t\t System . out . println ( "--\x3e onSubscribe" ) ; \n\t\t } \n\n\t\t @Override \n\t\t public   void   onNext ( Integer  t )   { \n\t\t\t System . out . println ( "--\x3e onNext: "   +  t ) ; \n\t\t } \n\n\t\t @Override \n\t\t public   void   onError ( Throwable  e )   { \n\t\t\t System . out . println ( "--\x3e onError: "   +  e ) ; \n\t\t } \n\n\t\t @Override \n\t\t public   void   onComplete ( )   { \n\t\t\t System . out . println ( "--\x3e onComplete" ) ; \n\t\t } \n\t } ; \n\t\n\t // 1. 无数据发送的时候，发送默认值 \n\t //\tsubjectDefault.subscribe(observer); \n\t\n\t // 2. 此时会发射所有订阅后正常发射的数据: 1, 2, 3, 4, error \n\t //\tsubject.subscribe(observer); \n\tsubject . onNext ( 1 ) ; \n\tsubject . onNext ( 2 ) ; \n\tsubject . onNext ( 3 ) ; \n\t\n\t // 3. 此时会发射订阅前的一个数据及后面正常发射的数据: 3, 4, error \n\t //\tsubject.subscribe(observer); \n\tsubject . onNext ( 4 ) ; \n\tsubject . onError ( new   NullPointerException ( ) ) ; \n\t\n\t // 4. 此时不会发射后续数据，仅发送Error通知 \n\t //\tsubject.subscribe(observer); \n\tsubject . onNext ( 5 ) ; \n\tsubject . onComplete ( ) ; \n\t\n\t // 5. 此时没有数据发射，如果有error存在的话，将会发送error \n\tsubject . subscribe ( observer ) ; \n\n \n 输出： \n --------------------------------\n--\x3e onSubscribe\n--\x3e onNext: -1\n--------------------------------\n--\x3e onSubscribe\n--\x3e onNext: 1\n--\x3e onNext: 2\n--\x3e onNext: 3\n--\x3e onNext: 4\n--\x3e onError: java.lang.NullPointerException\n--------------------------------\n--\x3e onSubscribe\n--\x3e onNext: 3\n--\x3e onNext: 4\n--\x3e onError: java.lang.NullPointerException\n--------------------------------\n--\x3e onSubscribe\n--\x3e onError: java.lang.NullPointerException\n--------------------------------\n--\x3e onSubscribe\n--\x3e onError: java.lang.NullPointerException\n \n \n Javadoc:  BehaviorSubject \n 6.3 PublishSubject \n PublishSubject  只会把在订阅发生的时间点之后来自原始Observable的数据发射给观察者。需要注意的是，PublishSubject 可能会一创建完成就立刻开始发射数据（除非你可以阻止它发生），因此这里有一个风险： 在Subject被创建后到有观察者订阅它之前这个时间间隙内，可能有一个或多个数据可能会丢失 。如果要确保来自原始Observable的所有数据都被分发，你需要这样做：使用Create创建那个Observable以便手动给它引入 "冷" Observable的行为（当所有观察者都已经订阅时才开始发射数据），或者改用  ReplaySubject 。 \n 如果 PublishSubject 在订阅前已经调用了  onComplete()  方法，则观察者不会接收到数据。 \n \n 注意：  如果因异常（Error）终止，将不会向后续的Observer释放数据，但是会向Observer传递一个异常通知。 \n 实例代码： \n \t // 释放订阅后接收到正常发射的数据，有error将不会发射任何数据 \n\t PublishSubject < Integer >  subject  =   PublishSubject . create ( ) ; \n\t // 观察者对象 \n\t Observer < Integer >  observer  =   new   Observer < Integer > ( )   { \n\n\t\t @Override \n\t\t public   void   onSubscribe ( Disposable  d )   { \n\t\t\t System . out . println ( "--------------------------------" ) ; \n\t\t\t System . out . println ( "--\x3e onSubscribe" ) ; \n\t\t } \n\n\t\t @Override \n\t\t public   void   onNext ( Integer  t )   { \n\t\t\t System . out . println ( "--\x3e onNext: "   +  t ) ; \n\t\t } \n\n\t\t @Override \n\t\t public   void   onError ( Throwable  e )   { \n\t\t\t System . out . println ( "--\x3e onError: "   +  e ) ; \n\t\t } \n\n\t\t @Override \n\t\t public   void   onComplete ( )   { \n\t\t\t System . out . println ( "--\x3e onComplete" ) ; \n\t\t } \n\t } ; \n\t\n\t // 1. 此时订阅将释放后续正常发射的数据： 1，2, 3, 4, error \n\t // subject.subscribe(observer); \n\tsubject . onNext ( 1 ) ; \n\tsubject . onNext ( 2 ) ; \n\t\n\t // 2. 此时订阅，发射后续正常发射的数据：3, 4, error \n\t // subject.subscribe(observer); \n\tsubject . onNext ( 3 ) ; \n\tsubject . onNext ( 4 ) ; \n\t\n\t // 此时将不会发送任何数据，直接发送error \n\tsubject . onError ( new   NullPointerException ( ) ) ; \n\tsubject . onNext ( 5 ) ; \n\tsubject . onComplete ( ) ; \n\t\n\t // 3. 此时订阅如果有error，仅发送error，否则无数据发射 \n\tsubject . subscribe ( observer ) ; \n\n \n 输出： \n --------------------------------\n--\x3e onSubscribe\n--\x3e onNext: 1\n--\x3e onNext: 2\n--\x3e onNext: 3\n--\x3e onNext: 4\n--\x3e onError: java.lang.NullPointerException\n--------------------------------\n--\x3e onSubscribe\n--\x3e onNext: 3\n--\x3e onNext: 4\n--\x3e onError: java.lang.NullPointerException\n--------------------------------\n--\x3e onSubscribe\n--\x3e onError: java.lang.NullPointerException\n \n \n Javadoc:  PublishSubject \n 6.4 ReplaySubject \n ReplaySubject  会发射所有来自原始Observable的数据给观察者，无论它们是何时订阅的。也 有其它版本的ReplaySubject，在重放缓存增长到一定大小的时候或过了一段时间后会丢弃旧的数据（原始Observable发射的）。 \n 如果你把  ReplaySubject  当作一个观察者使用，注意不要从 多个线程 中调用它的onNext方法 （包括其它的on系列方法），这可能导致同时（非顺序）调用，这会违反Observable协议， 给Subject的结果增加了不确定性。 \n \n \n ReplaySubject 还可以限制缓存数据的数量，限制缓存的时间： \n \n create(bufferAge)：指定内部缓存，减少内部缓存区增长过多的重分配 \n createWithSize(maxAge)：指定 订阅后 接受之前已经发射过数据的 maxAge 个数据项 \n createWithTime(timeout, TimeUnit, Scheduler) ：接受 订阅后 接受之前已经发射过指定 timeout 时间段内的数据项 \n \n 实例代码： \n \t // 1. 接受收到的所有数据以及通知，对每隔Observer都执行相同的独立的操作 \n\t ReplaySubject < Integer >  subject  =   ReplaySubject . create ( ) ; \n\t\n\t // 2. 指定内部缓存大小，此方法避免在内部缓冲区增长以容纳新缓冲区时过多的数组重分配 \n\t // ReplaySubject<Integer> subject = ReplaySubject.create(5); \n\t\n\t // 3. createWithSize(count)  \n\t // 指定保留订阅前数据项的个数的Subject，会发射订阅前count个数据和后续的数据 \n\t // ReplaySubject<Integer> subject = ReplaySubject.createWithSize(1); \n\t\n\t // 4. createWithTime(maxAge, unit, scheduler)  \n\t // 指定保留订阅前指定maxAge时间段内数据和后续的数据 \n\t // ReplaySubject<Integer> subject = ReplaySubject.createWithTime(1, TimeUnit.MILLISECONDS, Schedulers.trampoline()); \n\n\t // 创建Observer(观察者), 可以接受Observable所有通知 \n\t Observer < Integer >  observer  =   new   Observer < Integer > ( )   { \n\n\t\t public   void   onSubscribe ( Disposable  d )   { \n\t\t\t System . out . println ( "----------------------------------" ) ; \n\t\t\t System . out . println ( "--\x3e onSubscribe" ) ; \n\t\t } \n\n\t\t public   void   onNext ( Integer  t )   { \n\t\t\t System . out . println ( "--\x3e onNext = "   +  t ) ; \n\t\t } \n\n\t\t public   void   onError ( Throwable  e )   { \n\t\t\t System . out . println ( "--\x3e onError: "   +  e ) ; \n\t\t } \n\n\t\t public   void   onComplete ( )   { \n\t\t\t System . out . println ( "--\x3e onComplete" ) ; \n\t\t } \n\t } ; \n\t\n\t // 正常接受所有Observable的数据和通知 \n\tsubject . subscribe ( observer ) ; \n\tsubject . onNext ( 1 ) ; \n\tsubject . onNext ( 2 ) ; \n\tsubject . onNext ( 3 ) ; \n\t\n\t // 正常接受所有Observable的数据和通知 \n\tsubject . subscribe ( observer ) ; \n\tsubject . onNext ( 4 ) ; \n\t // 如果有error，则发送error通知，不影响任何一个观察者数据与通知接受 \n\t // subject.onError(new NullPointerException()); \n\tsubject . onNext ( 5 ) ; \n\tsubject . onComplete ( ) ; \n\t\n\t // 正常接受所有Observable的数据和通知 \n\tsubject . subscribe ( observer ) ; \n \n 输出： \n ----------------------------------\n--\x3e onSubscribe\n--\x3e onNext = 1\n--\x3e onNext = 2\n--\x3e onNext = 3\n----------------------------------\n--\x3e onSubscribe\n--\x3e onNext = 1\n--\x3e onNext = 2\n--\x3e onNext = 3\n--\x3e onNext = 4\n--\x3e onNext = 4\n--\x3e onNext = 5\n--\x3e onNext = 5\n--\x3e onComplete\n--\x3e onComplete\n----------------------------------\n--\x3e onSubscribe\n--\x3e onNext = 1\n--\x3e onNext = 2\n--\x3e onNext = 3\n--\x3e onNext = 4\n--\x3e onNext = 5\n--\x3e onComplete\n \n \n Javadoc:  ReplaySubject \n 6.5 UnicastSubject \n UnicastSubject  是仅支持订阅一次的 Subject ,如果多个订阅者试图订阅这个 Subject 将会受到  IllegalStateException 。 \n 常用于一次性消费或安全场合，如网络结算，支付等。 \n 实例代码： \n \t // 创建UnicastSubject，只能被订阅一次，不能再次被订阅 \n\t UnicastSubject < Integer >  subject  =   UnicastSubject . create ( ) ; \n\t\n\t // 创建Observer(观察者), 可以接受Observable所有通知 \n\t Observer < Integer >  observer  =   new   Observer < Integer > ( )   { \n\n\t\t public   void   onSubscribe ( Disposable  d )   { \n\t\t\t System . out . println ( "--------------------------------" ) ; \n\t\t\t System . out . println ( "--\x3e onSubscribe" ) ; \n\t\t } \n\n\t\t public   void   onNext ( Integer  t )   { \n\t\t\t System . out . println ( "--\x3e onNext = "   +  t ) ; \n\t\t } \n\n\t\t public   void   onError ( Throwable  e )   { \n\t\t\t System . out . println ( "--\x3e onError: "   +  e ) ; \n\t\t } \n\n\t\t public   void   onComplete ( )   { \n\t\t\t System . out . println ( "--\x3e onComplete" ) ; \n\t\t } \n\t } ; \n\t // 订阅后，此subject将不可以再被订阅了 \n\tsubject . subscribe ( observer ) ; \n\t\n\tsubject . onNext ( 1 ) ; \n\tsubject . onNext ( 2 ) ; \n\tsubject . onNext ( 3 ) ; \n\t // 此时会有IllegalStateException，因为只能订阅一次，不能重复订阅 \n\tsubject . subscribe ( observer ) ; \n\tsubject . onNext ( 4 ) ; \n\tsubject . onNext ( 5 ) ; \n\tsubject . onComplete ( ) ; \n\t\n\t // 此时会有IllegalStateException，因为只能被订阅一次，不能重复订阅 \n\tsubject . subscribe ( observer ) ; \n \n 输出： \n --------------------------------\n--\x3e onSubscribe\n--\x3e onNext = 1\n--\x3e onNext = 2\n--\x3e onNext = 3\n--------------------------------\n--\x3e onSubscribe\n--\x3e onError: java.lang.IllegalStateException: Only a single observer allowed.\n--\x3e onNext = 4\n--\x3e onNext = 5\n--\x3e onComplete\n--------------------------------\n--\x3e onSubscribe\n--\x3e onError: java.lang.IllegalStateException: Only a single observer allowed.\n \n \n Javadoc:  UnicastSubject \n 6.6 SerializedSubject \n 在并发情况下，不推荐使用通常的Subject对象，此时会产生多次调用产生一系列不可控的问题，而是推荐使用  SerializedSubject ，并发时只允许一个线程调用onNext等方法，将Subject  串行化  后，所有其他的Observable和Subject方法都是线程安全的。 \n 注意：  在Rxjava2 中  SerializedSubject  是一个不公开(不是public)的类型，意味着不可以直接创建使用，但是可以通过Subject.toSerialized()方法将Subject对象串行化保证其线程安全。同时也提供了 SerializedObserver，SerializedSubscriber等来包装对象成为串行化对象。 \n 实例代码： \n \t // 创建Subject \n\t ReplaySubject < String >  subject  =   ReplaySubject . create ( ) ; \n\n\t // 通过toSerialized()进行串行化 \n\t Subject < String >  serialized  =  subject . toSerialized ( ) ; \n\n\t // 订阅 \n\tserialized . subscribe ( new   Consumer < String > ( )   { \n\n\t\t @Override \n\t\t public   void   accept ( String  t )   throws   Exception   { \n\t\t\t System . out . println ( "--\x3e accept: "   +  t  +   ", ReceiverThreadID: "   +   Thread . currentThread ( ) . getId ( ) ) ; \n\t\t } \n\t } ) ; \n\n\t // 多线程执行 \n\t for   ( int  i  =   0 ;  i  <   10 ;  i ++ )   { \n\t\t final   int  value  =  i  +   1 ; \n\t\t new   Thread ( new   Runnable ( )   { \n\n\t\t\t @Override \n\t\t\t public   void   run ( )   { \n\t\t\t\tserialized . onNext ( value  +   "-SendThreadID: "   +   Thread . currentThread ( ) . getId ( ) ) ; \n\t\t\t } \n\t\t } ) . start ( ) ; \n\t } \n\n\t System . in . read ( ) ; \n\t\n\t System . out . println ( "---------------------------------------------------------------------" ) ; \n\n\t // 创建一个 SerializedObserver来进行串行化，保证线程安全 \n\t // 注意：只保证同时只有一个线程调用 onNext, onCompleted, onError方法，并不是将所有emit的值放到一个线程上然后处理 \n\t SerializedObserver < String >  observer  =   new   SerializedObserver < String > ( new   Observer < String > ( )   { \n\n\t\t @Override \n\t\t public   void   onSubscribe ( Disposable  d )   { \n\t\t\t System . out . println ( "--\x3e onSubscribe" ) ; \n\t\t } \n\n\t\t @Override \n\t\t public   void   onNext ( String  t )   { \n\t\t\t System . out . println ( "--\x3e onNext: "   +  t  +   ", ReceiverThreadID: "   +   Thread . currentThread ( ) . getId ( ) ) ; \n\t\t } \n\n\t\t @Override \n\t\t public   void   onError ( Throwable  e )   { \n\t\t\t System . out . println ( "--\x3e onError" ) ; \n\t\t } \n\n\t\t @Override \n\t\t public   void   onComplete ( )   { \n\t\t\t System . out . println ( "--\x3e onComplete" ) ; \n\t\t } \n\t } ) ; \n\n\t // 订阅 \n\tsubject . subscribe ( observer ) ; \n\n\t // 多线程执行 \n\t for   ( int  i  =   0 ;  i  <   10 ;  i ++ )   { \n\t\t final   int  value  =  i  +   1 ; \n\t\t new   Thread ( new   Runnable ( )   { \n\n\t\t\t @Override \n\t\t\t public   void   run ( )   { \n\t\t\t\tsubject . onNext ( value  +   "-SendThreadID: "   +   Thread . currentThread ( ) . getId ( ) ) ; \n\t\t //\t\tif (value == 10) { \n\t\t //\t\t\tsubject.onComplete(); \n\t\t //\t\t} \n\t\t\t } \n\t\t } ) . start ( ) ; \n\t } \n\n\t System . in . read ( ) ; \n \n 输出： \n --\x3e accept: 1-SendThreadID: 11, ReceiverThreadID: 11\n--\x3e accept: 2-SendThreadID: 12, ReceiverThreadID: 11\n--\x3e accept: 10-SendThreadID: 20, ReceiverThreadID: 11\n--\x3e accept: 9-SendThreadID: 19, ReceiverThreadID: 11\n--\x3e accept: 8-SendThreadID: 18, ReceiverThreadID: 11\n--\x3e accept: 7-SendThreadID: 17, ReceiverThreadID: 11\n--\x3e accept: 6-SendThreadID: 16, ReceiverThreadID: 11\n--\x3e accept: 4-SendThreadID: 14, ReceiverThreadID: 11\n--\x3e accept: 5-SendThreadID: 15, ReceiverThreadID: 11\n--\x3e accept: 3-SendThreadID: 13, ReceiverThreadID: 11\n---------------------------------------------------------------------\n--\x3e onSubscribe\n--\x3e onNext: 1-SendThreadID: 11, ReceiverThreadID: 11\n--\x3e onNext: 3-SendThreadID: 13, ReceiverThreadID: 11\n--\x3e onNext: 4-SendThreadID: 14, ReceiverThreadID: 11\n--\x3e onNext: 5-SendThreadID: 15, ReceiverThreadID: 11\n--\x3e onNext: 6-SendThreadID: 16, ReceiverThreadID: 16\n--\x3e onNext: 7-SendThreadID: 17, ReceiverThreadID: 16\n--\x3e onNext: 8-SendThreadID: 18, ReceiverThreadID: 16\n--\x3e onNext: 9-SendThreadID: 19, ReceiverThreadID: 16\n--\x3e onNext: 10-SendThreadID: 20, ReceiverThreadID: 16\n 6.7 TestSubject \n Rxjava2 中已经取消了TestSubject，使用 TestScheduler 和 TestObserver 替代，下面主要以 TestObserver 为例进行介绍。 \n TestObserver 是一个一个记录事件并允许对其进行 断言 的观察者，多用于测试场合。一般可以创建一个 TestObserver  对象或者从Observable 或者 Subject 中直接调用  test()  方法获取。 \n 实例代码： \n \t // Observable \n\t Observable < Integer >  observable  =   Observable . create ( new   ObservableOnSubscribe < Integer > ( )   { \n\n\t\t @Override \n\t\t public   void   subscribe ( ObservableEmitter < Integer >  emitter )   throws   Exception   { \n\t\t\temitter . onNext ( 1 ) ; \n\t\t\temitter . onNext ( 2 ) ; \n\t\t\temitter . onNext ( 3 ) ; \n\t\t\temitter . onNext ( 100 ) ; \n\t\t\temitter . onError ( new   NullPointerException ( ) ) ; \n\t\t\temitter . onComplete ( ) ; \n\t\t } \n\t } ) ; \n\n\t // 1. 创建TestObserver对象 \n\t TestObserver < Integer >  testObserver  =   TestObserver . create ( new   Observer < Integer > ( )   { \n\n\t\t @Override \n\t\t public   void   onSubscribe ( Disposable  d )   { \n\t\t\t System . out . println ( "--\x3e onSubscribe:" ) ; \n\t\t } \n\n\t\t @Override \n\t\t public   void   onNext ( Integer  t )   { \n\t\t\t System . out . println ( "--\x3e onNext: "   +  t ) ; \n\t\t } \n\n\t\t @Override \n\t\t public   void   onError ( Throwable  e )   { \n\t\t\t System . out . println ( "--\x3e onError: "   +  e ) ; \n\t\t } \n\n\t\t @Override \n\t\t public   void   onComplete ( )   { \n\t\t\t System . out . println ( "--\x3e onComplete:" ) ; \n\t\t } \n\t } ) ; \n\n\tobservable . subscribe ( testObserver ) ; \n\t try   { \n\t\t // 断言是否为收到订阅，但是没有事件发送 \n\t\ttestObserver . assertEmpty ( ) ; \n\t\t // 断言是否收到onComplete() \n\t\ttestObserver . assertComplete ( ) ; \n\t\t // 断言没有数据100发送 \n\t\ttestObserver . assertNever ( 100 ) ; \n\t\t // 断言接收数据结果 \n\t\ttestObserver . assertResult ( 1 ,   2 ,   3 ) ; \n\t\t // 断言异常 \n\t\ttestObserver . assertError ( NullPointerException . class ) ; \n\t\t . . .  更多请参考 Api \n\t }   catch   ( Error  e )   { \n\t\t System . out . println ( "Error: "   +  e ) ; \n\t } \n\n\t System . out . println ( "-----------------------------------------------" ) ; \n\t // Subject \n\t AsyncSubject < Object >  subject  =   AsyncSubject . create ( ) ; \n\n\t // 2. 从Observable或者Subject中获取TestObserver对象 \n\t TestObserver < Integer >  test  =  observable . test ( ) ; \n\t TestObserver < Object >  test2  =  subject . test ( ) ; \n\t System . out . println ( test . values ( ) ) ;   // received onNext values \n\t try   { \n\t\t // 断言是否为收到订阅，但是没有事件发送 \n\t\ttest . assertEmpty ( ) ; \n\t\ttest2 . assertEmpty ( ) ; \n\t\t // 断言是否收到onComplete() \n\t\ttest . assertComplete ( ) ; \n\t\t // 断言没有数据100发送 \n\t\ttest . assertNever ( 100 ) ; \n\t\t // 断言接收数据结果 \n\t\ttest . assertResult ( 1 ,   2 ,   3 ) ; \n\t\t // 断言异常 \n\t\ttest . assertError ( NullPointerException . class ) ; \n\t\t . . .  更多请参考 Api \n\t }   catch   ( Error  e )   { \n\t\t System . out . println ( "Error: "   +  e ) ; \n\t } \n\n \n 输出（当出现断言不匹配的情况，会有相应Error抛出）： \n --\x3e onSubscribe:\n--\x3e onNext: 1\n--\x3e onNext: 2\n--\x3e onNext: 3\n--\x3e onNext: 100\n--\x3e onError: java.lang.NullPointerException\nError: java.lang.AssertionError: Value counts differ; expected: 0 but was: 4 (latch = 0, values = 4, errors = 1, completions = 0)\n-----------------------------------------------\n[1, 2, 3, 100]\nError: java.lang.AssertionError: Value counts differ; expected: 0 but was: 4 (latch = 0, values = 4, errors = 1, completions = 0)\n \n \n Javadoc:  TestObserver \n 6.8 Processor \n Process  和  Subject  的作用和使用相同。Process 是 Rxjava2 中的新功能，它是一个接口，继承自 Subscriber、Publish。与Subject 最大的区别是 Process 支持 背压 ，关于背压，后续将会有专题文章来做详细介绍。 \n 7. Scheduler \n 如果你想给Observable操作符链添加多线程功能，你可以指定操作符（或者特定的 Observable）在特定的调度器( Scheduler )上执行。 \n 某些ReactiveX的Observable操作符有一些变体，它们可以接受一个 Scheduler 参数。这个参数指定操作符将它们的部分或全部任务放在一个特定的调度器上执行。 \n 使用ObserveOn和SubscribeOn操作符，你可以让Observable在一个特定的调度器上执行, ObserveOn指示一个Observable在一个特定的调度器上调用观察者的onNext, onError和 onCompleted方法，SubscribeOn更进一步，它指示Observable将全部的处理过程（包括发射数据和通知）放在特定的调度器上执行。 \n 调度器的种类 \n 下表展示了RxJava中可用的调度器种类： \n \n \n \n 调度器类型 \n 作用 \n \n \n \n \n Schedulers.computation() \n 用于计算任务，如事件循环或和回调处理，不要用于IO操作(IO操作请使用Schedulers.io())，默认线程数等于处理器的数量 。 \n \n \n Schedulers.from(executor) \n 使用指定的Executor作为调度器。 \n \n \n Schedulers.trampoline() \n 调度在当前线程上工作，但不立即执行。当其它排队的任务完成后，在当前线程排队开始执行。 \n \n \n Schedulers.io() \n 用于IO密集型任务，如异步阻塞IO操作，这个调度器的线程池会根据需要增长；对于普通的计算任务，请使用 Schedulers.computation()；Schedulers.io( )默认是一个CachedThreadScheduler，很像一个有线程缓存的新线程调度器。 \n \n \n Schedulers.newThread() \n 为每个任务创建一个新线程 \n \n \n Schedulers.single() \n 一个默认的、共享的、单线程支持的调度器实例，用于需要在同一后台线程上强顺序执行的工作。 \n \n \n \n 关于Rxjava中的线程模型、线程转换操作、调度器的使用等后面会有专题文章来详细介绍。 \n 小结： \n 本章主要介绍了Rxjava的概念与添加使用依赖、Rxjava中的观察者模式、Observable、Flowable、Subject，Schedule等基础对象的介绍与使用，应该可以对Rxjava的概念及基本对象有了基本的认识和了解，以及简单的上手使用。 \n 有关Rxjava2 的其他相关部分内容，后续将有系列的文章来介绍，请关注上面的实时文章目录。 \n'},{title:"2. Observable的创建",frontmatter:{author:"JiangMing",title:"2. Observable的创建",date:"2019-12-30 22:24:52",sidebar:"auto",categories:["Java","Rxjava2"],tags:["Rxjava2"],publish:!0,showSponsor:!0},regularPath:"/developer/rxjava2/02.rxjava2.html",relativePath:"developer/rxjava2/02.rxjava2.md",key:"v-deaef892",path:"/developer/rxjava2/02.rxjava2.html",headers:[{level:2,title:"简要：",slug:"简要"},{level:2,title:"1. Create",slug:"_1-create"},{level:2,title:"2. Defer",slug:"_2-defer"},{level:2,title:"3. Empty/Never/Error",slug:"_3-empty-never-error"},{level:2,title:"4. Just",slug:"_4-just"},{level:2,title:"5. From",slug:"_5-from"},{level:2,title:"6. Repeat",slug:"_6-repeat"},{level:2,title:"7. RepeatWhen",slug:"_7-repeatwhen"},{level:2,title:"8. RepeatUntil",slug:"_8-repeatuntil"},{level:2,title:"9. Range",slug:"_9-range"},{level:2,title:"10. interval",slug:"_10-interval"},{level:2,title:"11. Timer",slug:"_11-timer"},{level:2,title:"小结",slug:"小结"}],content:' 简要： \n 几种主要的需求 \n \n 直接创建一个Observable（创建操作） \n 组合多个Observable（组合操作） \n 对Observable发射的数据执行变换操作（变换操作） \n 从Observable发射的数据中取特定的值（过滤操作） \n 转发Observable的部分值（条件/布尔/过滤操作） \n 对Observable发射的数据序列求值（算术/聚合操作） \n \n 创建Observable的各种方式 \n \n create()：使用一个函数从头创建一个Observable \n defer()：只有当订阅者订阅才创建Observable；为每个订阅创建一个新的 Observable \n empty()\t：创建一个什么都不做直接通知完成的Observable \n never()：创建一个不发射任何数据的Observable \n error()：—创建一个什么都不做直接通知错误的Observable \n just()：将一个或多个对象转换成发射这个或这些对象的一个Observable \n from()：将一个Iterable,\t一个Future,\t或者一个数组转换成一个Observable \n repeat()：创建一个重复发射指定数据或数据序列的Observable \n repeatWhen() ：创建一个重复发射指定数据或数据序列的Observable，它依赖于另一 个Observable发射的数据 \n repeatUntil()：根据条件（函数BooleanSupplier）判断是否需要继续订阅 \n range()：创建一个发射指定范围的整数序列的Observable \n interval()：创建一个按照给定的时间间隔发射整数序列的Observable \n timer()：—创建一个在给定的延时之后发射单个数据的Observable \n 1. Create \n 使用\t Create \t操作符从头开始创建一个Observable，给这个操作符传递一个接受观察者作为参数的函数，编写这个函数可以调用观察者的  onNext ， onError  和  onCompleted  方法，当发生订阅的时候会自动调用观察者的  onSubscribe  方法。 \n 通过 Subscribe 进行Observable 与 Observer 的订阅，其中 subscribe 方法可以接收一个完整通知参数的 Observer 对象，也可以接收部分通知参数的  Consumer (接收数据) 或者  Action  (仅接收通知) 对象。 \n \n 实例代码： \n \t // 创建Observable(被观察者) \n\t Observable < String >  observable  =   Observable . create ( new   ObservableOnSubscribe < String > ( )   { \n\n\t\t public   void   subscribe ( ObservableEmitter < String >  emitter )   throws   Exception   { \n\t\t\temitter . onNext ( "Hello" ) ; \n\t\t\temitter . onNext ( "World" ) ; \n\t\t\temitter . onComplete ( ) ; \n\t\t } \n\t } ) ; \n\t\n\t // 创建Observer(观察者), 可以接受所有通知 \n\t Observer < String >  observer  =   new   Observer < String > ( )   { \n\n\t\t public   void   onSubscribe ( Disposable  d )   { \n\t\t\t System . out . println ( "--\x3e onSubscribe" ) ; \n\t\t } \n\n\t\t public   void   onNext ( String  t )   { \n\t\t\t System . out . println ( "--\x3e onNext = "   +  t ) ; \n\t\t } \n\n\t\t public   void   onError ( Throwable  e )   { \n\t\t\t System . out . println ( "--\x3e onError" ) ; \n\t\t } \n\n\t\t public   void   onComplete ( )   { \n\t\t\t System . out . println ( "--\x3e onComplete" ) ; \n\t\t } \n\t } ; \n\t\n\t // 创建只接受 onNext(item) 通知的Consumer(观察者) \n\t Consumer < String >  nextConsumer  =   new   Consumer < String > ( )   { \n\n\t\t @Override \n\t\t public   void   accept ( String  t )   throws   Exception   { \n\t\t\t System . out . println ( "--\x3e accept nextConsumer: "   +  t ) ; \n\t\t } \n\t } ; \n\t\n\t // 创建只接受 onError(Throwable) 通知的Consumer(观察者) \n\t Consumer < Throwable >  errorConsumer  =   new   Consumer < Throwable > ( )   { \n\n\t\t @Override \n\t\t public   void   accept ( Throwable  t )   throws   Exception   { \n\t\t\t System . out . println ( "-- accept errorConsumer: "   +  t ) ; \n\t\t } \n\t } ; \n\t\n\t // 创建只接受 onComplete() 通知的Action(观察者) \n\t Action  completedAction  =   new   Action ( )   { \n\t\t\n\t\t @Override \n\t\t public   void   run ( )   throws   Exception   { \n\t\t\t System . out . println ( "--\x3e run completedAction" ) ; \n\t\t } \n\t } ; \n\t\n\t // 创建只接受 onSubscribe 通知的Consumer(观察者) \n\t Consumer < Disposable >  onSubscribeComsumer  =   new   Consumer < Disposable > ( )   { \n\n\t\t @Override \n\t\t public   void   accept ( Disposable  t )   throws   Exception   { \n\t\t\t System . out . println ( "--\x3e accept onSubscribeComsumer " ) ; \n\t\t } \n\t } ; \n\n\t // 1. 进行订阅，subscribe(Observer) \n\tobservable . subscribe ( observer ) ; \n\t\n\t System . out . println ( "---------------------------------------------" ) ; \n\t // 2. 进行订阅，subscribe(Consumer onNext) \n\tobservable . subscribe ( nextConsumer ) ; \n\t\n\t System . out . println ( "---------------------------------------------" ) ; \n\t // 3. 进行订阅，subscribe(Consumer onNext, Consumer onError) \n\tobservable . subscribe ( nextConsumer ,  errorConsumer ) ; \n\t\n\t System . out . println ( "---------------------------------------------" ) ; \n\t // 4. 进行订阅，subscribe(Consumer onNext, Consumer onError, Action onCompleted) \n\tobservable . subscribe ( nextConsumer ,  errorConsumer ,  completedAction ) ; \n\t\n\t System . out . println ( "---------------------------------------------" ) ; \n\t // 5. 进行订阅，subscribe(Consumer onNext, Consumer onError, Action onCompleted, Consumer onSubscribe) \n\tobservable . subscribe ( nextConsumer ,  errorConsumer ,  completedAction ,  onSubscribeComsumer ) ; \n \n 输出： \n --\x3e onSubscribe\n--\x3e onNext = Hello\n--\x3e onNext = World\n--\x3e onComplete\n---------------------------------------------\n--\x3e accept nextConsumer: Hello\n--\x3e accept nextConsumer: World\n---------------------------------------------\n--\x3e accept nextConsumer: Hello\n--\x3e accept nextConsumer: World\n---------------------------------------------\n--\x3e accept nextConsumer: Hello\n--\x3e accept nextConsumer: World\n--\x3e run completedAction\n---------------------------------------------\n--\x3e accept onSubscribeComsumer \n--\x3e accept nextConsumer: Hello\n--\x3e accept nextConsumer: World\n--\x3e run completedAction\n \n \n 注意 ：create\t方法默认不在任何特定的调度器上执行。 \n \n \n onSubscribe(Disposable): 在发生订阅时接收。 \n \n \n onNext(item): 在被观察者发射数据接收。 \n \n \n onError(Throwable): 在被观察者发射Error时接收。 \n \n \n onComplete(): 在被观察者完成数据发送时接收。 \n Javadoc:\t create(OnSubscribe) \nJavadoc:  subscribe() \nJavadoc:  subscribe(observer) \nJavadoc:  subscribe(onNext) \nJavadoc:  subscribe(onNext, onError) \nJavadoc:  subscribe(onNext, onError, onComplete) \nJavadoc:  subscribe(onNext, onError, onComplete, onSubscribe) \n 2. Defer \n 直到有观察者订阅时才创建 Observable，并且为每个观察者创建一个新的 Observable. \n Defer \t操作符会一直等待直到有观察者订阅它，然后它使用Observable工厂方法生成一个 Observable。它对每个观察者都这样做，因此尽管每个订阅者都以为自己订阅的是同一个 Observable，事实上每个订阅者获取的是它们自己的单独的数据序列。 \n \n 实例代码： \n \t // 创建一个Defer类型的Observable \n\t Observable < Integer >  deferObservable  =   Observable . defer ( new   Callable < ObservableSource < ?   extends   Integer > > ( )   { \n\t\t public   ObservableSource < ?   extends   Integer >   call ( )   throws   Exception   { \n\t\t\t // 创建每个观察者订阅所返回的 Observable \n\t\t\t Observable < Integer >  observable  =   Observable . create ( new   ObservableOnSubscribe < Integer > ( )   { \n\t\n\t\t\t\t public   void   subscribe ( ObservableEmitter < Integer >  emitter )   throws   Exception   { \n\t\t\t\t\temitter . onNext ( 1 ) ; \n\t\t\t\t\temitter . onNext ( 2 ) ; \n\t\t\t\t\temitter . onNext ( 3 ) ; \n\t\t\t\t\temitter . onNext ( 4 ) ; \n\t\t\t\t\temitter . onNext ( 5 ) ; \n\t\t\t\t\temitter . onComplete ( ) ; \n\t\t\t\t } \n\t\t\t } ) ; \n\t\t\t return  observable ; \n\t\t } \n\t } ) ; \n\t\n\t // 创建第一个观察者并订阅defer Observable \n\tdeferObservable . subscribe ( new   Consumer < Integer > ( )   { \n\t\n\t\t public   void   accept ( Integer  t )   throws   Exception   { \n\t\t\t System . out . println ( "No.1 --\x3e accept = "   +  t ) ; \n\t\t } \n\t } ) ; \n\t\n\t // 创建第二个观察者并订阅defer Observable \n\tdeferObservable . subscribe ( new   Consumer < Integer > ( )   { \n\t\n\t\t public   void   accept ( Integer  t )   throws   Exception   { \n\t\t\t System . out . println ( "No.2 --\x3e accept = "   +  t ) ; \n\t\t } \n\t } ) ; \n\t\n\t // 创建第三个观察者并订阅defer Observable \n\tdeferObservable . subscribe ( new   Consumer < Integer > ( )   { \n\t\n\t\t public   void   accept ( Integer  t )   throws   Exception   { \n\t\t\t System . out . println ( "No.3 --\x3e accept = "   +  t ) ; \n\t\t } \n\t } ) ; \n \n 输出： \n No.1 --\x3e accept = 1\nNo.1 --\x3e accept = 2\nNo.1 --\x3e accept = 3\nNo.1 --\x3e accept = 4\nNo.1 --\x3e accept = 5\nNo.2 --\x3e accept = 1\nNo.2 --\x3e accept = 2\nNo.2 --\x3e accept = 3\nNo.2 --\x3e accept = 4\nNo.2 --\x3e accept = 5\nNo.3 --\x3e accept = 1\nNo.3 --\x3e accept = 2\nNo.3 --\x3e accept = 3\nNo.3 --\x3e accept = 4\nNo.3 --\x3e accept = 5\n \n \n 注意 ：defer 方法默认不在任何特定的调度器上执行。 \nJavadoc:\t defer(Func0) \n 3. Empty/Never/Error \n Empty ：创建一个不发射任何数据但是正常终止的Observable\n Never ：创建一个不发射数据也不终止的Observable\n Error ：创建一个不发射数据以一个错误终止的Observable \n 这三个操作符生成的 Observable 行为非常特殊和受限，多用于一些特殊的场景（某些操作状态异常后返回一个error、empty、never 的 Observable）。测试的时候很有用，有时候也用于结合其它的 Observables，或者作为其它需要 Observable 的操作符的参数。 \n 实例代码： \n \t System . out . println ( "--\x3e 1 -----------------------------------" ) ; \n\t // 1.  创建一个不发射任何数据但是正常终止的Observable \n\t Observable . empty ( ) \n\t\t . subscribe ( new   Observer < Object > ( )   { \n\t\n\t\t\t @Override \n\t\t\t public   void   onSubscribe ( Disposable  d )   { \n\t\t\t\t System . out . println ( "onSubscribe" ) ; \n\t\t\t } \n\t\n\t\t\t @Override \n\t\t\t public   void   onNext ( Object  t )   { \n\t\t\t\t System . out . println ( "onNext: "   +  t ) ; \n\t\t\t } \n\t\n\t\t\t @Override \n\t\t\t public   void   onError ( Throwable  e )   { \n\t\t\t\t System . out . println ( "onError: "   +  e ) ; \n\t\t\t } \n\t\n\t\t\t @Override \n\t\t\t public   void   onComplete ( )   { \n\t\t\t\t System . out . println ( "onComplete" ) ; \n\t\t\t } \n\t\t } ) ; \n\t\n\t System . out . println ( "--\x3e 2 -----------------------------------" ) ; \n\t // 2.  创建一个不输出数据，并且不会终止的Observable \n\t Observable . never ( ) \n\t\t . subscribe ( new   Observer < Object > ( )   { \n\t\n\t\t\t @Override \n\t\t\t public   void   onSubscribe ( Disposable  d )   { \n\t\t\t\t System . out . println ( "onSubscribe" ) ; \n\t\t\t } \n\t\n\t\t\t @Override \n\t\t\t public   void   onNext ( Object  t )   { \n\t\t\t\t System . out . println ( "onNext: "   +  t ) ; \n\t\t\t } \n\t\n\t\t\t @Override \n\t\t\t public   void   onError ( Throwable  e )   { \n\t\t\t\t System . out . println ( "onError: "   +  e ) ; \n\t\t\t } \n\t\n\t\t\t @Override \n\t\t\t public   void   onComplete ( )   { \n\t\t\t\t System . out . println ( "onComplete" ) ; \n\t\t\t } \n\t\t } ) ; \n\t\n\t System . out . println ( "--\x3e 3 -----------------------------------" ) ; \n\t // 3.  创建一个不发射数据以一个错误终止的Observable \n\t Observable . error ( new   NullPointerException ( "error test" ) ) \n\t\t . subscribe ( new   Observer < Object > ( )   { \n\t\n\t\t\t @Override \n\t\t\t public   void   onSubscribe ( Disposable  d )   { \n\t\t\t\t System . out . println ( "onSubscribe" ) ; \n\t\t\t } \n\t\n\t\t\t @Override \n\t\t\t public   void   onNext ( Object  t )   { \n\t\t\t\t System . out . println ( "onNext: "   +  t ) ; \n\t\t\t } \n\t\n\t\t\t @Override \n\t\t\t public   void   onError ( Throwable  e )   { \n\t\t\t\t System . out . println ( "onError: "   +  e ) ; \n\t\t\t } \n\t\n\t\t\t @Override \n\t\t\t public   void   onComplete ( )   { \n\t\t\t\t System . out . println ( "onComplete" ) ; \n\t\t\t } \n\t\t } ) ; \n \n 输出： \n --\x3e 1 -----------------------------------\nonSubscribe\nonComplete\n--\x3e 2 -----------------------------------\nonSubscribe\n--\x3e 3 -----------------------------------\nonSubscribe\nonError: java.lang.NullPointerException: error test\n \n \n 注意 ： \n \n RxJava将这些操作符实现为 empty，never和 error。 \n error 操作符需要一 个 Throwable参数，你的Observable会以此终止。 \n 这些操作符默认不在任何特定的调度器上执行，但是 empty 和 error 有一个可选参数是Scheduler，如果你传递了Scheduler参数，它 们会在这个调度器上发送通知. \nJavadoc:\t empty() \nJavadoc:\t never() \nJavadoc:\t error(java.lang.Throwable) \n 4. Just \n 创建一个发射指定值的Observable。 \n Just  将单个数据转换为发射那个数据的Observable。类似于 From ，但是From会将数组或Iterable的数据取出然后逐个发射，而Just只是简单的原样发射，将数组或Iterable当做单个数据。 \n 注意：  如果你传递\t  null  给  Just ，它会返回一个发射 null 值的 Observable。不要误认为它会返回一个空Observable（完全不发射任何数据的Observable），如果需要空Observable你应该使用 Empty 操作符。\n \n 实例代码： \n \t // 单个对象发送 \n\t Observable . just ( 1 ) \n\t\t\t . subscribe ( new   Consumer < Integer > ( )   { \n\n\t\t\t\t public   void   accept ( Integer  t )   throws   Exception   { \n\t\t\t\t\t System . out . println ( "--\x3e singe accept: "   +  t ) ; \n\t\t\t\t } \n\t\t\t } ) ; \n\t\n\t System . out . println ( "---------------------------------" ) ; \n\t // 多个对象发送，内部实际使用from实现 (接受一至九个参数，返回一个按参数列表顺序发射这些数据的Observable) \n\t Observable . just ( 1 ,   2 ,   3 ,   4 ,   5 ) \n\t\t\t . subscribe ( new   Consumer < Integer > ( )   { \n\n\t\t\t\t public   void   accept ( Integer  t )   throws   Exception   { \n\t\t\t\t\t System . out . println ( "--\x3e mutil accept: "   +  t ) ; \n\t\t\t\t } \n\t\t\t } ) ; \n \n 输出： \n --\x3e singe accept: 1\n---------------------------------\n--\x3e mutil accept: 1\n--\x3e mutil accept: 2\n--\x3e mutil accept: 3\n--\x3e mutil accept: 4\n--\x3e mutil accept: 5\n \n \n Javadoc:\t just(item ...) \n 5. From \n 将其它种类的对象和数据类型转换为Observable，发射来自对应数据源数据类型的数据，在RxJava中， from  操作符可以转换  Future  、 Iterable 和 数组 。对于Iterable和数组，产生的Observable会发射Iterable或数组的每一项数据。\n \n 实例代码： \n \t\t // 初始化数据 \n\t\t Integer [ ]  array  =   {   1 ,   2 ,   3 ,   4 ,   5 ,   6   } ; \n\t\t List < String >  iterable  =   new   ArrayList < String > ( ) ; \n\t\titerable . add ( "A" ) ; \n\t\titerable . add ( "B" ) ; \n\t\titerable . add ( "C" ) ; \n\t\titerable . add ( "D" ) ; \n\t\titerable . add ( "E" ) ; \n\t\t\n\t\t // 1. fromArray \n\t\t Observable . fromArray ( array ) . subscribe ( new   Consumer < Integer > ( )   { \n\n\t\t\t @Override \n\t\t\t public   void   accept ( Integer  t )   throws   Exception   { \n\t\t\t\t System . out . println ( "--\x3e accept(1):fromArray: "   +  t ) ; \n\t\t\t } \n\t\t } ) ; \n\t\t\n\t\t System . out . println ( "---------------------------------------" ) ; \n\t\t // 2. fromIterable \n\t\t Observable . fromIterable ( iterable ) \n\t\t\t . subscribe ( new   Consumer < String > ( )   { \n\n\t\t\t\t @Override \n\t\t\t\t public   void   accept ( String  t )   throws   Exception   { \n\t\t\t\t\t System . out . println ( "--\x3e accept(2) fromIterable: "   +  t ) ; \n\t\t\t\t } \n\t\t\t } ) ; \n\t\t\n\t\t System . out . println ( "---------------------------------------" ) ; \n\t\t // 3. fromCallable \n\t\t Observable . fromCallable ( new   Callable < Integer > ( )   { \n\n\t\t\t @Override \n\t\t\t public   Integer   call ( )   throws   Exception   { \n\t\t\t\t return   1 ; \n\t\t\t } \n\t\t } ) . subscribe ( new   Consumer < Integer > ( )   { \n\n\t\t\t @Override \n\t\t\t public   void   accept ( Integer  t )   throws   Exception   { \n\t\t\t\t System . out . println ( "--\x3e accept(3): fromCallable: "   +  t ) ; \n\t\t\t } \n\t\t } ) ; \n\t\t\n\t\t System . out . println ( "---------------------------------------" ) ; \n\t\t // 4. fromFuture \n\t\t Observable . fromFuture ( new   Future < String > ( )   { \n\n\t\t\t @Override \n\t\t\t public   boolean   cancel ( boolean  mayInterruptIfRunning )   { \n\t\t\t\t return   false ; \n\t\t\t } \n\n\t\t\t @Override \n\t\t\t public   String   get ( )   throws   InterruptedException ,   ExecutionException   { \n\t\t\t\t System . out . println ( "--\x3e fromFutrue: get()" ) ; \n\t\t\t\t return   "hello" ; \n\t\t\t } \n\n\t\t\t @Override \n\t\t\t public   boolean   isCancelled ( )   { \n\t\t\t\t return   false ; \n\t\t\t } \n\n\t\t\t @Override \n\t\t\t public   boolean   isDone ( )   { \n\t\t\t\t return   false ; \n\t\t\t } \n\n\t\t\t @Override \n\t\t\t public   String   get ( long  timeout ,   TimeUnit  unit ) \n\t\t\t\t\t throws   InterruptedException ,   ExecutionException ,   TimeoutException   { \n\t\t\t\t return   null ; \n\t\t\t } \n\t\t } ) . subscribe ( new   Consumer < String > ( )   { \n\n\t\t\t @Override \n\t\t\t public   void   accept ( String  t )   throws   Exception   { \n\t\t\t\t System . out . println ( "--\x3e accept(4): fromFuture： "   +  t ) ; \n\t\t\t } \n\t\t } ) ; \n \n 输出： \n --\x3e accept(1):fromArray: 1\n--\x3e accept(1):fromArray: 2\n--\x3e accept(1):fromArray: 3\n--\x3e accept(1):fromArray: 4\n--\x3e accept(1):fromArray: 5\n--\x3e accept(1):fromArray: 6\n---------------------------------------\n--\x3e accept(2) fromIterable: A\n--\x3e accept(2) fromIterable: B\n--\x3e accept(2) fromIterable: C\n--\x3e accept(2) fromIterable: D\n--\x3e accept(2) fromIterable: E\n---------------------------------------\n--\x3e accept(3): fromCallable: 1\n---------------------------------------\n--\x3e fromFutrue: get()\n--\x3e accept(4): fromFuture： hello\n \n \n 注意 ：from默认不在任何特定的调度器上执行。然而你可以将Scheduler作为可选的第二个参数传递给Observable，它会在那个调度器上管理这个Future。 \nJavadoc:  from(array) \nJavadoc:  from(Iterable) \nJavadoc:  from(Callable) \nJavadoc:  from(Future) \nJavadoc:  from(Future,Scheduler) \nJavadoc:  from(Future,timeout,timeUnit) \n 6. Repeat \n 创建一个 发射特定数据重复多次 的Observable，它不是创建一个Observable，而是重复发射原始 Observable的数据序列，这个序列或者是无限的，或者通过  repeat(n) \t指定重复次数。\n \n 实例代码： \n \t // 1. repeat(): 一直重复发射原始 Observable的数据序列 \n\t Observable . range ( 1 ,   5 ) \n\t\t\t . repeat ( ) \n\t\t\t . subscribe ( new   Consumer < Integer > ( )   { \n\n\t\t\t\t @Override \n\t\t\t\t public   void   accept ( Integer  t )   throws   Exception   { \n\t\t\t\t\t System . out . println ( "--\x3e accept(1): "   +  t ) ; \n\t\t\t\t } \n\t\t\t } ) ; \n\t\n\t System . out . println ( "----------------------------------------" ) ; \n\t // 2. repeat(n): 重复执行5次 \n\t Observable . range ( 1 ,   2 ) \n\t\t\t . repeat ( 3 ) \n\t\t\t . subscribe ( new   Consumer < Integer > ( )   { \n\n\t\t\t\t @Override \n\t\t\t\t public   void   accept ( Integer  t )   throws   Exception   { \n\t\t\t\t\t System . out . println ( "--\x3e accept(2): "   +  t ) ; \n\t\t\t\t } \n\t\t\t } ) ; \n\n \n 输出： \n --\x3e accept(1): 1\n--\x3e accept(1): 2\n--\x3e accept(1): 3\n--\x3e accept(1): 4\n--\x3e accept(1): 5\n--\x3e accept(1): 1\n--\x3e accept(1): 2\n--\x3e accept(1): 3\n--\x3e accept(1): 4\n--\x3e accept(1): 5\n--\x3e accept(1): 1\n--\x3e accept(1): 2\n--\x3e accept(1): 3\n--\x3e accept(1): 4\n--\x3e accept(1): 5\n......\n----------------------------------------\n--\x3e accept(2): 1\n--\x3e accept(2): 2\n--\x3e accept(2): 1\n--\x3e accept(2): 2\n--\x3e accept(2): 1\n--\x3e accept(2): 2\n \n \n 注意 ： repeat 操作符默认在 trampoline 调度器上执行。有一个变体可以通过可选参数指定 Scheduler。 \nJavadoc:  repeat() \nJavadoc:  repeat(long) \nJavadoc:  repeat(Scheduler) \nJavadoc:  repeat(long,Scheduler) \n 7. RepeatWhen \n repeatWhen 的操作符，它不是缓存和重放原始 Observable 的数据序列，接收到原始 Observable 终止通知后，有条件的决定是否重新订阅原来的 Observable 。 \n 将原始 Observable 的终止通知（完成或错误）当做一个 void 数据传递给一个通知处理器，它以此来决定是否要重新订阅和发射原来的 Observable。这个通知处理器就像一个 Observable 操作符，接受一个发射 void通知的 Observable为输入，返回一个发射 void 数据（意思是，重新订阅和发射原始 Observable）或者直接终止（意思是，使用 repeatWhen 终止发射数据）的 Observable。 \n \n 实例代码： \n \t // repeatWhen(Func1())：接收到终止通知后，在函数中决定是否重新订阅原来的Observable \n\t // 需要注意的是repeatWhen的objectObservable处理（也可以单独自定义Observable返回），这里使用flathMap进行处理， \n\t // 让它延时发出onNext，这里onNext发出什么数据都不重要，它只是仅仅用来处理重订阅的通知，如果发出的是onComplete/onError，则不会触发重订阅 \n\t Observable . range ( 1 ,   2 ) \n\t\t\t . doOnComplete ( new   Action ( )   { \n\n\t\t\t\t @Override \n\t\t\t\t public   void   run ( )   throws   Exception   { \n\t\t\t\t\t System . out . println ( "-----------\x3e 完成一次订阅" ) ; \n\t\t\t\t } \n\t\t\t } ) . repeatWhen ( new   Function < Observable < Object > ,   ObservableSource < ? > > ( )   { \n\t\t\t\t private   int  n  =   0 ; \n\t\t\t\t\n\t\t\t\t @Override \n\t\t\t\t public   ObservableSource < ? >   apply ( Observable < Object >  t )   throws   Exception   { \n\t\t\t\t\t // 接收到原始Observable的终止通知，决定是否重新订阅 \n\t\t\t\t\t System . out . println ( "--\x3e apply repeat " ) ; \n\t\t\t\t\t return  t . flatMap ( new   Function < Object ,   ObservableSource < ? > > ( )   { \n\n\t\t\t\t\t\t @Override \n\t\t\t\t\t\t public   ObservableSource < ? >   apply ( Object  t )   throws   Exception   { \n\t\t\t\t\t\t\t if ( n  <   3 )   { \t // 重新订阅3次 \n\t\t\t\t\t\t\t\tn  ++ ; \n\t\t\t\t\t\t\t\t return   Observable . just ( 0 ) ;    \n\t\t\t\t\t\t\t }   else   { \n\t\t\t\t\t\t\t\t return   Observable . empty ( ) ; \n\t\t\t\t\t\t\t } \n\t\t\t\t\t\t } \n\t\t\t\t\t } ) ; \n\t\t\t\t\t // return Observable.timer(1, TimeUnit.SECONDS);\t\t// 间隔一秒后重新订阅一次 \n\t\t\t\t\t // return Observable.interval(1, TimeUnit.SECONDS);\t// 每间隔一秒重新订阅一次 \n\t\t\t\t } \n\t\t\t } ) . subscribe ( new   Consumer < Integer > ( )   { \n\n\t\t\t\t @Override \n\t\t\t\t public   void   accept ( Integer  t )   throws   Exception   { \n\t\t\t\t\t System . out . println ( "--\x3e accept: "   +  t ) ; \n\t\t\t\t } \n\t\t\t } ) ; \n \n 输出： \n --\x3e apply repeat \n--\x3e accept: 1\n--\x3e accept: 2\n-----------\x3e 完成一次订阅\n--\x3e accept: 1\n--\x3e accept: 2\n-----------\x3e 完成一次订阅\n--\x3e accept: 1\n--\x3e accept: 2\n-----------\x3e 完成一次订阅\n--\x3e accept: 1\n--\x3e accept: 2\n-----------\x3e 完成一次订阅\n \n \n 注意 ：repeatWhen操作符默认在\ttrampoline\t调度器上执行。 \n Javadoc:  repeatWhen(Func1) \n 8. RepeatUntil \n 根据条件（函数 BooleanSupplier ）判断是否需要继续订阅:\tfalse:继续订阅; true:取消订阅\n \n 实例代码： \n \t // repeatUntil 根据条件（BooleanSupplier）判断是否需要继续订阅 \n\t Observable . range ( 1 ,   2 ) \n\t\t\t . doOnComplete ( new   Action ( )   { \n\n\t\t\t\t @Override \n\t\t\t\t public   void   run ( )   throws   Exception   { \n\t\t\t\t\t System . out . println ( "-----------\x3e 完成一次订阅" ) ; \n\t\t\t\t } \n\t\t\t } ) . repeatUntil ( new   BooleanSupplier ( )   { \n\n\t\t\t\t private   int  n  =   0 ; \n\n\t\t\t\t @Override \n\t\t\t\t public   boolean   getAsBoolean ( )   throws   Exception   { \n\t\t\t\t\t System . out . println ( "getAsBoolean = "   +   ( n  <   3 ?   false : true )   ) ; \n\t\t\t\t\t // 是否需要终止 \n\t\t\t\t\t if   ( n  <   3 )   { \n\t\t\t\t\t\tn ++ ; \n\t\t\t\t\t\t return   false ;  \t // 继续重新订阅 \n\t\t\t\t\t } \n\t\t\t\t\t return   true ;  \t\t // 终止重新订阅 \n\t\t\t\t } \n\t\t\t } ) . subscribe ( new   Consumer < Integer > ( )   { \n\n\t\t\t\t @Override \n\t\t\t\t public   void   accept ( Integer  t )   throws   Exception   { \n\t\t\t\t\t System . out . println ( "--\x3e accept: "   +  t ) ; \n\t\t\t\t } \n\t\t\t } ) ; \n \n 输出： \n --\x3e accept: 1\n--\x3e accept: 2\n-----------\x3e 完成一次订阅\ngetAsBoolean = false\n--\x3e accept: 1\n--\x3e accept: 2\n-----------\x3e 完成一次订阅\ngetAsBoolean = false\n--\x3e accept: 1\n--\x3e accept: 2\n-----------\x3e 完成一次订阅\ngetAsBoolean = false\n--\x3e accept: 1\n--\x3e accept: 2\n-----------\x3e 完成一次订阅\ngetAsBoolean = true\n \n \n Javadoc:  repeatWhen(Func1) \n 9. Range \n 创建一个发射特定整数序列的Observable。 \n Range 操作符发射一个范围内的有序整数序列，你可以指定范围的起始和长度。 \n RxJava将这个操作符实现为\trange\t函数，它接受两个参数，一个是范围的起始值，一个是范围的数据的数目。如果你将第二个参数设为0，将导致Observable不发射任何数据（如果设置 为负数，会抛异常）。\n \n 实例代码： \n \t // 1. range(n,m) 发射从n开始的m个整数序列，序列区间[n,n+m-1) \n\t Observable . range ( 0 ,   5 ) \n\t\t\t . subscribe ( new   Consumer < Integer > ( )   { \n\n\t\t\t\t @Override \n\t\t\t\t public   void   accept ( Integer  t )   throws   Exception   { \n\t\t\t\t\t System . out . println ( "-- accept(range): "   +  t ) ; \n\t\t\t\t } \n\t\t\t } ) ; \n\t\n\t System . out . println ( "------------------------------" ) ; \n\t // 2. rangeLong(n,m) 发射从n开始的m个长整型序列，序列区间[n,n+m-1) \n\t Observable . rangeLong ( 1 ,   5 ) \n\t\t\t . subscribe ( new   Consumer < Long > ( )   { \n\n\t\t\t\t @Override \n\t\t\t\t public   void   accept ( Long  t )   throws   Exception   { \n\t\t\t\t\t System . out . println ( "-- accept(rangeLong): "   +  t ) ; \n\t\t\t\t } \n\t\t\t } ) ; \n \n 输出： \n -- accept(range): 0\n-- accept(range): 1\n-- accept(range): 2\n-- accept(range): 3\n-- accept(range): 4\n------------------------------\n-- accept(rangeLong): 1\n-- accept(rangeLong): 2\n-- accept(rangeLong): 3\n-- accept(rangeLong): 4\n-- accept(rangeLong): 5\n \n \n Javadoc:  range(int start,int count) \nJavadoc:  rangeLong(long start, long count) \n 10. interval \n 创建一个按固定时间间隔发射整数序列的Observable，它按固定的时间间隔发射一个无限递增的整数序列。\nRxJava将这个操作符实现为\tinterval\t方法。它接受一个表示时间间隔的参数和一个表示时间单位的参数。\n \n 实例代码： \n \t // [1] interval(long period, TimeUnit unit)  \n\t // 每间隔period时间单位，发射一次整数序列 \n\t Observable . interval ( 1 ,   TimeUnit . SECONDS ) \n\t\t\t . subscribe ( new   Consumer < Long > ( )   { \n\n\t\t\t\t public   void   accept ( Long  l )   throws   Exception   { \n\t\t\t\t\t System . out . println ( "--\x3e accept(1): "   +  l ) ; \n\t\t\t\t } \n\t\t\t } ) ; \n\n\t System . out . println ( "------------------------------------" ) ; \n\t // [2] interval(long initialDelay, long period, TimeUnit unit) \n\t // 在延迟initialDelay秒后每隔period时间单位发射一个整数序列 \n\t Observable . interval ( 0 ,   1 ,   TimeUnit . SECONDS ) \n\t\t\t . subscribe ( new   Consumer < Long > ( )   { \n\n\t\t\t\t public   void   accept ( Long  t )   throws   Exception   { \n\t\t\t\t\t System . out . println ( "--\x3e accept(2): "   +  t ) ; \n\t\t\t\t } \n\t\t\t } ) ; \n\t\n\t System . out . println ( "------------------------------------" ) ; \n\t // [3] intervalRange(long start, long count, long initialDelay, long period, TimeUnit unit) \n\t // 延迟initialDelay秒后从起始数据start开始，每隔period秒发送一个数字序列，一共发送count个数据 \n\t Observable . intervalRange ( 1 ,   5 ,   3 ,   2 ,   TimeUnit . SECONDS ) \n\t\t\t . subscribe ( new   Consumer < Long > ( )   { \n\n\t\t\t\t public   void   accept ( Long  t )   throws   Exception   { \n\t\t\t\t\t System . out . println ( "--\x3e accept(3): "   +  t ) ; \n\t\t\t\t } \n\t\t\t } ) ; \n \n \n 注意 ：interval\t默认在\tcomputation 调度器上执行， 有一个变体可以通过可选参数指定 Scheduler。 \nJavadoc:  interval(long period, TimeUnit unit) \nJavadoc:  interval(long period, TimeUnit unit, Scheduler scheduler) \nJavadoc:  interval(long initialDelay, long period, TimeUnit unit) \nJavadoc:  interval(long initialDelay, long period, TimeUnit unit, Scheduler scheduler) \nJavadoc:  intervalRange(long start, long count, long initialDelay, long period, TimeUnit unit) \nJavadoc:  intervalRange(long start, long count, long initialDelay, long period, TimeUnit unit, Scheduler scheduler) \n \n 输出： \n --\x3e accept(1): 0\n--\x3e accept(1): 1\n--\x3e accept(1): 2\n--\x3e accept(1): 3\n--\x3e accept(1): 4\n--\x3e accept(1): 5\n...\n------------------------------------\n--\x3e accept(2): 0\n--\x3e accept(2): 1\n--\x3e accept(2): 2\n--\x3e accept(2): 3\n--\x3e accept(2): 4\n--\x3e accept(2): 5\n...\n------------------------------------\n--\x3e accept(3): 1\n--\x3e accept(3): 2\n--\x3e accept(3): 3\n--\x3e accept(3): 4\n--\x3e accept(3): 5\n 11. Timer \n 创建一个给定的延迟后发射一个特殊的值的Observable。 \n RxJava将这个操作符实现为 timer 函数。timer 返回一个Observable，它在延迟一段给定的时间后发射一个简单的数字0\n \n 实例代码： \n \t // timer(long delay, TimeUnit unit, Scheduler scheduler) \n\t // 定时delay时间 单位后发送数字0，指定可选参数Schedule调度器为trampoline(当前线程排队执行) \n\t Observable . timer ( 5 ,   TimeUnit . SECONDS ,   Schedulers . trampoline ( ) ) \n\t\t\t . subscribe ( new   Consumer < Long > ( )   { \n\n\t\t\t\t @Override \n\t\t\t\t public   void   accept ( Long  t )   throws   Exception   { \n\t\t\t\t\t System . out . println ( "--\x3e accept: "   +  t ) ; \n\t\t\t\t } \n\t\t\t } ) ; \n \n 输出： \n --\x3e accept: 0\n \n \n 注意 ：timer\t操作符默认在 computation 调度器上执行。有一个变体可以通过可选参数指定 Scheduler。 \nJavadoc:  timer(long delay, TimeUnit unit) \nJavadoc:  timer(long delay, TimeUnit unit, Scheduler scheduler) \n 小结 \n 根据实际情况，使用不同的方式创建不同种类的Observable，这个在开发中非常有用，可以减少很多重复、复杂、冗余的操作，可以快速的创建一个符合要求的Observable，一定程度上提高了开发的效率。 \n \n 提示 ：以上使用的Rxjava2版本:  2.2.12 \n \n 实例代码： \n \n \n 代码下载 \n Github \n Gitee（码云） \n \n \n'},{title:"3. Observable的数据变换（一）",frontmatter:{author:"JiangMing",title:"3. Observable的数据变换（一）",date:"2019-12-30 22:26:56",sidebar:"auto",categories:["Java","Rxjava2"],tags:["Rxjava2"],publish:!0,showSponsor:!0},regularPath:"/developer/rxjava2/03.rxjava2.html",relativePath:"developer/rxjava2/03.rxjava2.md",key:"v-2bfddaf5",path:"/developer/rxjava2/03.rxjava2.html",headers:[{level:2,title:"简要：",slug:"简要"},{level:2,title:"1. Buffer",slug:"_1-buffer"},{level:3,title:"1.1 buffer(count)",slug:"_1-1-buffer-count"},{level:3,title:"1.2 buffer(boundary)",slug:"_1-2-buffer-boundary"},{level:3,title:"1.3 buffer(count, skip)",slug:"_1-3-buffer-count-skip"},{level:3,title:"1.4 buffer(timespan, TimeUnit)",slug:"_1-4-buffer-timespan-timeunit"},{level:3,title:"1.5 buffer(timespan, TimeUnit, count)",slug:"_1-5-buffer-timespan-timeunit-count"},{level:3,title:"1.6 buffer(timespan, timeskip, TimeUnit)",slug:"_1-6-buffer-timespan-timeskip-timeunit"},{level:3,title:"1.7 buffer(bufferClosingSelector)",slug:"_1-7-buffer-bufferclosingselector"},{level:2,title:"2. Map",slug:"_2-map"},{level:2,title:"3. FlatMap",slug:"_3-flatmap"},{level:3,title:"3.1 flatMap(mapper)",slug:"_3-1-flatmap-mapper"},{level:3,title:"3.2 flatMap(mapper, maxConcurrency)",slug:"_3-2-flatmap-mapper-maxconcurrency"},{level:3,title:"3.3 flatMap(mapper, delayErrors)",slug:"_3-3-flatmap-mapper-delayerrors"},{level:3,title:"3.4 flatMapIterable(mapper)",slug:"_3-4-flatmapiterable-mapper"},{level:3,title:"3.5 flatMapIterable(mapper, resultSelector)",slug:"_3-5-flatmapiterable-mapper-resultselector"},{level:2,title:"4. ConcatMap",slug:"_4-concatmap"},{level:2,title:"5. SwitchMap",slug:"_5-switchmap"}],content:' 简要： \n 需求了解： \n 对于 Observable 发射的数据有的时候可能不满足我们的要求，或者需要转化为其他类型的数据，比如：缓存，数据类型转化，数据拦截等。此时可以使用 Rx 中的一些对于数据操作的操作进行数据的变换，方便我们的开发。 \n 执行变换的操作方法： \n \n Buffer：它定期从Observable收集数据到一个集合，然后把这些数据集合打包发射，而不是一次发射一个 \n Map：对序列的每一项都应用一个函数来变换Observable发射的数据序列 \n FlatMap，FlatMapIterable，ConcatMap：将Observable发射的数据集合变换为Observables集合，然后将这些Observable发射的数据平铺化的放进一个单独的 Observable \n SwitchMap：将Observable发射的数据集合变换为Observables集合，然后只发射这些Observables最近发射的数据 \n Window：定期将来自Observable的数据分拆成一些Observable窗口，然后发射这些窗口，而不是每次发射一项 \n GroupBy：将Observable分拆为Observable集合，将原始Observable发射的数据按 Key\n分组，每一个Observable发射一组不同的数据 \n Scan：对Observable发射的每一项数据应用一个函数，然后按顺序依次发射每一个值 \n Cast：在发射之前强制将Observable发射的所有数据转换为指定类型 \n 1. Buffer \n 定期收集Observable的数据放进一个数据包裹（缓存），然后发射这些数据包裹，而不是一次发射一个值。 \n \n Buffer\t操作符将一个Observable变换为另一个，原来的Observable正常发射数据，变换产生 的Observable发射这些数据的缓存集合。\tBuffer\t操作符在很多语言特定的实现中有很多种变 体，它们在如何缓存这个问题上存在区别。 \n Window\t操作符与\tBuffer\t类似，但是它在发射之前把收集到的数据放进单独的Observable， 而不是放进一个数据结构。 \n 注意：  如果原来的Observable发射了一个\tonError\t通知，\tBuffer\t会立即传递这个通知，而不是首先发射缓存的数据，即使在这之前缓存中包含了原始Observable发射的数据。 \n 在RxJava中的一些\tBuffer\t的操作如下： \n 1.1 buffer(count) \n \n 以列表(List)的形式发射非重叠的缓存，每一个缓存至多包含来自原始 Observable 的  count  项数据（最后发射的列表数据可能少于count项)。 \n 实例代码： \n \t // 1. buffer(count) \t \n\t // 以列表(List)的形式发射非重叠的缓存， \n\t // 每一个缓存至多包含来自原始 Observable的count项数据（最后发射的列表数据可能少于count项） \n\t Observable . range ( 1 ,   10 ) \n\t\t . buffer ( 3 ) \n\t\t . subscribe ( new   Consumer < List < Integer > > ( )   { \n\n\t\t\t @Override \n\t\t\t public   void   accept ( List < Integer >  t )   throws   Exception   { \n\t\t\t\t System . out . println ( "--\x3e bufferr(1) accept: "   +  t ) ; \n\t\t\t } \n\t\t } ) ; \n \n 输出： \n --\x3e bufferr(1) accept: [1, 2, 3]\n--\x3e bufferr(1) accept: [4, 5, 6]\n--\x3e bufferr(1) accept: [7, 8, 9]\n--\x3e bufferr(1) accept: [10]\n \n \n Javadoc:  buffer(count) \n 1.2 buffer(boundary) \n 开始创建一个 List  收集原始 Observable 数据，监视一个名叫   boundary  的Observable，每当这个Observable发射了一个值，它就创建一个新的\t List \t开始收集来自原始Observable的数据并发射原来已经收集数据的  List , 当  boundary  Observable 发送了完成通知，会将此时还未发送的 List 发送。 \n 注意：  所有发送的 List 可能没有收集到数据，此时数据的收集可能并不会完整收集所有原始 Observable 数据。 \n \n 实例代码： \n \t // 2. buffer(boundary) 监视一个名叫boundary的Observable， \n\t // 开始创建一个List收集原始 Observable 数据，监视一个名叫boundary的Observable， \n\t // 每当这个Observable发射了一个值，它就创建一个新的List开始收集来自原始Observable的数据并发射原来已经收集数据的List, \n\t // 当boundary发送了完成通知，会将此时还未发送的 List 发送。  \n\t // 所有发送的 List 可能没有收集到数据，此时数据的收集可能并不会完整收集所有原始Observable数据。 \n\t Observable . range ( 1 ,   10000 ) \n\t\t . buffer ( Observable . timer ( 1 ,   TimeUnit . MILLISECONDS ) )  \t\t // 1毫秒后开始接受原始数据 \n\t\t . subscribe ( new   Consumer < List < Integer > > ( )   { \n\n\t\t\t @Override \n\t\t\t public   void   accept ( List < Integer >  t )   throws   Exception   { \n\t\t\t\t System . out . println ( "--\x3e accept(2): "   +  t . size ( ) ) ; \t // 每次收集的数据序列个数 \n\t\t\t } \n\t\t } ) ; \n \n 输出： \n --\x3e accept(2): 2858\n--\x3e accept(2): 5471\n \n \n Javadoc:  buffer(boundary) \n 1.3 buffer(count, skip) \n 从原始Observable的第一项数据开始创建新的缓存，此后每当收 到  skip  项数据，用  count  项数据填充缓存：开头的一项和后续的\tcount-1\t项，它以列表 (List)的形式发射缓存，取决于\tcount\t和\tskip\t的值，这些缓存可能会有重叠部分（比如skip\t< count时），也可能会有间隙（比如skip\t>\tcount时）。 \n \n 解析：  在指定的数据序列中 移动指针 来获取缓存数据：指针每次移动  skip  个数据长度，每次缓存指针位置及后面 count 个数据，指针初始位置在原始数据的第一个（存在的情况下）。 \n 实例代码： \n \t // 3. buffer(int count, int skip) \n\t // 在指定的数据中移动指针来获取缓存数据：指针每次移动1个数据长度，每次缓存3个数据 \n\t Observable . range ( 1 ,   5 ) \n\t\t . buffer ( 3 ,   1 ) \n\t\t . subscribe ( new   Consumer < List < Integer > > ( )   { \n\n\t\t\t @Override \n\t\t\t public   void   accept ( List < Integer >  t )   throws   Exception   { \n\t\t\t\t System . out . println ( "--\x3e bufferr(3) accept: "   +  t ) ; \n\t\t\t } \n\t\t } ) ; \n \n 输出： \n --\x3e bufferr(3) accept: [1, 2, 3]\n--\x3e bufferr(3) accept: [2, 3, 4]\n--\x3e bufferr(3) accept: [3, 4, 5]\n--\x3e bufferr(3) accept: [4, 5]\n--\x3e bufferr(3) accept: [5]\n \n \n Javadoc:  buffer(count, skip) \n 1.4 buffer(timespan, TimeUnit) \n 定期以 List 的形式发射新的数据，在每个时间段，收集来自原始 Observable 的数据（从前面一个数据包裹之后，或者如果是第一个数据包裹，从有观察者订阅原来的 Observale 之后开始）。还有另一个版本的\tbuffer 接受一个 Scheduler 参数。 \n \n 解析：  每隔  timespan  时间段以  List  的形式收集原始Observable的数据 \n 实例代码： \n \t // 4. buffer(long timespan, TimeUnit unit) \n\t // 每隔timespan时间段以list的形式收集数据 \n\t Observable . range ( 1 ,   50000 ) \n\t\t . buffer ( 1 ,   TimeUnit . MILLISECONDS ) \t\t\t\t\t\t\t\t\t // 每隔1毫秒收集一次原始序列数据 \n\t\t . subscribe ( new   Consumer < List < Integer > > ( )   { \n\n\t\t\t @Override \n\t\t\t public   void   accept ( List < Integer >  t )   throws   Exception   { \n\t\t\t\t System . out . println ( "--\x3e bufferr(4) accept: "   +  t . size ( ) ) ; \t // 每次收集的数据序列个数 \n\t\t\t } \n\t\t } ) ; \n \n 输出： \n --\x3e bufferr(4) accept: 2571\n--\x3e bufferr(4) accept: 5457\n--\x3e bufferr(4) accept: 13248\n--\x3e bufferr(4) accept: 12755\n--\x3e bufferr(4) accept: 9543\n--\x3e bufferr(4) accept: 6426\n \n \n 注意：   buffer(timespan,TimeUnit)  默认情况下会使用 computation 调度器 \nJavadoc:\t buffer(timespan,TimeUnit) \nJavadoc:\t buffer(timespan,TimeUnit,Scheduler) \n 1.5 buffer(timespan, TimeUnit, count) \n 每当收到来自原始  Observable  的  count  项数据，或者每过了一段指定  timespan  时间后，\t就以\tList 的形式发射这期间的数据，即使数据项少于 count 项。还有另一个版本的\tbuffer\t接受一个\t Scheduler  参数。 \n \n 实例代码： \n \t // 5. buffer(long timespan, TimeUnit unit, int count) \n\t // 每隔1毫秒缓存50个数据 \n\t Observable . range ( 1 ,   1000 ) \n\t\t . buffer ( 1 ,   TimeUnit . MILLISECONDS ,   50 ) \t\t\t\t\t\t\t\t // 每隔1毫秒收集50个数据序列 \n\t\t . subscribe ( new   Consumer < List < Integer > > ( )   { \n\n\t\t\t @Override \n\t\t\t public   void   accept ( List < Integer >  t )   throws   Exception   { \n\t\t\t\t System . out . println ( "--\x3e bufferr(5) accept: "   +  t . size ( ) ) ; \t // 每次收集的数据序列个数 \n\t\t\t } \n\t\t } ) ; \n \n 输出： \n --\x3e bufferr(5) accept: 50\n--\x3e bufferr(5) accept: 50\n--\x3e bufferr(5) accept: 50\n--\x3e bufferr(5) accept: 50\n--\x3e bufferr(5) accept: 50\n--\x3e bufferr(5) accept: 50\n--\x3e bufferr(5) accept: 50\n--\x3e bufferr(5) accept: 50\n--\x3e bufferr(5) accept: 20\n--\x3e bufferr(5) accept: 50\n--\x3e bufferr(5) accept: 50\n--\x3e bufferr(5) accept: 50\n--\x3e bufferr(5) accept: 4\n--\x3e bufferr(5) accept: 50\n--\x3e bufferr(5) accept: 50\n--\x3e bufferr(5) accept: 50\n--\x3e bufferr(5) accept: 50\n--\x3e bufferr(5) accept: 50\n--\x3e bufferr(5) accept: 50\n--\x3e bufferr(5) accept: 50\n--\x3e bufferr(5) accept: 50\n--\x3e bufferr(5) accept: 26\n \n \n 注意：   buffer(timespan, TimeUnit, count)  默认情况下会使用 computation 调度器 \nJavadoc:  buffer(timespan, TimeUnit, count) \nJavadoc:  buffer(timespan, TimeUnit, scheduler, count) \n 1.6 buffer(timespan, timeskip, TimeUnit) \n 在每一个  timeskip \t时期内都创建一个新的  List \t,然后用原始 Observable 发射的每一项数据填充这个列表（在把这个 List 当做自己的数据发射前，从创建时开始，直到过了\ttimespan\t这么长的时间）。如果  timespan  长于  timeskip  ，它发射的数据包将会重叠，因此可能包含重复的数据项。 \n \n 解析：  在每隔  timeskip  时间段都创建一个新的 List ，每个 List 都独立收集  timespan  时间段原始Observable发射的数据。 因此在 timespan 长于 timeskip 时，它发射的数据包将会重叠，因此不同 List 中可能包含重复的数据项。 还有另一个版本的 buffer\t接受一个 Scheduler 参数。 \n 实例代码： \n \t // 6. buffer(long timespan, long timeskip, TimeUnit unit) \n\t // 在每一个timeskip时期内都创建一个新的 List, \n\t // 每个List都独立收集timespan时间段原始Observable发射的数据, \n\t // 如果 timespan 长于 timeskip，它发射的数据包将会重叠，因此不同List中可能包含重复的数据项 \n\t Observable . range ( 1 ,   50000 ) \n\t\t\t . buffer ( 1 ,   1 ,   TimeUnit . MILLISECONDS ,   Schedulers . newThread ( ) ) \n\t\t\t . subscribe ( new   Consumer < List < Integer > > ( )   { \n\n\t\t\t\t @Override \n\t\t\t\t public   void   accept ( List < Integer >  t )   throws   Exception   { \n\t\t\t\t\t System . out . println ( "--\x3e accept(6): "   +  t . size ( ) ) ; \t // 每次收集的数据序列个数 \n\t\t\t\t } \n\t\t\t } ) ; \n \n 输出： \n --\x3e accept(6): 1412\n--\x3e accept(6): 733\n--\x3e accept(6): 10431\n--\x3e accept(6): 694\n--\x3e accept(6): 18944\n--\x3e accept(6): 10710\n--\x3e accept(6): 944\n--\x3e accept(6): 6132\n \n \n 注意： buffer(imespan, timeskip, TimeUnit)  默认情况下会使用 computation 调度器。 \nJavadoc:  buffer(imespan, timeskip, TimeUnit) \nJavadoc:  buffer(imespan, timeskip, TimeUnit, schedule) \n 1.7 buffer(bufferClosingSelector) \n 当它订阅原来的Observable时，开始将数据收集到一个 List ，然后它调用  bufferClosingSelector \t生成第二个 Observable ，当第二个Observable 发射一个 TClosing  时，buffer 发射当前的  List ，然后 重复 这个过程：开始组装一个新的List，然后调用bufferClosingSelector创建一个新的Observable并监视它。 \n 注意：  它会一直这样做直到原来的Observable执行完成，可以收集 完整 的原始 Observable 的数据 \n \n 实例代码： \n \t // 7. buffer(Callable<ObservableSource<T>> boundarySupplier) \n\t // 当它订阅原来的Observable时，开始将数据收集到一个List，然后它调用 bufferClosingSelector 生成第二个Observable， \n\t // 当第二个Observable 发射一个 TClosing 时，buffer 发射当前的 List ， \n\t // 然后重复这个过程：开始组装一个新的List，然后调用bufferClosingSelector创建一个新的Observable并监视它。 \n\t // 它会一直这样做直到原来的Observable执行完成。会收集完整的原始 Observable 的数据 \n\t Observable . range ( 1 ,   50000 ) \n\t\t . buffer ( new   Callable < Observable < Long > > ( )   { \n\n\t\t\t @Override \n\t\t\t public   Observable < Long >   call ( )   throws   Exception   { \n\t\t\t\t return   Observable . timer ( 1 ,   TimeUnit . MILLISECONDS ) ; \n\t\t\t } \n\t\t } ) . subscribe ( new   Consumer < List < Integer > > ( )   { \n\n\t\t\t @Override \n\t\t\t public   void   accept ( List < Integer >  t )   throws   Exception   { \n\t\t\t\t System . out . println ( "--\x3e accept(7): "   +  t . size ( ) ) ; \t // 每次收集的数据序列个数 \n\t\t\t } \n\t\t } ) ; \n \n 输出： \n --\x3e accept(7): 14650\n--\x3e accept(7): 9708\n--\x3e accept(7): 25642\n \n \n Javadoc:  buffer(bufferClosingSelector) \n 2. Map \n 对Observable发射的每一项数据应用一个函数，执行变换操作。 \n 实例代码： \n \t // map(Function<T,R)) \n\t // 接受原始Observable的数据，发送处理后的数据 \n\t Observable . range ( 1 ,   5 ) \n\t\t . map ( new   Function < Integer ,   Integer > ( )   { \n\n\t\t\t @Override \n\t\t\t public   Integer   apply ( Integer  t )   throws   Exception   { \n\t\t\t\t System . out . println ( "--\x3e apply: "   +  t ) ; \n\t\t\t\t return  t * t ; \t // 计算原始数据的平方 \n\t\t\t } \n\t\t } ) . subscribe ( new   Consumer < Integer > ( )   { \n\n\t\t\t @Override \n\t\t\t public   void   accept ( Integer  t )   throws   Exception   { \n\t\t\t\t System . out . println ( "--\x3e accept Map: "   +  t ) ; \n\t\t\t } \n\t\t } ) ; \n \n 输出： \n --\x3e apply: 1\n--\x3e accept Map: 1\n--\x3e apply: 2\n--\x3e accept Map: 4\n--\x3e apply: 3\n--\x3e accept Map: 9\n--\x3e apply: 4\n--\x3e accept Map: 16\n--\x3e apply: 5\n--\x3e accept Map: 25\n \n \n Javadoc:  map(mapper) \n 3. FlatMap \n 主要对原始数据进行转换操作后发送至订阅者。 \n RxJava2 中的一些 FlatMap 操作方法如下： \n 3.1 flatMap(mapper) \n FlatMap 将一个发射数据的 Observable 变换为  多个  Observables，然后将它们发射的数据合并后放进一个单独的 Observable。 \n \n FlatMap\t操作符使用一个指定的函数对原始Observable发射的每一项数据执行变换操作，这个函数返回一个本身也发射数据的Observable，然后  FlatMap  合并这些Observables发射的数据，最后将合并后的结果当做它自己的数据序列发射。 \n 这个方法是很有用的，例如，当你有一个这样的Observable：它发射一个数据序列，这些数据本身包含Observable成员或者可以变换为Observable，因此你可以创建一个新的 Observable发射这些次级Observable发射的数据的完整集合。 \n 注意： \tFlatMap\t对这些Observables发射的数据做的是合并(merge)操作，因此它们可能是交错的。\n在许多语言特定的实现中，还有一个操作符不会让变换后的Observables发射的数据交错，它按照严格的顺序发射这些数据，这个操作符通常被叫作 ConcatMap 或者类似的名字。 \n 实例代码： \n \t // \t1. flatMap(Function) \n\t // \t对原始Observable发射的每一项数据执行变换操作，这个函数返回一个本身也发射数据的Observable， \n\t // \t然后FlatMap合并这些Observables发射的数据，最后将合并后的结果当做它自己的数据序列发射 \n\t Observable . range ( 1 ,   5 ) \n\t\t . flatMap ( new   Function < Integer ,   ObservableSource < ?   extends   Integer > > ( )   { \n\n\t\t\t @Override \n\t\t\t public   ObservableSource < ?   extends   Integer >   apply ( Integer  t )   throws   Exception   { \n\t\t\t\t System . out . println ( "--\x3e apply(1): "   +  t ) ; \t\t\t\t\t\t\t // 原始数据 \n\t\t\t\t return   Observable . range ( 1 ,  t ) . subscribeOn ( Schedulers . newThread ( ) ) ; \t // 处理后数据 \n\t\t\t } \n\t\t } ) . subscribe ( new   Consumer < Integer > ( )   { \n\n\t\t\t @Override \n\t\t\t public   void   accept ( Integer  t )   throws   Exception   { \n\t\t\t\t System . out . println ( "--\x3e accept flatMap(1): "   +  t ) ; \t\t\t\t\t // 接受的所有数据 \n\t\t\t } \n\t\t } ) ; \n \n 输出： \n --\x3e apply(1): 1\n--\x3e apply(1): 2\n--\x3e apply(1): 3\n--\x3e apply(1): 4\n--\x3e accept flatMap(1): 1\n--\x3e accept flatMap(1): 2\n--\x3e apply(1): 5\n--\x3e accept flatMap(1): 1\n--\x3e accept flatMap(1): 1\n--\x3e accept flatMap(1): 2\n--\x3e accept flatMap(1): 3\n--\x3e accept flatMap(1): 4\n--\x3e accept flatMap(1): 1\n--\x3e accept flatMap(1): 2\n--\x3e accept flatMap(1): 3\n--\x3e accept flatMap(1): 4\n--\x3e accept flatMap(1): 5\n--\x3e accept flatMap(1): 1\n--\x3e accept flatMap(1): 2\n--\x3e accept flatMap(1): 3\n \n \n Javadoc:  flatMap(mapper) \n 3.2 flatMap(mapper, maxConcurrency) \n maxConcurrency  这个参数设置 flatMap 从原来的Observable映射Observables的最大同时订阅数。当达到这个限制时，它会等待其中一个终止然后再订阅另一个。 \n \n 实例代码： \n \t // 2. flatMap(Function, maxConcurrency) \n\t // maxConcurrency 这个参数设置 flatMap 从原来的Observable映射Observables的最大同时订阅数。 \n\t // 当达到这个限制时，它会等待其中一个终止然后再订阅另一个 \n\t Observable . range ( 1 ,   5 ) \n\t . flatMap ( new   Function < Integer ,   ObservableSource < ?   extends   Integer > > ( )   { \n\n\t\t @Override \n\t\t public   ObservableSource < ?   extends   Integer >   apply ( Integer  t )   throws   Exception   { \n\t\t\t System . out . println ( "--\x3e apply(2): "   +  t ) ; \n\t\t\t return   Observable . range ( 1 ,  t ) . subscribeOn ( Schedulers . newThread ( ) ) ; \n\t\t } \n\t // 指定最大订阅数为1，此时等待上一个订阅的Observable结束，在进行下一个Observable订阅 \n\t } ,   1 ) . subscribe ( new   Consumer < Integer > ( )   { \n\n\t\t @Override \n\t\t public   void   accept ( Integer  t )   throws   Exception   { \n\t\t\t System . out . println ( "--\x3e accept flatMap(2): " +  t ) ; \n\t\t } \n\t } ) ; \n \n 输出： \n --\x3e apply(2): 1\n--\x3e apply(2): 2\n--\x3e apply(2): 3\n--\x3e apply(2): 4\n--\x3e apply(2): 5\n--\x3e accept flatMap(2): 1\n--\x3e accept flatMap(2): 1\n--\x3e accept flatMap(2): 2\n--\x3e accept flatMap(2): 1\n--\x3e accept flatMap(2): 2\n--\x3e accept flatMap(2): 3\n--\x3e accept flatMap(2): 1\n--\x3e accept flatMap(2): 2\n--\x3e accept flatMap(2): 3\n--\x3e accept flatMap(2): 4\n--\x3e accept flatMap(2): 1\n--\x3e accept flatMap(2): 2\n--\x3e accept flatMap(2): 3\n--\x3e accept flatMap(2): 4\n--\x3e accept flatMap(2): 5\n \n \n Javadoc:  flatMap(mapper, maxConcurrency) \n 3.3 flatMap(mapper, delayErrors) \n delayError  这个参数指定是否延迟发生  Error  的Observable通知。还有一个可以指定最大订阅数参数  maxConcurrency   的变体。 \n \n 解析：  当值为  true  时延迟发生 Error 的这个订阅的Observable通知，不中断当前的订阅操作，继续下一个Observable的订阅，在所有订阅的Observable全部结束后发送 Error 这个Observable的通知，当值为  false  时则中断所有订阅的操作，并发送  Error  的通知。 \n 实例代码： \n \t // 3. flatMap(Function, delayErrors) \n\t // delayErrors 这个参数指定是否延迟发生Error的Observable通知 \n\t // 当true 时延迟发生Error的这个订阅的Observable通知，不中断当前的订阅操作， \n\t // 继续下一个Observable的订阅，在所有订阅的Observable全部结束后发送Error这个Observable的通知 \n\t Observable . range ( 1 ,   5 ) \n\t\t . flatMap ( new   Function < Integer ,   ObservableSource < ?   extends   Integer > > ( )   { \n\n\t\t\t @Override \n\t\t\t public   ObservableSource < ?   extends   Integer >   apply ( Integer  t )   throws   Exception   { \n\t\t\t\t System . out . println ( "--\x3e apply(3): "   +  t ) ; \n\t\t\t\t\n\t\t\t\t return   Observable . create ( new   ObservableOnSubscribe < Integer > ( )   { \n\n\t\t\t\t\t @Override \n\t\t\t\t\t public   void   subscribe ( ObservableEmitter < Integer >  emitter )   throws   Exception   { \n\t\t\t\t\t\t if (  t  ==   3 )   { \n\t\t\t\t\t\t\t throw   new   NullPointerException ( "delayErrors test!" ) ; \t // 测试 Error \n\t\t\t\t\t\t } \n\t\t\t\t\t\t for   ( int  i  =   1 ;  i  <=  t ;  i ++ )   { \n\t\t\t\t\t\t\temitter . onNext ( i ) ; \n\t\t\t\t\t\t } \n\t\t\t\t\t\temitter . onComplete ( ) ; \n\t\t\t\t\t } \n\t\t\t\t } ) ; \n\t\t\t } \n\t\t // 设置延迟 Error 通知到最后 \n\t\t } ,   true ) . subscribe ( new   Consumer < Integer > ( )   { \n\n\t\t\t @Override \n\t\t\t public   void   accept ( Integer  t )   throws   Exception   { \n\t\t\t\t System . out . println ( "--\x3e accept flatMap(3): " +  t ) ; \n\t\t\t } \n\t\t } , new   Consumer < Throwable > ( )   { \n\n\t\t\t @Override \n\t\t\t public   void   accept ( Throwable  t )   throws   Exception   { \n\t\t\t\t System . out . println ( "--\x3e acceot Error(3): "   +  t ) ; \n\t\t\t } \n\t\t } ) ; \n \n 输出： \n --\x3e apply(3): 1\n--\x3e accept flatMap(3): 1\n--\x3e apply(3): 2\n--\x3e accept flatMap(3): 1\n--\x3e accept flatMap(3): 2\n--\x3e apply(3): 3\n--\x3e apply(3): 4\n--\x3e accept flatMap(3): 1\n--\x3e accept flatMap(3): 2\n--\x3e accept flatMap(3): 3\n--\x3e accept flatMap(3): 4\n--\x3e apply(3): 5\n--\x3e accept flatMap(3): 1\n--\x3e accept flatMap(3): 2\n--\x3e accept flatMap(3): 3\n--\x3e accept flatMap(3): 4\n--\x3e accept flatMap(3): 5\n--\x3e acceot Error(3): java.lang.NullPointerException: delayErrors test!\n \n \n Javadoc:  flatMap(Function, delayErrors) \nJavadoc:  flatMap(Function, delayErrors, maxConcurrency) \n 3.4 flatMapIterable(mapper) \n flatMapIterable\t这个变体成对的打包数据，然后生成  Iterable  而不是原始数据和生成的 Observables，但是处理方式是相同的。 \n \n 解析：  对数据进行处理转换成  Iterable  来发射数据。 \n 实例代码： \n \t //\t4. flatMapIterable(Function(T，R)) \n\t // \t对数据进行处理转换成Iterable来发射数据 \n\t Observable . range ( 1 ,   5 ) \n\t\t . flatMapIterable ( new   Function < Integer ,   Iterable < ?   extends   Integer > > ( )   { \n\n\t\t\t @Override \n\t\t\t public   Iterable < ?   extends   Integer >   apply ( Integer  t )   throws   Exception   { \n\t\t\t\t System . out . println ( "--\x3e apply: "   +  t ) ; \n\t\t\t\t ArrayList < Integer >  list  =   new   ArrayList < Integer > ( ) ; \n\t\t\t\tlist . add ( 888 ) ; \n\t\t\t\tlist . add ( 999 ) ; \n\t\t\t\t return  list ;   // 将原始数据转换为两个数字发送 \n\t\t\t } \n\t\t } ) . subscribe ( new   Consumer < Integer > ( )   { \n\n\t\t\t @Override \n\t\t\t public   void   accept ( Integer  t )   throws   Exception   { \n\t\t\t\t System . out . println ( "--\x3e accept flatMapIterable(4)： "   +  t ) ; \n\t\t\t } \n\t\t } ) ; \n \n 输出： \n --\x3e apply: 1\n--\x3e accept flatMapIterable(4)： 888\n--\x3e accept flatMapIterable(4)： 999\n--\x3e apply: 2\n--\x3e accept flatMapIterable(4)： 888\n--\x3e accept flatMapIterable(4)： 999\n--\x3e apply: 3\n--\x3e accept flatMapIterable(4)： 888\n--\x3e accept flatMapIterable(4)： 999\n--\x3e apply: 4\n--\x3e accept flatMapIterable(4)： 888\n--\x3e accept flatMapIterable(4)： 999\n--\x3e apply: 5\n--\x3e accept flatMapIterable(4)： 888\n--\x3e accept flatMapIterable(4)： 999\n \n \n Javadoc:  flatMapIterable(mapper) \n 3.5 flatMapIterable(mapper, resultSelector) \n 参数  mapper  接收原始数据， resultSelector  同时接收原始数据和  mapper  处理的数据，进行二次数据转换。 \n \n 实例代码： \n \t //\t5. flatMapIterable(Function（T，R）,Function(T,T,R)) \n\t // \t第一个func接受原始数据，转换数据，第二个func同时接受原始和处理的数据，进行二次转换处理 \n\t Observable . range ( 1 ,   3 ) \n\t\t\t . flatMapIterable ( new   Function < Integer ,   Iterable < ?   extends   Integer > > ( )   { \n\n\t\t\t\t @Override \n\t\t\t\t public   Iterable < ?   extends   Integer >   apply ( Integer  t )   throws   Exception   { \n\t\t\t\t\t ArrayList < Integer >  list  =   new   ArrayList < Integer > ( ) ; \n\t\t\t\t\tlist . add ( 888 ) ; \n\t\t\t\t\tlist . add ( 999 ) ; \n\t\t\t\t\t return  list ;   // 将原始数据转换为两个数字发送 \n\t\t\t\t } \n\t\t\t } ,   new   BiFunction < Integer ,   Integer ,   Integer > ( )   { \n\n\t\t\t\t @Override \n\t\t\t\t public   Integer   apply ( Integer  t1 ,   Integer  t2 )   throws   Exception   { \n\t\t\t\t\t System . out . println ( "--\x3e apply(5): t1 = "   +  t1  +   ", t2 = "   +  t2 ) ; \n\t\t\t\t\t return  t1  +  t2 ; \t // 将原始数据和处理过的数据组合进行二次处理发送 \n\t\t\t\t } \n\t\t\t } ) . subscribe ( new   Consumer < Integer > ( )   { \n\n\t\t\t\t @Override \n\t\t\t\t public   void   accept ( Integer  t )   throws   Exception   { \n\t\t\t\t\t System . out . println ( "--\x3e accept flatMapIterable(5)： "   +  t ) ; \n\t\t\t\t } \n\t\t\t } ) ; \n \n 输出： \n --\x3e apply(5): t1 = 1, t2 = 888\n--\x3e accept flatMapIterable(5)： 889\n--\x3e apply(5): t1 = 1, t2 = 999\n--\x3e accept flatMapIterable(5)： 1000\n--\x3e apply(5): t1 = 2, t2 = 888\n--\x3e accept flatMapIterable(5)： 890\n--\x3e apply(5): t1 = 2, t2 = 999\n--\x3e accept flatMapIterable(5)： 1001\n--\x3e apply(5): t1 = 3, t2 = 888\n--\x3e accept flatMapIterable(5)： 891\n--\x3e apply(5): t1 = 3, t2 = 999\n--\x3e accept flatMapIterable(5)： 1002\n \n \n Javadoc:  flatMapIterable(mapper, resultSelector) \n 4. ConcatMap \n concatMap  操作符的功能和  flatMap  是非常相似的，只是有一点，concatMap 最终输出的数据序列和原数据序列是一致，它是按顺序链接Observables，而不是合并(flatMap用的是合并)。 \n 通过  mapper  处理原数据后，转换成 Observables ，按照顺序进行连接 Observables 发送数据。 \n \n 解析：    concatMap 和 flatMap 的功能是一样的， 将一个发射数据的Observable变换为多个Observables，然后将它们发射的数据放进一个单独的Observable。只不过最后合并ObservablesflatMap采用的 merge ，而concatMap采用的是连接( concat )。区别： concatMap是有序的，flatMap是无序的，concatMap最终输出的顺序与原序列保持一致，而flatMap则不一定，有可能出现交错。 \n 实例代码： \n \t // 1. concatMap(Function(T,R)) \n\t // 按照顺序依次处理原始数据和处理的数据 \n\t Observable . range ( 1 ,   3 ) \n\t\t . concatMap ( new   Function < Integer ,   ObservableSource < ?   extends   Integer > > ( )   { \n\n\t\t\t @Override \n\t\t\t public   ObservableSource < ?   extends   Integer >   apply ( Integer  t )   throws   Exception   { \n\t\t\t\t System . out . println ( "--\x3e apply(1): "   +  t ) ; \n\t\t\t\t return   Observable . range ( 1 ,  t ) . doOnSubscribe ( new   Consumer < Disposable > ( )   { \n\n\t\t\t\t\t @Override \n\t\t\t\t\t public   void   accept ( Disposable  t )   throws   Exception   { \n\t\t\t\t\t\t System . out . println ( "--\x3e accept(1): Observable on Subscribe" ) ; \t // 当前的Observable被订阅 \n\t\t\t\t\t } \n\t\t\t\t } ) ; \n\t\t\t } \n\t\t } ) . subscribe ( new   Consumer < Integer > ( )   { \n\n\t\t\t @Override \n\t\t\t public   void   accept ( Integer  t )   throws   Exception   { \n\t\t\t\t System . out . println ( "--\x3e accept concatMap(1): "   +  t ) ; \n\t\t\t } \n\t\t } ) ; \n\t\n\t System . out . println ( "--------------------------------------------" ) ; \n\t // 2. concatMap(mapper, prefetch) \n\t // prefetch 参数是在处理后的Observables发射的数据流中预读数据个数，不影响原数据的发射和接收顺序 \n\t Observable . range ( 1 ,   3 ) \n\t\t . concatMap ( new   Function < Integer ,   ObservableSource < ?   extends   Integer > > ( )   { \n\t\n\t\t\t @Override \n\t\t\t public   ObservableSource < ?   extends   Integer >   apply ( Integer  t )   throws   Exception   { \n\t\t\t\t System . out . println ( "--\x3e apply(2): "   +  t ) ; \n\t\t\t\t return   Observable . range ( 1 ,   3 ) . doOnSubscribe ( new   Consumer < Disposable > ( )   { \n\t\n\t\t\t\t\t @Override \n\t\t\t\t\t public   void   accept ( Disposable  t )   throws   Exception   { \n\t\t\t\t\t\t System . out . println ( "--\x3e accept(2): Observable on Subscribe" ) ; \t // 当前的Observable被订阅 \n\t\t\t\t\t } \n\t\t\t\t } ) ; \n\t\t\t } \n\t\t } ,   2 ) . subscribe ( new   Consumer < Integer > ( )   { \n\t\n\t\t\t @Override \n\t\t\t public   void   accept ( Integer  t )   throws   Exception   { \n\t\t\t\t System . out . println ( "--\x3e accept concatMap(2): "   +  t ) ; \n\t\t\t } \n\t\t } ) ; \n \n 输出： \n --\x3e apply(1): 1\n--\x3e accept(1): Observable on Subscribe\n--\x3e accept concatMap(1): 1\n--\x3e apply(1): 2\n--\x3e accept(1): Observable on Subscribe\n--\x3e accept concatMap(1): 1\n--\x3e accept concatMap(1): 2\n--\x3e apply(1): 3\n--\x3e accept(1): Observable on Subscribe\n--\x3e accept concatMap(1): 1\n--\x3e accept concatMap(1): 2\n--\x3e accept concatMap(1): 3\n--------------------------------------------\n--\x3e apply(2): 1\n--\x3e accept(2): Observable on Subscribe\n--\x3e accept concatMap(2): 1\n--\x3e accept concatMap(2): 2\n--\x3e accept concatMap(2): 3\n--\x3e apply(2): 2\n--\x3e accept(2): Observable on Subscribe\n--\x3e accept concatMap(2): 1\n--\x3e accept concatMap(2): 2\n--\x3e accept concatMap(2): 3\n--\x3e apply(2): 3\n--\x3e accept(2): Observable on Subscribe\n--\x3e accept concatMap(2): 1\n--\x3e accept concatMap(2): 2\n--\x3e accept concatMap(2): 3\n \n \n Javadoc:  concatMap(mapper) \nJavadoc:  concatMap(mapper, refetch) \n 5. SwitchMap \n 有选择的订阅  Observable ，当原始 Observable 发射一个数据，通过  witchMap  返回一个 Observable，\n当原始Observable发射一个新的数据时，它将取消订阅并停止监视产生执之前的Observable，开始监视当前新的Observable。 \n \n 解析：  如果上一个任务尚未完成时，就开始下一个任务的话，上一个任务就会被取消掉。如果所有任务都是在同一个线程里执行的话，此时这个操作符与 ContactMap 一致，都是依次顺序执行。只有在不同的线程里执行的时候，即线程方案为newThread的时候，才会出现这种情况，常用于 网络请求 中。 \n 实例代码： \n \t // 1. witchMap(Function(T,R)) \n\t // 同一个线程执行 \n\t Observable . range ( 1 ,   3 ) \n\t . switchMap ( new   Function < Integer ,   ObservableSource < ?   extends   Integer > > ( )   { \n\n\t\t @Override \n\t\t public   ObservableSource < ?   extends   Integer >   apply ( Integer  t )   throws   Exception   { \n\t\t\t System . out . println ( "--\x3e apply(1): "   +  t ) ; \n\t\t\t return   Observable . range ( 1 ,   3 ) ; \t // 每个任务指定在同一个线程执行 \n\t\t } \n\t } ) . subscribe ( new   Consumer < Integer > ( )   { \n\n\t\t @Override \n\t\t public   void   accept ( Integer  t )   throws   Exception   { \n\t\t\t System . out . println ( "--\x3e accept switchMap(1): "   +  t ) ; \n\t\t } \n\t } ) ; \n\t\n\t System . out . println ( "---------------------------------------" ) ; \n\t // 2. witchMap(Function(T,R)) \n\t // 不同线程执行 \n\t Observable . range ( 1 ,   3 ) \n\t\t . switchMap ( new   Function < Integer ,   ObservableSource < ?   extends   Integer > > ( )   { \n\n\t\t\t @Override \n\t\t\t public   ObservableSource < ?   extends   Integer >   apply ( Integer  t )   throws   Exception   { \n\t\t\t\t System . out . println ( "--\x3e apply(2): "   +  t ) ; \n\t\t\t\t return   Observable . range ( 1 ,   3 ) \n\t\t\t\t\t\t\t\t  . subscribeOn ( Schedulers . newThread ( ) ) ; \t // 每个任务指定在子线程执行 \n\t\t\t } \n\t\t } ) . subscribe ( new   Consumer < Integer > ( )   { \n\n\t\t\t @Override \n\t\t\t public   void   accept ( Integer  t )   throws   Exception   { \n\t\t\t\t System . out . println ( "--\x3e accept switchMap(2): "   +  t ) ; \n\t\t\t } \n\t\t } ) ; \n\t\n\n\t System . out . println ( "---------------------------------------" ) ; \n\t // 3. switchMap(mapper, bufferSize) \n\t // bufferSize 参数是从当前活动的Observable中预读数据的大小 \n\t Observable . range ( 1 ,   3 ) \n\t . switchMap ( new   Function < Integer ,   ObservableSource < ?   extends   Integer > > ( )   { \n\n\t\t @Override \n\t\t public   ObservableSource < ?   extends   Integer >   apply ( Integer  t )   throws   Exception   { \n\t\t\t System . out . println ( "--\x3e apply(3): "   +  t ) ; \n\t\t\t return   Observable . range ( 1 ,   5 ) . subscribeOn ( Schedulers . newThread ( ) ) ; \n\t\t } \n\t } ,   3 ) . subscribe ( new   Consumer < Integer > ( )   { \t // 指定缓存大小为3 \n\n\t\t @Override \n\t\t public   void   accept ( Integer  t )   throws   Exception   { \n\t\t\t System . out . println ( "--\x3e accept switchMap(3): "   +  t ) ; \n\t\t } \n\t } ) ; \n \n 输出： \n --\x3e apply(1): 1\n--\x3e accept switchMap(1): 1\n--\x3e accept switchMap(1): 2\n--\x3e accept switchMap(1): 3\n--\x3e apply(1): 2\n--\x3e accept switchMap(1): 1\n--\x3e accept switchMap(1): 2\n--\x3e accept switchMap(1): 3\n--\x3e apply(1): 3\n--\x3e accept switchMap(1): 1\n--\x3e accept switchMap(1): 2\n--\x3e accept switchMap(1): 3\n---------------------------------------\n--\x3e apply(2): 1\n--\x3e apply(2): 2\n--\x3e apply(2): 3\n--\x3e accept switchMap(2): 1\n--\x3e accept switchMap(2): 2\n--\x3e accept switchMap(2): 3\n---------------------------------------\n--\x3e apply(3): 1\n--\x3e apply(3): 2\n--\x3e apply(3): 3\n--\x3e accept switchMap(3): 1\n--\x3e accept switchMap(3): 2\n--\x3e accept switchMap(3): 3\n--\x3e accept switchMap(3): 4\n--\x3e accept switchMap(3): 5\n \n \n Javadoc:  switchMap(mapper) \nJavadoc:  switchMap(mapper, bufferSize) \n \n'},{title:"4. Observable的数据变换（二）",frontmatter:{author:"JiangMing",title:"4. Observable的数据变换（二）",date:"2019-12-30 22:27:56",sidebar:"auto",categories:["Java","Rxjava2"],tags:["Rxjava2"],publish:!0,showSponsor:!0},regularPath:"/developer/rxjava2/04.rxjava2.html",relativePath:"developer/rxjava2/04.rxjava2.md",key:"v-71599b9a",path:"/developer/rxjava2/04.rxjava2.html",headers:[{level:2,title:"1. Window",slug:"_1-window"},{level:3,title:"1.1 window(closingSelector)",slug:"_1-1-window-closingselector"},{level:3,title:"1.2 window(openingIndicator,  closingIndicator)",slug:"_1-2-window-openingindicator-closingindicator"},{level:3,title:"1.3 window(count)",slug:"_1-3-window-count"},{level:3,title:"1.4 window(count,\tskip)",slug:"_1-4-window-count-skip"},{level:3,title:"1.5 window(timespan, TimeUnit)",slug:"_1-5-window-timespan-timeunit"},{level:3,title:"1.6 window(timespan, TimeUnit, count)",slug:"_1-6-window-timespan-timeunit-count"},{level:3,title:"1.7 window(timespan, timeskip, TimeUnit)",slug:"_1-7-window-timespan-timeskip-timeunit"},{level:2,title:"2. GroupBy",slug:"_2-groupby"},{level:3,title:"2.1 groupBy(keySelector)",slug:"_2-1-groupby-keyselector"},{level:3,title:"2.2 groupBy(keySelector,  valueSelector)",slug:"_2-2-groupby-keyselector-valueselector"},{level:2,title:"3. Scan",slug:"_3-scan"},{level:3,title:"3.1 scan(accumulator)",slug:"_3-1-scan-accumulator"},{level:3,title:"3.2 scan(initialValue, accumulator)",slug:"_3-2-scan-initialvalue-accumulator"},{level:2,title:"4. Cast",slug:"_4-cast"},{level:3,title:"4.1 cast(clazz)",slug:"_4-1-cast-clazz"},{level:2,title:"小结：",slug:"小结"}],content:' 1. Window \n 定期将来自原始Observable的数据分解为一个Observable窗口，发射这些窗口，而不是每次发射一项数据。 \n \n Window  和  Buffer  类似，但不是发射来自原始Observable的数据包，它发射的是 Observables，这些Observables中的每一个都发射原始Observable数据的一个子集，最后发 射一个\tonCompleted\t通知。 \n 和  Buffer 一样，Window 有很多变体，每一种都以自己的方式将原始Observable分解为多个作为结果的Observable，每一个都包含一个映射原始数据的  window  。用\tWindow操作符的术语描述就是，当一个窗口打开(when\ta\twindow "opens")意味着一个新的Observable已经发射 （产生）了，而且这个Observable开始发射来自原始Observable的数据；当一个窗口关闭 (when\ta\twindow "closes")意味着发射(产生)的Observable停止发射原始Observable的数据， 并且发射终止通知\tonCompleted\t给它的观察者们。 \n 在RxJava中有许多种 Window 操作符的方法。 \n 1.1 window(closingSelector) \n window  的这个方法会立即打开它的第一个窗口。每当它观察到 closingSelector 返回的 Observable发射了一个对象时，它就关闭当前打开的窗口并立即打开一个新窗口。用这个方法，这种\twindow\t变体发射一系列不重叠的窗口，这些窗口的数据集合与原始Observable发射的数据是一一对应的。 \n \n 解析：  一开始开启一个  window  接收原始数据，每当它观察到 closingSelector 返回的 Observable发射了一个对象时，它就 关闭当前打开的窗口并取消此时订阅closingSelector 的Observable  （ 此时可能是没有数据  window  ）并立即打开一个新窗口， 注意：  每个窗口开启前都会去订阅一个 closingSelector 返回的 Observable。 \n 实例代码： \n \t // 1. window(Callable boundary) \n\t // 开启一个window，并订阅观察boundary返回的Observable发射了一个数据， \n\t // 则关闭此window，将收集的数据以Observable发送, 重新订阅boundary返回的Observable，开启新window \n\t Observable . intervalRange ( 1 ,   10 ,   0 ,   1 ,   TimeUnit . SECONDS ) \n\t\t . window ( new   Callable < Observable < Long > > ( )   { \n\n\t\t\t @Override \n\t\t\t public   Observable < Long >   call ( )   throws   Exception   { \n\t\t\t\t System . out . println ( "--\x3e call(1)" ) ; \n\t\t\t\t return   Observable . timer ( 2 ,   TimeUnit . SECONDS ) ;   // 两秒后关闭当前窗口 \n\t\t\t } \n\t\t } ) . subscribe ( new   Consumer < Observable < Long > > ( )   { \n\n\t\t\t @Override \n\t\t\t public   void   accept ( Observable < Long >  t )   throws   Exception   { \n\t\t\t\t // 接受每个window接受的数据的Observable \n\t\t\t\tt . subscribe ( new   Consumer < Long > ( )   { \n\n\t\t\t\t\t @Override \n\t\t\t\t\t public   void   accept ( Long  t )   throws   Exception   { \n\t\t\t\t\t\t System . out . println ( "--\x3e accept(1): "   +  t ) ; \n\t\t\t\t\t } \n\t\t\t\t } ) ; \n\t\t\t } \n\t\t } ) ; \n \n 输出： \n --\x3e call(1)\n--\x3e accept(1): 1\n--\x3e accept(1): 2\n--\x3e accept(1): 3\n--\x3e call(1)\n--\x3e accept(1): 4\n--\x3e accept(1): 5\n--\x3e call(1)\n--\x3e accept(1): 6\n--\x3e accept(1): 7\n--\x3e call(1)\n--\x3e accept(1): 8\n--\x3e accept(1): 9\n--\x3e call(1)\n--\x3e accept(1): 10\n \n \n Javadoc:  window(closingSelector) \nJavadoc:  window(closingSelector, bufferSize) \n 1.2 window(openingIndicator,  closingIndicator) \n 当  openingIndicator  发射一个数据，就会打开一个  window , 同时订阅  closingIndicator  返回的Observable，当这个Observable发射一个数据，就结束此 window 和 ,发送收集数据的 Observable。 \n \n无论何时，只要\twindow\t观察到\twindowOpenings\t这个Observable发射了一个  Opening \t对象，它就打开一个窗口，并且同时调用  closingSelector  生成一个与那个窗口关联的关闭  (closing)Observable  。当这个关闭 (closing)Observable 发射了一个对象时， window  操作符就会关闭那个窗口以及关联的 closingSelector 的 Observable。 \n 注意：  对这个方法来说，由于当前窗口的关闭和新窗口的打开是由单独的 Observable 管理的，它创建的窗口可能会存在 重叠（重复某些来自原始Observable的数据） 或间隙（丢弃某些来自原始Observable的数据） 。 \n 实例代码： \n \t // 2. window(ObservableSource openingIndicator, Function<T, ObservableSource<R>> closingIndicator) \n\t // 当openingIndicator发射一个数据，就会打开一个window, 同时订阅closingIndicator返回的Observable， \n\t // 当这个Observable发射一个数据，就结束此window以及对应的closingIndicator,发送收集数据的 Observable。 \n\t Observable < Long >  openingIndicator  =   Observable . intervalRange ( 1 ,   5 ,   0 ,   1 ,   TimeUnit . SECONDS ) \n\t\t\t . doOnSubscribe ( new   Consumer < Disposable > ( )   { \n\n\t\t\t\t @Override \n\t\t\t\t public   void   accept ( Disposable  t )   throws   Exception   { \n\t\t\t\t\t System . out . println ( "--\x3e openingIndicator is subscribe!" ) ; \n\t\t\t\t } \n\t\t\t } ) . doOnComplete ( new   Action ( )   { \n\t\t\t\t\n\t\t\t\t @Override \n\t\t\t\t public   void   run ( )   throws   Exception   { \n\t\t\t\t\t System . out . println ( "--\x3e openingIndicator is completed!" ) ; \n\t\t\t\t } \n\t\t\t } ) . doOnNext ( new   Consumer < Long > ( )   { \n\n\t\t\t\t @Override \n\t\t\t\t public   void   accept ( Long  t )   throws   Exception   { \n\t\t\t\t\t System . out . println ( "--\x3e openingIndicator emitter: "   +  t ) ; \n\t\t\t\t } \n\t\t\t } ) ; \n\t\n\t Observable < Long >  dataSource  =   Observable . intervalRange ( 1 ,   5 ,   0 ,   1 ,   TimeUnit . SECONDS ) \n\t\t\t . doOnSubscribe ( new   Consumer < Disposable > ( )   { \n\n\t\t\t\t @Override \n\t\t\t\t public   void   accept ( Disposable  t )   throws   Exception   { \n\t\t\t\t\t System . out . println ( "--\x3e DataSource is subscribe!" ) ; \n\t\t\t\t } \n\t\t\t } ) . doOnNext ( new   Consumer < Long > ( )   { \n\n\t\t\t\t @Override \n\t\t\t\t public   void   accept ( Long  t )   throws   Exception   { \n\t\t\t\t\t System . out . println ( "--\x3e DataSource emitter: "   +  t ) ; \n\t\t\t\t } \n\t\t\t } ) ; \n\t\n\tdataSource . window ( openingIndicator ,   new   Function < Long ,   Observable < Long > > ( )   { \n\n\t\t\t\t @Override \n\t\t\t\t public   Observable < Long >   apply ( Long  t )   throws   Exception   { \n\t\t\t\t\t System . out . println ( "--\x3e apply(2): "   +  t ) ; \n\t\t\t\t\t return   Observable . timer ( 2 ,   TimeUnit . SECONDS ) . doOnSubscribe ( new   Consumer < Disposable > ( )   { \n\n\t\t\t\t\t\t @Override \n\t\t\t\t\t\t public   void   accept ( Disposable  t )   throws   Exception   { \n\t\t\t\t\t\t\t System . out . println ( "--\x3e closingIndicator is subscribe!" ) ; \n\t\t\t\t\t\t } \n\t\t\t\t\t } ) ; \n\t\t\t\t } \n\t\t\t } ) . subscribe ( new   Consumer < Observable < Long > > ( )   { \n\n\t\t\t\t @Override \n\t\t\t\t public   void   accept ( Observable < Long >  t )   throws   Exception   { \n\t\t\t\t\t System . out . println ( "-------------------\x3e new window data" ) ; \n\t\t\t\t\tt . subscribe ( new   Consumer < Long > ( )   { \n\n\t\t\t\t\t\t @Override \n\t\t\t\t\t\t public   void   accept ( Long  t )   throws   Exception   { \n\t\t\t\t\t\t\t System . out . println ( "--\x3e accept(2): "   +  t ) ; \n\t\t\t\t\t\t } \n\t\t\t\t\t } ) ; \n\t\t\t\t } \n\t\t\t } ) ; \n \n 输出： \n --\x3e DataSource is subscribe!\n--\x3e openingIndicator is subscribe!\n--\x3e openingIndicator emitter: 1\n--\x3e DataSource emitter: 1\n-------------------\x3e new window data\n--\x3e apply(2): 1\n--\x3e closingIndicator is subscribe!\n--\x3e openingIndicator emitter: 2\n--\x3e DataSource emitter: 2\n-------------------\x3e new window data\n--\x3e apply(2): 2\n--\x3e closingIndicator is subscribe!\n--\x3e accept(2): 2\n--\x3e accept(2): 2\n--\x3e openingIndicator emitter: 3\n--\x3e DataSource emitter: 3\n-------------------\x3e new window data\n--\x3e apply(2): 3\n--\x3e closingIndicator is subscribe!\n--\x3e accept(2): 3\n--\x3e accept(2): 3\n--\x3e accept(2): 3\n--\x3e DataSource emitter: 4\n--\x3e openingIndicator emitter: 4\n--\x3e accept(2): 4\n--\x3e accept(2): 4\n-------------------\x3e new window data\n--\x3e apply(2): 4\n--\x3e closingIndicator is subscribe!\n--\x3e DataSource emitter: 5\n--\x3e accept(2): 5\n--\x3e accept(2): 5\n--\x3e openingIndicator emitter: 5\n \n \n Javadoc:  window(openingIndicator,  closingIndicator) \nJavadoc:  window(openingIndicator,  closingIndicator，bufferSize) \n 1.3 window(count) \n 这个  window  的方法立即打开它的第一个窗口。每当当前窗口发射了  count  项数据，它就关闭当前窗口并打开一个新窗口。如果从原始Observable收到了  onError  或\t onCompleted  通知它也会关闭当前窗口。 \n 这种\twindow 方法发射一系列 不重叠 的窗口，这些窗口的数据集合与原始 Observable发射的数据是  一一对应  的。 \n \n 实例代码： \n \t // 3. window(count) \n\t // 以count为缓存大小收集的不重叠的Observables对象，接受的数据与原数据彼此对应 \n\t Observable . range ( 1 ,   20 ) \n\t\t . window ( 5 ) \t // 设置缓存大小为5 \n\t\t . subscribe ( new   Consumer < Observable < Integer > > ( )   { \n\n\t\t\t @Override \n\t\t\t public   void   accept ( Observable < Integer >  t )   throws   Exception   { \n\t\t\t\t System . out . println ( "--------------\x3e new data window" ) ; \n\t\t\t\tt . subscribe ( new   Consumer < Integer > ( )   { \n\t\t\t\t\t @Override \n\t\t\t\t\t public   void   accept ( Integer  t )   throws   Exception   { \n\t\t\t\t\t\t System . out . println ( "--\x3e accept window(3): "   +  t ) ; \n\t\t\t\t\t } \n\t\t\t\t } ) ; \n\t\t\t } \n\t\t } ) ; \n \n 输出： \n --------------\x3e new data window\n--\x3e accept window(3): 1\n--\x3e accept window(3): 2\n--\x3e accept window(3): 3\n--\x3e accept window(3): 4\n--\x3e accept window(3): 5\n--------------\x3e new data window\n--\x3e accept window(3): 6\n--\x3e accept window(3): 7\n--\x3e accept window(3): 8\n--\x3e accept window(3): 9\n--\x3e accept window(3): 10\n--------------\x3e new data window\n--\x3e accept window(3): 11\n--\x3e accept window(3): 12\n--\x3e accept window(3): 13\n--\x3e accept window(3): 14\n--\x3e accept window(3): 15\n--------------\x3e new data window\n--\x3e accept window(3): 16\n--\x3e accept window(3): 17\n--\x3e accept window(3): 18\n--\x3e accept window(3): 19\n--\x3e accept window(3): 20\n \n \n Javadoc:  window(count) \n 1.4 window(count,\tskip) \n 这个\t window  的方法立即打开它的第一个窗口。原始Observable每发射  skip  项数据它就打开 一个新窗口（例如，如果\tskip\t等于3，每到第三项数据，它会创建一个新窗口）。每当当前窗口发射了  count  项数据，它就关闭当前窗口并打开一个新窗口。如果从原始Observable 收到了 onError \t或  onCompleted  通知它也会关闭当前窗口。 \n \n 解析：  window 一开始打开一个 window，每发射 skip 项数据就会打开一个 window  独立收集  原始数据，当 window 收集了 count 个数据就会关闭，开启另外一个。当原始Observable发送了onError或者onCompleted通知也会关闭当前窗口。 \n \n skip = count: 会依次顺序接受原始数据，同window(count) \n skip > count: 两个窗口可能会有 skip-count 项数据丢失 \n skip < count: 两个窗口可能会有 count-skip 项数据重叠 \n \n 实例代码： \n \t // 4. window(count,skip) \n\t // window一开始打开一个window，每发射skip项数据就会打开一个window独立收集原始数据 \n\t // 当window收集了count个数据就会关闭window，开启另外一个。 \n\t // 当原始Observable发送了onError 或者 onCompleted 通知也会关闭当前窗口。 \n\t // 4.1 skip = count: 会依次顺序接受原始数据，同window(count) \n\t Observable . range ( 1 ,   10 ) \n\t\t . window ( 2 ,   2 ) \t // skip = count, 数据会依次顺序输出 \n\t\t . subscribe ( new   Consumer < Observable < Integer > > ( )   { \n\n\t\t\t @Override \n\t\t\t public   void   accept ( Observable < Integer >  t )   throws   Exception   { \n\t\t\t\t\n\t\t\t\tt . observeOn ( Schedulers . newThread ( ) ) \n\t\t\t\t\t . subscribe ( new   Consumer < Integer > ( )   { \n\t\n\t\t\t\t\t\t @Override \n\t\t\t\t\t\t public   void   accept ( Integer  t )   throws   Exception   { \n\t\t\t\t\t\t\t System . out . println ( "--\x3e accept window(4-1): "   +  t  + " , ThreadID: " +   Thread . currentThread ( ) . getId ( ) ) ; \n\t\t\t\t\t\t } \n\t\t\t\t\t } ) ; \n\t\t\t } \n\t\t } ) ; \n\t\n\t // 4.2 skip > count: 两个窗口可能会有 skip-count 项数据丢失 \n\t Observable . range ( 1 ,   10 ) \n\t\t . window ( 2 ,   3 ) \t // skip > count, 数据会存在丢失 \n\t\t . subscribe ( new   Consumer < Observable < Integer > > ( )   { \n\n\t\t\t @Override \n\t\t\t public   void   accept ( Observable < Integer >  t )   throws   Exception   { \n\t\t\t\t\n\t\t\t\tt . observeOn ( Schedulers . newThread ( ) ) \n\t\t\t\t\t . subscribe ( new   Consumer < Integer > ( )   { \n\t\n\t\t\t\t\t\t @Override \n\t\t\t\t\t\t public   void   accept ( Integer  t )   throws   Exception   { \n\t\t\t\t\t\t\t System . out . println ( "--\x3e accept window(4-2): "   +  t  + " , ThreadID: " +   Thread . currentThread ( ) . getId ( ) ) ; \n\t\t\t\t\t\t } \n\t\t\t\t\t } ) ; \n\t\t\t } \n\t\t } ) ; \n\t\n\t // 4.3 skip < count: 两个窗口可能会有 count-skip 项数据重叠 \n\t Observable . range ( 1 ,   10 ) \n\t\t . window ( 3 ,   2 ) \t // skip < count, 数据会重叠 \n\t\t . subscribe ( new   Consumer < Observable < Integer > > ( )   { \n\n\t\t\t @Override \n\t\t\t public   void   accept ( Observable < Integer >  t )   throws   Exception   { \n\t\t\t\t\n\t\t\t\tt . observeOn ( Schedulers . newThread ( ) ) \n\t\t\t\t\t . subscribe ( new   Consumer < Integer > ( )   { \n\t\n\t\t\t\t\t\t @Override \n\t\t\t\t\t\t public   void   accept ( Integer  t )   throws   Exception   { \n\t\t\t\t\t\t\t System . out . println ( "--\x3e accept window(4-3): "   +  t  + " , ThreadID: " +   Thread . currentThread ( ) . getId ( ) ) ; \n\t\t\t\t\t\t } \n\t\t\t\t\t } ) ; \n\t\t\t } \n\t\t } ) ; \n \n 输出： \n --\x3e accept window(4-1): 1 , ThreadID: 11\n--\x3e accept window(4-1): 2 , ThreadID: 11\n--\x3e accept window(4-1): 4 , ThreadID: 12\n--\x3e accept window(4-1): 3 , ThreadID: 11\n--\x3e accept window(4-1): 5 , ThreadID: 12\n--\x3e accept window(4-1): 6 , ThreadID: 12\n--\x3e accept window(4-1): 7 , ThreadID: 13\n--\x3e accept window(4-1): 8 , ThreadID: 13\n--\x3e accept window(4-1): 9 , ThreadID: 13\n--\x3e accept window(4-1): 10 , ThreadID: 14\n--\x3e accept window(4-2): 1 , ThreadID: 15\n--\x3e accept window(4-2): 2 , ThreadID: 15\n--\x3e accept window(4-2): 4 , ThreadID: 16\n--\x3e accept window(4-2): 5 , ThreadID: 16\n--\x3e accept window(4-2): 7 , ThreadID: 17\n--\x3e accept window(4-2): 8 , ThreadID: 17\n--\x3e accept window(4-2): 10 , ThreadID: 18\n--\x3e accept window(4-3): 1 , ThreadID: 19\n--\x3e accept window(4-3): 2 , ThreadID: 19\n--\x3e accept window(4-3): 3 , ThreadID: 19\n--\x3e accept window(4-3): 3 , ThreadID: 20\n--\x3e accept window(4-3): 4 , ThreadID: 20\n--\x3e accept window(4-3): 5 , ThreadID: 20\n--\x3e accept window(4-3): 5 , ThreadID: 21\n--\x3e accept window(4-3): 6 , ThreadID: 21\n--\x3e accept window(4-3): 7 , ThreadID: 21\n--\x3e accept window(4-3): 7 , ThreadID: 22\n--\x3e accept window(4-3): 8 , ThreadID: 22\n--\x3e accept window(4-3): 9 , ThreadID: 22\n--\x3e accept window(4-3): 9 , ThreadID: 23\n--\x3e accept window(4-3): 10 , ThreadID: 23\n \n \n Javadoc:  window(count,\tskip) \n 1.5 window(timespan, TimeUnit) \n 这个\t window  的方法立即打开它的第一个窗口收集数据。每当过了  timespan  这么长的时间段它就关闭当前窗口并打开一个新窗口（时间单位是  unit  ，可选在调度器  scheduler  上执行）收集数据。如果从原始 Observable 收到了 onError\t或 onCompleted\t通知它也会关闭当前窗口。 \n 这种\twindow 方法发射一系列不重叠的窗口，这些窗口的数据集合与原始Observable发射的数据也是  一一对应  的。 \n 实例代码： \n \t // 5. window(long timespan, TimeUnit unit) \n\t // 每当过了 timespan 的时间段，它就关闭当前窗口并打开另一个新window收集数据 \n\t Observable . intervalRange ( 1 ,   10 ,   0 ,   1 ,   TimeUnit . SECONDS ) \n\t\t . window ( 2 ,   TimeUnit . SECONDS ) \t\t\t\t\t\t\t // 间隔2秒关闭当前 window 并打开一个新 window 收集数据 \n\t //\t.window(2, TimeUnit.SECONDS, Schedulers.newThread())\t// 指定在 newThread 线程中 \n\t\t . subscribe ( new   Consumer < Observable < Long > > ( )   { \n\n\t\t\t @Override \n\t\t\t public   void   accept ( Observable < Long >  t )   throws   Exception   { \n\t\t\t\tt . observeOn ( Schedulers . newThread ( ) ) \n\t\t\t\t\t . subscribe ( new   Consumer < Long > ( )   { \n\t\n\t\t\t\t\t\t\t @Override \n\t\t\t\t\t\t\t public   void   accept ( Long  t )   throws   Exception   { \n\t\t\t\t\t\t\t\t System . out . println ( "--\x3e accept window(5)： "   +  t  + " , ThreadID: " +   Thread . currentThread ( ) . getId ( )   ) ; \n\t\t\t\t\t\t\t } \n\t\t\t\t\t\t } ) ; \n\t\t\t } \n\t\t } ) ; \n \n 输出： \n --\x3e accept window(5)： 1 , ThreadID: 11\n--\x3e accept window(5)： 2 , ThreadID: 11\n--\x3e accept window(5)： 3 , ThreadID: 11\n--\x3e accept window(5)： 4 , ThreadID: 14\n--\x3e accept window(5)： 5 , ThreadID: 14\n--\x3e accept window(5)： 6 , ThreadID: 15\n--\x3e accept window(5)： 7 , ThreadID: 16\n--\x3e accept window(5)： 8 , ThreadID: 16\n--\x3e accept window(5)： 9 , ThreadID: 17\n--\x3e accept window(5)： 10 , ThreadID: 17\n \n \n Javadoc:  window(timespan, TimeUnit) \nJavadoc:  window(timespan, TimeUnit, scheduler) \n 1.6 window(timespan, TimeUnit, count) \n 这个  window  的方法立即打开它的第一个窗口。这个变体是 window(count) 和 window(timespan,\tunit[,\tscheduler]) 的结合，每当过了  timespan  的时长或者当前窗口收到了  count  项数据，它就关闭当前窗口并打开另一个。如果从原始 Observable收到了  onError  或  onCompleted  通知它也会关闭当前窗口。 \n 这种window方法发射 一系列不重叠的窗口，这些窗口的数据集合与原始Observable发射的数据也是  一一对应  的。 \n \n 实例代码： \n \t // 6. window(long timespan, TimeUnit unit, long count) \n\t // 每当过了timespan的时间段或者当前窗口收到了count项数据，它就关闭当前window并打开另一个window收集数据 \n\t Observable . intervalRange ( 1 ,   12 ,   0 ,   500 ,   TimeUnit . MILLISECONDS ) \n\t\t . window ( 2 ,   TimeUnit . SECONDS ,   5 ) \t // 每隔2秒关闭当前收集数据的window并开启一个window收集5项数据 \n\t //\t.window(2, TimeUnit.SECONDS,Schedulers.newThread(), 5 )\t// 指定在 newThread 线程中 \n\t\t . subscribe ( new   Consumer < Observable < Long > > ( )   { \n\n\t\t\t @Override \n\t\t\t public   void   accept ( Observable < Long >  t )   throws   Exception   { \n\t\t\t\tt . observeOn ( Schedulers . newThread ( ) ) \n\t\t\t\t\t . subscribe ( new   Consumer < Long > ( )   { \n\n\t\t\t\t\t\t\t @Override \n\t\t\t\t\t\t\t public   void   accept ( Long  t )   throws   Exception   { \n\t\t\t\t\t\t\t\t System . out . println ( "--\x3e accept window(6)： "   +  t  +   " , ThreadID: " +   Thread . currentThread ( ) . getId ( )   ) ; \n\t\t\t\t\t\t\t } \n\t\t\t\t\t\t } ) ; \n\t\t\t } \n\t\t } ) ; \n \n 输出： \n --\x3e accept window(6)： 1 , ThreadID: 11\n--\x3e accept window(6)： 2 , ThreadID: 11\n--\x3e accept window(6)： 3 , ThreadID: 11\n--\x3e accept window(6)： 4 , ThreadID: 11\n--\x3e accept window(6)： 5 , ThreadID: 11\n--\x3e accept window(6)： 6 , ThreadID: 14\n--\x3e accept window(6)： 7 , ThreadID: 14\n--\x3e accept window(6)： 8 , ThreadID: 14\n--\x3e accept window(6)： 9 , ThreadID: 14\n--\x3e accept window(6)： 10 , ThreadID: 14\n--\x3e accept window(6)： 11 , ThreadID: 15\n--\x3e accept window(6)： 12 , ThreadID: 15\n \n \n Javadoc:  window(timespan, TimeUnit, count) \nJavadoc:  window(timespan, TimeUnit, scheduler, count) \n 1.7 window(timespan, timeskip, TimeUnit) \n 这个  window  的方法立即打开它的第一个窗口。随后每当过了\t timeskip  的时长就打开一个新窗口（时间单位是  unit \t，可选在调度器  scheduler  上执行），当窗口打开的时长达 到  timespan  ，它就关闭当前打开的窗口。如果从原始Observable收到 了 onError 或 onCompleted 通知它也会关闭当前窗口。窗口的数据可能重叠也可能有间隙，取决于你设置的  timeskip  和  timespan  的值。 \n \n 解析：  在每一个 timeskip 时期内都创建一个新的 window，然后独立收集 timespan 时间段的原始Observable发射的每一项数据。 注意：因为每个 window 都是独立接收数据，当接收数据的时间与创建新 window 的时间不一致时会有数据项重复，丢失等情况。 \n \n skip = timespan: 会依次顺序接受原始数据，同window(count) \n skip > timespan: 两个窗口可能会有 skip-timespan 项数据丢失 \n skip < timespan: 两个窗口可能会有 timespan-skip 项数据重叠 \n \n 实例代码： \n \t\t // 7. window(long timespan, long timeskip, TimeUnit unit) \n\t\t // 在每一个timeskip时期内都创建一个新的window,然后独立收集timespan时间段的原始Observable发射的每一项数据， \n\t\t // 如果timespan长于timeskip，它发射的数据包将会重叠，因此可能包含重复的数据项。 \n\t\t // 7.1 skip = timespan: 会依次顺序接受原始数据，同window(count) \n\t\t Observable . intervalRange ( 1 ,   5 ,   0 ,   1000 ,   TimeUnit . MILLISECONDS ) \n\t\t\t . window ( 1 ,   1 ,   TimeUnit . SECONDS ) \t\t\t\t\t\t\t\t // 设置每秒创建一个window，收集2秒的数据 \n\t\t //\t.window(2, 1, TimeUnit.SECONDS, Schedulers.newThread())\t\t// 指定在 newThread 线程中 \n\t\t\t . subscribe ( new   Consumer < Observable < Long > > ( )   { \n\n\t\t\t\t @Override \n\t\t\t\t public   void   accept ( Observable < Long >  t )   throws   Exception   { \n\t\t\t\t\tt . observeOn ( Schedulers . newThread ( ) ) \n\t\t\t\t\t\t . subscribe ( new   Consumer < Long > ( )   { \n\t\n\t\t\t\t\t\t\t @Override \n\t\t\t\t\t\t\t public   void   accept ( Long  t )   throws   Exception   { \n\t\t\t\t\t\t\t\t System . out . println ( "--\x3e accept window(7-1): "   +  t  +   " , ThreadID: " +   Thread . currentThread ( ) . getId ( ) ) ; \n\t\t\t\t\t\t\t } \n\t\t\t\t\t\t } ) ; \n\t\t\t\t } \n\t\t\t } ) ; \n\t\t\n\t\t // 7.2 skip > timespan: 两个窗口可能会有 skip-timespan 项数据丢失 \n\t\t Observable . intervalRange ( 1 ,   5 ,   0 ,   1000 ,   TimeUnit . MILLISECONDS ) \n\t\t\t . window ( 1 ,   2 ,   TimeUnit . SECONDS ) \t\t\t\t\t\t\t\t // 设置每秒创建一个window，收集2秒的数据 \n\t\t //\t.window(2, 1, TimeUnit.SECONDS, Schedulers.newThread())\t\t// 指定在 newThread 线程中 \n\t\t\t . subscribe ( new   Consumer < Observable < Long > > ( )   { \n\n\t\t\t\t @Override \n\t\t\t\t public   void   accept ( Observable < Long >  t )   throws   Exception   { \n\t\t\t\t\tt . observeOn ( Schedulers . newThread ( ) ) \n\t\t\t\t\t\t . subscribe ( new   Consumer < Long > ( )   { \n\t\n\t\t\t\t\t\t\t @Override \n\t\t\t\t\t\t\t public   void   accept ( Long  t )   throws   Exception   { \n\t\t\t\t\t\t\t\t System . out . println ( "--\x3e accept window(7-2): "   +  t  +   " , ThreadID: " +   Thread . currentThread ( ) . getId ( ) ) ; \n\t\t\t\t\t\t\t } \n\t\t\t\t\t\t } ) ; \n\t\t\t\t } \n\t\t\t } ) ; \n\t\t\n\t\t // 7.3 skip < timespan: 两个窗口可能会有 timespan-skip 项数据重叠 \n\t\t Observable . intervalRange ( 1 ,   5 ,   0 ,   1000 ,   TimeUnit . MILLISECONDS ) \n\t\t\t . window ( 2 ,   1 ,   TimeUnit . SECONDS ) \t\t\t\t\t\t\t\t // 设置每秒创建一个window，收集2秒的数据 \n\t\t //\t.window(2, 1, TimeUnit.SECONDS, Schedulers.newThread())\t\t// 指定在 newThread 线程中 \n\t\t\t . subscribe ( new   Consumer < Observable < Long > > ( )   { \n\n\t\t\t\t @Override \n\t\t\t\t public   void   accept ( Observable < Long >  t )   throws   Exception   { \n\t\t\t\t\tt . observeOn ( Schedulers . newThread ( ) ) \n\t\t\t\t\t\t . subscribe ( new   Consumer < Long > ( )   { \n\t\n\t\t\t\t\t\t\t @Override \n\t\t\t\t\t\t\t public   void   accept ( Long  t )   throws   Exception   { \n\t\t\t\t\t\t\t\t System . out . println ( "--\x3e accept window(7-3): "   +  t  +   " , ThreadID: " +   Thread . currentThread ( ) . getId ( ) ) ; \n\t\t\t\t\t\t\t } \n\t\t\t\t\t\t } ) ; \n\t\t\t\t } \n\t\t\t } ) ; \n \n 输出： \n --\x3e accept window(7-1): 1 , ThreadID: 11\n--\x3e accept window(7-1): 2 , ThreadID: 11\n--\x3e accept window(7-1): 3 , ThreadID: 14\n--\x3e accept window(7-1): 4 , ThreadID: 15\n--\x3e accept window(7-1): 5 , ThreadID: 17\n----------------------------------------------------------------------\n--\x3e accept window(7-2): 1 , ThreadID: 11\n--\x3e accept window(7-2): 3 , ThreadID: 14\n--\x3e accept window(7-2): 5 , ThreadID: 15\n----------------------------------------------------------------------\n--\x3e accept window(7-3): 1 , ThreadID: 11\n--\x3e accept window(7-3): 2 , ThreadID: 11\n--\x3e accept window(7-3): 2 , ThreadID: 14\n--\x3e accept window(7-3): 3 , ThreadID: 14\n--\x3e accept window(7-3): 3 , ThreadID: 15\n--\x3e accept window(7-3): 4 , ThreadID: 15\n--\x3e accept window(7-3): 4 , ThreadID: 16\n--\x3e accept window(7-3): 5 , ThreadID: 16\n--\x3e accept window(7-3): 5 , ThreadID: 17\n \n \n Javadoc:  window(timespan, timeskip, TimeUnit) \nJavadoc:  window(timespan, timeskip, TimeUnit, scheduler) \n 2. GroupBy \n 将一个 Observable 分拆为一些 Observables 集合，它们中的每一个发射原始 Observable 的一个子序列。 \n RxJava实现了  groupBy  操作符。它返回Observable的一个特殊子类  GroupedObservable  \t，实现了 GroupedObservable  接口的对象有一个额外的方法\tgetKey\t，这个 Key 用于将数据分组到指定的Observable。有一个版本的 groupBy 允许你传递一个变换函数，这样它可以在发射结果 GroupedObservable 之前改变数据项。 \n 如果你取消订阅一个 GroupedObservable ，那个 Observable 将会终止。如果之后原始的 Observable又发射了一个与这个Observable的Key匹配的数据，\tgroupBy\t将会为这个 Key 创建一个新的 GroupedObservable。 \n \n 注意：   groupBy \t将原始 Observable 分解为一个发射多个  GroupedObservable \t的Observable，一旦有订阅，每个 GroupedObservable 就开始缓存数据。因此，如果你忽略这 些\tGroupedObservable\t中的任何一个，这个缓存可能形成一个 潜在的内存泄露 。因此，如果你不想观察，也不要忽略\tGroupedObservable 。你应该使用像\t take(0)  这样会丢弃自己的缓存的操作符。 \n 2.1 groupBy(keySelector) \n GroupBy  操作符将原始 Observable 分拆为一些  Observables  集合，它们中的每一个发射原始 Observable 数据序列的一个子序列。哪个数据项由哪一个 Observable 发射是由一个函数判定的，这个函数给每一项指定一个 Key ， Key相同 的数据会被同一个 Observable 发射。还有一个  delayError  参数的方法，指定是否延迟  Error  通知的Observable。 \n 实例代码： \n \t // 1. groupBy(keySelector) \n\t // 将原始数据处理后加上分组tag，通过GroupedObservable发射分组数据 \n\t Observable . range ( 1 ,   10 ) \n\t\t . groupBy ( new   Function < Integer ,   String > ( )   { \n\n\t\t\t @Override \n\t\t\t public   String   apply ( Integer  t )   throws   Exception   { \n\t\t\t\t // 不同的key将会产生不同分组的Observable \n\t\t\t\t return  t  %   2   ==   0   ?   "Even"   :   "Odd" ;   // 将数据奇偶数进行分组, \n\t\t\t } \n\t\t } ) . observeOn ( Schedulers . newThread ( ) ) \n\t\t\t . subscribe ( new   Consumer < GroupedObservable < String ,   Integer > > ( )   { \n\n\t\t\t\t @Override \n\t\t\t\t public   void   accept ( GroupedObservable < String ,   Integer >  grouped )   throws   Exception   { \n\t\t\t\t\t // 得到每个分组数据的的Observable \n\t\t\t\t\tgrouped . subscribe ( new   Consumer < Integer > ( )   { \n\n\t\t\t\t\t\t @Override \n\t\t\t\t\t\t public   void   accept ( Integer  t )   throws   Exception   { \n\t\t\t\t\t\t\t // 得到数据 \n\t\t\t\t\t\t\t System . out . println ( "--\x3e accept groupBy(1):   groupKey: "   +  grouped . getKey ( )   +   ", value: "   +  t ) ; \n\t\t\t\t\t\t } \n\t\t\t\t\t } ) ; \n\t\t\t\t } \n\t\t\t } ) ; \n \n 输出： \n --\x3e accept groupBy(1):   groupKey: Odd, value: 1\n--\x3e accept groupBy(1):   groupKey: Odd, value: 3\n--\x3e accept groupBy(1):   groupKey: Odd, value: 5\n--\x3e accept groupBy(1):   groupKey: Odd, value: 7\n--\x3e accept groupBy(1):   groupKey: Odd, value: 9\n--\x3e accept groupBy(1):   groupKey: Even, value: 2\n--\x3e accept groupBy(1):   groupKey: Even, value: 4\n--\x3e accept groupBy(1):   groupKey: Even, value: 6\n--\x3e accept groupBy(1):   groupKey: Even, value: 8\n--\x3e accept groupBy(1):   groupKey: Even, value: 10\n \n \n Javadoc:  groupBy(keySelector) \nJavadoc:  groupBy(keySelector,  delayError) \n 2.2 groupBy(keySelector,  valueSelector) \n GroupBy  操作符通过  keySelector  将原始 Observable 按照  Key  分组，产生不同的 Observable，再通过  valueSelector  对原始的数据进行处理，在发送每一个被处理完成的数据。 \n 实例代码： \n \t // 2. groupBy(Function(T,R)，Function(T,R)) \n\t // 第一个func对原数据进行分组处理（仅仅分组添加key，不处理原始数据），第二个func对原始数据进行处理 \n\t Observable . range ( 1 ,   10 ) \n\t\t . groupBy ( new   Function < Integer ,   String > ( )   { \n\n\t\t\t @Override \n\t\t\t public   String   apply ( Integer  t )   throws   Exception   { \n\t\t\t\t // 对原始数据进行分组处理 \n\t\t\t\t return  t  %   2   ==   0   ?   "even"   :   "odd" ; \n\t\t\t } \n\t\t } , new   Function < Integer ,   String > ( )   { \n\n\t\t\t @Override \n\t\t\t public   String   apply ( Integer  t )   throws   Exception   { \n\t\t\t\t // 对原始数据进行数据转换处理 \n\t\t\t\t return  t  +   " is "   +   ( t  %   2   ==   0   ?   "even"   :   "odd" ) ; \n\t\t\t } \n\t\t\t } ) . observeOn ( Schedulers . newThread ( ) ) . subscribe ( new   Consumer < GroupedObservable < String ,   String > > ( )   { \n\n\t\t\t\t @Override \n\t\t\t\t public   void   accept ( GroupedObservable < String ,   String >  grouped )   throws   Exception   { \n\t\t\t\t\tgrouped . subscribe ( new   Consumer < String > ( )   { \n\n\t\t\t\t\t\t @Override \n\t\t\t\t\t\t public   void   accept ( String  t )   throws   Exception   { \n\t\t\t\t\t\t\t // 接受最终的分组处理以及原数据处理后的数据 \n\t\t\t\t\t\t\t System . out . println ( "--\x3e accept groupBy(2):   groupKey = "   +  grouped . getKey ( ) \n\t\t\t\t\t\t\t\t\t +   ", value = "   +  t ) ; \n\t\t\t\t\t\t } \n\t\t\t\t\t } ) ; \n\t\t\t\t } \n\t\t\t } ) ; \n \n 输出： \n --\x3e accept groupBy(2):   groupKey = odd, value = 1 is odd\n--\x3e accept groupBy(2):   groupKey = odd, value = 3 is odd\n--\x3e accept groupBy(2):   groupKey = odd, value = 5 is odd\n--\x3e accept groupBy(2):   groupKey = odd, value = 7 is odd\n--\x3e accept groupBy(2):   groupKey = odd, value = 9 is odd\n--\x3e accept groupBy(2):   groupKey = even, value = 2 is even\n--\x3e accept groupBy(2):   groupKey = even, value = 4 is even\n--\x3e accept groupBy(2):   groupKey = even, value = 6 is even\n--\x3e accept groupBy(2):   groupKey = even, value = 8 is even\n--\x3e accept groupBy(2):   groupKey = even, value = 10 is even\n \n \n Javadoc:  groupBy(keySelector,  valueSelector) \nJavadoc:  groupBy(keySelector,  valueSelector, delayError) \nJavadoc:  groupBy(keySelector,  valueSelector, delayError, bufferSize) \n 3. Scan \n 连续地对数据序列的每一项应用一个函数，然后连续发射结果。 \n 3.1 scan(accumulator) \n Scan  操作符对原始 Observable 发射的第一项数据应用一个函数，然后将那个函数的结果作为 自己的第一项数据发射。它将函数的结果同第二项数据一起填充给这个函数来产生它自己的第二项数据。它持续进行这个过程来产生剩余的数据序列。这个操作符在某些情况下被叫做  accumulator 。 \n \n 解析：   先发送原始数据第一项数据，然后将这个数据与下一个原始数据作为参数传递给  accumulator ， 处理后发送这个数据，并与下一个原始数据一起传递到下一次 accumulator ，直到数据序列结束。类似一个 累积的过程 。 \n 实例代码： \n \t\t // 1. scan(BiFunction(Integer sum, Integer t2))  \n\t\t // 接受数据序列，从第二个数据开始，每次会将上次处理数据和现在接受的数据进行处理后发送 \n\t\t Observable . range ( 1 ,   10 ) \n\t\t\t . scan ( new   BiFunction < Integer ,   Integer ,   Integer > ( )   { \n\t\t\t\t\n\t\t\t\t @Override \n\t\t\t\t public   Integer   apply ( Integer   LastItem ,   Integer  item )   throws   Exception   { \n\t\t\t\t\t System . out . println ( "--\x3e apply: LastItem = "   +   LastItem   +   ", CurrentItem = "   +  item ) ; \n\t\t\t\t\t return   LastItem   +  item ;   // 实现求和操作 \n\t\t\t\t } \n\t\t\t } ) . subscribe ( new   Consumer < Integer > ( )   { \n\n\t\t\t\t @Override \n\t\t\t\t public   void   accept ( Integer  t )   throws   Exception   { \n\t\t\t\t\t System . out . println ( "--\x3e accept scan(1): "   +  t ) ; \n\t\t\t\t\t\n\t\t\t\t } \n\t\t\t } ) ; \n \n 输出： \n --\x3e accept scan(1): 1\n--\x3e apply: LastItem = 1, CurrentItem = 2\n--\x3e accept scan(1): 3\n--\x3e apply: LastItem = 3, CurrentItem = 3\n--\x3e accept scan(1): 6\n--\x3e apply: LastItem = 6, CurrentItem = 4\n--\x3e accept scan(1): 10\n--\x3e apply: LastItem = 10, CurrentItem = 5\n--\x3e accept scan(1): 15\n--\x3e apply: LastItem = 15, CurrentItem = 6\n--\x3e accept scan(1): 21\n--\x3e apply: LastItem = 21, CurrentItem = 7\n--\x3e accept scan(1): 28\n--\x3e apply: LastItem = 28, CurrentItem = 8\n--\x3e accept scan(1): 36\n--\x3e apply: LastItem = 36, CurrentItem = 9\n--\x3e accept scan(1): 45\n--\x3e apply: LastItem = 45, CurrentItem = 10\n--\x3e accept scan(1): 55\n \n \n Javadoc:  scan(accumulator) \n 3.2 scan(initialValue, accumulator) \n 有一个  scan  操作符的方法，你可以传递一个种子值给累加器函数的第一次调用（Observable 发射的第一项数据）。如果你使用这个版本， scan  将发射种子值作为自己的第一项数据。 \n 注意：  传递  null  作为种子值与不传递是不同的， null  种子值是合法的。 \n \n 解析：  指定初始种子值，第一次发送种子值，后续发送原始数据序列以及累计处理数据。 \n 实例代码： \n \t // 2. scan(R,Func2) \n\t // 指定初始种子值，第一次发送种子值,后续发送原始数据序列以及累计处理数据 \n\t Observable . range ( 1 ,   10 ) \n\t\t . scan ( 100 ,   new   BiFunction < Integer ,   Integer ,   Integer > ( )   {  \t // 指定初始种子数据为100 \n\n\t\t\t @Override \n\t\t\t public   Integer   apply ( Integer  lastValue ,   Integer  item )   throws   Exception   { \n\t\t\t\t System . out . println ( "--\x3e apply: lastValue = "   +  lastValue  +   ", item = "   +  item ) ; \n\t\t\t\t return  lastValue  +  item ;  \t // 指定初值的求和操作 \n\t\t\t } \n\t\t } ) . subscribe ( new   Consumer < Integer > ( )   { \n\n\t\t\t @Override \n\t\t\t public   void   accept ( Integer  t )   throws   Exception   { \n\t\t\t\t System . out . println ( "--\x3e accept sacn(2) = "   +  t ) ; \n\t\t\t } \n\t\t } ) ; \n \n 输出： \n --\x3e accept sacn(2) = 100\n--\x3e apply: lastValue = 100, item = 1\n--\x3e accept sacn(2) = 101\n--\x3e apply: lastValue = 101, item = 2\n--\x3e accept sacn(2) = 103\n--\x3e apply: lastValue = 103, item = 3\n--\x3e accept sacn(2) = 106\n--\x3e apply: lastValue = 106, item = 4\n--\x3e accept sacn(2) = 110\n--\x3e apply: lastValue = 110, item = 5\n--\x3e accept sacn(2) = 115\n--\x3e apply: lastValue = 115, item = 6\n--\x3e accept sacn(2) = 121\n--\x3e apply: lastValue = 121, item = 7\n--\x3e accept sacn(2) = 128\n--\x3e apply: lastValue = 128, item = 8\n--\x3e accept sacn(2) = 136\n--\x3e apply: lastValue = 136, item = 9\n--\x3e accept sacn(2) = 145\n--\x3e apply: lastValue = 145, item = 10\n--\x3e accept sacn(2) = 155\n \n \n 注意：  这个操作符默认不在任何特定的调度器上执行。 \nJavadoc:  scan(initialValue, accumulator) \n 4. Cast \n Cast  将原始Observable发射的每一项数据都强制转换为一个指定的类型，然后再发射数据，它是 map 的一个特殊版本。转换失败会有Error通知。 \n 4.1 cast(clazz) \n 将原始数据强制转换为指定的  clazz  类型，如果转换成功发送转换后的数据，否则发送 Error 通知。一般用于  数据类型的转换  和  数据实际类型的检查（多态） 。 \n \n 实例代码： \n \t //\tcast(clazz)  \n\t // 1. 基本类型转换 \n\t Observable . range ( 1 ,   5 ) \n\t\t . cast ( Integer . class ) \n\t\t . subscribe ( new   Consumer < Integer > ( )   { \n\n\t\t\t @Override \n\t\t\t public   void   accept ( Integer  t )   throws   Exception   { \n\t\t\t\t System . out . println ( "-- accept cast(1): "   +  t ) ; \n\t\t\t } \n\t\t } ) ; \n\t\t\t\n\t // 2. 转换失败通知 \n\t System . out . println ( "------------------------------------" ) ; \n\t Observable . just ( ( byte ) 1 ) \n\t\t . cast ( Integer . class ) \n\t\t . subscribe ( new   Observer < Integer > ( )   { \n\n\t\t\t @Override \n\t\t\t public   void   onSubscribe ( Disposable  d )   { \n\t\t\t\t System . out . println ( "--\x3e onSubscribe(2)" ) ; \n\t\t\t } \n\n\t\t\t @Override \n\t\t\t public   void   onNext ( Integer  t )   { \n\t\t\t\t System . out . println ( "--\x3e onNext(2) = "   +  t ) ; \n\t\t\t } \n\n\t\t\t @Override \n\t\t\t public   void   onError ( Throwable  e )   { \n\t\t\t\t System . out . println ( "--\x3e onError(2) = "   +  e . toString ( ) ) ; \n\t\t\t } \n\n\t\t\t @Override \n\t\t\t public   void   onComplete ( )   { \n\t\t\t\t System . out . println ( "--\x3e onComplete(2)" ) ; \n\t\t\t } \n\t\t } ) ; \n\t\n\t System . out . println ( "------------------------------------" ) ; \n\t class   Animal { \n\t\t public   int  id ; \n\t } \n\n\t class   Dog   extends   Animal { \n\t\t public   String  name ; \n\n\t\t @Override \n\t\t public   String   toString ( )   { \n\t\t\t return   "Dog [name="   +  name  +   ", id="   +  id  +   "]" ; \n\t\t } \n\t } \n\t\n\t //  3. 多态转换，检查数据的实际类型 \n\t Animal  animal  =   new   Dog ( ) ; \n\tanimal . id  =   666 ; \n\t Observable . just ( animal ) \n\t\t . cast ( Dog . class ) \n\t\t . subscribe ( new   Consumer < Dog > ( )   { \n\n\t\t\t @Override \n\t\t\t public   void   accept ( Dog  t )   throws   Exception   { \n\t\t\t\t System . out . println ( "--\x3e accept cast(3): "   +  t ) ; \n\t\t\t } \n\t\t } ) ; \n \n 输出： \n -- accept cast(1): 1\n-- accept cast(1): 2\n-- accept cast(1): 3\n-- accept cast(1): 4\n-- accept cast(1): 5\n------------------------------------\n--\x3e onSubscribe(2)\n--\x3e onError(2) = java.lang.ClassCastException: Cannot cast java.lang.Byte to java.lang.Integer\n------------------------------------\n--\x3e accept cast(3): Dog [name=null, id=666]\n \n \n Javadoc:  cast(clazz) \n 小结： \n 在实际开发场景中，比如网络数据请求场景，原始的数据格式或类型可能并不满足开发的实际需要，需要对数据进行处理。数据变换操作在实际开发场景中还是非常多的，所以数据的变换是非常重要的。使用Rx的数据变换操作可以轻松完成大多数场景的数据变换操作，提高开发效率。 \n 实例代码： \n \n \n 代码下载 \n Github \n Gitee（码云） \n \n \n'},{title:"5. Observable的数据过滤（一）",frontmatter:{author:"JiangMing",title:"5. Observable的数据过滤（一）",date:"2019-12-30 22:29:56",sidebar:"auto",categories:["Java","Rxjava2"],tags:["Rxjava2"],publish:!0,showSponsor:!0},regularPath:"/developer/rxjava2/05.rxjava2.html",relativePath:"developer/rxjava2/05.rxjava2.md",key:"v-62a88971",path:"/developer/rxjava2/05.rxjava2.html",headers:[{level:2,title:"简要：",slug:"简要"},{level:2,title:"1. Debounce",slug:"_1-debounce"},{level:3,title:"1.1 debounce(timeout, unit)",slug:"_1-1-debounce-timeout-unit"},{level:3,title:"1.2 debounce(debounceSelector)",slug:"_1-2-debounce-debounceselector"},{level:2,title:"2. Throttle",slug:"_2-throttle"},{level:3,title:"2.1 throttleFirst(windowDuration, unit)",slug:"_2-1-throttlefirst-windowduration-unit"},{level:3,title:"2.2 throttleLast(intervalDuration, unit)",slug:"_2-2-throttlelast-intervalduration-unit"},{level:3,title:"2.3 throttleWithTimeout(timeout,  unit)",slug:"_2-3-throttlewithtimeout-timeout-unit"},{level:2,title:"3. Sample",slug:"_3-sample"},{level:3,title:"3.1 sample(period, unit)",slug:"_3-1-sample-period-unit"},{level:3,title:"3.2 sample(sampler)",slug:"_3-2-sample-sampler"},{level:2,title:"4. Distinct",slug:"_4-distinct"},{level:3,title:"4.1 distinct()",slug:"_4-1-distinct"},{level:3,title:"4.2 distinct(keySelector)",slug:"_4-2-distinct-keyselector"},{level:3,title:"4.3 distinctUntilChanged()",slug:"_4-3-distinctuntilchanged"},{level:3,title:"4.4 distinctUntilChanged(keySelector)",slug:"_4-4-distinctuntilchanged-keyselector"},{level:2,title:"5. Skip",slug:"_5-skip"},{level:3,title:"5.1 skip(count)",slug:"_5-1-skip-count"},{level:3,title:"5.2 skip(time, unit)",slug:"_5-2-skip-time-unit"},{level:3,title:"5.3 skipLast(count)",slug:"_5-3-skiplast-count"},{level:3,title:"5.4 skipLast(time, unit)",slug:"_5-4-skiplast-time-unit"}],content:' 简要： \n 需求了解： \n 对于数据的观察以及处理过程中往往有需要过滤一些不需要的数据的需求，比如防抖（防止快速操作），获取第一项、指定序列项或者最后一项的需要，获取指定时间内的有效数据等。Rx中提供了丰富的数据过滤处理的操作方法。 \n 可用于过滤和选择Observable发射的数据序列的方法： \n \n Debounce：过滤发射速率较快的数据项，防抖操作。 \n Throttle: 对数据序列进行限流操作，可以指定获取周期内的指定数据项，也可以用于防抖。 \n Sample: 允许通过将序列划分为时间片段收集数据，并从每片中取出一个值来稀疏序列。 \n Distinct: 过滤掉重复数据。 \n Skip: 跳过指定的N项数据。 \n Filter: 通过函数指定过滤的数据。 \n First: 只发射第一项或者满足某个条件的第一项数据。 \n Single: 与 first 类似，但是如果原始Observable在完成之前不是正好发射一次数据，它会抛出一个NoSuchElementException 的异常通知。 \n ElementAt: 获取原始Observable发射的数据序列指定索引位置的数据项，然后当做自己的唯一数据发射。 \n ignoreElements: 不发射任何数据，只发射Observable的终止通知。 \n Last: 只发射最后一项（或者满足某个条件的最后一项）数据。 \n Take: 只返回Observable发送数据项序列前面的N项数据，忽略剩余的数据。 \n TakeLast: 只发射Observable发送数据项序列的后N项数据，忽略其他数据。 \n ofType: 过滤一个Observable只返回指定类型的数据。 \n 1. Debounce \n 仅在过了一段指定的时间还没发射数据时才发射一个数据。 Debounce  操作符会过滤掉发射速率过快的数据项。 \n \n 提示：  操作默认在\tcomputation\t调度器上执行，但是你可以指定其它的调度器。 \n 1.1 debounce(timeout, unit) \n 指定每个数据发射后在  timeout  时间内，原始数据序列中没有下一个数据发射时，发射此项数据，否则丢弃这项数据。此操作与  throttleWithTimeout  方法相同。 \n 注意：  这个操作符会在原始数据的  onCompleted  时候直接发射发射数据，不会因为限流而丢弃数据。 \n \n 实例代码： \n \t  // 1. debounce(long timeout, TimeUnit unit) \n\t  // 发送一个数据，如果在包含timeout时间内，没有第二个数据发射，那么就会发射此数据，否则丢弃此数据 \n\t Observable . create ( new   ObservableOnSubscribe < Integer > ( )   { \n\n\t\t @Override \n\t\t public   void   subscribe ( ObservableEmitter < Integer >  emitter )   throws   Exception   { \n\t\t\temitter . onNext ( 1 ) ; \t // 下一个数据到此数据发射,\t30 < timeout\t--\x3e skip\t\t\t \n\t\t\t Thread . sleep ( 30 ) ; \n\t\t\temitter . onNext ( 2 ) ;  \t // 下一个数据到此数据发射,\t100 > timeout\t--\x3e deliver \n\t\t\t Thread . sleep ( 100 ) ; \n\t\t\temitter . onNext ( 3 ) ;  \t // 下一个数据到此数据发射,\t50 = timeout\t--\x3e skip: \t\t\t \n\t\t\t Thread . sleep ( 50 ) ; \n\t\t\temitter . onNext ( 4 ) ;  \t // 下一个数据到此数据发射,\tonCompleted\t\t--\x3e deliver \n\t\t\temitter . onComplete ( ) ; \n\n\t\t } \n\t } ) . debounce ( 50 ,   TimeUnit . MILLISECONDS ) \t // 指定防抖丢弃时间段为50毫秒 \n\t //  .debounce(50, TimeUnit.MILLISECONDS, Schedulers.trampoline())\t// 指定调度为当前线程排队 \n\t\t . subscribe ( new   Consumer < Integer > ( )   { \n\n\t\t\t @Override \n\t\t\t public   void   accept ( Integer  t )   throws   Exception   { \n\t\t\t\t System . out . println ( "--\x3e accept debounce(1-1): "   +  t ) ; \n\t\t\t } \n\t\t } ) ; \n \n 输出： \n --\x3e accept debounce(1-1): 2\n--\x3e accept debounce(1-1): 4\n \n \n Javadoc:  debounce(timeout, unit) \nJavadoc:  debounce(timeout, unit, scheduler) \n 1.2 debounce(debounceSelector) \n 原始数据发射每一个序列都通过绑定监听 debounceSelector 的数据通知，在 debounceSelector 数据发送前，如果有下一个数据，则丢弃当前项数据，继续监视下一个数据。 \n 注意：  这个操作符会在原始数据的  onCompleted  时候直接发射发射数据，不会因为限流而丢弃数据。 \n \n 实例代码： \n \t // 2. debounce(debounceSelector) \n\t // 原始数据发射每一个序列的通过监听debounceSelector的数据通知， \n\t // 在debounceSelector数据发送前，如果有下一个数据，则丢弃当前项数据，继续监视下一个数据 \n\t Observable . create ( new   ObservableOnSubscribe < Integer > ( )   { \n\n\t\t @Override \n\t\t public   void   subscribe ( ObservableEmitter < Integer >  emitter )   throws   Exception   { \n\t\t\temitter . onNext ( 1 ) ; \t\t // skip\t\t--\x3e debounceSelector is no emitter(<2s) \n\t\t\t Thread . sleep ( 1000 ) ; \t\n\t\t\temitter . onNext ( 2 ) ; \t\t // skip\t\t--\x3e debounceSelector is no emitter(<2s) \n\t\t\t Thread . sleep ( 200 ) ; \n\t\t\temitter . onNext ( 3 ) ; \t\t // deliver\t--\x3e debounceSelector is emitter(>2s) \n\t\t\t Thread . sleep ( 2500 ) ; \n\t\t\temitter . onNext ( 4 ) ; \t\t // skip\t\t--\x3e debounceSelector is no emitter(=2s) \n\t\t\t Thread . sleep ( 2000 ) ; \n\t\t\temitter . onNext ( 5 ) ; \t\t // deliver\t--\x3e onComplete \n\t\t\t Thread . sleep ( 500 ) ; \n\t\t\temitter . onComplete ( ) ; \n\t\t } \n\t } ) . debounce ( new   Function < Integer ,   ObservableSource < Long > > ( )   { \n\n\t\t\t @Override \n\t\t\t public   ObservableSource < Long >   apply ( Integer  t )   throws   Exception   { \n\t\t\t\t System . out . println ( "--\x3e apply(1-2): "   +  t ) ; \n\t\t\t\t // 设置过滤延迟时间为2秒，此时返回的Observable从订阅到发送数据时间段即为timeout \n\t\t\t\t return   Observable . timer ( 2 ,   TimeUnit . SECONDS ) \n\t\t\t\t\t\t . doOnSubscribe ( new   Consumer < Disposable > ( )   { \n\n\t\t\t\t\t\t\t @Override \n\t\t\t\t\t\t\t public   void   accept ( Disposable  t )   throws   Exception   { \n\t\t\t\t\t\t\t\t // 开始订阅，监听数据的发送来过滤数据 \n\t\t\t\t\t\t\t\t System . out . println ( "--\x3e debounceSelector(1-2) is onSubscribe!" ) ; \n\t\t\t\t\t\t\t } \n\t\t\t\t\t\t } ) . doOnDispose ( new   Action ( )   { \n\t\t\n\t\t\t\t\t\t\t @Override \n\t\t\t\t\t\t\t public   void   run ( )   throws   Exception   { \n\t\t\t\t\t\t\t\t // 发射数据后，丢弃当前的数据，解除当前绑定 \n\t\t\t\t\t\t\t\t System . out . println ( "--\x3e debounceSelector(1-2) is unSubscribe!" ) ; \n\t\t\t\t\t\t\t } \n\t\t\t\t\t\t } ) ; \n\t\t\t } \n\t\t } ) . subscribe ( new   Consumer < Integer > ( )   { \n\n\t\t\t @Override \n\t\t\t public   void   accept ( Integer  t )   throws   Exception   { \n\t\t\t\t System . out . println ( "----------\x3e accept(1-2): "   +  t ) ; \n\t\t\t } \n\t\t } ) ; \n \n 输出： \n --\x3e apply(1-2): 1\n--\x3e debounceSelector(1-2) is onSubscribe!\n--\x3e debounceSelector(1-2) is unSubscribe!\n--\x3e apply(1-2): 2\n--\x3e debounceSelector(1-2) is onSubscribe!\n--\x3e debounceSelector(1-2) is unSubscribe!\n--\x3e apply(1-2): 3\n--\x3e debounceSelector(1-2) is onSubscribe!\n--\x3e debounceSelector(1-2) is unSubscribe!\n----------\x3e accept(1-2): 3\n--\x3e apply(1-2): 4\n--\x3e debounceSelector(1-2) is onSubscribe!\n--\x3e debounceSelector(1-2) is unSubscribe!\n--\x3e apply(1-2): 5\n--\x3e debounceSelector(1-2) is onSubscribe!\n----------\x3e accept(1-2): 5\n--\x3e debounceSelector(1-2) is unSubscribe!\n \n \n Javadoc:  debounce(debounceSelector) \n 2. Throttle \n 主要应用于数据序列的节流操作，在指定的采样周期内获取指定的数据。 Throttling  也用于稀疏序列。当生产者发出的值超出我们想要的值时，我们不需要每个序列值，我们可以通过限制它来稀释序列。 \n 注意：  时间的划分不一定是统一的。例如，发射数据的时间间隔与划分数据的时间间隔一致时，在原始数据发送的一个时间点（此时数据还没有实际发送），此时可能由于划分时间已到，划分的数据片直接关闭了，所以有的时间片数据会有时间间隙差异。 \n \n 提示：  操作默认在\tcomputation\t调度器上执行，但是你可以指定其它的调度器。 \n 2.1 throttleFirst(windowDuration, unit) \n 获取每个  windowDuration  时间段内的原始数据序列中的第一项数据，直到原始数据全部发送完毕。 \n \n 解析：  实际在每个采样周期内，先发送第一项接收到的数据，然后丢弃后续周期内的数据项。 \n 实例代码： \n \t // 1. throttleFirst(long windowDuration, TimeUnit unit) \n\t // 指定每个指定时间内取第一项数据, 直到原始数据序列全部发送结束 \n\t Observable . intervalRange ( 1 ,   10 ,   0 ,   1 ,   TimeUnit . SECONDS ) \n\t\t . doOnNext ( new   Consumer < Long > ( )   { \n\n\t\t\t @Override \n\t\t\t public   void   accept ( Long  t )   throws   Exception   { \n\t\t\t\t System . out . println ( "--\x3e DataSource doOnNext : "   +  t ) ; \n\t\t\t } \n\t\t } ) . throttleFirst ( 2 ,   TimeUnit . SECONDS ) \t\t\t\t\t\t\t // 获取每隔2秒之内收集的第一项数据 \n\t  //   .throttleFirst(2, TimeUnit.SECONDS, Schedulers.newThread())\t// 指定调度线程为newThread() \n\t\t   . subscribe ( new   Observer < Long > ( )   { \n\n\t\t\t\t @Override \n\t\t\t\t public   void   onSubscribe ( Disposable  d )   { \n\t\t\t\t\t System . out . println ( "--\x3e throttleFirst onSubscribe" ) ; \n\t\t\t\t } \n\n\t\t\t\t @Override \n\t\t\t\t public   void   onNext ( Long  t )   { \n\t\t\t\t\t System . out . println ( "-------------\x3e throttleFirst onNext: "   +  t ) ; \n\t\t\t\t } \n\n\t\t\t\t @Override \n\t\t\t\t public   void   onError ( Throwable  e )   { \n\t\t\t\t\t System . out . println ( "--\x3e throttleFirst onError: "   +  e ) ; \n\t\t\t\t } \n\n\t\t\t\t @Override \n\t\t\t\t public   void   onComplete ( )   { \n\t\t\t\t\t System . out . println ( "--\x3e throttleFirst onComplete" ) ; \n\t\t\t\t } \n\t\t\t } ) ; \n \n 输出： \n --\x3e throttleFirst onSubscribe\n--\x3e DataSource doOnNext : 1\n-------------\x3e throttleFirst onNext: 1\n--\x3e DataSource doOnNext : 2\n--\x3e DataSource doOnNext : 3\n--\x3e DataSource doOnNext : 4\n-------------\x3e throttleFirst onNext: 4\n--\x3e DataSource doOnNext : 5\n--\x3e DataSource doOnNext : 6\n--\x3e DataSource doOnNext : 7\n-------------\x3e throttleFirst onNext: 7\n--\x3e DataSource doOnNext : 8\n--\x3e DataSource doOnNext : 9\n-------------\x3e throttleFirst onNext: 9\n--\x3e DataSource doOnNext : 10\n--\x3e throttleFirst onComplete\n \n \n Javadoc:  throttleFirst(windowDuration, unit) \nJavadoc:  throttleFirst(windowDuration, unit, scheduler) \n 2.2 throttleLast(intervalDuration, unit) \n 获取每个  windowDuration  时间段内的原始数据序列中的最近的一项数据，直到原始数据全部发送完毕。 throttleLast  运算符以固定间隔而不是相对于最后一项来划分时间。它会在每个窗口中发出最后一个值，而不是它后面的第一个值。 \n \n 解析：  实际在每个采样周期内，先缓存收集的数据，等周期结束发送最后一项数据，丢弃最后数据项前面的数据。 \n 实例代码： \n \t // 2. throttleLast(long intervalDuration, TimeUnit unit) \n\t // 指定间隔时间内取最后一项数据，直到原始数据序列全部发送结束 \n\t Observable . intervalRange ( 1 ,   10 ,   0 ,   1050 ,   TimeUnit . MILLISECONDS ) \n\t\t . doOnNext ( new   Consumer < Long > ( )   { \n\n\t\t\t @Override \n\t\t\t public   void   accept ( Long  t )   throws   Exception   { \n\t\t\t\t System . out . println ( "--\x3e DataSource doOnNext : "   +  t ) ; \n\t\t\t } \n\t\t } ) . throttleLast ( 2 ,   TimeUnit . SECONDS ) \t\t\t\t\t\t\t // 获取每隔2秒之内收集的最后一项数据 \n      //   .throttleLast(2, TimeUnit.SECONDS, Schedulers.newThread())\t// 指定调度线程为newThread() \n\t\t   . subscribe ( new   Observer < Long > ( )   { \n\n\t\t\t\t @Override \n\t\t\t\t public   void   onSubscribe ( Disposable  d )   { \n\t\t\t\t\t System . out . println ( "--\x3e throttleLast onSubscribe" ) ; \n\t\t\t\t } \n\n\t\t\t\t @Override \n\t\t\t\t public   void   onNext ( Long  t )   { \n\t\t\t\t\t System . out . println ( "-------------\x3e throttleLast onNext: "   +  t ) ; \n\t\t\t\t } \n\n\t\t\t\t @Override \n\t\t\t\t public   void   onError ( Throwable  e )   { \n\t\t\t\t\t System . out . println ( "--\x3e throttleLast onError: "   +  e ) ; \n\t\t\t\t } \n\n\t\t\t\t @Override \n\t\t\t\t public   void   onComplete ( )   { \n\t\t\t\t\t System . out . println ( "--\x3e throttleLast onComplete" ) ; \n\t\t\t\t } \n\t\t\t } ) ; \n \n 输出： \n --\x3e throttleLast onSubscribe\n--\x3e DataSource doOnNext : 1\n--\x3e DataSource doOnNext : 2\n-------------\x3e throttleLast onNext: 2\n--\x3e DataSource doOnNext : 3\n--\x3e DataSource doOnNext : 4\n-------------\x3e throttleLast onNext: 4\n--\x3e DataSource doOnNext : 5\n--\x3e DataSource doOnNext : 6\n-------------\x3e throttleLast onNext: 6\n--\x3e DataSource doOnNext : 7\n--\x3e DataSource doOnNext : 8\n-------------\x3e throttleLast onNext: 8\n--\x3e DataSource doOnNext : 9\n--\x3e DataSource doOnNext : 10\n--\x3e throttleLast onComplete\n \n \n Javadoc:  throttleLast(intervalDuration, unit) \nJavadoc:  throttleLast(intervalDuration, unit, scheduler) \n 2.3 throttleWithTimeout(timeout,  unit) \n 指定每个数据发射后在  timeout  时间内，原始数据序列中没有下一个数据发射时，发射此项数据，否则丢弃这项数据。此操作与  debounce  方法相同。 \n 注意：  这个操作符会在原始数据的  onCompleted  时候直接发射发射数据，不会因为限流而丢弃数据。 \n \n 实例代码： \n \t // 3. throttleWithTimeout(long timeout, TimeUnit unit) \n\t // 发送一个数据，如果在包含timeout时间内，没有第二个数据发射，那么就会发射此数据，否则丢弃此数据 \n\t Observable . create ( new   ObservableOnSubscribe < Integer > ( )   { \n\n\t\t @Override \n\t\t public   void   subscribe ( ObservableEmitter < Integer >  emitter )   throws   Exception   { \n\t\t\temitter . onNext ( 1 ) ; \t // 下一个数据到此数据发射,\t--\x3e skip: \t\t30 < timeout \n\t\t\t Thread . sleep ( 30 ) ; \n\t\t\temitter . onNext ( 2 ) ; \t // 下一个数据到此数据发射,\t--\x3e skip: \t\t50 = timeout \n\t\t\t Thread . sleep ( 50 ) ; \n\t\t\temitter . onNext ( 3 ) ; \t // 下一个数据到此数据发射,\t--\x3e deliver: \t60 > timeout \n\t\t\t Thread . sleep ( 60 ) ; \n\t\t\temitter . onNext ( 4 ) ; \t // onComplete\t\t\t--\x3e deliver:\tonComplete \n\t\t\temitter . onComplete ( ) ; \n\t\t } \n\t } ) . throttleWithTimeout ( 50 ,   TimeUnit . MILLISECONDS )   // 指定防抖丢弃时间段为50毫秒 \n  //   .throttleWithTimeout(50, TimeUnit.MILLISECONDS, Schedulers.newThread()) // 指定调度线程为newThread() \n\t   . subscribe ( new   Consumer < Integer > ( )   { \n\n\t\t\t @Override \n\t\t\t public   void   accept ( Integer  t )   throws   Exception   { \n\t\t\t\t // TODO Auto-generated method stub \n\t\t\t\t System . out . println ( "--\x3e accept throttleWithTimeout(3): "   +  t ) ; \n\t\t\t } \n\t\t } ) ; \n \n 输出： \n --\x3e accept throttleWithTimeout(3): 3\n--\x3e accept throttleWithTimeout(3): 4\n \n \n Javadoc:  throttleWithTimeout(timeout,  unit) \nJavadoc:  throttleWithTimeout(timeout,  unit, scheduler) \n 3. Sample \n sample  允许您通过将序列划分为时间片段，并从每片中取出一个值来稀疏序列。当每片结束时，将发出其中的最后一个值（如果有的话）。 \n 注意：  时间的划分不一定是统一的。例如，发射数据的时间间隔与划分数据的时间间隔一致时，在原始数据发送的一个时间点（此时数据还没有实际发送），此时可能由于划分时间已到，划分的数据片直接关闭了，所以有的时间片数据会有时间间隙差异。 \n 3.1 sample(period, unit) \n 获取每个  period  时间片段内手机收据序列的最后一项，忽略此时间片内收集的其他数据项。 \n 实例代码： \n \t // 1. sample(long period, TimeUnit unit)/sample(long period, TimeUnit unit) \n\t // 将序列分为 period 的时间片段，从每片重取出最近的一个数据 \n\t // 等同于throttleLast \n\t Observable . intervalRange ( 1 ,   5 ,   0 ,   1100 ,   TimeUnit . MILLISECONDS ) \n\t\t . doOnNext ( new   Consumer < Long > ( )   { \n\n\t\t\t @Override \n\t\t\t public   void   accept ( Long  t )   throws   Exception   { \n\t\t\t\t System . out . println ( "--\x3e DataSource onNext: "   +  t ) ; \n\t\t\t } \n\t\t } ) . sample ( 2 ,   TimeUnit . SECONDS )  \t\t\t\t\t\t\t\t // 每3秒时间段数据中取最近一个值 \n\t //    .sample(2, TimeUnit.SECONDS, true) \t\t\t\t\t\t// 参数emitLast，设置是否忽略未采样的最后一个数据 \n\t //\t  .sample(2, TimeUnit.SECONDS, Schedulers.newThread())\t\t// 指定调度器为newThread() \n\t\t   . subscribe ( new   Consumer < Long > ( )   { \n\t\n\t\t\t\t @Override \n\t\t\t\t public   void   accept ( Long  t )   throws   Exception   { \n\t\t\t\t\t System . out . println ( "--\x3e accept(1): "   +  t ) ; \n\t\t\t\t } \n\t\t   } ) ; \n \n 输出： \n --\x3e DataSource onNext: 1\n--\x3e DataSource onNext: 2\n--\x3e accept(1): 2\n--\x3e DataSource onNext: 3\n--\x3e DataSource onNext: 4\n--\x3e accept(1): 4\n--\x3e DataSource onNext: 5\n \n \n Javadoc:  sample(long period, TimeUnit unit) \nJavadoc:  sample(long period, TimeUnit unit, emitLast) \nJavadoc:  sample(long period, TimeUnit unit, scheduler) \nJavadoc:  sample(long period, TimeUnit unit, scheduler, emitLast) \n 3.2 sample(sampler) \n sample  的这个方法每当第二个  sampler  发射一个数据（或者当它终止）时就对原始 Observable 进行采样。第二个Observable通过参数传递给  sample \t。 \n \n 实例代码： \n \t // 2. sample(ObservableSource sampler) \n\t // 每当第二个 sampler 发射一个数据（或者当它终止）时就对原始 Observable进行采样 \n\t Observable . intervalRange ( 1 ,   5 ,   0 ,   1020 ,   TimeUnit . MILLISECONDS ) \n\t\t . doOnNext ( new   Consumer < Long > ( )   { \n\n\t\t\t\t @Override \n\t\t\t\t public   void   accept ( Long  t )   throws   Exception   { \n\t\t\t\t\t System . out . println ( "--\x3e DataSource onNext: "   +  t ) ; \n\t\t\t\t } \n\t\t } ) . sample ( Observable . interval ( 2 ,   TimeUnit . SECONDS ) ) \t // 每隔2秒进行一次采样 \n\t\t   . subscribe ( new   Consumer < Long > ( )   { \n\n\t\t\t\t @Override \n\t\t\t\t public   void   accept ( Long  t )   throws   Exception   { \n\t\t\t\t\t System . out . println ( "--\x3e accept(2): "   +  t ) ; \n\t\t\t\t } \n\t\t   } ) ; \n \n 输出： \n --\x3e DataSource onNext: 1\n--\x3e DataSource onNext: 2\n--\x3e accept(2): 2\n--\x3e DataSource onNext: 3\n--\x3e DataSource onNext: 4\n--\x3e accept(2): 4\n--\x3e DataSource onNext: 5\n \n \n Javadoc:  sample(sampler) \nJavadoc:  sample(sampler, emitLast) \n 4. Distinct \n 抑制（过滤掉）重复的数据项。Distinct 的过滤规则是：只允许还没有发射过的数据项通过。 \n 在某些实现中，有一些方法中允许你调整判定两个数据不同( distinct )的标准。还有一些实现只比较一项数据和它的直接前驱，因此只会从序列中过滤掉连续重复的数据。 \n 4.1 distinct() \n 只允许还没有发射过的数据项通过，过滤数据序列中的所有重复的数据项，保证处理后的数据序列没有重复。 \n \n 示例代码： \n \t // 1. distinct() \n\t // 去除全部数据中重复的数据 \n\t Observable . just ( 1 ,   2 ,   3 ,   3 ,   3 ,   4 ,   4 ,   5 ,   6 ,   6 ) \n\t\t\t . distinct ( ) \n\t\t\t . subscribe ( new   Consumer < Integer > ( )   { \n\t\t\t\n\t\t\t\t @Override \n\t\t\t\t public   void   accept ( Integer  t )   throws   Exception   { \n\t\t\t\t\t System . out . println ( "--\x3e accept distinct(1): "   +  t ) ; \n\t\t\t\t } \n\t\t\t } ) ; \n \n 输出： \n --\x3e accept distinct(1): 1\n--\x3e accept distinct(1): 2\n--\x3e accept distinct(1): 3\n--\x3e accept distinct(1): 4\n--\x3e accept distinct(1): 5\n--\x3e accept distinct(1): 6\n \n \n Javadoc:  distinct() \n 4.2 distinct(keySelector) \n 这个操作符接受一个函数。这个函数根据原始Observable发射的数据项产生一个  Key ，然后， 比较这些Key而不是数据本身，来判定两个数据是否是不同的 。 \n \n 实例代码： \n \t // 数根据原始Observable发射的数据项产生一个 Key，然后比较这些Key而不是数据本身，来判定两个数据是否是不同的（去除全部数据中重复的数据） \n\t Observable . just ( 1 ,   2 ,   3 ,   3 ,   4 ,   5 ,   6 ,   6 ) \n\t\t\t . distinct ( new   Function < Integer ,   String > ( )   { \n\n\t\t\t\t @Override \n\t\t\t\t public   String   apply ( Integer  t )   throws   Exception   { \n\t\t\t\t\t // 根据奇数或偶数来判断数据序列的重复的key \n\t\t\t\t\t return  t  %   2   ==   0   ?   "even"   :   "odd" ; \n\t\t\t\t } \n\t\t\t } ) . subscribe ( new   Consumer < Integer > ( )   { \n\n\t\t\t\t @Override \n\t\t\t\t public   void   accept ( Integer  t )   throws   Exception   { \n\t\t\t\t\t System . out . println ( "--\x3e accept distinct(2): "   +  t ) ; \n\t\t\t\t } \n\t\t\t } ) ; \n \n 输出： \n --\x3e accept distinct(2): 1\n--\x3e accept distinct(2): 2\n \n \n Javadoc:  distinct(keySelector) \n 4.3 distinctUntilChanged() \n distinctUntilChanged  操作符，去除数据序列中的连续重复项。它只判定一个数据和它的直接前驱是否是不同的。 \n \n 实例代码： \n \t // 3. distinctUntilChanged() \n\t // 去除连续重复的数据 \n\t Observable . just ( 1 ,   2 ,   3 ,   3 ,   4 ,   5 ,   6 ,   6 ,   3 ,   2 ) \n\t\t . distinctUntilChanged ( ) \n\t\t . subscribe ( new   Consumer < Integer > ( )   { \n\n\t\t\t @Override \n\t\t\t public   void   accept ( Integer  t )   throws   Exception   { \n\t\t\t\t System . out . println ( "--\x3e accept distinctUntilChanged(3): "   +  t ) ; \n\t\t\t } \n\t\t } ) ; \n \n 输出： \n --\x3e accept distinctUntilChanged(3): 1\n--\x3e accept distinctUntilChanged(3): 2\n--\x3e accept distinctUntilChanged(3): 3\n--\x3e accept distinctUntilChanged(3): 4\n--\x3e accept distinctUntilChanged(3): 5\n--\x3e accept distinctUntilChanged(3): 6\n--\x3e accept distinctUntilChanged(3): 3\n--\x3e accept distinctUntilChanged(3): 2\n \n \n Javadoc:  distinctUntilChanged() \n 4.4 distinctUntilChanged(keySelector) \n distinctUntilChanged(keySelector)  操作符，根据一个函数产生的  Key  判定两个相邻的数据项是不是相同的，去除 连续重复 的数据。 \n 实例代码： \n \t // 4. distinctUntilChanged(Function<T,K>) \n\t // 数根据原始Observable发射的数据项产生的 Key，去除连续重复的数据 \n\t Observable . just ( 8 ,   2 ,   3 ,   5 ,   9 ,   5 ,   6 ,   6 ) \n\t\t\t . distinctUntilChanged ( new   Function < Integer ,   String > ( )   { \n\n\t\t\t\t @Override \n\t\t\t\t public   String   apply ( Integer  t )   throws   Exception   { \n\t\t\t\t\t // 根据原始数据处理后添加key，依据这个key来判断是否重复（去除连续重复的数据） \n\t\t\t\t\t return  t  %   2   ==   0   ?   "even"   :   "odd" ; \n\t\t\t\t } \n\t\t\t } ) . subscribe ( new   Consumer < Integer > ( )   { \n\n\t\t\t\t @Override \n\t\t\t\t public   void   accept ( Integer  t )   throws   Exception   { \n\t\t\t\t\t System . out . println ( "--\x3e accept distinctUntilChanged(4): "   +  t ) ; \n\t\t\t\t } \n\t\t\t } ) ; \n \n 输出： \n --\x3e accept distinctUntilChanged(4): 8\n--\x3e accept distinctUntilChanged(4): 3\n--\x3e accept distinctUntilChanged(4): 6\n \n \n Javadoc:  distinctUntilChanged(keySelector) \n 5. Skip \n 主要用于忽略Observable发射的指定的 N 项数据，如跳过数据序列的前面或后面 N 项数据，指定时间段内的数据项。 \n Skip  操作符的还有一些变体的操作方法如下： \n 5.1 skip(count) \n 忽略  Observable  发射的前  N  项数据，只保留之后的数据。 \n \n 实例代码： \n \t // 1. skip(long count) \n\t // 跳过前count项数据，保留后面的数据 \n\t Observable . range ( 1 ,   10 ) \n\t\t . skip ( 5 )   // 过滤数据序列前5项数据 \n\t\t . subscribe ( new   Consumer < Integer > ( )   { \n\n\t\t\t @Override \n\t\t\t public   void   accept ( Integer  t )   throws   Exception   { \n\t\t\t\t System . out . println ( "--\x3e accept skip(1): "   +  t ) ; \n\t\t\t } \n\t\t } ) ; \n \n 输出： \n --\x3e accept skip(1): 6\n--\x3e accept skip(1): 7\n--\x3e accept skip(1): 8\n--\x3e accept skip(1): 9\n--\x3e accept skip(1): 10\n \n \n Javadoc:  skip(count) \n 5.2 skip(time, unit) \n skip  的这个变体接受一个时长参数，它会丢弃原始Observable开始的那段时间段发射的数据，时长和时间单位通过参数指定。 \n \n 实例代码： \n \t // 2. skip(long time, TimeUnit unit) \n\t // 跳过开始的time时间段内的数据，保留后面的数据 \n\t Observable . intervalRange ( 1 ,   5 ,   0 ,   1 ,   TimeUnit . SECONDS ) \n\t\t . skip ( 2 ,   TimeUnit . SECONDS ) \t // 跳过前2秒的数据 \n\t\t . subscribe ( new   Consumer < Long > ( )   { \n\n\t\t\t @Override \n\t\t\t public   void   accept ( Long  t )   throws   Exception   { \n\t\t\t\t System . out . println ( "--\x3e accept skip(2): "   +  t ) ; \n\t\t\t } \n\t\t } ) ; \n \n 输出： \n --\x3e accept skip(2): 4\n--\x3e accept skip(2): 5\n \n \n Javadoc:  skip(time, unit) \nJavadoc:   skip(time, unit, scheduler) \n 5.3 skipLast(count) \n 使用  SkipLast  操作符修改原始Observable，你可以忽略Observable发射的后  N  项数据，只保留前面的数据。 \n \n 实例代码： \n \t // 3. skipLast(int count) \n\t // 跳过数据后面的count个数据 \n\t Observable . range ( 1 ,   10 ) \n\t\t . skipLast ( 5 )   // 跳过数据序列的后5项数据 \n\t\t . subscribe ( new   Consumer < Integer > ( )   { \n\n\t\t\t @Override \n\t\t\t public   void   accept ( Integer  t )   throws   Exception   { \n\t\t\t\t System . out . println ( "--\x3e accept skipLast(3): "   +  t ) ; \n\t\t\t } \n\t\t } ) ; \n \n 输出： \n --\x3e accept skipLast(3): 1\n--\x3e accept skipLast(3): 2\n--\x3e accept skipLast(3): 3\n--\x3e accept skipLast(3): 4\n--\x3e accept skipLast(3): 5\n \n \n Javadoc:  skipLast(count) \n 5.4 skipLast(time, unit) \n 还有一个  skipLast  变体接受一个时间段参数，它会丢弃在原始 Observable 的生命周期内最后一段时间内发射的数据。时长和时间单位通过参数指定。 \n 注意：  这个机制是这样实现的：延迟原始 Observable 发射的任何数据项，直到自原始数据发射之后过了给定的时长之后，才开始发送数据。 \n \n 实例代码： \n \t // 4. skipLast(long time, TimeUnit unit, [boolean delayError]) \n\t // 丢弃在原始Observable的生命周 期内最后time时间内发射的数据 \n\t // 可选参数delayError：延迟异常通知 \n\t Observable . intervalRange ( 1 ,   10 ,   0 ,   1 ,   TimeUnit . SECONDS ) \n\t\t . doOnNext ( new   Consumer < Long > ( )   { \n\n\t\t\t @Override \n\t\t\t public   void   accept ( Long  t )   throws   Exception   { \n\t\t\t\t System . out . println ( "--\x3e DataSource: "   +  t ) ; \n\t\t\t } \n\t\t } ) . skipLast ( 2 ,   TimeUnit . SECONDS ) \n\t //\t  .skipLast(2, TimeUnit.SECONDS, Schedulers.trampoline()) // 通过scheduler指定工作线程 \n\t //\t  .skipLast(2, TimeUnit.SECONDS, true)\t\t\t\t\t// 延迟Error的通知，多用于组合Observable的场景 \n\t\t   . subscribe ( new   Consumer < Long > ( )   { \n\n\t\t\t   @Override \n\t\t\t   public   void   accept ( Long  t )   throws   Exception   { \n\t\t\t  \t   System . out . println ( "--\x3e accept skipLast(4): "   +  t ) ; \n\t\t\t   } \n\t\t   } ) ; \n \n 输出： \n --\x3e DataSource: 1\n--\x3e DataSource: 2\n--\x3e DataSource: 3\n--\x3e accept skipLast(4): 1\n--\x3e DataSource: 4\n--\x3e accept skipLast(4): 2\n--\x3e DataSource: 5\n--\x3e accept skipLast(4): 3\n--\x3e DataSource: 6\n--\x3e accept skipLast(4): 4\n--\x3e DataSource: 7\n--\x3e accept skipLast(4): 5\n--\x3e DataSource: 8\n--\x3e accept skipLast(4): 6\n--\x3e DataSource: 9\n--\x3e accept skipLast(4): 7\n--\x3e DataSource: 10\n--\x3e accept skipLast(4): 8\n\n \n \n 注意：  skipLast 的这个操作默认在 computation 调度器上执行，但是你可以使用Scheduler参数指定其 它的调度器。 \nJavadoc:  skipLast(time, unit) \nJavadoc:  skipLast(time, unit, delayError) \nJavadoc:  skipLast(time, unit, scheduler) \nJavadoc:  skipLast(time, unit, scheduler, delayError) \nJavadoc:  skipLast(time, unit, scheduler, delayError, bufferSize) \n \n'},{title:"6. Observable的数据过滤（二）",frontmatter:{author:"JiangMing",title:"6. Observable的数据过滤（二）",date:"2019-12-30 22:30:56",sidebar:"auto",categories:["Java","Rxjava2"],tags:["Rxjava2"],publish:!0,showSponsor:!0},regularPath:"/developer/rxjava2/06.rxjava2.html",relativePath:"developer/rxjava2/06.rxjava2.md",key:"v-04043ea2",path:"/developer/rxjava2/06.rxjava2.html",headers:[{level:2,title:"6. Filter",slug:"_6-filter"},{level:2,title:"7. Frist",slug:"_7-frist"},{level:3,title:"7.1 firstElement()",slug:"_7-1-firstelement"},{level:3,title:"7.2 first(defaultItem)",slug:"_7-2-first-defaultitem"},{level:3,title:"7.3 firstOrError()",slug:"_7-3-firstorerror"},{level:2,title:"8. Single",slug:"_8-single"},{level:3,title:"8.1 singleElement()",slug:"_8-1-singleelement"},{level:3,title:"8.2 single(defaultItem)",slug:"_8-2-single-defaultitem"},{level:3,title:"8.3 singleOrError()",slug:"_8-3-singleorerror"},{level:2,title:"9. ElementAt",slug:"_9-elementat"},{level:3,title:"9.1 elementAt(index)",slug:"_9-1-elementat-index"},{level:3,title:"9.2 elementAt(index, defaultItem)",slug:"_9-2-elementat-index-defaultitem"},{level:3,title:"9.3 elementAtOrError(index)",slug:"_9-3-elementatorerror-index"},{level:2,title:"10. ignoreElements",slug:"_10-ignoreelements"},{level:2,title:"11. Last",slug:"_11-last"},{level:3,title:"11.1 lastElement()",slug:"_11-1-lastelement"},{level:3,title:"11.2 last(defaultItem)",slug:"_11-2-last-defaultitem"},{level:3,title:"11.3 lastOrError()",slug:"_11-3-lastorerror"},{level:2,title:"12. Take",slug:"_12-take"},{level:3,title:"12.1 take(count)",slug:"_12-1-take-count"},{level:3,title:"12.2 take(timeout, TimeUnit)",slug:"_12-2-take-timeout-timeunit"},{level:2,title:"13. TakeLast",slug:"_13-takelast"},{level:3,title:"13.1 takeLast(count)",slug:"_13-1-takelast-count"},{level:3,title:"13.2 takeLast(time, TimeUnit)",slug:"_13-2-takelast-time-timeunit"},{level:3,title:"13.3 takeLast(count, time, TimeUnit)",slug:"_13-3-takelast-count-time-timeunit"},{level:2,title:"14. OfType",slug:"_14-oftype"},{level:2,title:"小结：",slug:"小结"}],content:' 6. Filter \n 只发射通过了函数过滤的数据项。 \n \n 实例代码： \n \t // filter(Predicate<? super Integer> predicate) \n\t // 验证数据,决定是否发射数据 \n\t Observable . range ( 1 ,   10 ) \n\t\t\t . filter ( new   Predicate < Integer > ( )   { \n\n\t\t\t\t @Override \n\t\t\t\t public   boolean   test ( Integer  t )   throws   Exception   { \n\t\t\t\t\t // 进行测试验证是否需要发射数据 \n\t\t\t\t\t return  t  >   5   ?   true   :   false ; \n\t\t\t\t } \n\t\t\t } ) . subscribe ( new   Consumer < Integer > ( )   { \n\n\t\t\t\t @Override \n\t\t\t\t public   void   accept ( Integer  t )   throws   Exception   { \n\t\t\t\t\t System . out . println ( "--\x3e accept filter: "   +  t ) ; \n\t\t\t\t } \n\t\t\t } ) ; \n \n 输出： \n --\x3e accept filter: 6\n--\x3e accept filter: 7\n--\x3e accept filter: 8\n--\x3e accept filter: 9\n--\x3e accept filter: 10\n \n \n Javadoc:  filter(predicate) \n 7. Frist \n 只发射第一项或者满足某个条件的第一项数据。如果你只对Observable发射的第一项数据，或者满足某个条件的第一项数据感兴趣，你可以使用  First  操作符。 \n Frist  操作符有以下几种操作： \n 7.1 firstElement() \n 只发射第一个数据，当数据存在的情况。 \n \n 实例代码： \n \t // 1. firstElement() \n\t // 只发射第一个数据 \n\t Observable . range ( 1 ,   10 ) \n\t\t . firstElement ( ) \n\t\t . subscribe ( new   Consumer < Integer > ( )   { \n\n\t\t\t @Override \n\t\t\t public   void   accept ( Integer  t )   throws   Exception   { \n\t\t\t\t System . out . println ( "--\x3e accept firstElement(1): "    +  t ) ; \n\t\t\t } \n\t\t } ) ; \n \n 输出： \n --\x3e accept firstElement(1): 1\n \n \n Javadoc:  firstElement() \n 7.2 first(defaultItem) \n first(defaultItem)  与  firstElement()  类似，但是在Observagle没有发射任何数据时发射一个你在参数中指定的  defaultItem  默认值。 \n \n 实例代码： \n \t // 2. first(Integer defaultItem) \n\t // 发射第一个数据项，如果没有数据项，发送默认的defaultItem \n\t Observable . create ( new   ObservableOnSubscribe < Integer > ( )   { \n\n\t\t @Override \n\t\t public   void   subscribe ( ObservableEmitter < Integer >  emitter )   throws   Exception   { \n\t\t\temitter . onComplete ( ) ; \n\t\t } \n\t } ) . first ( 999 )   // 没有数据发送时，发送默认值999 \n\t   . subscribe ( new   Consumer < Integer > ( )   { \n\n\t\t   @Override \n\t\t   public   void   accept ( Integer  t )   throws   Exception   { \n\t\t\t   System . out . println ( "--\x3e accept first(2): "   +  t ) ; \n\t\t   } \n\t   } ) ; \n \n 输出： \n --\x3e accept first(2): 999\n \n \n Javadoc:  first(defaultItem) \n 7.3 firstOrError() \n 发射第一个数据项，如果没有数据项，会发送  NoSuchElementException  通知。 \n \n 实例代码： \n \t // 3. first(Integer defaultItem) \n\t // 发射第一个数据项,如果没有数据项,会有Error: NoSuchElementException \n\t Observable . create ( new   ObservableOnSubscribe < Integer > ( )   { \n\n\t\t @Override \n\t\t public   void   subscribe ( ObservableEmitter < Integer >  emitter )   throws   Exception   { \n\t\t\temitter . onComplete ( ) ; \n\t\t } \n\t } ) . firstOrError ( )   // 没有数据发送时，将会发送NoSuchElementException通知 \n\t   . subscribe ( new   SingleObserver < Integer > ( )   { \n\n\t\t\t @Override \n\t\t\t public   void   onSubscribe ( Disposable  d )   { \n\t\t\t\t System . out . println ( "--\x3e onSubscribe: " ) ; \n\t\t\t } \n\n\t\t\t @Override \n\t\t\t public   void   onSuccess ( Integer  t )   { \n\t\t\t\t System . out . println ( "--\x3e accept onSuccess(3): "   +  t ) ; \n\t\t\t } \n\n\t\t\t @Override \n\t\t\t public   void   onError ( Throwable  e )   { \n\t\t\t\t System . out . println ( "--\x3e acctpt onError(3): "   +  e ) ; \n\t\t\t } \n\t   } ) ; \n \n 输出： \n --\x3e onSubscribe: \n--\x3e acctpt onError(3): java.util.NoSuchElementException\n \n \n Javadoc:  firstOrError() \n 8. Single \n single  与  first  类似，但是如果原始Observable在完成之前不是正好发射一次数据，它会抛出一个 NoSuchElementException  的通知。 \n Single 有以下几种操作： \n 8.1 singleElement() \n 发射单例数据，超过一个就会发送  NoSuchElementException  通知。 \n \n 实例代码： \n \t // 1.singleElement() \n\t // 发射单例数据，超过一个就会NoSuchElementException\t \n\t Observable . create ( new   ObservableOnSubscribe < Integer > ( )   { \n\n\t\t @Override \n\t\t public   void   subscribe ( ObservableEmitter < Integer >  emitter )   throws   Exception   { \n\t\t\temitter . onNext ( 1 ) ; \n\t\t\temitter . onNext ( 2 ) ; \n\t\t\temitter . onComplete ( ) ; \n\t\t } \n\t } ) . singleElement ( )   // 发送单个数据，大于1项数据就会有Error通知 \n\t   . subscribe ( new   Consumer < Integer > ( )   { \n\n\t\t\t @Override \n\t\t\t public   void   accept ( Integer  t )   throws   Exception   { \n\t\t\t\t System . out . println ( "--\x3e accept singleElement(1): "   +  t ) ; \n\t\t\t } \n\t   } , new   Consumer < Throwable > ( )   { \n\n\t\t @Override \n\t\t public   void   accept ( Throwable  t )   throws   Exception   { \n\t\t\t System . out . println ( "--\x3e OnError(1): "   +  t ) ; \n\t\t } \n\t } ) ; \n \n 输出： \n --\x3e OnError(1): java.lang.IllegalArgumentException: Sequence contains more than one element!\n \n \n Javadoc:  singleElement() \n 8.2 single(defaultItem) \n 发射单例数据，没有接收到数据项则发送指定默认  defaultItem  数据。 \n \n 实例代码： \n \t // 2. single(Integer defaultItem) \n\t // 发射单例数据，没有数据项发送指定默认defaultItem \n\t Observable . create ( new   ObservableOnSubscribe < Integer > ( )   { \n\n\t\t @Override \n\t\t public   void   subscribe ( ObservableEmitter < Integer >  emitter )   throws   Exception   { \n\t\t\temitter . onComplete ( ) ; \n\t\t } \n\t } ) . single ( 999 )   // 没有接受到数据则发送默认数据999 \n\t   . subscribe ( new   Consumer < Integer > ( )   { \n\n\t\t\t @Override \n\t\t\t public   void   accept ( Integer  t )   throws   Exception   { \n\t\t\t\t System . out . println ( "--\x3e accept single(2): "   +  t ) ; \n\t\t\t } \n\t   } ) ; \n \n 输出： \n --\x3e accept single(2): 999\n \n \n Javadoc:  single(defaultItem) \n 8.3 singleOrError() \n 发射一个单例的数据，如果数据源没有数据项，则发射一个  NoSuchElementException  通知。 \n \n 实例代码： \n \t // 3.singleOrError() \n\t // 发射一个单例的数据，如果数据源 没有数据项，则发送一个NoSuchElementException异常通知 \n\t Observable . create ( new   ObservableOnSubscribe < Integer > ( )   { \n\n\t\t @Override \n\t\t public   void   subscribe ( ObservableEmitter < Integer >  emitter )   throws   Exception   { \n\t\t\temitter . onComplete ( ) ; \n\t\t } \n\t } ) . singleOrError ( )   // 如果没有数据项发送，则发送一个NoSuchElementException异常通知 \n\t   . subscribe ( new   SingleObserver < Integer > ( )   { \n\n\t\t\t @Override \n\t\t\t public   void   onSubscribe ( Disposable  d )   { \n\t\t\t\t System . out . println ( "--\x3e onSubscribe(3): " ) ; \n\t\t\t } \n\n\t\t\t @Override \n\t\t\t public   void   onSuccess ( Integer  t )   { \n\t\t\t\t System . out . println ( "--\x3e onSuccess(3): "   +  t ) ; \n\t\t\t } \n\n\t\t\t @Override \n\t\t\t public   void   onError ( Throwable  e )   { \n\t\t\t\t System . out . println ( "--\x3e onError(3): "   +  e ) ; \n\t\t\t } \n\t\t } ) ; \n \n 输出： \n --\x3e onSubscribe(3): \n--\x3e onError(3): java.util.NoSuchElementException\n \n \n Javadoc:  singleOrError() \n 9. ElementAt \n ElementAt  操作符获取原始Observable发射的数据序列指定索引位置的数据项，然后当做自己的唯一数据发射。 \n ElementAt 操作符有以下几种操作： \n 9.1 elementAt(index) \n 发射索引位置第  index  项数据（从0开始计数），如果数据不存在，会  IndexOutOfBoundsException  异常。 \n \n 实例代码： \n \t // 1. elementAt(long index) \n\t // 指定发射第N项数据（从0开始计数）,如果数据不存在，会IndexOutOfBoundsException异常 \n\t Observable . range ( 1 ,   10 ) \n\t\t . elementAt ( 5 )   // 发射数据序列中索引为5的数据项，索引从0开始 \n\t\t . subscribe ( new   Consumer < Integer > ( )   { \n\n\t\t\t @Override \n\t\t\t public   void   accept ( Integer  t )   throws   Exception   { \n\t\t\t\t System . out . println ( "--\x3e accept ElementAt(1): "   +  t ) ; \n\t\t\t } \n\t\t } ) ; \n \n 输出： \n --\x3e accept ElementAt(1): 6\n \n \n Javadoc:  elementAt(index) \n 9.2 elementAt(index, defaultItem) \n 发射索引位置第  index  项数据（从0开始计数），如果数据不存在，发送默认  defaultItem  数据。 \n \n 实例代码： \n \t // 2. elementAt(long index, Integer defaultItem) \n\t // 指定发射第N项数据（从0开始计数）,如果数据不存在,发送默认defaultItem \n\t Observable . range ( 1 ,   10 ) \n\t\t . elementAt ( 20 ,   0 )   // 发射索引第20项数据，不存在此项数据时，发送默认数据0 \n\t\t . subscribe ( new   Consumer < Integer > ( )   { \n\n\t\t\t @Override \n\t\t\t public   void   accept ( Integer  t )   throws   Exception   { \n\t\t\t\t System . out . println ( "--\x3e accept elementAt(2): "   +  t ) ; \n\t\t\t } \n\t\t } ) ; \n \n 输出： \n --\x3e accept elementAt(2): 0\n \n \n Javadoc:  elementAt(index, defaultItem) \n 9.3 elementAtOrError(index) \n 发射索引位置第  index  项数据（从0开始计数），如果指定发射的数据不存在，会发射 NoSuchElementException  异常通知。 \n \n 实例代码： \n \t // 3. elementAtOrError(long index) \n\t // 如果指定发射的数据不存在，会抛出NoSuchElementException \n\t Observable . range ( 1 ,   10 ) \n\t\t . elementAtOrError ( 50 )   // 发射索引为50的数据，不存在则发送NoSuchElementException异常通知 \n\t\t . subscribe ( new   SingleObserver < Integer > ( )   { \n\n\t\t\t @Override \n\t\t\t public   void   onSubscribe ( Disposable  d )   { \n\t\t\t\t System . out . println ( "--\x3e onSubscribe(3): " ) ; \n\t\t\t } \n\n\t\t\t @Override \n\t\t\t public   void   onSuccess ( Integer  t )   { \n\t\t\t\t System . out . println ( "--\x3e onSuccess(3): "   +  t ) ; \n\t\t\t } \n\n\t\t\t @Override \n\t\t\t public   void   onError ( Throwable  e )   { \n\t\t\t\t System . out . println ( "--\x3e onError(3): "   +  e ) ; \n\t\t\t } \n\t\t } ) ; \n \n 输出： \n --\x3e onSubscribe(3): \n--\x3e onError(3): java.util.NoSuchElementException\n \n \n Javadoc:  elementAtOrError(index) \n 10. ignoreElements \n 不发射任何数据，只发射Observable的终止通知。 \n IgnoreElements \t操作符抑制原始Observable发射的所有数据，只允许它的终止通知 （onError 或 onCompleted ）通过。 \n \n 解析：  如果你不关心一个Observable发射的数据，但是希望在它完成时或遇到错误终止时收到通知，你可以对Observable使用\tignoreElements 操作符，它会确保永远不会调用观察者的 onNext() 方法。 \n 实例代码： \n \t // ignoreElements() \n\t // 只接受onError或onCompleted通知，拦截onNext事件（不关心发射的数据，只希望在成功或者失败的时候收到通知） \n\t Observable . create ( new   ObservableOnSubscribe < Integer > ( )   { \n\n\t\t @Override \n\t\t public   void   subscribe ( ObservableEmitter < Integer >  emitter )   throws   Exception   { \n\t\t\temitter . onNext ( 1 ) ; \n\t\t\t //\tint i = 1/0; \n\t\t\temitter . onComplete ( ) ; \n\t\t } \n\t } ) . ignoreElements ( ) \n\t   . subscribe ( new   CompletableObserver ( )   { \n\n\t\t\t @Override \n\t\t\t public   void   onSubscribe ( Disposable  d )   { \n\t\t\t\t System . out . println ( "--\x3e onSubscribe" ) ; \n\t\t\t } \n\n\t\t\t @Override \n\t\t\t public   void   onError ( Throwable  e )   { \n\t\t\t\t System . out . println ( "--\x3e onError: "   +  e ) ; \n\t\t\t } \n\n\t\t\t @Override \n\t\t\t public   void   onComplete ( )   { \n\t\t\t\t System . out . println ( "--\x3e onComplete" ) ; \n\t\t\t } \n\t   } ) ; \n \n 输出： \n --\x3e onSubscribe\n--\x3e onComplete\n \n \n Javadoc:  ignoreElements() \n 11. Last \n 只发射最后一项（或者满足某个条件的最后一项）数据。 \n 如果你只对Observable发射的最后一项数据，或者满足某个条件的最后一项数据感兴趣，你可以使用  Last  操作符。 \n Last  有以下几种操作： \n 11.1 lastElement() \n 只发射最后一项数据，使用没有参数的  last  操作符，如果Observable中没有数据发送，则同样没有数据发送。 \n \n 实例代码： \n \t // 1. lastElement() \n\t // 接受最后一项数据 \n\t Observable . create ( new   ObservableOnSubscribe < Integer > ( )   { \n\n\t\t @Override \n\t\t public   void   subscribe ( ObservableEmitter < Integer >  emitter )   throws   Exception   { \n\t\t\temitter . onNext ( 1 ) ; \n\t\t\temitter . onNext ( 2 ) ; \n\t\t\temitter . onNext ( 3 ) ; \n\t\t\temitter . onComplete ( ) ; \n\t\t } \n\t } ) . lastElement ( )   // 存在数据发送的话，即发射最后一项数据，否则没有数据发射 \n\t   . subscribe ( new   Consumer < Integer > ( )   { \n\n\t\t\t @Override \n\t\t\t public   void   accept ( Integer  t )   throws   Exception   { \n\t\t\t\t System . out . println ( "--\x3e accept lastElement(1): "   +  t ) ; \n\t\t\t } \n\t\t } ) ; \n \n 输出： \n --\x3e accept lastElement(1): 3\n \n \n Javadoc:  lastElement() \n 11.2 last(defaultItem) \n 只发射最后一项数据，如果Observable中没有数据发送，则发送指定的默认值  defaultItem 。 \n \n 实例代码： \n \t // 2. last(Integer defaultItem) \n\t // 接受最后一项数据,如果没有数据发送，发送默认数据：defaultItem \n\t Observable . range ( 0 ,   0 ) \n\t\t . last ( 999 )   // 接受最后一项数据，没有数据则发送默认数据999 \n\t\t . subscribe ( new   Consumer < Integer > ( )   { \n\n\t\t\t @Override \n\t\t\t public   void   accept ( Integer  t )   throws   Exception   { \n\t\t\t\t System . out . println ( "--\x3e accept: last(2): "   +  t ) ; \n\t\t\t } \n\t\t } ) ; \n \n 输出： \n --\x3e accept: last(2): 999\n \n \n Javadoc:  last(defaultItem) \n 11.3 lastOrError() \n 接受最后一项数据，如果没有数据发送，抛出  NoSuchElementException  异常通知。 \n \n 实例代码： \n \t // 3. lastOrError() \n\t // 接受最后一项数据,如果没有数据发送，抛出onError: NoSuchElementException \n\t Observable . range ( 0 ,   0 ) \n\t\t . lastOrError ( )   // 接受最后一项数据,如果没有数据，则反射NoSuchElementException异常通知 \n\t\t . subscribe ( new   SingleObserver < Integer > ( )   { \n\n\t\t\t @Override \n\t\t\t public   void   onSubscribe ( Disposable  d )   { \n\t\t\t\t System . out . println ( "--\x3e onSubscribe: " ) ; \n\t\t\t } \n\n\t\t\t @Override \n\t\t\t public   void   onSuccess ( Integer  t )   { \n\t\t\t\t System . out . println ( "--\x3e onSuccess(3)" ) ; \n\t\t\t } \n\n\t\t\t @Override \n\t\t\t public   void   onError ( Throwable  e )   { \n\t\t\t\t System . out . println ( "--\x3e onError(3): "   +  e ) ; \n\t\t\t } \n\t\t } ) ; \n \n 输出： \n --\x3e onSubscribe: \n--\x3e onError(3): java.util.NoSuchElementException\n \n \n Javadoc:  lastOrError() \n 12. Take \n 使用 Take 操作符让你可以修改Observable的行为，只返回前面的N项数据，然后发射完成通知，忽略剩余的数据。 \n Take 操作符有以下几种操作： \n 12.1 take(count) \n 如果你对一个Observable使用  take(n)  操作符，而那个Observable发射的数据少于N项，那么  take  操作生成的Observable不会抛异常或发射  onError  通知，在完成前它只会发射相同的少量数据。 \n \n 实例代码： \n \t // 1. take(long count) \n\t // 返回前count项数据 \n\t Observable . range ( 1 ,   100 ) \n\t\t . take ( 5 )   // 返回前5项数据 \n\t\t . subscribe ( new   Consumer < Integer > ( )   { \n\n\t\t\t @Override \n\t\t\t public   void   accept ( Integer  t )   throws   Exception   { \n\t\t\t\t System . out . println ( "--\x3e accept take(1): "   +  t ) ; \n\t\t\t } \n\t\t } ) ; \n \n 输出： \n --\x3e accept take(1): 1\n--\x3e accept take(1): 2\n--\x3e accept take(1): 3\n--\x3e accept take(1): 4\n--\x3e accept take(1): 5\n \n \n Javadoc:  take(count) \n 12.2 take(timeout, TimeUnit) \n 取一定时间间隔内的数据，有可选参数  scheduler  指定线程调度器。 \n \n 实例代码： \n \t // 2. take(long time, TimeUnit unit,[Scheduler] scheduler) \n\t //  取一定时间间隔内的数据，可选参数scheduler指定线程调度器 \n\t Observable . intervalRange ( 1 ,   10 ,   1 ,   1 ,   TimeUnit . SECONDS ) \n\t\t . take ( 5 ,   TimeUnit . SECONDS )   // 返回前5秒的数据项 \n\t\t . subscribe ( new   Consumer < Long > ( )   { \n\n\t\t\t @Override \n\t\t\t public   void   accept ( Long  t )   throws   Exception   { \n\t\t\t\t System . out . println ( "--\x3e accept take(2): "   +  t ) ; \n\t\t\t } \n\t\t } ) ; \n \n 输出： \n --\x3e accept take(2): 1\n--\x3e accept take(2): 2\n--\x3e accept take(2): 3\n--\x3e accept take(2): 4\n--\x3e accept take(2): 5\n \n \n Javadoc:  take(timeout, TimeUnit) \nJavadoc:  take(timeout, TimeUnit, Scheduler) \n 13. TakeLast \n 使用  TakeLast  操作符修改原始Observable，你可以只发射Observable发射的后N项数据，忽略前面的数据。 \n takeLast  的这个变体默认在  computation  调度器上执行，但是你可以使用第三个参数指定其它的调度器。 \n TakeLast 一般有下面几种操作： \n 13.1 takeLast(count) \n 使用  takeLast(count)  操作符，你可以只发射原始Observable发射的后  count  项数据（或者原始Observable发射 onCompleted()  前的  count  项数据），忽略之前的数据。 注意：这会延迟原始Observable发射的任何数据项，直到它全部完成。 \n \n 实例代码： \n      // 1. takeLast(int count) \n     // 接受Observable数据发射完成前的Count项数据, 忽略前面的数据 \n     Observable . range ( 1 ,   10 ) \n             . doOnNext ( new   Consumer < Integer > ( )   { \n                 @Override \n                 public   void   accept ( Integer  t )   throws   Exception   { \n                     System . out . println ( "--\x3e accept(1): "   +  t ) ; \n                 } \n             } ) \n             . doOnComplete ( new   Action ( )   { \n                 @Override \n                 public   void   run ( )   throws   Exception   { \n                     System . out . println ( "--\x3e onCompleted(1): " ) ; \n                 } \n             } ) \n             . takeLast ( 5 )   // 发送数据发射完成前的5项数据 \n             . subscribe ( new   Consumer < Integer > ( )   { \n\n                 @Override \n                 public   void   accept ( Integer  t )   throws   Exception   { \n                     System . out . println ( "--\x3e accept takeLast(1): "   +  t ) ; \n                 } \n             } ) ; \n \n 输出： \n --\x3e accept(1): 1\n--\x3e accept(1): 2\n--\x3e accept(1): 3\n--\x3e accept(1): 4\n--\x3e accept(1): 5\n--\x3e accept(1): 6\n--\x3e accept(1): 7\n--\x3e accept(1): 8\n--\x3e accept(1): 9\n--\x3e accept(1): 10\n--\x3e onCompleted(1): \n--\x3e accept takeLast(1): 6\n--\x3e accept takeLast(1): 7\n--\x3e accept takeLast(1): 8\n--\x3e accept takeLast(1): 9\n--\x3e accept takeLast(1): 10\n \n \n Javadoc:  takeLast(count) \n 13.2 takeLast(time, TimeUnit) \n 还有一个  takeLast  变体接受一个时长而不是数量参数。它会发射在原始Observable的生命周期内最后一段时间内发射的数据。时长和时间单位通过参数指定。 \n 注意：  这会延迟原始Observable发射的任何数据项，直到它全部完成。 \n \n 实例代码： \n      // 2. takeLast(long time, TimeUnit unit, Scheduler scheduler, boolean delayError, int bufferSize) \n     // 可选参数 scheduler：指定工作调度器  delayError：延迟Error通知  bufferSize：指定缓存大小 \n     // 接受Observable数据发射完成前指定时间间隔发射的数据项 \n     Observable . intervalRange ( 1 ,   5 ,   1 ,   1 ,   TimeUnit . SECONDS ) \n             . doOnNext ( new   Consumer < Long > ( )   { \n                 @Override \n                 public   void   accept ( Long  t )   throws   Exception   { \n                     System . out . println ( "--\x3e accept(2): "   +  t ) ; \n                 } \n             } ) \n             . doOnComplete ( new   Action ( )   { \n                 @Override \n                 public   void   run ( )   throws   Exception   { \n                     System . out . println ( "--\x3e onCompleted(2): " ) ; \n                 } \n             } ) \n             . takeLast ( 3 ,   TimeUnit . SECONDS )   // 发送数据发射完成前3秒时间段内的数据 \n             . subscribe ( new   Consumer < Long > ( )   { \n\n                 @Override \n                 public   void   accept ( Long  t )   throws   Exception   { \n                     System . out . println ( "--\x3e accept takeLast(2): "   +  t ) ; \n                 } \n             } ) ;                                                      \n \n 输出： \n --\x3e accept(2): 1\n--\x3e accept(2): 2\n--\x3e accept(2): 3\n--\x3e accept(2): 4\n--\x3e accept(2): 5\n--\x3e onCompleted(2): \n--\x3e accept takeLast(2): 3\n--\x3e accept takeLast(2): 4\n--\x3e accept takeLast(2): 5\n \n \n Javadoc:  takeLast(long time, TimeUnit unit) \nJavadoc:  takeLast(long time, TimeUnit unit, boolean delayError) \nJavadoc:  takeLast(long time, TimeUnit unit, Scheduler scheduler) \nJavadoc:  takeLast(long time, TimeUnit unit, Scheduler scheduler, boolean delayError) \nJavadoc:  takeLast(long time, TimeUnit unit, Scheduler scheduler, boolean delayError, int bufferSize) \n 13.3 takeLast(count, time, TimeUnit) \n 接受 Observable 发射完成前  time  时间段内收集  count  项数据并发射。 \n \n 示例代码： \n      // 3. takeLast(long count, long time, TimeUnit unit, Scheduler scheduler, boolean delayError, int bufferSize) \n     // 可选参数 scheduler：指定工作调度器  delayError：延迟Error通知  bufferSize：指定缓存大小 \n     // 接受Observable数据发射完成前time时间段内收集count项数据并发射 \n     Observable . intervalRange ( 1 ,   10 ,   1 ,   100 ,   TimeUnit . MILLISECONDS ) \n             . doOnNext ( new   Consumer < Long > ( )   { \n                 @Override \n                 public   void   accept ( Long  t )   throws   Exception   { \n                     System . out . println ( "--\x3e accept(3): "   +  t ) ; \n                 } \n             } ) \n             . doOnComplete ( new   Action ( )   { \n                 @Override \n                 public   void   run ( )   throws   Exception   { \n                     System . out . println ( "--\x3e onCompleted(3): " ) ; \n                 } \n             } ) \n             . takeLast ( 2 ,   500 ,   TimeUnit . MILLISECONDS )   // 在原数据发射完成前500毫秒内接受2项数据 \n             . subscribe ( new   Consumer < Long > ( )   { \n\n                 @Override \n                 public   void   accept ( Long  t )   throws   Exception   { \n                     System . out . println ( "--\x3e accept takeLast(3): "   +  t ) ; \n                 } \n             } ) ; \n \n 输出： \n --\x3e accept(3): 1\n--\x3e accept(3): 2\n--\x3e accept(3): 3\n--\x3e accept(3): 4\n--\x3e accept(3): 5\n--\x3e accept(3): 6\n--\x3e accept(3): 7\n--\x3e accept(3): 8\n--\x3e accept(3): 9\n--\x3e accept(3): 10\n--\x3e onCompleted(3): \n--\x3e accept takeLast(3): 9\n--\x3e accept takeLast(3): 10\n \n \n Javadoc:  takeLast(long count, long time, TimeUnit unit) \nJavadoc:  takeLast(long count, long time, TimeUnit unit, Scheduler scheduler) \nJavadoc:  takeLast(long count, long time, TimeUnit unit, Scheduler scheduler, boolean delayError, int bufferSize) \n 14. OfType \n ofType  是 filter 操作符的一个特殊形式。它过滤一个Observable只返回指定类型的数据。 \n \n 示例代码： \n      Object [ ]  dataObjects  =   { 1 ,   "Hello" ,   2.1f ,   8.88 ,   "1" ,   new   Integer ( 5 ) } ; \n     // ofType(Class clazz) \n     // 过滤数据，只返回特定类型的数据 \n     Observable . fromArray ( dataObjects ) \n             . ofType ( Integer . class )   // 过滤Integer类型的数据 \n             . subscribe ( new   Consumer < Integer > ( )   { \n\n                 @Override \n                 public   void   accept ( Integer  t )   throws   Exception   { \n                     System . out . println ( "--\x3e accept ofType: "   +  t ) ; \n                 } \n             } ) ; \n \n 输出： \n --\x3e accept ofType: 1\n--\x3e accept ofType: 5\n \n \n Javadoc:   ofType(Class clazz) \n 小结： \n 数据过滤的操作符主要是过滤被观察者（Observable）发射的数据序列，按照指定的规则过滤数据项，忽略并丢弃其他的数据。实际开发场景如网络数据的过滤，数据库数据的过滤等，是开发中重要且常见的操作之一。 \n 实例代码： \n \n \n 代码下载 \n Github \n Gitee（码云） \n \n \n'},{title:"7. Observable的结合操作",frontmatter:{author:"JiangMing",title:"7. Observable的结合操作",date:"2019-12-30 22:31:56",sidebar:"auto",categories:["Java","Rxjava2"],tags:["Rxjava2"],publish:!0,showSponsor:!0},regularPath:"/developer/rxjava2/07.rxjava2.html",relativePath:"developer/rxjava2/07.rxjava2.md",key:"v-cd599026",path:"/developer/rxjava2/07.rxjava2.html",headers:[{level:2,title:"简要：",slug:"简要"},{level:2,title:"1. CombineLatest",slug:"_1-combinelatest"},{level:2,title:"2. Join",slug:"_2-join"},{level:2,title:"3. Merge",slug:"_3-merge"},{level:3,title:"3.1 merge",slug:"_3-1-merge"},{level:3,title:"3.2 mergeDelayError",slug:"_3-2-mergedelayerror"},{level:2,title:"4. Zip",slug:"_4-zip"},{level:2,title:"5. StartWith",slug:"_5-startwith"},{level:2,title:"6. SwitchOnNext",slug:"_6-switchonnext"},{level:3,title:"6.1 switchOnNext",slug:"_6-1-switchonnext"},{level:3,title:"6.2 switchOnNextDelayError",slug:"_6-2-switchonnextdelayerror"},{level:2,title:"小结",slug:"小结"}],content:' 简要： \n 需求了解： \n 在使用  RxJava  开发的过程中，很多时候需要结合多个条件或者数据的逻辑判断，比如登录功能的表单验证，实时数据比对等。这个时候我们就需要使用 RxJava 的结合操作符来完成这一需求，Rx中提供了丰富的结合操作处理的操作方法。 \n 可用于组合多个Observables的操作方法： \n \n CombineLatest：当Observables中的任何一个发射了一个数据时，通过一个指定的函数组合每个Observable发射的最新数据，然后发射这个函数的结果。 \n Join：只要在另一个Observable发射的数据定义的时间窗口内，这个Observable发射了一条数据，就结合两个Observable发射的数据。 \n Merge：合并多个Observables的发射物，可以将多个Observables的输出合并，就好像它们是一个单个的Observable一样。 \n Zip：通过一个函数将多个Observables的发射物结合到一起，基于这个函数的结果为每个结合体严格按照数量以及顺序发射单个数据项。 \n StartWith：在数据序列的开头插入一条指定的数据项或者数据序列。 \n SwitchOnNext：将一个发射多个Observables的Observable转换成另一个单独的Observable，后者发射那些Observables最新发射的Observable的数据项。 \n 1. CombineLatest \n 当 Observables 中的任何一个发射了数据时，使用一个函数结合每个 Observable 发射的最近数据项，并且基于这个函数的结果发射数据。 \n CombineLatest  操作符行为类似于 zip ，但是只有当原始的Observable中的每一个都发射了一条数据时 zip 才发射数据。  CombineLatest  则在原始的Observable中任意一个发射了数据时发射一条数据。当原始Observables的任何一个发射了一条数据时， CombineLatest 使用一 个函数结合它们最近发射的数据，然后发射这个函数的返回值。 \n \n 解析：   combineLatest  操作符可以结合多个Observable，可以接收 2-9 个Observable对象， 在其中原始Observables的任何一个发射了一条数据时， CombineLatest 使用一个函数结合它们最近发射的数据，然后发射这个函数的返回值。此外 combineLatest  操作符还有一些接收 Iterable ， 数组方式的变体，以及其他指定参数combiner、bufferSize、和combineLatestDelayError方法等变体，在此就不在详细展开了，有兴趣的可以查看官方的相关 API文档 了解。 \n 实例代码： \n \t // Observables 创建 \n\t Observable < Long >  observable1  =   Observable . intervalRange ( 1 ,   5 ,   1 ,   1 ,   TimeUnit . SECONDS ) ; \n\t Observable < Long >  observable2  =   Observable . intervalRange ( 1 ,   5 ,   1 ,   2 ,   TimeUnit . SECONDS ) ; \n\t Observable < Long >  observable3  =   Observable . intervalRange ( 100 ,   5 ,   1 ,   1 ,   TimeUnit . SECONDS ) ; \n\t\n\t // 1. combineLatest(ObservableSource, ObservableSource [支持2-9个参数]...,  BiFunction) \n\t // 结合多个Observable, 当他们其中任意一个发射了数据时，使用函数结合他们最近发射的一项数据 \n\t Observable . combineLatest ( observable1 ,  observable2 ,   new   BiFunction < Long ,   Long ,   String > ( )   { \n\t\n\t\t @Override \n\t\t public   String   apply ( Long  t1 ,   Long  t2 )   throws   Exception   { \n\t\t\t System . out . println ( "--\x3e apply(1) t1 = "   +  t1  +   ", t2 = "   +  t2 ) ; \n\t\t\t if   ( t1  +  t2  ==   10 )   { \n\t\t\t\t return   "Success" ;     // 满足一定条件，返回指定的字符串 \n\t\t\t } \n\t\t\t return  t1  +  t2  +   "" ;      // 计算所有数据的和并转换为字符串 \n\t\t } \n\t } ) . subscribe ( new   Consumer < String > ( )   { \n\t\n\t\t @Override \n\t\t public   void   accept ( String  t )   throws   Exception   { \n\t\t\t System . out . println ( "----\x3e accept combineLatest(1): "   +  t ) ; \n\t\t } \n\t } ) ; \n\t\n\t System . out . println ( "--------------------------------------------------------" ) ; \n\t // 2. combineLatest(T1, T2, T3, Function) \n\t // Observables的结合 \n\t Observable . combineLatest ( observable1 ,  observable2 ,  observable3 ,   new   Function3 < Long ,   Long ,   Long ,   String > ( )   { \n\t\t @Override \n\t\t public   String   apply ( Long  t1 ,   Long  t2 ,   Long  t3 )   throws   Exception   { \n\t\t\t System . out . println ( "--\x3e apply(2): t1 = "   +  t1  +   ", t2 = "   +  t2  +   ", t3 = "   +  t3 ) ; \n\t\t\t return  t1  +  t2  +  t3  +   "" ;     // 计算所有数据的和并转换为字符串 \n\t\t } \n\t } ) . subscribe ( new   Consumer < String > ( )   { \n\t\t @Override \n\t\t public   void   accept ( String  t )   throws   Exception   { \n\t\t\t System . out . println ( "--\x3e accept(2): "   +  t ) ; \n\t\t } \n\t } ) ; \n \n 输出： \n --\x3e apply(1) t1 = 1, t2 = 1\n----\x3e accept combineLatest(1): 2\n--\x3e apply(1) t1 = 2, t2 = 1\n----\x3e accept combineLatest(1): 3\n--\x3e apply(1) t1 = 3, t2 = 1\n----\x3e accept combineLatest(1): 4\n--\x3e apply(1) t1 = 3, t2 = 2\n----\x3e accept combineLatest(1): 5\n--\x3e apply(1) t1 = 4, t2 = 2\n----\x3e accept combineLatest(1): 6\n--\x3e apply(1) t1 = 4, t2 = 3\n----\x3e accept combineLatest(1): 7\n--\x3e apply(1) t1 = 5, t2 = 3\n----\x3e accept combineLatest(1): 8\n--\x3e apply(1) t1 = 5, t2 = 4\n----\x3e accept combineLatest(1): 9\n--\x3e apply(1) t1 = 5, t2 = 5\n----\x3e accept combineLatest(1): Success\n--------------------------------------------------------\n--\x3e apply(2): t1 = 1, t2 = 1, t3 = 100\n--\x3e accept(2): 102\n--\x3e apply(2): t1 = 2, t2 = 1, t3 = 100\n--\x3e accept(2): 103\n--\x3e apply(2): t1 = 2, t2 = 1, t3 = 101\n--\x3e accept(2): 104\n--\x3e apply(2): t1 = 2, t2 = 2, t3 = 101\n--\x3e accept(2): 105\n--\x3e apply(2): t1 = 3, t2 = 2, t3 = 101\n--\x3e accept(2): 106\n--\x3e apply(2): t1 = 3, t2 = 2, t3 = 102\n--\x3e accept(2): 107\n--\x3e apply(2): t1 = 4, t2 = 2, t3 = 102\n--\x3e accept(2): 108\n--\x3e apply(2): t1 = 4, t2 = 2, t3 = 103\n--\x3e accept(2): 109\n--\x3e apply(2): t1 = 5, t2 = 2, t3 = 103\n--\x3e accept(2): 110\n--\x3e apply(2): t1 = 5, t2 = 3, t3 = 103\n--\x3e accept(2): 111\n--\x3e apply(2): t1 = 5, t2 = 3, t3 = 104\n--\x3e accept(2): 112\n--\x3e apply(2): t1 = 5, t2 = 4, t3 = 104\n--\x3e accept(2): 113\n--\x3e apply(2): t1 = 5, t2 = 5, t3 = 104\n--\x3e accept(2): 114\n \n \n Javadoc:  combineLatest(T1, T2, T3... , T9,  combiner) \n 2. Join \n 任何时候，只要在另一个Observable发射的数据定义的时间窗口内，这个Observable发射了一条数据，就结合两个Observable发射的数据。 \n \n Join  操作符结合两个Observable发射的数据，基于时间窗口（你定义的针对每条数据特定的原则）选择待集合的数据项。你将这些时间窗口实现为一些Observables，它们的生命周期从任何一条Observable发射的每一条数据开始。当这个定义时间窗口的Observable发射了一条数据或者完成时，与这条数据关联的窗口也会关闭。只要这条数据的窗口是打开的，它将继续结合其它Observable发射的任何数据项。你定义一个用于结合数据的函数。 \n 解析：   join(other, leftEnd, rightEnd, resultSelector)  相关参数的解析 \n \n other: 源Observable与其组合的目标Observable。 \n leftEnd: 接收一个源数据项，返回一个Observable，这个Observable的生命周期就是源Observable发射数据的有效期。 \n rightEnd: 接收一个源数据项，返回一个Observable，这个Observable的生命周期就是目标Observable发射数据的有效期。 \n resultSelector： 接收源Observable和目标Observable发射的数据项， 处理后的数据返回给观察者对象。 \n \n 注意：  这是源Observable和目标Observable发射数据在任意一个基于时间窗口的有效期内才会接收到 组合数据 ，这就意味着可能有数据丢失的情况，在其中一个已经发射完所有数据，并且没有处于时间窗口的数据情况，另一个Observable的数据发射将不会收到组合数据。 \n 示例代码： \n      // Observable的创建 \n     Observable < Long >  sourceObservable  =   Observable . intervalRange ( 1 ,   5 ,   1 ,   500 ,   TimeUnit . MILLISECONDS ) ; \n     Observable < Long >  targetObservable  =   Observable . intervalRange ( 10 ,   5 ,   1 ,   1000 ,   TimeUnit . MILLISECONDS ) ; \n\n     // 1. join(other, leftEnd, rightEnd, resultSelector) \n     // other: 目标组合的Observable \n     // leftEnd: 接收一个源数据项，返回一个Observable，这个Observable的生命周期就是源Observable发射数据的有效期 \n     // rightEnd: 接收一个源数据项，返回一个Observable，这个Observable的生命周期就是目标Observable发射数据的有效期 \n     // resultSelector： 接收源Observable和目标Observable发射的数据项， 处理后的数据返回给观察者对象 \n    sourceObservable . join ( targetObservable ,   new   Function < Long ,   ObservableSource < Long > > ( )   { \n         @Override \n         public   ObservableSource < Long >   apply ( Long  t )   throws   Exception   { \n             System . out . println ( "-----\x3e t1 is emitter: "   +  t ) ; \n             return   Observable . timer ( 1000 ,   TimeUnit . MILLISECONDS ) ;     // 源Observable发射数据的有效期为1000毫秒 \n         } \n     } ,   new   Function < Long ,   ObservableSource < Long > > ( )   { \n         @Override \n         public   ObservableSource < Long >   apply ( Long  t )   throws   Exception   { \n             System . out . println ( "-----\x3e t2 is emitter: "   +  t ) ; \n             return   Observable . timer ( 1000 ,   TimeUnit . MILLISECONDS ) ;     // 目标Observable发射数据的有效期为1000毫秒 \n         } \n     } ,   new   BiFunction < Long ,   Long ,   String > ( )   { \n         @Override \n         public   String   apply ( Long  t1 ,   Long  t2 )   throws   Exception   { \n             return   "t1 = "   +  t1  +   ", t2 = "   +  t2 ;                     // 对数据进行组合后返回和观察者 \n         } \n     } ) . subscribe ( new   Consumer < String > ( )   { \n         @Override \n         public   void   accept ( String  t )   throws   Exception   { \n             System . out . println ( "--\x3e accept(1): "   +  t ) ; \n         } \n     } ) ; \n\n     System . in . read ( ) ; \n \n 输出： \n -----\x3e t1 is emitter: 1\n-----\x3e t2 is emitter: 10\n--\x3e accept(1): t1 = 1, t2 = 10\n-----\x3e t1 is emitter: 2\n--\x3e accept(1): t1 = 2, t2 = 10\n-----\x3e t1 is emitter: 3\n--\x3e accept(1): t1 = 3, t2 = 10\n-----\x3e t2 is emitter: 11\n--\x3e accept(1): t1 = 1, t2 = 11\n--\x3e accept(1): t1 = 2, t2 = 11\n--\x3e accept(1): t1 = 3, t2 = 11\n-----\x3e t1 is emitter: 4\n--\x3e accept(1): t1 = 4, t2 = 11\n-----\x3e t1 is emitter: 5\n--\x3e accept(1): t1 = 5, t2 = 11\n-----\x3e t2 is emitter: 12\n--\x3e accept(1): t1 = 3, t2 = 12\n--\x3e accept(1): t1 = 4, t2 = 12\n--\x3e accept(1): t1 = 5, t2 = 12\n-----\x3e t2 is emitter: 13\n--\x3e accept(1): t1 = 5, t2 = 13\n-----\x3e t2 is emitter: 14   // 此时源t1中已经没有数据还处于时间窗口有效期内\n \n \n Javadoc:  join(other, leftEnd, rightEnd, resultSelector) \n \n groupJoin \n groupJoin  操作符与  join  相同，只是参数传递有所区别。groupJoin(other, leftEnd, rightEnd, resultSelector) 中的 resultSelector  可以将原始数据转换为 Observable 类型的数据发送给观察者。 \n \n 示例代码： \n      // Observable的创建 \n     Observable < Long >  sourceObservable  =   Observable . intervalRange ( 1 ,   5 ,   1 ,   500 ,   TimeUnit . MILLISECONDS ) ; \n     Observable < Long >  targetObservable  =   Observable . intervalRange ( 10 ,   5 ,   1 ,   1000 ,   TimeUnit . MILLISECONDS ) ; \n\n     // 2. groupJoin(other, leftEnd, rightEnd, resultSelector) \n     // groupJoin操作符与join相同，只是参数传递有所区别。 \n     // resultSelector可以将原始数据转换为Observable类型的数据发送给观察者。 \n    sourceObservable . groupJoin ( targetObservable ,   new   Function < Long ,   ObservableSource < Long > > ( )   { \n         @Override \n         public   ObservableSource < Long >   apply ( Long  t )   throws   Exception   { \n             System . out . println ( "-----\x3e t1 is emitter: "   +  t ) ; \n             return   Observable . timer ( 1000 ,   TimeUnit . MILLISECONDS ) ;     // 源Observable发射数据的有效期为1000毫秒 \n         } \n     } ,   new   Function < Long ,   ObservableSource < Long > > ( )   { \n         @Override \n         public   ObservableSource < Long >   apply ( Long  t )   throws   Exception   { \n             System . out . println ( "-----\x3e t2 is emitter: "   +  t ) ; \n             return   Observable . timer ( 1000 ,   TimeUnit . MILLISECONDS ) ;     // 目标Observable发射数据的有效期为1000毫秒 \n         } \n     } ,   new   BiFunction < Long ,   Observable < Long > ,   Observable < String > > ( )   { \n         @Override \n         public   Observable < String >   apply ( Long  t1 ,   Observable < Long >  t2 )   throws   Exception   { \n             System . out . println ( "--\x3e apply(2) combine: "   +  t1 ) ;              // 结合操作 \n             return  t2 . map ( new   Function < Long ,   String > ( )   { \n                 @Override \n                 public   String   apply ( Long  t )   throws   Exception   { \n                     System . out . println ( "-----\x3e apply(2) operation: "   +  t ) ; \n                     return   "t1 = "   +  t1  +   ", t2 = "   +  t ; \n                 } \n             } ) ; \n         } \n     } ) . subscribe ( new   Consumer < Observable < String > > ( )   { \n         @Override \n         public   void   accept ( Observable < String >  stringObservable )   throws   Exception   { \n            stringObservable . subscribe ( new   Consumer < String > ( )   { \n                 @Override \n                 public   void   accept ( String  t )   throws   Exception   { \n                     System . out . println ( "--\x3e accept(2): "   +  t ) ; \n                 } \n             } ) ; \n         } \n     } ) ; \n \n 输出： \n -----\x3e t1 is emitter: 1\n--\x3e apply(2) combine: 1\n-----\x3e t2 is emitter: 10\n-----\x3e apply(2) operation: 10\n--\x3e accept(2): t1 = 1, t2 = 10\n-----\x3e t1 is emitter: 2\n--\x3e apply(2) combine: 2\n-----\x3e apply(2) operation: 10\n--\x3e accept(2): t1 = 2, t2 = 10\n-----\x3e t1 is emitter: 3\n--\x3e apply(2) combine: 3\n-----\x3e apply(2) operation: 10\n--\x3e accept(2): t1 = 3, t2 = 10\n-----\x3e t2 is emitter: 11\n-----\x3e apply(2) operation: 11\n--\x3e accept(2): t1 = 1, t2 = 11\n-----\x3e apply(2) operation: 11\n--\x3e accept(2): t1 = 2, t2 = 11\n-----\x3e apply(2) operation: 11\n--\x3e accept(2): t1 = 3, t2 = 11\n-----\x3e t1 is emitter: 4\n--\x3e apply(2) combine: 4\n-----\x3e apply(2) operation: 11\n--\x3e accept(2): t1 = 4, t2 = 11\n-----\x3e t1 is emitter: 5\n--\x3e apply(2) combine: 5\n-----\x3e apply(2) operation: 11\n--\x3e accept(2): t1 = 5, t2 = 11\n-----\x3e t2 is emitter: 12\n-----\x3e apply(2) operation: 12\n--\x3e accept(2): t1 = 3, t2 = 12\n-----\x3e apply(2) operation: 12\n--\x3e accept(2): t1 = 4, t2 = 12\n-----\x3e apply(2) operation: 12\n--\x3e accept(2): t1 = 5, t2 = 12\n-----\x3e t2 is emitter: 13\n-----\x3e apply(2) operation: 13\n--\x3e accept(2): t1 = 5, t2 = 13\n-----\x3e t2 is emitter: 14\n \n \n Javadoc:  groupJoin(other, leftEnd, rightEnd, resultSelector) \n 3. Merge \n 合并多个Observables的发射物。 \n \n 使用  Merge  操作符你可以将多个Observables的输出合并，就好像它们是一个单个的 Observable 一样。 \n 3.1 merge \n Merge 可能会让合并的Observables发射的 数据交错 （有一个类似的操作符  Concat  不会让数据交错，它会按顺序一个接着一个发射多个Observables的发射物），任何一个原始Observable的  onError  通知会被立即传递给观察者，而且会终止合并后的Observable。 \n \n 除了传递多个Observable给 merge ，你还可以传递一个Observable列表 List ，数组，甚至是一个发射Observable序列的Observable， merge 将合并它们的输出作为单个Observable的输出。 \n \n 如果你传递一个发射Observables序列的Observable，你可以指定 merge 应该同时订阅的 Observable 的最大数量。一旦达到订阅数的限制，它将不再订阅原始Observable发射的任何其它Observable，直到某个已经订阅的Observable发射了 onCompleted 通知。 \n 示例代码： \n      // 创建Observable对象 \n     Observable < Integer >  odd  =   Observable . just ( 1 ,   3 ,   5 ) ; \n     Observable < Integer >  even  =   Observable . just ( 2 ,   4 ,   6 ) ; \n     Observable < Integer >  big  =   Observable . just ( 188888 ,   688888 ,   888888 ) ; \n\n     // 创建list对象 \n     List < Observable < Integer > >  list  =   new   ArrayList < > ( ) ; \n    list . add ( odd ) ; \n    list . add ( even ) ; \n    list . add ( big ) ; \n\n     // 创建Array对象 \n     Observable < Integer > [ ]  observables  =   new   Observable [ 3 ] ; \n    observables [ 0 ]   =  odd ; \n    observables [ 1 ]   =  even ; \n    observables [ 2 ]   =  big ; \n\n     // 创建发射Observable序列的Observable \n     Observable < ObservableSource < Integer > >  sources  =   Observable . create ( new   ObservableOnSubscribe < ObservableSource < Integer > > ( )   { \n         @Override \n         public   void   subscribe ( ObservableEmitter < ObservableSource < Integer > >  emitter )   throws   Exception   { \n            emitter . onNext ( Observable . just ( 1 ) ) ; \n            emitter . onNext ( Observable . just ( 1 ,   2 ) ) ; \n            emitter . onNext ( Observable . just ( 1 ,   2 ,   3 ) ) ; \n            emitter . onNext ( Observable . just ( 1 ,   2 ,   3 ,   4 ) ) ; \n            emitter . onNext ( Observable . just ( 1 ,   2 ,   3 ,   4 ,   5 ) ) ; \n            emitter . onComplete ( ) ; \n         } \n     } ) ; \n\n     // 1. merge(ObservableSource source1, ObservableSource source2, ..., ObservableSource source4) \n     // 可接受 2-4 个Observable对象进行merge \n     Observable . merge ( odd ,  even ) \n             . subscribe ( new   Consumer < Integer > ( )   { \n                 @Override \n                 public   void   accept ( Integer  integer )   throws   Exception   { \n                     System . out . println ( "--\x3e accept(1): "   +  integer ) ; \n                 } \n             } ) ; \n\n     System . out . println ( "-----------------------------------------------" ) ; \n     // 2. merge(Iterable<? extends ObservableSource<? extends T>> sources, int maxConcurrency, int bufferSize) \n     // 可选参数, maxConcurrency: 最大的并发处理数, bufferSize: 缓存的数量（从每个内部观察资源预取的项数） \n     // 接受一个Observable的列表List \n     Observable . merge ( list ) \n             . subscribe ( new   Consumer < Integer > ( )   { \n                 @Override \n                 public   void   accept ( Integer  integer )   throws   Exception   { \n                     System . out . println ( "--\x3e accept(2): "   +  integer ) ; \n                 } \n             } ) ; \n\n     System . out . println ( "-----------------------------------------------" ) ; \n     // 3. mergeArray(int maxConcurrency, int bufferSize, ObservableSource<? extends T>... sources) \n     // 可选参数, maxConcurrency: 最大的并发处理数, bufferSize: 缓存的数量（从每个内部观察资源预取的项数） \n     // 接受一个Observable的数组Array \n     Observable . mergeArray ( observables ) \n             . subscribe ( new   Consumer < Integer > ( )   { \n                 @Override \n                 public   void   accept ( Integer  integer )   throws   Exception   { \n                     System . out . println ( "--\x3e accept(3): "   +  integer ) ; \n                 } \n             } ) ; \n\n     System . out . println ( "-----------------------------------------------" ) ; \n     // 4. merge(ObservableSource<? extends ObservableSource<? extends T>> sources, int maxConcurrency) \n     // 可选参数, maxConcurrency: 最大的并发处理数 \n     // 接受一个发射Observable序列的Observable \n     Observable . merge ( sources ) \n             . subscribe ( new   Consumer < Integer > ( )   { \n                 @Override \n                 public   void   accept ( Integer  integer )   throws   Exception   { \n                     System . out . println ( "--\x3e accept(4): "   +  integer ) ; \n                 } \n             } ) ; \n\n     System . out . println ( "-----------------------------------------------" ) ; \n     // 5. mergeWith(other) \n     // merge 是静态方法， mergeWith 是对象方法: Observable.merge(odd,even) 等价于 odd.mergeWith(even) \n    odd . mergeWith ( even ) \n             . subscribe ( new   Consumer < Integer > ( )   { \n                 @Override \n                 public   void   accept ( Integer  integer )   throws   Exception   { \n                     System . out . println ( "--\x3e accept(5): "   +  integer ) ; \n                 } \n             } ) ; \n \n 输出： \n --\x3e accept(1): 1\n--\x3e accept(1): 3\n--\x3e accept(1): 5\n--\x3e accept(1): 2\n--\x3e accept(1): 4\n--\x3e accept(1): 6\n-----------------------------------------------\n--\x3e accept(2): 1\n--\x3e accept(2): 3\n--\x3e accept(2): 5\n--\x3e accept(2): 2\n--\x3e accept(2): 4\n--\x3e accept(2): 6\n--\x3e accept(2): 188888\n--\x3e accept(2): 688888\n--\x3e accept(2): 888888\n-----------------------------------------------\n--\x3e accept(3): 1\n--\x3e accept(3): 3\n--\x3e accept(3): 5\n--\x3e accept(3): 2\n--\x3e accept(3): 4\n--\x3e accept(3): 6\n--\x3e accept(3): 188888\n--\x3e accept(3): 688888\n--\x3e accept(3): 888888\n-----------------------------------------------\n--\x3e accept(4): 1\n--\x3e accept(4): 1\n--\x3e accept(4): 2\n--\x3e accept(4): 1\n--\x3e accept(4): 2\n--\x3e accept(4): 3\n--\x3e accept(4): 1\n--\x3e accept(4): 2\n--\x3e accept(4): 3\n--\x3e accept(4): 4\n--\x3e accept(4): 1\n--\x3e accept(4): 2\n--\x3e accept(4): 3\n--\x3e accept(4): 4\n--\x3e accept(4): 5\n-----------------------------------------------\n--\x3e accept(5): 1\n--\x3e accept(5): 3\n--\x3e accept(5): 5\n--\x3e accept(5): 2\n--\x3e accept(5): 4\n--\x3e accept(5): 6\n \n \n Javadoc:  merge(source1, ... , source4) \n  Javadoc:  merge(Iterable sources, int maxConcurrency, int bufferSize) \nJavadoc:  mergeArray(int maxConcurrency, int bufferSize, ObservableSource... sources) \nJavadoc:  merge(ObservableSource <ObservableSource>  sources, int maxConcurrency) \n 3.2 mergeDelayError \n 如果传递给 merge 的任何一个的Observable发射了  onError 通知终止了， merge 操作符生成的Observable也会立即以 onError 通知终止。如果你想让它继续发射数据，在最后才报告错误，可以使用  mergeDelayError  。 \n \n MergeDelayError  操作符，mergeDelayError 在合并与交错输出的使用上与  merge   相同 ，区别在于它会保留  onError  通知直到 其他没有Error的Observable 所有的数据发射完成，在那时它才会把 onError 传递给观察者。 \n 注意：  如果有多个原始Observable出现了 Error ， 这些Error通知会被合并成一个  CompositeException  ，保留在CompositeException 内部的  List<Throwable> exceptions  中，但是如果只有一个原始Observable出现了Error，则不会生成 CompositeException ，只会发送这个Error通知。 \n 由于 MergeDelayError 使用上和 merge 相同 ，所以这里就不做详细分析了，这里就简单描述其中的一种的使用实例。 \n 实例代码： \n      // 创建有Error的Observable序列的Observable \n     Observable < ObservableSource < Integer > >   DelayErrorObservable   =   Observable . create ( new   ObservableOnSubscribe < ObservableSource < Integer > > ( )   { \n\n         @Override \n         public   void   subscribe ( ObservableEmitter < ObservableSource < Integer > >  emitter )   throws   Exception   { \n            emitter . onNext ( Observable . just ( 1 ) ) ; \n            emitter . onNext ( Observable . error ( new   Exception ( "Error Test1" ) ) ) ;   // 发射一个Error的通知的Observable \n            emitter . onNext ( Observable . just ( 2 ,   3 ) ) ; \n            emitter . onNext ( Observable . error ( new   Exception ( "Error Test2" ) ) ) ;   // 发射一个Error的通知的Observable \n            emitter . onNext ( Observable . just ( 4 ,   5 ,   6 ) ) ; \n            emitter . onComplete ( ) ; \n         } \n     } ) ; \n\n     // 6. mergeDelayError \n     // 保留onError通知直到合并后的Observable所有的数据发射完成，在那时它才会把onError传递给观察者 \n     Observable . mergeDelayError ( DelayErrorObservable ) \n             . subscribe ( new   Observer < Integer > ( )   { \n                 @Override \n                 public   void   onSubscribe ( Disposable  d )   { \n                     System . out . println ( "--\x3e onSubscribe(6)" ) ; \n                 } \n\n                 @Override \n                 public   void   onNext ( Integer  integer )   { \n                     System . out . println ( "--\x3e onNext(6): "   +  integer ) ; \n                 } \n\n                 @Override \n                 public   void   onError ( Throwable  e )   { \n                     // 判断是否是CompositeException对象（发生多个Observable出现Error时会发送的对象） \n                     if   ( e  instanceof   CompositeException )   { \n                         CompositeException  compositeException  =   ( CompositeException )  e ; \n                         List < Throwable >  exceptions  =  compositeException . getExceptions ( ) ; \n                         System . out . println ( "--\x3e onError(6): "   +  exceptions ) ; \n                     }   else   { \n                         System . out . println ( "--\x3e onError(6): "   +  e ) ; \n                     } \n                 } \n\n                 @Override \n                 public   void   onComplete ( )   { \n                     System . out . println ( "--\x3e onComplete(6)" ) ; \n                 } \n             } ) ; \n \n 输出： \n --\x3e onSubscribe(6)\n--\x3e onNext(6): 1\n--\x3e onNext(6): 2\n--\x3e onNext(6): 3\n--\x3e onNext(6): 4\n--\x3e onNext(6): 5\n--\x3e onNext(6): 6\n--\x3e onError(6): [java.lang.Exception: Error Test1, java.lang.Exception: Error Test2]\n \n \n Javadoc:  mergeDelayError(source1, … , source4) \nJavadoc:  mergeDelayError(Iterable sources, int maxConcurrency, int bufferSize) \nJavadoc:  mergeArrayDelayError(int maxConcurrency, int bufferSize, ObservableSource… sources) \nJavadoc:  mergeDelayError(ObservableSource sources, int maxConcurrency) \n 4. Zip \n 通过一个函数将多个Observables的发射物结合到一起，基于这个函数的结果为每个  结合体  发射单个数据项。 \n \n Zip  操作符与  Merge  类似，都是合并多个Observables的数据，返回一个Obversable，主要不同的是它使用这个函数 按顺序结合 两个或多个Observables发射的数据项，然后它发射这个函数返回的结果。它 按照严格的顺序 应用这个函数。  它只发射与发射数据项最少的那个Observable一样多的数据。 \n \n 解析： \n \n Zip  操作符与  Merge  的使用上基本一致，主要不同的是 zip 发射的数据取决于发射数据项最少的那个Observable并且按照严格的顺序去结合数据。 \n 同样具备静态方法  zip  与对象方法  zipWith ，可以传递一个Observable列表 List ，数组，甚至是一个发射Observable序列的Observable。 \n \n 使用上在此就不做详细的展开了，可参照上面的  Merge  使用方法，下面就针对  zip  的特性实现一个简单的实例。 \n 实例代码： \n      // 创建Observable \n     Observable < Integer >  observable1  =   Observable . just ( 1 ,   2 ,   3 ) ; \n     Observable < Integer >  observable2  =   Observable . just ( 1 ,   2 ,   3 ,   4 ,   5 ,   6 ) ; \n    \n     // zip（sources） \n     // 可接受2-9个参数的Observable，对其进行顺序合并操作，最终合并的数据项取决于最少的数据项的Observable \n     Observable . zip ( observable1 ,  observable2 ,   new   BiFunction < Integer ,   Integer ,   String > ( )   { \n         @Override \n         public   String   apply ( Integer  t1 ,   Integer  t2 )   throws   Exception   { \n             System . out . println ( "--\x3e apply: t1 = "   +  t1  +   ", t2 = "   +  t2 ) ; \n             return  t1  +  t2  +   "" ; \n         } \n     } ) . subscribe ( new   Consumer < String > ( )   { \n\n         @Override \n         public   void   accept ( String  s )   throws   Exception   { \n             System . out . println ( "--\x3e accept: "   +  s ) ;    // 最终接受observable1全部数据项与observable2相同数量顺序部分数据 \n         } \n     } ) ; \n \n 输出： \n --\x3e apply: t1 = 1, t2 = 1\n--\x3e accept: 2\n--\x3e apply: t1 = 2, t2 = 2\n--\x3e accept: 4\n--\x3e apply: t1 = 3, t2 = 3\n--\x3e accept: 6\n \n \n Javadoc:  zip( source1, source2, ... , source9, zipper ) \nJavadoc:  zip( Iterable sources, Function zipper ) \nJavadoc:  zipIterable(Iterable<ObservableSource> sources, Function<Object[],R> zipper, boolean delayError, int bufferSize) \nJavadoc:  zipArray( Function<Object[]> zipper, boolean delayError, int bufferSize, ObservableSource... sources ) \nJavadoc:  zip( ObservableSource<ObservableSource> sources, Function<Object[]> zipper ) \n 5. StartWith \n 在数据序列的开头插入一条指定的数据项或者数据序列。 \n \n如果你想要一个Observable在发射数据之前先发射一个指定的数据或者数据序列（可以是单个 数据、数组、列表，Observable 中的数据），可以使 用  StartWith  操作符。（如果你想一个Observable发射的数据末尾追加一个数据序列可以使用  Concat  操作符。） \n \n 实例代码： \n      // 创建列表List \n     List < Integer >  lists  =   new   ArrayList < > ( ) ; \n    lists . add ( 999 ) ; \n    lists . add ( 9999 ) ; \n    lists . add ( 99999 ) ; \n\n     // 创建数组Array \n     Integer [ ]  arrays  =   new   Integer [ 3 ] ; \n    arrays [ 0 ]   =   999 ; \n    arrays [ 1 ]   =   9999 ; \n    arrays [ 2 ]   =   9999 ; \n\n     // 1. startWith(item) \n     // 在Observable数据发射前发射item数据项 \n     Observable . just ( 1 ,   2 ,   3 ) \n             . startWith ( 999 ) \n             . subscribe ( new   Consumer < Integer > ( )   { \n                 @Override \n                 public   void   accept ( Integer  integer )   throws   Exception   { \n                     System . out . println ( "--\x3e accept(1): "   +  integer ) ; \n                 } \n             } ) ; \n\n     System . out . println ( "-----------------------------------------" ) ; \n     // 2. startWith(Iterable items) \n     // 在Observable数据发射前发射items列表中的数据序列 \n     Observable . just ( 1 ,   2 ,   3 ) \n             . startWith ( lists ) \n             . subscribe ( new   Consumer < Integer > ( )   { \n                 @Override \n                 public   void   accept ( Integer  integer )   throws   Exception   { \n                     System . out . println ( "--\x3e accept(2): "   +  integer ) ; \n                 } \n             } ) ; \n\n     System . out . println ( "-----------------------------------------" ) ; \n     // 3. startWithArray(items) \n     // 在Observable数据发射前发射items数组中的数据序列 \n     Observable . just ( 1 ,   2 ,   3 ) \n             . startWithArray ( arrays ) \n             . subscribe ( new   Consumer < Integer > ( )   { \n                 @Override \n                 public   void   accept ( Integer  integer )   throws   Exception   { \n                     System . out . println ( "--\x3e accept(3): "   +  integer ) ; \n                 } \n             } ) ; \n\n     System . out . println ( "-----------------------------------------" ) ; \n     // 4. startWith(ObservableSource other) \n     // 在Observable数据发射前发射other中的数据序列 \n     Observable . just ( 1 ,   2 ,   3 ) \n             . startWith ( Observable . just ( 999 ,   9999 ,   99999 ) ) \n             . subscribe ( new   Consumer < Integer > ( )   { \n                 @Override \n                 public   void   accept ( Integer  integer )   throws   Exception   { \n                     System . out . println ( "--\x3e accept(4): "   +  integer ) ; \n                 } \n             } ) ; \n \n 输出： \n --\x3e accept(1): 999\n--\x3e accept(1): 1\n--\x3e accept(1): 2\n--\x3e accept(1): 3\n-----------------------------------------\n--\x3e accept(2): 999\n--\x3e accept(2): 9999\n--\x3e accept(2): 99999\n--\x3e accept(2): 1\n--\x3e accept(2): 2\n--\x3e accept(2): 3\n-----------------------------------------\n--\x3e accept(3): 999\n--\x3e accept(3): 9999\n--\x3e accept(3): 9999\n--\x3e accept(3): 1\n--\x3e accept(3): 2\n--\x3e accept(3): 3\n-----------------------------------------\n--\x3e accept(4): 999\n--\x3e accept(4): 9999\n--\x3e accept(4): 99999\n--\x3e accept(4): 1\n--\x3e accept(4): 2\n--\x3e accept(4): 3\n \n \n Javadoc:  startWith(item) \nJavadoc:  startWith(Iterable items) \nJavadoc:  startWithArray(items) \nJavadoc:  startWith(ObservableSource other) \n 6. SwitchOnNext \n 将一个发射多个Observables的Observable转换成另一个单独的Observable，后者发射那些 Observables 最近发射 的数据项。 \n 6.1 switchOnNext \n switchOnNext  订阅一个发射多个Observables的Observable。它每次观察那些Observables中的一个，  switchOnNext  发射的这个 新Observable 并取消订阅前一个发射数据的 旧Observable ，开始发射最新的Observable发射的数据。 \n \n 注意：  当原始Observables发射了一个新的Observable时（不是这个新的Observable发射了一条数据时），它将取消订阅之前的那个Observable。这意味着，在 后来那个Observable产生之后到它开始发射数据之前的这段时间里，前一个Observable发射 的数据将被丢弃（就像图例上的那个黄色圆圈一样）。 \n 6.2 switchOnNextDelayError \n 当 Observables 发射一个新的Observable后，则会取消订阅前面的旧observable，直接开始接受新Observable的数据，如果Observables中的Observable有  Error  异常，将保留  onError  通知直到 其他没有Error的Observable 所有的数据发射完成，在那时它才会把 onError 传递给观察者。 \n \n 注意：  如果有多个原始Observable出现了 Error ， 这些Error通知会被合并成一个  CompositeException  ，保留在CompositeException 内部的  List<Throwable> exceptions  中，但是如果只有一个原始Observable出现了Error，则不会生成 CompositeException ，只会发送这个Error通知。 \n 实例代码： \n      // 创建Observable \n     Observable < Long >  observable1  =   Observable . intervalRange ( 1 ,   5 ,   1 ,   500 ,   TimeUnit . MILLISECONDS ) ; \n     Observable < Long >  observable2  =   Observable . intervalRange ( 10 ,   5 ,   1 ,   500 ,   TimeUnit . MILLISECONDS ) ; \n\n     // 创建发射Observable序列的Observable \n     Observable < Observable < Long > >  sources  =   Observable . create ( new   ObservableOnSubscribe < Observable < Long > > ( )   { \n\n         @Override \n         public   void   subscribe ( ObservableEmitter < Observable < Long > >  emitter )   throws   Exception   { \n            emitter . onNext ( observable1 ) ; \n             Thread . sleep ( 1000 ) ; \n             // 此时发射一个新的observable2，将会取消订阅observable1 \n            emitter . onNext ( observable2 ) ; \n            emitter . onComplete ( ) ; \n         } \n     } ) ; \n\n     // 创建发射含有Error通知的Observable序列的Observable \n     Observable < Observable < Long > >  sourcesError  =   Observable . create ( new   ObservableOnSubscribe < Observable < Long > > ( )   { \n\n         @Override \n         public   void   subscribe ( ObservableEmitter < Observable < Long > >  emitter )   throws   Exception   { \n            emitter . onNext ( observable1 ) ; \n            emitter . onNext ( Observable . error ( new   Exception ( "Error Test1!" ) ) ) ;   // 发射一个发射Error通知的Observable \n            emitter . onNext ( Observable . error ( new   Exception ( "Error Test2!" ) ) ) ;   // 发射一个发射Error通知的Observable \n             Thread . sleep ( 1000 ) ; \n             // 此时发射一个新的observable2，将会取消订阅observable1 \n            emitter . onNext ( observable2 ) ; \n            emitter . onComplete ( ) ; \n         } \n     } ) ; \n\n     // 1. switchOnNext(ObservableSource<ObservableSource> sources, int bufferSize) \n     // 可选参数 bufferSize： 缓存数据项大小 \n     // 接受一个发射Observable序列的Observable类型的sources， \n     // 当sources发射一个新的Observable后，则会取消订阅前面的旧observable，直接开始接受新Observable的数据 \n     Observable . switchOnNext ( sources ) \n             . subscribe ( new   Consumer < Long > ( )   { \n\n                 @Override \n                 public   void   accept ( Long  integer )   throws   Exception   { \n                     System . out . println ( "--\x3e accept(1): "   +  integer ) ; \n                 } \n             } ) ; \n\n     System . in . read ( ) ; \n     System . out . println ( "--------------------------------------------------------------------" ) ; \n     // 2. switchOnNextDelayError(ObservableSource<ObservableSource> sources, int prefetch) \n     // 可选参数 prefetch： 与读取数据项大小 \n     // 当sources发射一个新的Observable后，则会取消订阅前面的旧observable，直接开始接受新Observable的数据， \n     // 保留onError通知直到合并后的Observable所有的数据发射完成，在那时它才会把onError传递给观察者 \n     Observable . switchOnNextDelayError ( sourcesError ) \n             . subscribe ( new   Observer < Long > ( )   { \n\n                 @Override \n                 public   void   onSubscribe ( Disposable  d )   { \n                     System . out . println ( "--\x3e onSubscribe(2)" ) ; \n                 } \n\n                 @Override \n                 public   void   onNext ( Long  t )   { \n                     System . out . println ( "--\x3e onNext(2): "   +  t ) ; \n                 } \n\n                 @Override \n                 public   void   onError ( Throwable  e )   { \n                     // 判断是否是CompositeException对象（发生多个Observable出现Error时会发送的对象） \n                     if   ( e  instanceof   CompositeException )   { \n                         CompositeException  compositeException  =   ( CompositeException )  e ; \n                         List < Throwable >  exceptions  =  compositeException . getExceptions ( ) ; \n                         System . out . println ( "--\x3e onError(2): "   +  exceptions ) ; \n                     }   else   { \n                         System . out . println ( "--\x3e onError(2): "   +  e ) ; \n                     } \n                 } \n\n                 @Override \n                 public   void   onComplete ( )   { \n                     System . out . println ( "--\x3e onComplete(2)" ) ; \n                 } \n             } ) ; \n\n     System . in . read ( ) ; \n \n 输出： \n --\x3e accept(1): 1\n--\x3e accept(1): 2\n--\x3e accept(1): 10\n--\x3e accept(1): 11\n--\x3e accept(1): 12\n--\x3e accept(1): 13\n--\x3e accept(1): 14\n--------------------------------------------------------------------\n--\x3e onSubscribe(2)\n--\x3e onNext(2): 10\n--\x3e onNext(2): 11\n--\x3e onNext(2): 12\n--\x3e onNext(2): 13\n--\x3e onNext(2): 14\n--\x3e onError(2): [java.lang.Exception: Error Test1!, java.lang.Exception: Error Test2!]\n \n \n Javadoc:  switchOnNext(ObservableSource<ObservableSource> sources, int bufferSize) \nJavadoc:  switchOnNextDelayError(ObservableSource<ObservableSource> sources, int prefetch) \n 小结 \n Rxjava 的合并操作符能够同时处理多个被观察者，并发送相应的事件通知以及数据。常常应用于多业务合并处理场景，比如表单的联动验证，网络交互性数据的校验等，rxjava的合并操作符能够很好的去实现和处理。 \n \n 提示 ：以上使用的Rxjava2版本:  2.2.12 \n \n 实例代码： \n \n \n 代码下载 \n Github \n Gitee（码云） \n \n \n'},{title:"8. ConnectableObservable 连接的操作",frontmatter:{author:"JiangMing",title:"8. ConnectableObservable 连接的操作",date:"2019-12-30 22:32:56",sidebar:"auto",categories:["Java","Rxjava2"],tags:["Rxjava2"],publish:!0,showSponsor:!0},regularPath:"/developer/rxjava2/08.rxjava2.html",relativePath:"developer/rxjava2/08.rxjava2.md",key:"v-34a88f2b",path:"/developer/rxjava2/08.rxjava2.html",headers:[{level:2,title:"简要：",slug:"简要"},{level:2,title:"1. ConnectableObservable",slug:"_1-connectableobservable"},{level:2,title:"2. Publish",slug:"_2-publish"},{level:2,title:"3. Connect",slug:"_3-connect"},{level:2,title:"4. RefCount",slug:"_4-refcount"},{level:2,title:"5. Share",slug:"_5-share"},{level:2,title:"6. Replay",slug:"_6-replay"},{level:2,title:"小结",slug:"小结"}],content:' 简要： \n 需求了解： \n Rxjava中的普通的  Observable  在观察者订阅的时候就会发射数据，但是有的时候我们想自己控制数据的发射，比如在有指定的观察者或者全部的观察者订阅后开始发射数据，这个时候我们就要要用到Rxjava中的可连接的Observable来完成这个需求。 \n 这一节主要介绍  ConnectableObservable  和它的子类以及它们的操作符： \n \n ConnectableObservable: 一个可连接的Observable，在订阅后不发射数据，调用 connect() 方法后开始发射数据。 \n Observable.publish()：将一个Observable转换为一个可连接的Observable 。 \n ConnectableObservable.connect()：指示一个可连接的Observable开始发射数据。 \n Observable.replay()：确保所有的订阅者看到相同的数据序列，即使它们在Observable开始发射数据之后才订阅。 \n ConnectableObservable.refCount()：让一个可连接的Observable表现得像一个普通的Observable。 \n Observable.share()：可以直接将Observable转换为一个具有ConnectableObservable特性的Observable对象，等价于Observable.publish().refCount() \n Observable.replay()：保证所有的观察者收到相同的数据序列，即使它们在Observable开始发射数据之后才订阅。 \n 1. ConnectableObservable \n 一个可连接的Observable（ ConnectableObservable ）与普通的Observable差不多。 不同之处 ：可连接的Observable在被订阅时并不开始发射数据，只有在它的  connect()  被调用时才开始。用这种方法，你可以等部分或者所有的潜在订阅者都订阅了这个Observable之后才开始发射数据。 \n \n 注意：  ConnectableObservable 的线程切换只能通过  replay  操作符来实现，普通 Observable 的  subscribeOn()  和  observerOn()  在 ConnectableObservable 中不起作用。可以通过 replay 操作符的指定线程调度器的方式来进行线程的切换。 \n \n Javadoc:  ConnectableObservable \n 2. Publish \n 将普通的Observable转换为可连接的Observable（ ConnectableObservable ）。 \n 如果要使用可连接的Observable，可以使用Observable的  publish  操作符，来将相应转换为ConnectableObservable对象。 \n 有一个变体接受一个函数作为参数（ publish(Function selector) ）。这个函数用原始Observable发射的数据作为参数，产生 一个新的数据作为 ConnectableObservable 给发射，替换原位置的数据项。实质是在签名的基础上添加一个 Map 操作。 \n 简单实例： \n    // 1. publish() \n   // 创建ConnectableObservable \n   ConnectableObservable < Integer >  connectableObservable  =   Observable . range ( 1 ,   5 ) \n           . publish ( ) ;      // publish操作将Observable转化为一个可连接的Observable \n\n\t // 2. publish(Function<Observable<T>, ObservableSource<R>> selector) \n   // 接受原始Observable的数据，产生一个新的Observable，可以对这个Observable进行函数处理 \n   Observable < String >  publish  =   Observable . range ( 1 ,   5 ) \n           . publish ( new   Function < Observable < Integer > ,   ObservableSource < String > > ( )   { \n\n               @Override \n               public   ObservableSource < String >   apply ( Observable < Integer >  integerObservable )   throws   Exception   { \n                   System . out . println ( "--\x3e apply(4): "   +  integerObservable . toString ( ) ) ; \n\n                   Observable < String >  map  =  integerObservable . map ( new   Function < Integer ,   String > ( )   { \n\n                       @Override \n                       public   String   apply ( Integer  integer )   throws   Exception   { \n                           return   "[this is map value]: "   +  integer  *  integer ; \n                       } \n                   } ) ; \n                   return  map ; \n               } \n           } ) ; \n          \n    publish . subscribe ( new   Consumer < String > ( )   { \n         @Override \n         public   void   accept ( String  s )   throws   Exception   { \n             System . out . println ( "--\x3e accept(4): "   +  s ) ; \n         } \n     } ) ; \n \n 输出： \n --\x3e apply(4): io.reactivex.subjects.PublishSubject@3fb4f649\n--\x3e accept(4): [this is map value]: 1\n--\x3e accept(4): [this is map value]: 4\n--\x3e accept(4): [this is map value]: 9\n--\x3e accept(4): [this is map value]: 16\n--\x3e accept(4): [this is map value]: 25\n \n \n Javadoc:  Observable.publish() \nJavadoc:  Observable.publish(Function<Observable <T> ,ObservableSource <R>  selector) \n 3. Connect \n 让一个可连接的Observable开始发射数据给订阅者。 \n \n 可连接的Observable (connectableObservable)与普通的Observable差不多，不过它并不会在被订阅时开始发射数据，而是直到使用了 Connect 操作符时才会开始。 \n RxJava中 connect 是 ConnectableObservable 接口的一个方法，使用 publish 操作符可以将一个普通的Observable转换为一个 ConnectableObservable 。 \n 调用 ConnectableObservable 的  connect  方法会让它后面的Observable开始给发射数据给订阅 者。connect 方法返回一个 Subscription 对象，可以调用它的 unsubscribe 方法让Observable停 止发射数据给观察者。 \n 即使没有任何订阅者订阅它，你也可以使用 connect 方法让一个Observable开始发射数据 （或者开始生成待发射的数据）。这样，你可以将一个"冷"的Observable变为"热"的。 \n \n 实例代码： \n      // 1. publish() \n     // 创建ConnectableObservable \n     ConnectableObservable < Integer >  connectableObservable  =   Observable . range ( 1 ,   5 ) \n             . publish ( ) ;      // publish操作将Observable转化为一个可连接的Observable \n\n     // 创建普通的Observable \n     Observable < Integer >  range  =   Observable . range ( 1 ,   5 ) ; \n\n     // 1.1 connectableObservable在被订阅时并不开始发射数据，只有在它的 connect() 被调用时才开始 \n    connectableObservable . subscribe ( new   Observer < Integer > ( )   { \n\n         @Override \n         public   void   onSubscribe ( Disposable  d )   { \n             System . out . println ( "--\x3e onSubscribe(1)" ) ; \n         } \n\n         @Override \n         public   void   onNext ( Integer  integer )   { \n             System . out . println ( "--\x3e onNext(1): "   +  integer ) ; \n         } \n\n         @Override \n         public   void   onError ( Throwable  e )   { \n             System . out . println ( "--\x3e onError(1): "   +  e ) ; \n         } \n\n         @Override \n         public   void   onComplete ( )   { \n             System . out . println ( "--\x3e onComplete(1)" ) ; \n         } \n     } ) ; \n\n     // 1.2 connectableObservable在被订阅时并不开始发射数据，只有在它的 connect() 被调用时才开始 \n    connectableObservable . subscribe ( new   Observer < Integer > ( )   { \n\n         @Override \n         public   void   onSubscribe ( Disposable  d )   { \n             System . out . println ( "--\x3e onSubscribe(2)" ) ; \n         } \n\n         @Override \n         public   void   onNext ( Integer  integer )   { \n             System . out . println ( "--\x3e onNext(2): "   +  integer ) ; \n         } \n\n         @Override \n         public   void   onError ( Throwable  e )   { \n             System . out . println ( "--\x3e onError(2): "   +  e ) ; \n         } \n\n         @Override \n         public   void   onComplete ( )   { \n             System . out . println ( "--\x3e onComplete(2)" ) ; \n         } \n     } ) ; \n\n     // 1.3 普通Observable在被订阅时就会发射数据 \n    range . subscribe ( new   Observer < Integer > ( )   { \n\n         @Override \n         public   void   onSubscribe ( Disposable  d )   { \n             System . out . println ( "--\x3e onSubscribe(3)" ) ; \n         } \n\n         @Override \n         public   void   onNext ( Integer  integer )   { \n             System . out . println ( "--\x3e onNext(3): "   +  integer ) ; \n         } \n\n         @Override \n         public   void   onError ( Throwable  e )   { \n             System . out . println ( "--\x3e onError(3): "   +  e ) ; \n         } \n\n         @Override \n         public   void   onComplete ( )   { \n             System . out . println ( "--\x3e onComplete(3)" ) ; \n         } \n     } ) ; \n\n     System . out . println ( "----------------start connect------------------" ) ; \n     // 可连接的Observable在被订阅时并不开始发射数据，只有在它的connect()被调用时才开始发射数据 \n     // connectableObservable.connect(); \n    \n     // 可选参数Consumer，返回一个Disposable对象，可以获取订阅状态和取消当前的订阅 \n    connectableObservable . connect ( new   Consumer < Disposable > ( )   { \n         @Override \n         public   void   accept ( Disposable  disposable )   throws   Exception   { \n             System . out . println ( "--\x3e connect accept: "   +  disposable . isDisposed ( ) ) ; \n             // disposable.dispose(); \n         } \n     } ) ; \n \n 输出： \n --\x3e onSubscribe(1)\n--\x3e onSubscribe(2)\n--\x3e onSubscribe(3)\n--\x3e onNext(3): 1\n--\x3e onNext(3): 2\n--\x3e onNext(3): 3\n--\x3e onNext(3): 4\n--\x3e onNext(3): 5\n--\x3e onComplete(3)\n----------------start connect------------------\n--\x3e connect accept: false\n--\x3e onNext(1): 1\n--\x3e onNext(2): 1\n--\x3e onNext(1): 2\n--\x3e onNext(2): 2\n--\x3e onNext(1): 3\n--\x3e onNext(2): 3\n--\x3e onNext(1): 4\n--\x3e onNext(2): 4\n--\x3e onNext(1): 5\n--\x3e onNext(2): 5\n--\x3e onComplete(1)\n--\x3e onComplete(2)\n \n \n Javadoc:  ConnectableObservable.connect() \nJavadoc:  ConnectableObservable.connect(Consumer <Disposable>  connection) \n 4. RefCount \n RefCount  的作用是让一个可连接的Observable行为像普通的Observable。 \n RefCount 操作符把从一个可连接的Observable连接和断开的过程自动化了。它操作一个可连接的Observable，返回一个普通的Observable。当第一个订阅者订阅这个Observable 时， RefCount  连接 到下层的可连接Observable。 RefCount 跟踪有多少个观察者订阅它，直到最后一个观察者完成才 断开 与下层可连接Observable的连接。 \n 解析：   refCount()  把 ConnectableObservable 变为一个普通的 Observable 但又保持了 ConnectableObservable 的特性。如果出现第一个 Observer，它就会自动调用  connect() ，如果所有的 Observer 全部  dispose ，那么它也会停止接受上游 Observable 的数据。 \n 实例代码： \n      /**\n     * refCount(int subscriberCount, long timeout, TimeUnit unit, Scheduler scheduler)\n     *\n     * 具有以下可选参数：\n     * subscriberCount： 指定需要连接到上游的订阅者数量。注意：当订阅者满足此数量后才会处理\n     * timeout：         所有订阅用户退订后断开连接前的等待时间\n     * unit：            时间单位\n     * scheduler:        断开连接之前要等待的目标调度器\n     */ \n     Observable < Long >  refCountObservable  =   Observable \n             . intervalRange ( 1 ,   5 ,   0 ,   1000 ,   TimeUnit . MILLISECONDS ) \n             . publish ( ) \n             . refCount ( ) \n             . subscribeOn ( Schedulers . newThread ( ) )      // 指定订阅调度在子线程 \n             . observeOn ( Schedulers . newThread ( ) ) ;       // 指定观察者调度在子线程 \n         //  .refCount(1, 500, TimeUnit.MILLISECONDS, Schedulers.newThread()); \n\n     // 第1个订阅者 \n    refCountObservable . subscribe ( new   Observer < Long > ( )   { \n         private    Disposable  disposable ; \n         private    int  buff  =   0 ; \n\n         @Override \n         public   void   onSubscribe ( Disposable  d )   { \n             System . out . println ( "----\x3e onSubscribe(1): " ) ; \n            disposable  =  d ; \n         } \n\n         @Override \n         public   void   onNext ( Long  value )   { \n             if   ( buff  ==   3 )   { \n                disposable . dispose ( ) ;     // 解除当前的订阅 \n                 System . out . println ( "----\x3e Subscribe(1) is dispose! " ) ; \n             }   else   { \n                 System . out . println ( "--\x3e onNext(1): "   +  value ) ; \n             } \n            buff ++ ; \n         } \n\n         @Override \n         public   void   onError ( Throwable  e )   { \n             System . out . println ( "--\x3e onError(1): "   +  e ) ; \n         } \n\n         @Override \n         public   void   onComplete ( )   { \n             System . out . println ( "--\x3e onComplete(1): " ) ; \n         } \n     } ) ; \n\n     // 第2个订阅者 \n    refCountObservable . doOnSubscribe ( new   Consumer < Disposable > ( )   { \n\n                 @Override \n                 public   void   accept ( Disposable  disposable )   throws   Exception   { \n                     System . out . println ( "----\x3e onSubscribe(2): " ) ; \n                 } \n             } ) \n             . delaySubscription ( 2 ,   TimeUnit . SECONDS )     // 延迟2秒后订阅 \n             . subscribe ( new   Consumer < Long > ( )   { \n\n                 @Override \n                 public   void   accept ( Long  value )   throws   Exception   { \n                     System . out . println ( "--\x3e accept(2): "   +  value ) ; \n                 } \n             } ) ; \n\n     System . in . read ( ) ; \n \n 输出： \n ----\x3e onSubscribe(1): \n--\x3e onNext(1): 1\n--\x3e onNext(1): 2\n--\x3e onNext(1): 3\n----\x3e onSubscribe(2): \n----\x3e Subscribe(1) is dispose! \n--\x3e accept(2): 4\n--\x3e accept(2): 5\n \n \n Javadoc:  ConnectableObservable.refCount(subscriberCount, timeout, unit, scheduler) \n 5. Share \n 一个普通的Observable可以通过  publish  来将其转换为ConnectableObservable，然后可以调用其  refCount()  的方法将其转换为一个具有 ConnectableObservable 特性的Observable。 \n 其实Observable中还有一个操作方法，可以直接完成此步骤的操作，这就是  Observable.share()  操作符。 \n 可以来看一下share操作符的源码： \n      public   final   Observable < T >   share ( )   { \n         return   publish ( ) . refCount ( ) ; \n     } \n \n 通过源码可以知道，share() 方法可以直接将Observable转换为一个具有ConnectableObservable特性的Observable对象，即 Observable.publish().refCount() == Observable.share()  。 \n 实例代码： \n      // share() \n     // 通过share() 同时应用 publish 和 refCount 操作 \n     Observable < Long >  share  =   Observable \n             . intervalRange ( 1 ,   5 ,   0 ,   500 ,   TimeUnit . MILLISECONDS ) \n       //    .publish().refCount() \n             . share ( )    // 等价于上面的操作 \n             . subscribeOn ( Schedulers . newThread ( ) )      // 指定订阅调度在子线程 \n             . observeOn ( Schedulers . newThread ( ) ) ;       // 指定观察者调度在子线程 \n\n     // 1. 第一个订阅者 \n    share . subscribe ( new   Observer < Long > ( )   { \n         private    Disposable  disposable ; \n         private    int  buff  =   0 ; \n\n         @Override \n         public   void   onSubscribe ( Disposable  d )   { \n             System . out . println ( "----\x3e onSubscribe(1): " ) ; \n            disposable  =  d ; \n         } \n\n         @Override \n         public   void   onNext ( Long  value )   { \n             if   ( buff  ==   3 )   { \n                disposable . dispose ( ) ;     // 解除当前的订阅 \n                 System . out . println ( "----\x3e Subscribe(1) is dispose! " ) ; \n             }   else   { \n                 System . out . println ( "--\x3e onNext(1): "   +  value ) ; \n             } \n            buff ++ ; \n         } \n\n         @Override \n         public   void   onError ( Throwable  e )   { \n             System . out . println ( "--\x3e onError(1): "   +  e ) ; \n         } \n\n         @Override \n         public   void   onComplete ( )   { \n             System . out . println ( "--\x3e onComplete(1): " ) ; \n         } \n     } ) ; \n\n     // 2. 第二个订阅者 \n    share . doOnSubscribe ( new   Consumer < Disposable > ( )   { \n\n                 @Override \n                 public   void   accept ( Disposable  disposable )   throws   Exception   { \n                     System . out . println ( "----\x3e onSubscribe(2): " ) ; \n                 } \n             } ) \n             . delaySubscription ( 1 ,   TimeUnit . SECONDS )      // 延迟1秒后订阅 \n             . subscribe ( new   Consumer < Long > ( )   { \n\n                 @Override \n                 public   void   accept ( Long  value )   throws   Exception   { \n                     System . out . println ( "--\x3e accept(2): "   +  value ) ; \n                 } \n             } ) ; \n\n     System . in . read ( ) ; \n \n 输出： \n ----\x3e onSubscribe(1): \n--\x3e onNext(1): 1\n--\x3e onNext(1): 2\n--\x3e onNext(1): 3\n----\x3e onSubscribe(2): \n----\x3e Subscribe(1) is dispose! \n--\x3e accept(2): 4\n--\x3e accept(2): 5\n \n \n Javadoc:  Observable.share() \n 6. Replay \n 保证所有的观察者收到相同的数据序列，即使它们在Observable开始发射数据之后才订阅。 \n \n 如果在将一个Observable转换为可连接的Observable之前对它使用 Replay 操作符，产生的这个可连接Observable将总是发射完整的数据序列给任何未来的观察者，可以缓存发射过的数据，即使那些观察者在这 个Observable开始给其它观察者发射数据之后才订阅。 \n 注意：  replay操作符生成的  connectableObservable  ，如果没有对缓存进行限定，那么无论观察者何时去订阅，都可以收到 Observable 完整的数据序列项。 \n replay  操作符最好根据实际情况限定缓存的大小，否则数据发射过快或者较多时会占用很高的内存。 replay  操作符有可以接受不同参数的变体，有的可以指定  replay  的最大 缓存数量 或者指定 缓存时间 ，还可以指定调度器。 \n \n replay不仅可以缓存Observable的所有数据序列，也可以进行 限定缓存大小 的操作。 \n 还有有一种 replay 返回一个普通的 Observable 。它可以接受一个变换函数为参数，这个函数接受原始Observable发射的数据项为参数，返回结果Observable要发射的一项数据。因此，这个操作符其实是 replay 变换之后的数据项。 \n \n 实例代码： \n      // 创建发射数据的Observable \n     Observable < Long >  observable  =   Observable \n             . intervalRange ( 1 , \n                     10 , \n                     1 , \n                     500 , \n                     TimeUnit . MILLISECONDS , \n                     Schedulers . newThread ( ) ) ; \n\n     /**\n     * 1.1 replay(Scheduler scheduler)\n     * 可选参数：scheduler, 指定线程调度器\n     * 接受原始数据的所有数据\n     */ \n //  ConnectableObservable<Long> replay1 = observable.replay(); \n\n     /**\n     * 1.2 replay(int bufferSize, Scheduler scheduler)\n     * 可选参数：scheduler, 指定线程调度器\n     * 只缓存 bufferSize 个最近的原始数据\n     */ \n //  ConnectableObservable<Long> replay1 = observable.replay(1); // 设置缓存大小为1, 从原数据中缓存最近的1个数据 \n\n     /**\n     * 1.3 replay(int bufferSize, long time, TimeUnit unit, Scheduler scheduler)\n     * 可选参数：scheduler, 指定线程调度器\n     * 在订阅前指定的时间段内缓存 bufferSize 个数据, 注意计时开始是原始数据发射第1个数据项之后开始\n     */ \n //  ConnectableObservable<Long> replay1 = observable.replay(5, 1000, TimeUnit.MILLISECONDS); \n\n     /**\n     * 1.4 replay(long time, TimeUnit unit, Scheduler scheduler)\n     * 可选参数：scheduler, 指定线程调度器\n     * 在订阅前指定的时间段内缓存数据, 注意计时开始是原始数据发射第1个数据项之后开始\n     */ \n    ConnectableObservable < Long >  replay1  =  observable . replay (   1000 ,   TimeUnit . MILLISECONDS ) ; \n\n     // 进行 connect 操作 \n    replay1 . connect ( ) ; \n\n     // 第一个观察者 \n    replay1 . doOnSubscribe ( new   Consumer < Disposable > ( )   { \n         @Override \n         public   void   accept ( Disposable  disposable )   throws   Exception   { \n             System . out . println ( "----\x3e onSubScribe(1-1)" ) ; \n         } \n     } ) . subscribe ( new   Consumer < Long > ( )   { \n         @Override \n         public   void   accept ( Long  aLong )   throws   Exception   { \n             System . out . println ( "--\x3e accept(1-1): "   +  aLong ) ; \n         } \n     } ) ; \n\n     // 第二个观察者（延迟1秒后订阅） \n    replay1 . doOnSubscribe ( new   Consumer < Disposable > ( )   { \n         @Override \n         public   void   accept ( Disposable  disposable )   throws   Exception   { \n             System . out . println ( "----\x3e onSubScribe(1-2)" ) ; \n         } \n     } ) . delaySubscription ( 1 ,   TimeUnit . SECONDS ) \n       . subscribe ( new   Consumer < Long > ( )   { \n             @Override \n             public   void   accept ( Long  aLong )   throws   Exception   { \n                 System . out . println ( "--\x3e accept(1-2): "   +  aLong ) ; \n             } \n       } ) ; \n\n     // 第三个观察者（延迟2秒后订阅） \n    replay1 . doOnSubscribe ( new   Consumer < Disposable > ( )   { \n         @Override \n         public   void   accept ( Disposable  disposable )   throws   Exception   { \n             System . out . println ( "----\x3e onSubScribe(1-3)" ) ; \n         } \n     } ) . delaySubscription ( 2 ,   TimeUnit . SECONDS ) \n        . subscribe ( new   Consumer < Long > ( )   { \n            @Override \n            public   void   accept ( Long  aLong )   throws   Exception   { \n                System . out . println ( "--\x3e accept(1-3): "   +  aLong ) ; \n            } \n        } ) ; \n\n     System . in . read ( ) ; \n     System . out . println ( "----------------------------------------------------------" ) ; \n     /**\n     * 2. replay(Function<Observable<T>, ObservableSource<R>> selector,\n     * int bufferSize,             \t\t\t\t \t可选参数： 指定从元数据序列数据的缓存大小\n     * long time, TimeUnit unit,    \t可选参数： 指定缓存指定时间段的数据序列\n     * Scheduler scheduler)         \t\t可选参数： 指定线程调度器\n     *\n     * 接受一个变换函数 function 为参数，这个函数接受原始Observable发射的数据项为参数\n     * 通过指定的函数处理后，返回一个处理后的Observable\n     */ \n     Observable < String >  replayObservable  =  observable . replay ( new   Function < Observable < Long > ,   ObservableSource < String > > ( )   { \n         @Override \n         public   ObservableSource < String >   apply ( Observable < Long >  longObservable )   throws   Exception   { \n             // 对原始数据进行处理 \n             Observable < String >  map  =  longObservable . map ( new   Function < Long ,   String > ( )   { \n                 @Override \n                 public   String   apply ( Long  aLong )   throws   Exception   { \n                     return  aLong  +   "² = "   +  aLong  *  aLong ;    // 将原始数据进行平方处理，并转换为字符串数据类型 \n                 } \n             } ) ; \n\n             return  map ; \n         } \n     } ,   1 ,   Schedulers . newThread ( ) ) ; \n\n    replayObservable . subscribeOn ( Schedulers . newThread ( ) ) \n             . observeOn ( Schedulers . newThread ( ) ) ; \n\n     // 第一个观察者 \n    replayObservable . doOnSubscribe ( new   Consumer < Disposable > ( )   { \n         @Override \n         public   void   accept ( Disposable  disposable )   throws   Exception   { \n             System . out . println ( "--\x3e onSubScribe(2-1)" ) ; \n         } \n     } ) . subscribe ( new   Consumer < String > ( )   { \n         @Override \n         public   void   accept ( String  s )   throws   Exception   { \n             System . out . println ( "--\x3e accept(2-1)： "   +  s ) ; \n         } \n     } ) ; \n\n     // 订阅第二个观察者 （延迟2秒后订阅） \n    replayObservable . doOnSubscribe ( new   Consumer < Disposable > ( )   { \n         @Override \n         public   void   accept ( Disposable  disposable )   throws   Exception   { \n             System . out . println ( "--\x3e onSubScribe(2-2)" ) ; \n         } \n     } ) . delaySubscription ( 2 ,   TimeUnit . SECONDS ) \n       . subscribe ( new   Consumer < String > ( )   { \n             @Override \n             public   void   accept ( String  s )   throws   Exception   { \n                 System . out . println ( "--\x3e accept(2-2): "   +  s ) ; \n             } \n        } ) ; \n\n     System . in . read ( ) ; \n \n 输出： \n ----\x3e onSubScribe(1-1)\n--\x3e accept(1-1): 1\n--\x3e accept(1-1): 2\n--\x3e accept(1-1): 3\n----\x3e onSubScribe(1-2)\n--\x3e accept(1-2): 2\n--\x3e accept(1-2): 3\n--\x3e accept(1-1): 4\n--\x3e accept(1-2): 4\n--\x3e accept(1-1): 5\n--\x3e accept(1-2): 5\n----\x3e onSubScribe(1-3)\n--\x3e accept(1-3): 4\n--\x3e accept(1-3): 5\n--\x3e accept(1-1): 6\n--\x3e accept(1-2): 6\n--\x3e accept(1-3): 6\n--\x3e accept(1-1): 7\n--\x3e accept(1-2): 7\n--\x3e accept(1-3): 7\n--\x3e accept(1-1): 8\n--\x3e accept(1-2): 8\n--\x3e accept(1-3): 8\n--\x3e accept(1-1): 9\n--\x3e accept(1-2): 9\n--\x3e accept(1-3): 9\n--\x3e accept(1-1): 10\n--\x3e accept(1-2): 10\n--\x3e accept(1-3): 10\n----------------------------------------------------------\n--\x3e onSubScribe(2-1)\n--\x3e accept(2-1)： 1² = 1\n--\x3e accept(2-1)： 2² = 4\n--\x3e accept(2-1)： 3² = 9\n--\x3e accept(2-1)： 4² = 16\n--\x3e onSubScribe(2-2)\n--\x3e accept(2-1)： 5² = 25\n--\x3e accept(2-2): 1² = 1\n--\x3e accept(2-2): 2² = 4\n--\x3e accept(2-1)： 6² = 36\n--\x3e accept(2-2): 3² = 9\n--\x3e accept(2-1)： 7² = 49\n--\x3e accept(2-1)： 8² = 64\n--\x3e accept(2-2): 4² = 16\n--\x3e accept(2-2): 5² = 25\n--\x3e accept(2-1)： 9² = 81\n--\x3e accept(2-2): 6² = 36\n--\x3e accept(2-1)： 10² = 100\n--\x3e accept(2-2): 7² = 49\n--\x3e accept(2-2): 8² = 64\n--\x3e accept(2-2): 9² = 81\n--\x3e accept(2-2): 10² = 100\n \n \n Javadoc: \t Observable.replay(int bufferSize, long time, TimeUnit unit, Scheduler scheduler) \nJavadoc:  Observable.replay(Function<Observable <T> ,ObservableSource <R> > selector, int bufferSize, long time, TimeUnit unit, Scheduler scheduler) \n 小结 \n Rxjava 的连接操作符主要的核心是  ConnectableObservable  这个可连接的Observable对象的概念。可连接的 Observable 在被订阅时并不会直接发射数据，只有在他的 connect() 方法被调用时才会发射数据。便于更好的对数据的发射行为的控制，同时也对数据有很好的操作能力，可以缓存数据，指定缓存大小，时间片段缓存等。 \n \n 提示 ：以上使用的Rxjava2版本:  2.2.12 \n \n 实例代码： \n \n \n 代码下载 \n Github \n Gitee（码云） \n \n \n'},{title:"9. Observable的错误处理操作",frontmatter:{author:"JiangMing",title:"9. Observable的错误处理操作",date:"2019-12-30 22:33:56",sidebar:"auto",categories:["Java","Rxjava2"],tags:["Rxjava2"],publish:!0,showSponsor:!0},regularPath:"/developer/rxjava2/09.rxjava2.html",relativePath:"developer/rxjava2/09.rxjava2.md",key:"v-6004332e",path:"/developer/rxjava2/09.rxjava2.html",headers:[{level:2,title:"简要：",slug:"简要"},{level:2,title:"1. Catch",slug:"_1-catch"},{level:3,title:"1.1 onErrorReturn",slug:"_1-1-onerrorreturn"},{level:3,title:"1.2 onErrorResumeNext",slug:"_1-2-onerrorresumenext"},{level:3,title:"1.3 onExceptionResumeNext",slug:"_1-3-onexceptionresumenext"},{level:2,title:"2. Retry",slug:"_2-retry"},{level:3,title:"2.1 retry()",slug:"_2-1-retry"},{level:3,title:"2.2 retry(long times)",slug:"_2-2-retry-long-times"},{level:3,title:"2.3 retry(long times, Predicate predicate)",slug:"_2-3-retry-long-times-predicate-predicate"},{level:3,title:"2.4 retry(Predicate predicate)",slug:"_2-4-retry-predicate-predicate"},{level:3,title:"2.5 retry(BiPredicate predicate)",slug:"_2-5-retry-bipredicate-predicate"},{level:3,title:"2.6 retryUntil(BooleanSupplier stop)",slug:"_2-6-retryuntil-booleansupplier-stop"},{level:3,title:"2.7 retryWhen(Function handler)",slug:"_2-7-retrywhen-function-handler"},{level:2,title:"小结",slug:"小结"}],content:' 简要： \n 需求了解： \n Rxjava 中当数据处理派发中发生了 异常  ，观察者会接受到一个  Error  的通知，那如果不想发射这个异常的通知，自己处理掉呢？答案当然是可以的，在 Rxjava 中很多操作符可用于对 Observable 发射的 onError 通知做出响应或者从错误中恢复。 \n 例如： \n \n 吞掉这个错误，切换到一个备用的Observable继续发射数据 \n 吞掉这个错误然后发射默认值 \n 吞掉这个错误并立即尝试重启这个Observable \n 吞掉这个错误，在一些回退间隔后重启这个Observable \n \n Rxjava中常见的错误处理操作符有如下几类： \n \n onErrorReturn()：指示Observable在遇到错误时发射一个特定的数据 \n onErrorResumeNext()：指示Observable在遇到错误时发射一个数据序列 \n onExceptionResumeNext()：指示Observable遇到错误时继续发射数据 \n retry()：指示Observable遇到错误时重试 \n retryWhen()：指示Observable遇到错误时，将错误传递给另一个Observable来决定是否要重新给订阅这个Observable \n 1. Catch \n 从 onError 通知中恢复发射数据。 \n \n Catch  操作符拦截原始Observable的 onError 通知，将它替换为其它的数据项或数据序列，让产生的Observable能够正常终止或者根本不终止。 \n 1.1 onErrorReturn \n onErrorReturn  方法返回一个镜像原有Observable行为的新Observable，后者会忽略前者的 onError 调用，不会将错误传递给观察者，作为替代，它会发发射一个 特殊的项 并调用观察者的 onCompleted 方法。 \n \n onErrorReturnItem(T item)： 让Observable遇到错误时发射一个指定的项（item）并且正常终止。 \n \n \n \n onErrorReturn(Function<Throwable, T> valueSupplier)：让Observable遇到错误时通过一个函数Function来进行判断返回指定的类型数据，并且正常终止。 \n \n \n 示例代码： \n      // 创建一个可以发射异常的Observable \n     Observable < Integer >  observable  =   Observable . create ( new   ObservableOnSubscribe < Integer > ( )   { \n         @Override \n         public   void   subscribe ( ObservableEmitter < Integer >  emitter )   throws   Exception   { \n            emitter . onNext ( 1 ) ; \n            emitter . onNext ( 2 ) ; \n            emitter . onNext ( 1   /   0 ) ;    // 产生一个异常 \n            emitter . onNext ( 3 ) ; \n            emitter . onNext ( 4 ) ; \n         } \n     } ) ; \n\n     /** 1. onErrorReturnItem(T item)\n     * 让Observable遇到错误时发射一个指定的项（item）并且正常终止。\n     */ \n    observable . onErrorReturnItem ( 888 )     // 源Observable发生异常时发射指定的888数据 \n             . subscribe ( new   Observer < Integer > ( )   { \n                 @Override \n                 public   void   onSubscribe ( Disposable  d )   { \n                     System . out . println ( "--\x3e onSubscribe(1)" ) ; \n                 } \n\n                 @Override \n                 public   void   onNext ( Integer  integer )   { \n                     System . out . println ( "--\x3e onNext(1): "   +  integer ) ; \n                 } \n\n                 @Override \n                 public   void   onError ( Throwable  e )   { \n                     System . out . println ( "--\x3e onError(1): "   +  e ) ; \n                 } \n\n                 @Override \n                 public   void   onComplete ( )   { \n                     System . out . println ( "--\x3e onCompleted(1)" ) ; \n                 } \n             } ) ; \n\n     System . out . println ( "-----------------------------------------------" ) ; \n     /**\n     * 2. onErrorReturn(Function<Throwable, T> valueSupplier)\n     * 让Observable遇到错误时通过一个函数Function来接受Error参数并进行判断返回指定的类型数据，并且正常终止。\n     */ \n    observable . onErrorReturn ( new   Function < Throwable ,   Integer > ( )   { \n         @Override \n         public   Integer   apply ( Throwable  throwable )   throws   Exception   { \n             System . out . println ( "--\x3e apply(1): e = "   +  throwable ) ; \n             return   888 ;   // 源Observable发生异常时发射指定的888数据 \n         } \n     } ) . subscribe ( new   Observer < Integer > ( )   { \n         @Override \n         public   void   onSubscribe ( Disposable  d )   { \n             System . out . println ( "--\x3e onSubscribe(2)" ) ; \n         } \n\n         @Override \n         public   void   onNext ( Integer  integer )   { \n             System . out . println ( "--\x3e onNext(2): "   +  integer ) ; \n         } \n\n         @Override \n         public   void   onError ( Throwable  e )   { \n             System . out . println ( "--\x3e onError(2): "   +  e ) ; \n         } \n\n         @Override \n         public   void   onComplete ( )   { \n             System . out . println ( "--\x3e onCompleted(2)" ) ; \n         } \n     } ) ; \n \n 输出： \n --\x3e onSubscribe(1)\n--\x3e onNext(1): 1\n--\x3e onNext(1): 2\n--\x3e onNext(1): 888\n--\x3e onCompleted(1)\n-----------------------------------------------\n--\x3e onSubscribe(2)\n--\x3e onNext(2): 1\n--\x3e onNext(2): 2\n--\x3e apply(1): e = java.lang.ArithmeticException: / by zero\n--\x3e onNext(2): 888\n--\x3e onCompleted(2)\n \n \n Javadoc:  onErrorReturnItem(T item) \nJavadoc:  onErrorReturn(Function <Throwable, T>  valueSupplier) \n 1.2 onErrorResumeNext \n onErrorResumeNext  方法返回一个镜像原有Observable行为的新Observable，后者会忽略前者的 onError 调用，不会将错误传递给观察者，作为替代，它会开始另一个指定的备用Observable。 \n \n \n onErrorResumeNext(ObservableSource next)： 让Observable在遇到错误时开始发射第二个指定的Observable的数据序列。 \n onErrorResumeNext(Function<Throwable, ObservableSource <T> > resumeFunction)：让Observable在遇到错误时通过一个函数Function来接受Error参数并进行判断返回指定的第二个Observable的数据序列。 \n \n 示例代码： \n      // 创建一个可以发射异常的Observable \n     Observable < Integer >  observable  =   Observable . create ( new   ObservableOnSubscribe < Integer > ( )   { \n         @Override \n         public   void   subscribe ( ObservableEmitter < Integer >  emitter )   throws   Exception   { \n            emitter . onNext ( 1 ) ; \n            emitter . onNext ( 2 ) ; \n            emitter . onNext ( 1   /   0 ) ;    // 产生一个异常 \n            emitter . onNext ( 3 ) ; \n            emitter . onNext ( 4 ) ; \n         } \n     } ) ; \n    \n     /**\n     * 3. onErrorResumeNext(ObservableSource next)\n     * 让Observable在遇到错误时开始发射第二个指定的Observable的数据序列\n     */ \n    observable . onErrorResumeNext ( Observable . just ( 888 ) )    // 当发生异常的时候继续发射此项Observable \n             . subscribe ( new   Observer < Integer > ( )   { \n                 @Override \n                 public   void   onSubscribe ( Disposable  d )   { \n                     System . out . println ( "--\x3e onSubscribe(3)" ) ; \n                 } \n\n                 @Override \n                 public   void   onNext ( Integer  integer )   { \n                     System . out . println ( "--\x3e onNext(3): "   +  integer ) ; \n                 } \n\n                 @Override \n                 public   void   onError ( Throwable  e )   { \n                     System . out . println ( "--\x3e onError(3): "   +  e ) ; \n                 } \n\n                 @Override \n                 public   void   onComplete ( )   { \n                     System . out . println ( "--\x3e onCompleted(3)" ) ; \n                 } \n             } ) ; \n\n     System . out . println ( "-----------------------------------------------" ) ; \n     /**\n     * 4. onErrorResumeNext(Function<Throwable, ObservableSource<T>> resumeFunction)\n     * 让Observable在遇到错误时通过一个函数Function来接受Error参数并进行判断返回指定的第二个Observable的数据序列\n     */ \n    observable . onErrorResumeNext ( new   Function < Throwable ,   ObservableSource < ?   extends   Integer > > ( )   { \n         @Override \n         public   ObservableSource < ?   extends   Integer >   apply ( Throwable  throwable )   throws   Exception   { \n             System . out . println ( "--\x3e apply(4): "   +  throwable ) ; \n             return   Observable . just ( 888 ) ;      // 当发生异常的时候继续发射此项Observable \n         } \n     } ) . subscribe ( new   Observer < Integer > ( )   { \n         @Override \n         public   void   onSubscribe ( Disposable  d )   { \n             System . out . println ( "--\x3e onSubscribe(4)" ) ; \n         } \n\n         @Override \n         public   void   onNext ( Integer  integer )   { \n             System . out . println ( "--\x3e onNext(4): "   +  integer ) ; \n         } \n\n         @Override \n         public   void   onError ( Throwable  e )   { \n             System . out . println ( "--\x3e onError(4): "   +  e ) ; \n         } \n\n         @Override \n         public   void   onComplete ( )   { \n             System . out . println ( "--\x3e onCompleted(4)" ) ; \n         } \n     } ) ; \n \n 输出： \n --\x3e onSubscribe(3)\n--\x3e onNext(3): 1\n--\x3e onNext(3): 2\n--\x3e onNext(3): 888\n--\x3e onCompleted(3)\n-----------------------------------------------\n--\x3e onSubscribe(4)\n--\x3e onNext(4): 1\n--\x3e onNext(4): 2\n--\x3e apply(4): java.lang.ArithmeticException: / by zero\n--\x3e onNext(4): 888\n--\x3e onCompleted(4)\n \n \n Javadoc:  onErrorResumeNext(ObservableSource next) \nJavadoc:  onErrorResumeNext(Function<Throwable, ObservableSource<T>> resumeFunction) \n 1.3 onExceptionResumeNext \n 与 onErrorResumeNext 类似，  onExceptionResumeNext  方法返回一个镜像原有Observable行为的新Observable，也使用一个备用的Observable，不同的是，如果 onError 收到的 Throwable 不是一个 Exception ，它会将错误传递给观察者的 onError 方法，不会使用备用的Observable。 \n \n 解析：   onExceptionResumeNext  只会对 Exception 类型的异常进行处理，如果onError收到的Throwable不是一个Exception，它会将错误传递给观察者的onError方法，不会使用备用的Observable 。 \n 示例代码： \n      // 创建一个可以发射异常的Observable \n     Observable < Integer >  observable1  =   Observable . create ( new   ObservableOnSubscribe < Integer > ( )   { \n         @Override \n         public   void   subscribe ( ObservableEmitter < Integer >  emitter )   throws   Exception   { \n            emitter . onNext ( 1 ) ; \n            emitter . onNext ( 2 ) ; \n         //  emitter.onError(new Throwable("This is Throwable!"));  // Throwable类型异常,直接通知观察者 \n         //  emitter.onError(new Error("This is Error!"));          // Error类型异常,直接通知观察者 \n            emitter . onError ( new   Exception ( "This is Exception!" ) ) ;    // Exception类型异常,进行处理,发送备用的Observable数据 \n         //    emitter.onNext(1 / 0);  // 会产生一个ArithmeticException异常,异常会被处理,发送备用的Observable数据 \n            emitter . onNext ( 3 ) ; \n            emitter . onNext ( 4 ) ; \n         } \n     } ) ; \n     /**\n     * 5. onExceptionResumeNext(ObservableSource next)\n     *  如果onError收到的Throwable不是一个Exception,它会将错误传递给观察者的onError方法,不会使用备用的Observable\n     *  只对Exception类型的异常通知进行备用Observable处理\n     */ \n    observable1 . onExceptionResumeNext ( Observable . just ( 888 ) ) \n             . subscribe ( new   Observer < Integer > ( )   { \n                 @Override \n                 public   void   onSubscribe ( Disposable  d )   { \n                     System . out . println ( "--\x3e onSubscribe(5)" ) ; \n                 } \n\n                 @Override \n                 public   void   onNext ( Integer  integer )   { \n                     System . out . println ( "--\x3e onNext(5): "   +  integer ) ; \n                 } \n\n                 @Override \n                 public   void   onError ( Throwable  e )   { \n                     System . out . println ( "--\x3e onError(5): "   +  e ) ; \n                 } \n\n                 @Override \n                 public   void   onComplete ( )   { \n                     System . out . println ( "--\x3e onCompleted(5)" ) ; \n                 } \n             } ) ; \n \n 输出： \n --\x3e onSubscribe(5)\n--\x3e onNext(5): 1\n--\x3e onNext(5): 2\n--\x3e onNext(5): 888\n--\x3e onCompleted(5)\n \n \n Javadoc:  onExceptionResumeNext(ObservableSource next) \n 2. Retry \n 如果原始Observable遇到错误，重新订阅它期望它能正常终止。 \n Retry  操作符不会将原始 Observable 的  onError  通知传递给观察者，它会订阅这个Observable，再给它机会无错误地完成它的数据序列。 Retry 总是传递 onNext 通知给观察者，由于重新订阅，可能会造成数据项重复情况。 \n 2.1 retry() \n retry()：无论收到多少次  onError  通知，无参数版本的  retry  都会继续订阅并发射原始Observable。 \n \n 注意：  因为如果遇到异常，将会无条件的重新订阅原始的Observable，知道没有异常的发射全部的数据序列为止。所以如果你的异常发生后重新订阅也不会恢复正常的话，会一直订阅下去，有 内存泄露 的风险。 \n 2.2 retry(long times) \n retry(long times)：接受单个  count  参数的 retry 会最多重新订阅指定的次数，如果次数超了，它不会尝试再次订阅，它会把最新的一个  onError  通知传递给它的观察者。 \n 2.3 retry(long times, Predicate predicate) \n retry(long times, Predicate<Throwable> predicate)：遇到异常后最多重新订阅  times  次，每次重新订阅经过函数 predicate  最终判断是否继续重新订阅，如果 times 到达 上限 或者 predicate 返回  false  中任意一个最先满足条件，都会终止重新订阅，retry 会将最新的一个 onError 通知传递给它的观察者。 \n 2.4 retry(Predicate predicate) \n retry(Predicate<Throwable> predicate)：接受一个谓词函数作为参数，这个函数的两个参数是：重试次数和导致发射  onError  通知的 Throwable 。这个函数返回一个布尔值，如果返回  true  ， retry 应该再次订阅和镜像原始的Observable，如果返回  false  ， retry 会将最新的一个 onError 通知传递给它的观察者 \n 2.5 retry(BiPredicate predicate) \n retry(BiPredicate<Integer, Throwable> predicate)：遇到异常时，通过函数  predicate  判断是否重新订阅源Observable，并且通过参数  Integer  传递给 predicate 重新订阅的次数，retry 会将最新的一个 onError 通知传递给它的观察者。 \n 2.6 retryUntil(BooleanSupplier stop) \n retryUntil(BooleanSupplier stop)：重试重新订阅，直到给定的停止函数  stop  返回  true ，retry 会将最新的一个 onError 通知传递给它的观察者。 \n 2.7 retryWhen(Function handler) \n retryWhen(Function<Observable<Throwable>, ObservableSource> handler)： retryWhen  和 retry 类似，区别是， retryWhen 将 onError 中的 Throwable 传递给一个函数，这个函数产生另一个 Observable， retryWhen 观察它的结果再决定是不是要重新订阅原始的Observable。如果这个Observable发射了一项数据，它就重新订阅，如果这个Observable发射的是 onError 通知，它就将这个通知传递给观察者然后终止。 \n \n 实例代码： \n \t // flag for emitted onError times \n     public   static   int  temp  =   0 ; \n\n     // 创建可以发送Error通知的Observable \n     Observable < Integer >  observable  =   Observable . create ( new   ObservableOnSubscribe < Integer > ( )   { \n         @Override \n         public   void   subscribe ( ObservableEmitter < Integer >  emitter )   throws   Exception   { \n            emitter . onNext ( 1 ) ; \n            emitter . onNext ( 2 ) ; \n             if   ( temp  <=   2 )   { \n                emitter . onError ( new   Exception ( "Test Error!" ) ) ; \n                temp ++ ; \n             } \n            emitter . onNext ( 3 ) ; \n            emitter . onNext ( 4 ) ; \n         } \n     } ) ; \n\n     /**\n     * 1. retry()\n     *  无论收到多少次onError通知, 都会去继续订阅并发射原始Observable。\n     */ \n    observable . doOnSubscribe ( new   Consumer < Disposable > ( )   { \n         @Override \n         public   void   accept ( Disposable  disposable )   throws   Exception   { \n             System . out . println ( "----\x3e doOnSubscribe(1)" ) ; \n         } \n     } ) . retry ( ) . subscribe ( new   Consumer < Integer > ( )   { \n         @Override \n         public   void   accept ( Integer  integer )   throws   Exception   { \n             System . out . println ( "--\x3e accept(1): "   +  integer ) ; \n         } \n     } ) ; \n\n     System . out . println ( "---------------------------------------------" ) ; \n    temp  =   0 ; \n     /**\n     * 2. retry(long times)\n     *  遇到异常后，最多重新订阅源Observable times次\n     */ \n    observable . doOnSubscribe ( new   Consumer < Disposable > ( )   { \n         @Override \n         public   void   accept ( Disposable  disposable )   throws   Exception   { \n             System . out . println ( "----\x3e doOnSubscribe(2)" ) ; \n         } \n     } ) . retry ( 1 )   // 遇到异常后，重复订阅的1次 \n       . subscribe ( new   Observer < Integer > ( )   { \n             @Override \n             public   void   onSubscribe ( Disposable  d )   { \n                 System . out . println ( "--\x3e onSubscribe(2)" ) ; \n             } \n\n             @Override \n             public   void   onNext ( Integer  integer )   { \n                 System . out . println ( "--\x3e onNext(2): "   +  integer ) ; \n             } \n\n             @Override \n             public   void   onError ( Throwable  e )   { \n                 System . out . println ( "--\x3e onError(2): "   +  e ) ; \n             } \n\n             @Override \n             public   void   onComplete ( )   { \n                 System . out . println ( "--\x3e onCompleted(2)" ) ; \n             } \n       } ) ; \n\n     System . out . println ( "---------------------------------------------" ) ; \n    temp  =   0 ; \n     /**\n     * 3. retry(long times, Predicate<Throwable> predicate)\n     *  遇到异常后最多重新订阅times次,每次重新订阅经过函数predicate最终判断是否继续重新订阅\n     *  如果times到达上限或者predicate返回false中任意一个最先满足条件,都会终止重新订阅\n     */ \n    observable . doOnSubscribe ( new   Consumer < Disposable > ( )   { \n         @Override \n         public   void   accept ( Disposable  disposable )   throws   Exception   { \n             System . out . println ( "----\x3e doOnSubscribe(3)" ) ; \n         } \n     } ) . retry ( 2 ,   new   Predicate < Throwable > ( )   { \n         @Override \n         public   boolean   test ( Throwable  throwable )   throws   Exception   { \n             System . out . println ( "--\x3e test(3)" ) ; \n             if ( throwable  instanceof   Exception )   { \n                 return   true ;      // 遇到异常通知后是否继续继续订阅 \n             } \n             return   false ; \n         } \n     } ) . subscribe ( new   Observer < Integer > ( )   { \n         @Override \n         public   void   onSubscribe ( Disposable  d )   { \n             System . out . println ( "--\x3e onSubscribe(3)" ) ; \n         } \n\n         @Override \n         public   void   onNext ( Integer  integer )   { \n             System . out . println ( "--\x3e onNext(3): "   +  integer ) ; \n         } \n\n         @Override \n         public   void   onError ( Throwable  e )   { \n             System . out . println ( "--\x3e onError(3): "   +  e ) ; \n         } \n\n         @Override \n         public   void   onComplete ( )   { \n             System . out . println ( "--\x3e onCompleted(3)" ) ; \n         } \n     } ) ; \n\n     System . out . println ( "---------------------------------------------" ) ; \n    temp  =   0 ; \n     /**\n     * 4. retry(Predicate<Throwable> predicate)\n     *  遇到异常时，通过函数predicate判断是否重新订阅源Observable\n     */ \n    observable . doOnSubscribe ( new   Consumer < Disposable > ( )   { \n         @Override \n         public   void   accept ( Disposable  disposable )   throws   Exception   { \n             System . out . println ( "----\x3e doOnSubscribe(4)" ) ; \n         } \n     } ) . retry ( new   Predicate < Throwable > ( )   { \n         @Override \n         public   boolean   test ( Throwable  throwable )   throws   Exception   { \n             if   ( throwable  instanceof   Exception )   { \n                 return   true ;      // 遇到异常通知后是否继续继续订阅 \n             } \n             return   false ; \n         } \n     } ) . subscribe ( new   Observer < Integer > ( )   { \n         @Override \n         public   void   onSubscribe ( Disposable  d )   { \n             System . out . println ( "--\x3e onSubscribe(4)" ) ; \n         } \n\n         @Override \n         public   void   onNext ( Integer  integer )   { \n             System . out . println ( "--\x3e onNext(4): "   +  integer ) ; \n         } \n\n         @Override \n         public   void   onError ( Throwable  e )   { \n             System . out . println ( "--\x3e onError(4): "   +  e ) ; \n         } \n\n         @Override \n         public   void   onComplete ( )   { \n             System . out . println ( "--\x3e onCompleted(4)" ) ; \n         } \n     } ) ; \n\n     System . out . println ( "---------------------------------------------" ) ; \n    temp  =   0 ; \n     /**\n     * 5. retry(BiPredicate<Integer, Throwable> predicate)\n     *   遇到异常时，通过函数predicate判断是否重新订阅源Observable,并且通过参数integer传递给predicate重新订阅的次数\n     */ \n    observable . doOnSubscribe ( new   Consumer < Disposable > ( )   { \n         @Override \n         public   void   accept ( Disposable  disposable )   throws   Exception   { \n             System . out . println ( "----\x3e doOnSubscribe(5)" ) ; \n         } \n     } ) . retry ( new   BiPredicate < Integer ,   Throwable > ( )   { \n         @Override \n         public   boolean   test ( Integer  integer ,   Throwable  throwable )   throws   Exception   { \n             System . out . println ( "--\x3e test(5): "   +  integer ) ; \n             if   ( throwable  instanceof   Exception )   { \n                 return   true ;      // 遇到异常通知后是否继续继续订阅 \n             } \n             return   false ; \n         } \n     } ) . subscribe ( new   Observer < Integer > ( )   { \n         @Override \n         public   void   onSubscribe ( Disposable  d )   { \n             System . out . println ( "--\x3e onSubscribe(5)" ) ; \n         } \n\n         @Override \n         public   void   onNext ( Integer  integer )   { \n             System . out . println ( "--\x3e onNext(5): "   +  integer ) ; \n         } \n\n         @Override \n         public   void   onError ( Throwable  e )   { \n             System . out . println ( "--\x3e onError(5): "   +  e ) ; \n         } \n\n         @Override \n         public   void   onComplete ( )   { \n             System . out . println ( "--\x3e onCompleted(5)" ) ; \n         } \n     } ) ; \n\n     System . out . println ( "---------------------------------------------" ) ; \n    temp  =   0 ; \n     /**\n     * 6. retryUntil(BooleanSupplier stop)\n     * 重试重新订阅，直到给定的停止函数stop返回true\n     */ \n    observable . doOnSubscribe ( new   Consumer < Disposable > ( )   { \n         @Override \n         public   void   accept ( Disposable  disposable )   throws   Exception   { \n             System . out . println ( "----\x3e doOnSubscribe(6)" ) ; \n         } \n     } ) . retryUntil ( new   BooleanSupplier ( )   { \n         @Override \n         public   boolean   getAsBoolean ( )   throws   Exception   { \n             System . out . println ( "--\x3e getAsBoolean(6)" ) ; \n             if ( temp  ==   1 ) {    // 满足条件，停止重新订阅 \n                 return   true ; \n             } \n             return   false ; \n         } \n     } ) . subscribe ( new   Observer < Integer > ( )   { \n         @Override \n         public   void   onSubscribe ( Disposable  d )   { \n             System . out . println ( "--\x3e onSubscribe(6)" ) ; \n         } \n\n         @Override \n         public   void   onNext ( Integer  integer )   { \n             System . out . println ( "--\x3e onNext(6): "   +  integer ) ; \n         } \n\n         @Override \n         public   void   onError ( Throwable  e )   { \n             System . out . println ( "--\x3e onError(6): "   +  e ) ; \n         } \n\n         @Override \n         public   void   onComplete ( )   { \n             System . out . println ( "--\x3e onCompleted(6)" ) ; \n         } \n     } ) ; \n\n\n     System . out . println ( "---------------------------------------------" ) ; \n    temp  =   0 ; \n     /**\n     * 7. retryWhen(Function<Observable<Throwable>, ObservableSource> handler)\n     *  将onError中的Throwable传递给一个函数handler，这个函数产生另一个Observable，\n     *  retryWhen观察它的结果再决定是不是要重新订阅原始的Observable。\n     *  如果这个Observable发射了一项数据，它就重新订阅，\n     *  如果这个Observable发射的是onError通知，它就将这个通知传递给观察者然后终止。\n     */ \n    observable . doOnSubscribe ( new   Consumer < Disposable > ( )   { \n         @Override \n         public   void   accept ( Disposable  disposable )   throws   Exception   { \n             System . out . println ( "----\x3e doOnSubscribe(7)" ) ; \n         } \n     } ) . retryWhen ( new   Function < Observable < Throwable > ,   ObservableSource < ? > > ( )   { \n         @Override \n         public   ObservableSource < ? >   apply ( Observable < Throwable >  throwableObservable )   throws   Exception   { \n             System . out . println ( "--\x3e apply(7)" ) ; \n             // 根据产生的Error的Observable是否正常发射数据来进行重新订阅，如果发射Error通知，则直接传递给观察者后终止 \n             return  throwableObservable . flatMap ( new   Function < Throwable ,   ObservableSource < ? > > ( )   { \n                 @Override \n                 public   ObservableSource < ? >   apply ( Throwable  throwable )   throws   Exception   { \n                     if   ( temp  ==   1 )   { \n                         return   Observable . error ( throwable ) ;   // 满足条件后，传递这个Error，终止重新订阅 \n                     } \n                     return   Observable . timer ( 1 ,   TimeUnit . MILLISECONDS ) ;    // 正常发射数据，可以重新订阅 \n                 } \n             } ) ; \n         } \n     } ) . subscribe ( new   Observer < Integer > ( )   { \n         @Override \n         public   void   onSubscribe ( Disposable  d )   { \n             System . out . println ( "--\x3e onSubscribe(7)" ) ; \n         } \n\n         @Override \n         public   void   onNext ( Integer  integer )   { \n             System . out . println ( "--\x3e onNext(7): "   +  integer ) ; \n         } \n\n         @Override \n         public   void   onError ( Throwable  e )   { \n             System . out . println ( "--\x3e onError(7): "   +  e ) ; \n         } \n\n         @Override \n         public   void   onComplete ( )   { \n             System . out . println ( "--\x3e onCompleted(7)" ) ; \n         } \n     } ) ; \n\n     System . in . read ( ) ; \n \n 输出： \n ----\x3e doOnSubscribe(1)\n--\x3e accept(1): 1\n--\x3e accept(1): 2\n----\x3e doOnSubscribe(1)\n--\x3e accept(1): 1\n--\x3e accept(1): 2\n----\x3e doOnSubscribe(1)\n--\x3e accept(1): 1\n--\x3e accept(1): 2\n----\x3e doOnSubscribe(1)\n--\x3e accept(1): 1\n--\x3e accept(1): 2\n--\x3e accept(1): 3\n--\x3e accept(1): 4\n---------------------------------------------\n--\x3e onSubscribe(2)\n----\x3e doOnSubscribe(2)\n--\x3e onNext(2): 1\n--\x3e onNext(2): 2\n----\x3e doOnSubscribe(2)\n--\x3e onNext(2): 1\n--\x3e onNext(2): 2\n--\x3e onError(2): java.lang.Exception: Test Error!\n---------------------------------------------\n--\x3e onSubscribe(3)\n----\x3e doOnSubscribe(3)\n--\x3e onNext(3): 1\n--\x3e onNext(3): 2\n--\x3e test(3)\n----\x3e doOnSubscribe(3)\n--\x3e onNext(3): 1\n--\x3e onNext(3): 2\n--\x3e test(3)\n----\x3e doOnSubscribe(3)\n--\x3e onNext(3): 1\n--\x3e onNext(3): 2\n--\x3e onError(3): java.lang.Exception: Test Error!\n---------------------------------------------\n--\x3e onSubscribe(4)\n----\x3e doOnSubscribe(4)\n--\x3e onNext(4): 1\n--\x3e onNext(4): 2\n----\x3e doOnSubscribe(4)\n--\x3e onNext(4): 1\n--\x3e onNext(4): 2\n----\x3e doOnSubscribe(4)\n--\x3e onNext(4): 1\n--\x3e onNext(4): 2\n----\x3e doOnSubscribe(4)\n--\x3e onNext(4): 1\n--\x3e onNext(4): 2\n--\x3e onNext(4): 3\n--\x3e onNext(4): 4\n---------------------------------------------\n--\x3e onSubscribe(5)\n----\x3e doOnSubscribe(5)\n--\x3e onNext(5): 1\n--\x3e onNext(5): 2\n--\x3e test(5): 1\n----\x3e doOnSubscribe(5)\n--\x3e onNext(5): 1\n--\x3e onNext(5): 2\n--\x3e test(5): 2\n----\x3e doOnSubscribe(5)\n--\x3e onNext(5): 1\n--\x3e onNext(5): 2\n--\x3e test(5): 3\n----\x3e doOnSubscribe(5)\n--\x3e onNext(5): 1\n--\x3e onNext(5): 2\n--\x3e onNext(5): 3\n--\x3e onNext(5): 4\n---------------------------------------------\n--\x3e onSubscribe(6)\n----\x3e doOnSubscribe(6)\n--\x3e onNext(6): 1\n--\x3e onNext(6): 2\n--\x3e getAsBoolean(6)\n----\x3e doOnSubscribe(6)\n--\x3e onNext(6): 1\n--\x3e onNext(6): 2\n--\x3e getAsBoolean(6)\n--\x3e onError(6): java.lang.Exception: Test Error!\n---------------------------------------------\n--\x3e apply(7)\n--\x3e onSubscribe(7)\n----\x3e doOnSubscribe(7)\n--\x3e onNext(7): 1\n--\x3e onNext(7): 2\n----\x3e doOnSubscribe(7)\n--\x3e onNext(7): 1\n--\x3e onNext(7): 2\n--\x3e onError(7): java.lang.Exception: Test Error!\n \n \n Javadoc: \t retry() \nJavadoc: \t retry(long times) \nJavadoc:  retry(long times, Predicate<Throwable> predicate) \nJavadoc:  retry(Predicate<Throwable> predicate) \nJavadoc:  retry(BiPredicate<Integer, Throwable> predicate) \nJavadoc:  retryUntil(BooleanSupplier stop) \nJavadoc:  retryWhen(Function<Observable<Throwable>, ObservableSource> handler) \n 小结 \n 本节主要介绍了 Rxjava 中关于  Error  通知的处理，主要是在遇到异常通知时，无条件或者指定条件的去重新订阅原始 Observable 直到没有异常（正常发射所有数据序列）或者满足指定的条件后终止重新订阅，发射异常通知给观察者。 \n \n 提示 ：以上使用的Rxjava2版本:  2.2.12 \n \n 实例代码： \n \n \n 代码下载 \n Github \n Gitee（码云） \n \n \n'},{title:"10. Observable的辅助操作",frontmatter:{author:"JiangMing",title:"10. Observable的辅助操作",date:"2019-12-30 22:34:56",sidebar:"auto",categories:["Java","Rxjava2"],tags:["Rxjava2"],publish:!0,showSponsor:!0},regularPath:"/developer/rxjava2/10.rxjava2.html",relativePath:"developer/rxjava2/10.rxjava2.md",key:"v-295365bd",path:"/developer/rxjava2/10.rxjava2.html",headers:[{level:2,title:"简要：",slug:"简要"},{level:2,title:"1. Delay",slug:"_1-delay"},{level:2,title:"2. Do",slug:"_2-do"},{level:2,title:"3. SubscribeOn",slug:"_3-subscribeon"},{level:2,title:"4. ObserverOn",slug:"_4-observeron"},{level:2,title:"5. Serialize",slug:"_5-serialize"},{level:2,title:"6. Materialize",slug:"_6-materialize"},{level:2,title:"7. Dematerialize",slug:"_7-dematerialize"},{level:2,title:"8. TimeInterval",slug:"_8-timeinterval"},{level:2,title:"9. Timeout",slug:"_9-timeout"},{level:3,title:"9.1 timeout(timeout, timeUnit)",slug:"_9-1-timeout-timeout-timeunit"},{level:3,title:"9.2 timeout(timeout, timeUnit, scheduler, other)",slug:"_9-2-timeout-timeout-timeunit-scheduler-other"},{level:3,title:"9.3 timeout(Function itemTimeoutIndicator, ObservableSource other)",slug:"_9-3-timeout-function-itemtimeoutindicator-observablesource-other"},{level:2,title:"10. Timestamp",slug:"_10-timestamp"},{level:2,title:"11. Using",slug:"_11-using"},{level:2,title:"12. To",slug:"_12-to"},{level:2,title:"小结",slug:"小结"}],content:' 简要： \n 需求了解： \n Rxjava中有一些方便的辅助操作符，来更方便我们的函数式的编程。比如延迟、定时、指定操作的监听、数据类型转换等一系列的操作。 \n 下面列出了一些用于Observable的辅助操作符： \n \n Delay ：延时发射Observable的结果。 \n Do ：注册一个动作作为原始Observable生命周期事件的监听器。 \n SubscribeOn ：指定Observable自身在哪个调度器上执行。 \n ObserverOn ：指定一个观察者在哪个调度器上观察这个Observable。 \n Serialize ：强制一个Observable连续调用并保证行为正确，其实就是同步事件操作。 \n Materialize/Dematerialize ：将数据项和事件通知都当做数据项发射 ，Dematerialize 刚好相反。 \n TimeInterval ：将一个发射数据的Observable转换为发射那些数据发射时间间隔的Observable。 \n Timeout ：对原始Observable的一个镜像，如果过了一个指定的时长仍没有发射数据，它会发一个错误通知。 \n Timestamp ：给Observable发射的数据项附加一个指定的时间戳。 \n Using ：创建一个只在Observable生命周期内存在的一次性资源。 \n To ：将Observable转换为另一个对象或数据结构。 \n 1. Delay \n 延迟一段指定的时间再发射来自Observable的发射物。 \n \n Delay  操作符让原始 Observable 在发射每项数据之前都暂停一段指定的时间段。效果是Observable发射的数据项在时间上向前整体平移了一个增量。 \n 1.1 delay(long delay, TimeUnit unit) \n 延迟指定时间段后发射原始Observable发射的数据序列，如果发生异常的话，会立即发射通知给观察者。 \n \n 1.2 delay(Function<T, ObservableSource> itemDelay) \n 使用一个函数针对原始 Observable 的每一项数据返回一个 Observable ，它监视返回的这个 Observable ，当任何那样的 Observable 终止时，delay 返回的 Observable 就发射关联的那项数据。 \n \n 1.3 delay(ObservableSource subscriptionDelay, Function<T, ObservableSource> itemDelay) \n 延迟直到  subscriptionDelay  发射第一个数据项后开始订阅原始 Observable，然后再使用一个函数针对原始Observable的每一项数据返回一个Observable，它监视返回的这个Observable，当任何那样的 Observable 终止时，delay 返回的 Observable 就发射关联的那项数据。 \n \n 示例代码： \n      // 创建Observable \n     Observable < Integer >  observable  =   Observable . create ( new   ObservableOnSubscribe < Integer > ( )   { \n         @Override \n         public   void   subscribe ( ObservableEmitter < Integer >  emitter )   throws   Exception   { \n            emitter . onNext ( 1 ) ; \n            emitter . onNext ( 2 ) ; \n            emitter . onNext ( 3 ) ; \n         //  emitter.onError(new Exception("Test Error!")); \n            emitter . onNext ( 4 ) ; \n            emitter . onNext ( 5 ) ; \n            emitter . onComplete ( ) ; \n         } \n     } ) ; \n\n     /**\n     * 1. delay(long delay, TimeUnit unit,\n     *  Scheduler scheduler: 可选参数，指定工作线程\n     *  boolean delayError:    可选参数，延迟异常通知到最后\n     *  )\n     *  延迟指定时间段后发射原始Observable发射的数据序列，如果发生异常的话，会立即发射通知给观察者。\n     */ \n    observable . doOnNext ( new   Consumer < Integer > ( )   { \n         @Override \n         public   void   accept ( Integer  integer )   throws   Exception   { \n             System . out . println ( "--\x3e doOnNext(1): "   +  integer ) ; \n         } \n\n     } ) . delay ( 1 ,   TimeUnit . SECONDS ,   Schedulers . newThread ( ) ,   false )   // 在子线程中延迟1秒发射数据，不延迟异常通知 \n       . subscribe ( new   Observer < Integer > ( )   { \n             @Override \n             public   void   onSubscribe ( Disposable  d )   { \n                 System . out . println ( "--\x3e onSubscribe(1)" ) ; \n             } \n\n             @Override \n             public   void   onNext ( Integer  integer )   { \n                 System . out . println ( "--\x3e onNext(1): "   +  integer ) ; \n             } \n\n             @Override \n             public   void   onError ( Throwable  e )   { \n                 System . out . println ( "--\x3e onError(1): "   +  e ) ; \n             } \n\n             @Override \n             public   void   onComplete ( )   { \n                 System . out . println ( "--\x3e onCompleted(1)" ) ; \n             } \n       } ) ; \n\n     System . in . read ( ) ; \n     System . out . println ( "-----------------------------------------------------" ) ; \n     /**\n     *  2. delay(Function<T, ObservableSource<U>> itemDelay)\n     *   使用一个函数针对原始Observable的每一项数据返回一个Observable，它监视返回的这个Observable，\n     *   当任何那样的 Observable 终止时，delay 返回的 Observable 就发射关联的那项数据。\n     */ \n    observable . doOnNext ( new   Consumer < Integer > ( )   { \n         @Override \n         public   void   accept ( Integer  integer )   throws   Exception   { \n             System . out . println ( "--\x3e doOnNext(2): "   +  integer ) ; \n         } \n\n     } ) . delay ( new   Function < Integer ,   ObservableSource < Long > > ( )   { \n         @Override \n         public   ObservableSource < Long >   apply ( Integer  integer )   throws   Exception   { \n             System . out . println ( "--\x3e ObservableSource(2)： "   +  integer ) ; \n             Observable < Long >  timer  =   Observable . timer ( integer ,   TimeUnit . SECONDS ) ; \n             return  timer ; \n         } \n     } ) . subscribe ( new   Observer < Integer > ( )   { \n         @Override \n         public   void   onSubscribe ( Disposable  d )   { \n             System . out . println ( "--\x3e onSubscribe(2)" ) ; \n         } \n\n         @Override \n         public   void   onNext ( Integer  integer )   { \n             System . out . println ( "--\x3e onNext(2): "   +  integer ) ; \n         } \n\n         @Override \n         public   void   onError ( Throwable  e )   { \n             System . out . println ( "--\x3e onError(2): "   +  e ) ; \n         } \n\n         @Override \n         public   void   onComplete ( )   { \n             System . out . println ( "--\x3e onCompleted(2)" ) ; \n         } \n     } ) ; \n\n     System . in . read ( ) ; \n     System . out . println ( "-----------------------------------------------------" ) ; \n     /**\n     *  3. delay(ObservableSource subscriptionDelay, Function<T, ObservableSource> itemDelay)\n     *  延迟直到subscriptionDelay发射第一个数据项后开始订阅原始Observable\n     *  然后再使用一个函数针对原始Observable的每一项数据返回一个Observable，它监视返回的这个Observable，\n     *  当任何那样的 Observable 终止时，delay 返回的 Observable 就发射关联的那项数据。\n     */ \n    observable . doOnNext ( new   Consumer < Integer > ( )   { \n         @Override \n         public   void   accept ( Integer  integer )   throws   Exception   { \n             System . out . println ( "--\x3e doOnNext(3): "   +  integer ) ; \n         } \n        // 延迟3秒后开始订阅源Observable，然后对发射的每项数据进行function函数延迟 \n     } ) . delay ( Observable . timer ( 3 ,   TimeUnit . SECONDS ) ,   new   Function < Integer ,   ObservableSource < Long > > ( )   { \n         @Override \n         public   ObservableSource < Long >   apply ( Integer  integer )   throws   Exception   { \n             System . out . println ( "--\x3e apply(3): "   +  integer ) ; \n             return   Observable . timer ( integer ,   TimeUnit . SECONDS ) ; \n         } \n     } ) . subscribe ( new   Observer < Integer > ( )   { \n         @Override \n         public   void   onSubscribe ( Disposable  d )   { \n             System . out . println ( "--\x3e onSubscribe(3)" ) ; \n         } \n\n         @Override \n         public   void   onNext ( Integer  integer )   { \n             System . out . println ( "--\x3e onNext(3): "   +  integer ) ; \n         } \n\n         @Override \n         public   void   onError ( Throwable  e )   { \n             System . out . println ( "--\x3e onError(3): "   +  e ) ; \n         } \n\n         @Override \n         public   void   onComplete ( )   { \n             System . out . println ( "--\x3e onCompleted(3)" ) ; \n         } \n     } ) ; \n\n     System . in . read ( ) ; \n \n 输出： \n --\x3e onSubscribe(1)\n--\x3e doOnNext(1): 1\n--\x3e doOnNext(1): 2\n--\x3e doOnNext(1): 3\n--\x3e doOnNext(1): 4\n--\x3e doOnNext(1): 5\n--\x3e onNext(1): 1\n--\x3e onNext(1): 2\n--\x3e onNext(1): 3\n--\x3e onNext(1): 4\n--\x3e onNext(1): 5\n--\x3e onCompleted(1)\n-----------------------------------------------------\n--\x3e onSubscribe(2)\n--\x3e doOnNext(2): 1\n--\x3e ObservableSource(2)： 1\n--\x3e doOnNext(2): 2\n--\x3e ObservableSource(2)： 2\n--\x3e doOnNext(2): 3\n--\x3e ObservableSource(2)： 3\n--\x3e doOnNext(2): 4\n--\x3e ObservableSource(2)： 4\n--\x3e doOnNext(2): 5\n--\x3e ObservableSource(2)： 5\n--\x3e onNext(2): 1\n--\x3e onNext(2): 2\n--\x3e onNext(2): 3\n--\x3e onNext(2): 4\n--\x3e onNext(2): 5\n--\x3e onCompleted(2)\n-----------------------------------------------------\n--\x3e onSubscribe(3)\n--\x3e doOnNext(3): 1\n--\x3e apply(3): 1\n--\x3e doOnNext(3): 2\n--\x3e apply(3): 2\n--\x3e doOnNext(3): 3\n--\x3e apply(3): 3\n--\x3e doOnNext(3): 4\n--\x3e apply(3): 4\n--\x3e doOnNext(3): 5\n--\x3e apply(3): 5\n--\x3e onNext(3): 1\n--\x3e onNext(3): 2\n--\x3e onNext(3): 3\n--\x3e onNext(3): 4\n--\x3e onNext(3): 5\n--\x3e onCompleted(3)\n \n \n Javadoc: \t delay(long delay, TimeUnit unit, Scheduler scheduler, boolean delayError) \nJavadoc:  delay(Function<T, ObservableSource> itemDelay) \nJavadoc:  delay(ObservableSource subscriptionDelay, Function<T, ObservableSource> itemDelay) \n 2. Do \n 注册一个动作作为原始Observable生命周期事件的监听器。 \n \n 你可以注册指定的回调，当Observable的某个事件发生时，Rxjava 会在与 Observable 链关联的正常通知集合中调用它。 \n 在Rxjava中有许多相关Do的变体，分别进行不同场景的事件监听，一般有下面几种操作方法： \n \n doOnSubscribe(Consumer onSubscribe) ：一旦有观察者订阅了Observable，就会被调用。 \n doOnLifecycle(Consumer onSubscribe, Action onDispose) ： 在观察者订阅产生和解除时被调用。 \n doOnNext(Consumer onNext) ：在 Observable 每次发射数据前被调用。 \n doOnEach(Observer observer) :  在 Observable 调用观察者的所有通知前被调用。 \n doAfterNext(Consumer onAfterNext) ：在 Observable 调用OnNext通知(数据发射通知)之后被调用。 \n doOnError(Consumer onError) ：注册一个动作，当它的 Observable 由于异常终止调用 onError 时会被调用。 \n doOnTerminate(Action onTerminate) :  当Observable终止之前会被调用，无论是正常还是异常终止。 \n doAfterTerminate(Action onFinally) : 当Observable终止之后会被调用，无论是正常还是异常终止。 \n doOnComplete(Action onComplete) ：Observable正常终止调用 onCompleted 时会被调用。 \n doFinally(Action onFinally) ：Observable终止之后会被调用，无论是正常还是异常终止，但是优先于doAfterTerminate。 \n doOnDispose(Action onDispose) ：在观察者调用Disposable的dispose()方法时被调用。 \n \n 示例代码： \n      /**\n     *  1. doOnSubscribe(Consumer onSubscribe)\n     *  一旦有观察者订阅了Observable，就会被调用\n     */ \n     Observable . just ( 999 ) . doOnSubscribe ( new   Consumer < Disposable > ( )   { \n         @Override \n         public   void   accept ( Disposable  disposable )   throws   Exception   { \n             System . out . println ( "----\x3e doOnSubscribe" ) ; \n         } \n     } ) . subscribe ( new   Observer < Integer > ( )   { \n         @Override \n         public   void   onSubscribe ( Disposable  d )   { \n             System . out . println ( "--\x3e onSubscribe(1)" ) ; \n         } \n\n         @Override \n         public   void   onNext ( Integer  integer )   { \n             System . out . println ( "--\x3e onNext(1): "   +  integer ) ; \n         } \n\n         @Override \n         public   void   onError ( Throwable  e )   { \n             System . out . println ( "--\x3e onError(1): "   +  e ) ; \n         } \n\n         @Override \n         public   void   onComplete ( )   { \n             System . out . println ( "--\x3e onCompleted(1)" ) ; \n         } \n     } ) ; \n\n     System . out . println ( "--------------------------------------------" ) ; \n     /**\n     *  2. doOnLifecycle(Consumer onSubscribe, Action onDispose)\n     *  onSubscribe： 接受观察者订阅前的通知，可以在此通知中解除订阅\n     *  onDispose：   接受观察者调用解除订阅通知\n     *  在观察者订阅产生和解除时调用\n     */ \n     Observable . just ( 999 ) . doOnLifecycle ( new   Consumer < Disposable > ( )   { \n         @Override \n         public   void   accept ( Disposable  disposable )   throws   Exception   { \n             System . out . println ( "----\x3e doOnLifecycle onSubscribe(2)" ) ; \n             // disposable.dispose();  // 可以在观察者订阅前直接解除订阅 \n         } \n     } ,   new   Action ( )   { \n         @Override \n         public   void   run ( )   throws   Exception   { \n             System . out . println ( "----\x3e doOnLifecycle onDispose(2)" ) ; \n         } \n     } ) . subscribe ( new   Observer < Integer > ( )   { \n         private   Disposable  disposable ; \n\n         @Override \n         public   void   onSubscribe ( Disposable  d )   { \n            disposable  =  d ; \n             System . out . println ( "--\x3e onSubscribe(2)" ) ; \n         } \n\n         @Override \n         public   void   onNext ( Integer  integer )   { \n             System . out . println ( "--\x3e onNext(2): "   +  integer ) ; \n            disposable . dispose ( ) ;   // 手动解除订阅 \n         } \n\n         @Override \n         public   void   onError ( Throwable  e )   { \n             System . out . println ( "--\x3e onError(2): "   +  e ) ; \n         } \n\n         @Override \n         public   void   onComplete ( )   { \n             System . out . println ( "--\x3e onCompleted(2)" ) ; \n         } \n     } ) ; \n\n     System . out . println ( "--------------------------------------------" ) ; \n     /**\n     *  3. doOnNext(Consumer onNext)\n     *  在Observable每次发射数据前被调用\n     */ \n     Observable . just ( 999 ) . doOnNext ( new   Consumer < Integer > ( )   { \n         @Override \n         public   void   accept ( Integer  integer )   throws   Exception   { \n             System . out . println ( "----\x3e doOnNext(3): "   +  integer ) ; \n         } \n     } ) . subscribe ( new   Consumer < Integer > ( )   { \n         @Override \n         public   void   accept ( Integer  integer )   throws   Exception   { \n             System . out . println ( "--\x3e accept(3): "   +  integer ) ; \n         } \n     } ) ; \n\n     System . out . println ( "--------------------------------------------" ) ; \n     /**\n     *  4. doOnEach(Observer observer)\n     *  在Observable调用观察者的所有通知前被调用\n     */ \n     Observable . just ( 999 ) . doOnEach ( new   Observer < Integer > ( )   { \n         @Override \n         public   void   onSubscribe ( Disposable  d )   { \n             System . out . println ( "----\x3e doOnEach(4) onSubscribe" ) ; \n         } \n\n         @Override \n         public   void   onNext ( Integer  integer )   { \n             System . out . println ( "----\x3e doOnEach(4) onNext: "   +  integer ) ; \n         } \n\n         @Override \n         public   void   onError ( Throwable  e )   { \n             System . out . println ( "----\x3e doOnEach(4) onError: "   +  e ) ; \n         } \n\n         @Override \n         public   void   onComplete ( )   { \n             System . out . println ( "----\x3e doOnEach(4) onComplete" ) ; \n         } \n     } ) . subscribe ( new   Observer < Integer > ( )   { \n\n         @Override \n         public   void   onSubscribe ( Disposable  d )   { \n             System . out . println ( "--\x3e onSubscribe(4)" ) ; \n         } \n\n         @Override \n         public   void   onNext ( Integer  integer )   { \n             System . out . println ( "--\x3e onNext(4): "   +  integer ) ; \n         } \n\n         @Override \n         public   void   onError ( Throwable  e )   { \n             System . out . println ( "--\x3e onError(4): "   +  e ) ; \n         } \n\n         @Override \n         public   void   onComplete ( )   { \n             System . out . println ( "--\x3e onCompleted(4)" ) ; \n         } \n     } ) ; \n\n     System . out . println ( "--------------------------------------------" ) ; \n     /**\n     *  5. doAfterNext(Consumer onAfterNext)\n     *  在Observable调用OnNext通知(数据发射通知)之后被调用\n     */ \n     Observable . just ( 999 ) . doAfterNext ( new   Consumer < Integer > ( )   { \n         @Override \n         public   void   accept ( Integer  integer )   throws   Exception   { \n             System . out . println ( "----\x3e doAfterNext(5): "   +  integer ) ; \n         } \n     } ) . subscribe ( new   Consumer < Integer > ( )   { \n         @Override \n         public   void   accept ( Integer  integer )   throws   Exception   { \n             System . out . println ( "--\x3e onNext(5): "   +  integer ) ; \n         } \n     } ) ; \n\n     System . out . println ( "--------------------------------------------" ) ; \n     /**\n     *  6. doOnError(Consumer onError)\n     *  注册一个动作，当它的Observable由于异常终止调用 onError 时会被调用\n     */ \n     Observable . create ( new   ObservableOnSubscribe < Integer > ( )   { \n         @Override \n         public   void   subscribe ( ObservableEmitter < Integer >  emitter )   throws   Exception   { \n            emitter . onError ( new   Exception ( "Test Error!" ) ) ; \n         } \n     } ) . doOnError ( new   Consumer < Throwable > ( )   { \n         @Override \n         public   void   accept ( Throwable  throwable )   throws   Exception   { \n             System . out . println ( "----\x3e doOnError(6): "   +  throwable ) ; \n         } \n     } ) . subscribe ( new   Observer < Integer > ( )   { \n         @Override \n         public   void   onSubscribe ( Disposable  d )   { \n             System . out . println ( "--\x3e onSubscribe(6)" ) ; \n         } \n\n         @Override \n         public   void   onNext ( Integer  integer )   { \n             System . out . println ( "--\x3e onNext(6): "   +  integer ) ; \n         } \n\n         @Override \n         public   void   onError ( Throwable  e )   { \n             System . out . println ( "--\x3e onError(6): "   +  e ) ; \n         } \n\n         @Override \n         public   void   onComplete ( )   { \n             System . out . println ( "--\x3e onComplete(6)" ) ; \n         } \n     } ) ; \n\n     System . out . println ( "--------------------------------------------" ) ; \n     /**\n     *  7.\n     *  doOnTerminate(Action onTerminate):  当Observable终止之前会被调用，无论是正常还是异常终止\n     *  doAfterTerminate(Action onFinally): 当Observable终止之后会被调用，无论是正常还是异常终止\n     */ \n     Observable . just ( 999 ) . doOnTerminate ( new   Action ( )   { \n         @Override \n         public   void   run ( )   throws   Exception   { \n             System . out . println ( "----\x3e doOnTerminate(7)" ) ; \n         } \n     } ) . subscribe ( new   Consumer < Integer > ( )   { \n         @Override \n         public   void   accept ( Integer  integer )   throws   Exception   { \n             System . out . println ( "--\x3e accept(7): "   +  integer ) ; \n         } \n     } ) ; \n\n     System . out . println ( "--------------------------------------------" ) ; \n     /**\n     *  8. doOnComplete(Action onComplete)\n     *  Observable正常终止调用 onCompleted 时会被调用\n     */ \n     Observable . just ( 999 ) . doOnComplete ( new   Action ( )   { \n         @Override \n         public   void   run ( )   throws   Exception   { \n             System . out . println ( "----\x3e doOnComplete(8)" ) ; \n         } \n     } ) . subscribe ( new   Observer < Integer > ( )   { \n         @Override \n         public   void   onSubscribe ( Disposable  d )   { \n             System . out . println ( "--\x3e onSubscribe(8)" ) ; \n         } \n\n         @Override \n         public   void   onNext ( Integer  integer )   { \n             System . out . println ( "--\x3e onNext(8): "   +  integer ) ; \n         } \n\n         @Override \n         public   void   onError ( Throwable  e )   { \n             System . out . println ( "--\x3e onError(8): "   +  e ) ; \n         } \n\n         @Override \n         public   void   onComplete ( )   { \n             System . out . println ( "--\x3e onComplete(8)" ) ; \n         } \n     } ) ; \n\n     System . out . println ( "--------------------------------------------" ) ; \n     /**\n     *  9. doFinally(Action onFinally)\n     *  Observable终止之后会被调用，无论是正常还是异常终止，但是优先于doAfterTerminate\n     */ \n     Observable . just ( 999 ) . doFinally ( new   Action ( )   { \n         @Override \n         public   void   run ( )   throws   Exception   { \n             System . out . println ( "----\x3e doFinally(9)" ) ; \n         } \n     } ) . subscribe ( new   Observer < Integer > ( )   { \n         @Override \n         public   void   onSubscribe ( Disposable  d )   { \n             System . out . println ( "--\x3e onSubscribe(9)" ) ; \n         } \n\n         @Override \n         public   void   onNext ( Integer  integer )   { \n             System . out . println ( "--\x3e onNext(9): "   +  integer ) ; \n         } \n\n         @Override \n         public   void   onError ( Throwable  e )   { \n             System . out . println ( "--\x3e onError(9): "   +  e ) ; \n         } \n\n         @Override \n         public   void   onComplete ( )   { \n             System . out . println ( "--\x3e onComplete(9)" ) ; \n         } \n     } ) ; \n\t\n     System . out . println ( "--------------------------------------------" ) ; \n     /**\n     *  10. doOnDispose(Action onDispose)\n     *  在观察者调用Disposable的dispose()方法时被调用\n     */ \n     Observable . just ( 999 ) . doOnDispose ( new   Action ( )   { \n         @Override \n         public   void   run ( )   throws   Exception   { \n             System . out . println ( "----\x3e doOnDispose(10)" ) ; \n         } \n     } ) . subscribe ( new   Observer < Integer > ( )   { \n         @Override \n         public   void   onSubscribe ( Disposable  d )   { \n             System . out . println ( "--\x3e onSubscribe(10)" ) ; \n            d . dispose ( ) ; \n         } \n\n         @Override \n         public   void   onNext ( Integer  integer )   { \n             System . out . println ( "--\x3e onNext(10): "   +  integer ) ; \n         } \n\n         @Override \n         public   void   onError ( Throwable  e )   { \n             System . out . println ( "--\x3e onError(10): "   +  e ) ; \n         } \n\n         @Override \n         public   void   onComplete ( )   { \n             System . out . println ( "--\x3e onComplete(10)" ) ; \n         } \n     } ) ; \n \n 输出： \n ----\x3e doOnSubscribe\n--\x3e onSubscribe(1)\n--\x3e onNext(1): 999\n--\x3e onCompleted(1)\n--------------------------------------------\n----\x3e doOnLifecycle onSubscribe(2)\n--\x3e onSubscribe(2)\n--\x3e onNext(2): 999\n----\x3e doOnLifecycle onDispose(2)\n--------------------------------------------\n----\x3e doOnNext(3): 999\n--\x3e accept(3): 999\n--------------------------------------------\n--\x3e onSubscribe(4)\n----\x3e doOnEach(4) onNext: 999\n--\x3e onNext(4): 999\n----\x3e doOnEach(4) onComplete\n--\x3e onCompleted(4)\n--------------------------------------------\n--\x3e onNext(5): 999\n----\x3e doAfterNext(5): 999\n--------------------------------------------\n--\x3e onSubscribe(6)\n----\x3e doOnError(6): java.lang.Exception: Test Error!\n--\x3e onError(6): java.lang.Exception: Test Error!\n--------------------------------------------\n--\x3e accept(7): 999\n----\x3e doOnTerminate(7)\n--------------------------------------------\n--\x3e onSubscribe(8)\n--\x3e onNext(8): 999\n----\x3e doOnComplete(8)\n--\x3e onComplete(8)\n--------------------------------------------\n--\x3e onSubscribe(9)\n--\x3e onNext(9): 999\n--\x3e onComplete(9)\n----\x3e doFinally(9)\n--------------------------------------------\n--\x3e onSubscribe(10)\n----\x3e doOnDispose(10)\n \n \n Javadoc:  doOnSubscribe(Consumer onSubscribe) \nJavadoc:  doOnLifecycle(Consumer onSubscribe, Action onDispose) \nJavadoc:  doOnNext(Consumer onNext) \nJavadoc:  doOnEach(Observer observer) \nJavadoc:  doAfterNext(Consumer onAfterNext) \nJavadoc:  doOnError(Consumer onError) \nJavadoc:  doOnTerminate(Action onTerminate) \nJavadoc:  doAfterTerminate(Action onFinally) \nJavadoc:  doOnComplete(Action onComplete) \nJavadoc:  doFinally(Action onFinally) \nJavadoc:  doOnDispose(Action onDispose) \n 3. SubscribeOn \n 指定Observable自身在哪个调度器上执行。 \n \n 使用调度器  Scheduler  来管理多线程环境中Observable的转场。你可以使用  SubscribeOn  操作符指定Observable在一个特定的调度器上运转。 \n 示例代码： \n      // 查看当前线程id \n     System . out . println ( "----\x3e main: threadID = "   +   Thread . currentThread ( ) . getId ( ) ) ; \n\n     /**\n     *  subscribeOn(Scheduler scheduler)\n     *  指定Observable在指定的scheduler上调度\n     */ \n     Observable . create ( new   ObservableOnSubscribe < Integer > ( )   { \n         @Override \n         public   void   subscribe ( ObservableEmitter < Integer >  emitter )   throws   Exception   { \n        \t // 查看Observable的工作线程id \n             System . out . println ( "----\x3e SubscribeOn: threadID = "   +   Thread . currentThread ( ) . getId ( ) ) ; \n            emitter . onNext ( 999 ) ; \n            emitter . onComplete ( ) ; \n         } \n     } ) . subscribeOn ( Schedulers . newThread ( ) )    // 指定Observable的工作线程在子线程 \n             . subscribe ( new   Consumer < Integer > ( )   { \n                 @Override \n                 public   void   accept ( Integer  integer )   throws   Exception   { \n                     System . out . println ( "--\x3e accept: "   +  integer ) ; \n                 } \n             } ) ; \n\n     System . in . read ( ) ; \n \n 输出： \n ----\x3e main: threadID = 1\n----\x3e SubscribeOn: threadID = 13\n--\x3e accept: 999\n \n \n Javadoc:  subscribeOn(Scheduler scheduler) \n 4. ObserverOn \n 指定一个观察者在哪个调度器上观察这个Observable。 \n \n 使用调度器  Scheduler  来管理多线程环境中Observable的转场。你可以使用  ObserveOn  操作符指定Observable在一个特定的调度器上发送通知给观察者 (调用观察者的 onNext ,  onCompleted  ,  onError  方法)。 \n 示例代码： \n      // 查看当前线程id \n     System . out . println ( "----\x3e main: threadID = "   +   Thread . currentThread ( ) . getId ( ) ) ; \n\n     /**\n     *  observeOn(Scheduler scheduler,\n     *  boolean delayError,     // 可选参数是否延迟异常\n     *  int bufferSize          \t\t  // 指定缓存大小\n     *  )\n     * 指定观察者在指定的scheduler线程中调度\n     */ \n     Observable . just ( 999 ) . observeOn ( Schedulers . newThread ( ) ,   true ,   3 ) \n             . subscribe ( new   Consumer < Integer > ( )   { \n                 @Override \n                 public   void   accept ( Integer  integer )   throws   Exception   { \n                \t // 查看观察者的线程id \n                     System . out . println ( "--\x3e accept ThreadID: "   +   Thread . currentThread ( ) . getId ( ) ) ; \n                     System . out . println ( "--\x3e accept: "   +  integer ) ; \n                 } \n             } ) ; \n\n     System . in . read ( ) ; \n \n 输出： \n ----\x3e main: threadID = 1\n--\x3e accept ThreadID: 13\n--\x3e accept: 999\n \n \n Javadoc:  observeOn(Scheduler scheduler) \nJavadoc:   observeOn(Scheduler scheduler, boolean delayError) \nJavadoc:   observeOn(Scheduler scheduler, boolean delayError, int bufferSize) \n 5. Serialize \n 强制一个Observable连续调用并保证行为正确，其实就是同步事件操作。 \n \n 一个Observable可以异步调用它的观察者的方法，可能是从不同的线程调用。这可能会让Observable行为不正确，它可能会在某一个 onNext 调用之前尝试调用 onCompleted 或 onError 方法，或者从两个不同的线程同时调用 onNext 方法。使用  Serialize  操作符，你可以纠正这个Observable的行为，保证它的行为是正确的且是同步的。 \n 示例代码： \n      /**\n     *  serialize()\n     *  强制一个Observable连续调用(同步)并保证行为正确\n     */ \n     Observable . create ( new   ObservableOnSubscribe < Integer > ( )   { \n         @Override \n         public   void   subscribe ( ObservableEmitter < Integer >  emitter )   throws   Exception   { \n        \t // 多线程事件调用 \n             new   Thread ( new   Runnable ( )   { \n                 @Override \n                 public   void   run ( )   { \n                     for   ( int  i  =   0 ;  i  <   10 ;  i ++ )   { \n                        emitter . onNext ( i  +   1 ) ; \n                     } \n                    emitter . onComplete ( ) ; \n                 } \n             } ) . start ( ) ; \n\n\t\t\t // 多线程事件调用 \n             new   Thread ( new   Runnable ( )   { \n                 @Override \n                 public   void   run ( )   { \n                     for   ( int  i  =   100 ;  i  <   110 ;  i ++ )   { \n                        emitter . onNext ( i  +   1 ) ; \n                     } \n                    emitter . onComplete ( ) ; \n                 } \n             } ) . start ( ) ; \n         } \n     } ) . serialize ( )   // 序列化,合法性操作 \n       . subscribe ( new   Observer < Integer > ( )   { \n             @Override \n             public   void   onSubscribe ( Disposable  d )   { \n                 System . out . println ( "--\x3e onSubscribe" ) ; \n             } \n\n             @Override \n             public   void   onNext ( Integer  integer )   { \n                 System . out . println ( "--\x3e onNext: "   +  integer ) ; \n             } \n\n             @Override \n             public   void   onError ( Throwable  e )   { \n                 System . out . println ( "--\x3e onError: "   +  e ) ; \n             } \n\n             @Override \n             public   void   onComplete ( )   { \n                 System . out . println ( "--\x3e onComplete" ) ; \n             } \n       } ) ; \n\n     System . in . read ( ) ; \n \n 输出： \n ---------------------------------------------\n下面是没有使用Serialize()场景，发现不合法的调用\n--\x3e onSubscribe\n--\x3e onNext: 1\n--\x3e onNext: 2\n--\x3e onNext: 3\n--\x3e onNext: 4\n--\x3e onNext: 5\n--\x3e onNext: 6\n--\x3e onNext: 7\n--\x3e onNext: 8\n--\x3e onNext: 101\n--\x3e onNext: 102\n--\x3e onNext: 103\n--\x3e onNext: 104\n--\x3e onNext: 105\n--\x3e onNext: 9\n--\x3e onNext: 106\n--\x3e onNext: 10\n--\x3e onNext: 107\n--\x3e onComplete\n--\x3e onNext: 108\t\t// 不合法的调用\n----------------------------------------------\n下面是使用Serialize()场景，合法的事件调用\n--\x3e onSubscribe\n--\x3e onNext: 1\n--\x3e onNext: 2\n--\x3e onNext: 3\n--\x3e onNext: 4\n--\x3e onNext: 5\n--\x3e onNext: 6\n--\x3e onNext: 7\n--\x3e onNext: 8\n--\x3e onNext: 9\n--\x3e onNext: 101\n--\x3e onNext: 102\n--\x3e onNext: 103\n--\x3e onNext: 104\n--\x3e onNext: 105\n--\x3e onNext: 106\n--\x3e onNext: 107\n--\x3e onNext: 108\n--\x3e onNext: 109\n--\x3e onNext: 110\n--\x3e onComplete\n \n \n Javadoc:  serialize() \n 6. Materialize \n Materialize  将数据项和事件通知都当做数据项发射。 \n \n 一个合法的有限的Obversable将调用它的观察者的 onNext 方法零次或多次，然后调用观察者的 onCompleted 或 onError 正好一次。  Materialize  操作符将这一系列调用，包括原来的 onNext 通知和终止通知onCompleted 或 onError 都转换为一个Observable发射的数据序列。 \n 解析：  将来自原始Observable的通知转换为  Notification  对象，然后它返回的Observable会发射这些数据。 \n 示例代码： \n      /**\n     *  materialize()\n     *  将来自原始Observable的通知转换为Notification对象，然后它返回的Observable会发射这些数据。\n     */ \n     Observable . create ( new   ObservableOnSubscribe < Integer > ( )   { \n         @Override \n         public   void   subscribe ( ObservableEmitter < Integer >  emitter )   throws   Exception   { \n            emitter . onNext ( 1 ) ; \n            emitter . onNext ( 2 ) ; \n            emitter . onError ( new   Exception ( "Test Error!" ) ) ; \n            emitter . onComplete ( ) ; \n         } \n     } ) . materialize ( ) \n       . subscribe ( new   Observer < Notification < Integer > > ( )   { \n             @Override \n             public   void   onSubscribe ( Disposable  d )   { \n                 System . out . println ( "--\x3e onSubscribe" ) ; \n             } \n\n             @Override \n             public   void   onNext ( Notification < Integer >  integerNotification )   { \n                 System . out . println ( "--\x3e onNext: "   +  integerNotification ) ; \n             } \n\n             @Override \n             public   void   onError ( Throwable  e )   { \n                 System . out . println ( "--\x3e onError: "   +  e ) ; \n             } \n\n             @Override \n             public   void   onComplete ( )   { \n                 System . out . println ( "--\x3e onComplete" ) ; \n             } \n       } ) ; \n \n 输出： \n --\x3e onSubscribe\n--\x3e onNext: OnNextNotification[1]\n--\x3e onNext: OnNextNotification[2]\n--\x3e onNext: OnErrorNotification[java.lang.Exception: Test Error!]\n--\x3e onComplete\n \n \n Javadoc:  materialize() \n 7. Dematerialize \n Dematerialize  操作符是  Materialize  的逆向过程，它将 Materialize 转换的结果还原成它原本的形式。 \n \n 解析：   dematerialize  反转这个过程，将原始Observable发射的  Notification  对象还原成Observable的通知。 \n 示例代码： \n      /**\n     *  dematerialize()\n     *  过时的方法，在Rxjava：2.2.4中已经被dematerialize(Function<T, Notification<R>> selector)替代\n     *  将原始Observable发射的 Notification 对象还原成Observable的通知。\n     */ \n     Observable . create ( new   ObservableOnSubscribe < Integer > ( )   { \n         @Override \n         public   void   subscribe ( ObservableEmitter < Integer >  emitter )   throws   Exception   { \n            emitter . onNext ( 1 ) ; \n            emitter . onNext ( 2 ) ; \n            emitter . onError ( new   Exception ( "Test Error!" ) ) ; \n            emitter . onComplete ( ) ; \n         } \n     } ) . materialize ( ) \n       . dematerialize ( )    // 将Notification 对象还原成Observable的通知 \n       . subscribe ( new   Observer < Object > ( )   { \n             @Override \n             public   void   onSubscribe ( Disposable  d )   { \n                 System . out . println ( "--\x3e onSubscribe(1)" ) ; \n             } \n\n             @Override \n             public   void   onNext ( Object  o )   { \n                 System . out . println ( "--\x3e onNext(1): "   +  o ) ; \n             } \n\n             @Override \n             public   void   onError ( Throwable  e )   { \n                 System . out . println ( "--\x3e onError(1): "   +  e ) ; \n             } \n\n             @Override \n             public   void   onComplete ( )   { \n                 System . out . println ( "--\x3e onComplete(1)" ) ; \n             } \n       } ) ; \n\n     System . out . println ( "------------------------------------------------" ) ; \n     /**\n     *  dematerialize(Function<T, Notification<R>> selector)\n     *  将原始Observable发射的 Notification 对象经过一个selector函数处理后，发射一个新的Notification，\n     *  还原成Observable的通知。\n     */ \n     Observable . create ( new   ObservableOnSubscribe < Integer > ( )   { \n         @Override \n         public   void   subscribe ( ObservableEmitter < Integer >  emitter )   throws   Exception   { \n            emitter . onNext ( 1 ) ; \n            emitter . onNext ( 2 ) ; \n            emitter . onError ( new   Exception ( "Test Error!" ) ) ; \n            emitter . onComplete ( ) ; \n         } \n     } ) . materialize ( ) \n       . dematerialize ( new   Function < Notification < Integer > ,   Notification < Integer > > ( )   { \n                 @Override \n                 public   Notification < Integer >   apply ( Notification < Integer >  integerNotification )   throws   Exception   { \n                     System . out . println ( "--\x3e apply(2): "   +  integerNotification ) ; \n                     return  integerNotification ; \n                 } \n       } ) . subscribe ( new   Observer < Integer > ( )   { \n             @Override \n             public   void   onSubscribe ( Disposable  d )   { \n                 System . out . println ( "--\x3e onSubscribe(2)" ) ; \n             } \n\n             @Override \n             public   void   onNext ( Integer  integer )   { \n                 System . out . println ( "--\x3e onNext(2): "   +  integer ) ; \n             } \n\n             @Override \n             public   void   onError ( Throwable  e )   { \n                 System . out . println ( "--\x3e onError(2): "   +  e ) ; \n             } \n\n             @Override \n             public   void   onComplete ( )   { \n                 System . out . println ( "--\x3e onComplete(2)" ) ; \n             } \n     } ) ; \n \n 输出： \n --\x3e onSubscribe(1)\n--\x3e onNext(1): 1\n--\x3e onNext(1): 2\n--\x3e onError(1): java.lang.Exception: Test Error!\n------------------------------------------------\n--\x3e onSubscribe(2)\n--\x3e apply(2): OnNextNotification[1]\n--\x3e onNext(2): 1\n--\x3e apply(2): OnNextNotification[2]\n--\x3e onNext(2): 2\n--\x3e apply(2): OnErrorNotification[java.lang.Exception: Test Error!]\n--\x3e onError(2): java.lang.Exception: Test Error!\n \n \n Javadoc:   dematerialize() \nJavadoc:  dematerialize(Function <T,Notification<R>>  selector) \n 8. TimeInterval \n 将一个发射数据的Observable转换为发射那些数据发射时间间隔的Observable。 \n \n TimeInterval  操作符拦截原始Observable发射的数据项，替换为发射表示 相邻发射物时间间隔 的对象。 \n 这个操作符将原始 Observable 转换为另一个 Observable ，后者发射一个标志替换前者的数据项，这个标志表示前者的两个 连续发射物之间流逝的时间长度 。新的Observable的第一个发射物表示的是在观察者订阅原始 Observable 到原始 Observable 发射它的第一项数据之间流逝的时间长度。不存在与原始 Observable 发射最后一项数据和发射 onCompleted 通知之间时长对应的发射物。 \n 示例代码： \n      /**\n     * 1. timeInterval(Scheduler scheduler)\n     *  scheduler: 可选参数，指定调度线程\n     *  接收原始数据项，发射射表示相邻发射物时间间隔的对象\n     */ \n     Observable . intervalRange ( 1 ,   10 ,   100 ,   100 ,   TimeUnit . MILLISECONDS ) \n             . timeInterval ( ) \n          // .timeInterval(Schedulers.newThread())       // 指定工作线程 \n             . subscribe ( new   Observer < Timed < Long > > ( )   { \n                 @Override \n                 public   void   onSubscribe ( Disposable  d )   { \n                     System . out . println ( "--\x3e onSubscribe(1)" ) ; \n                 } \n\n                 @Override \n                 public   void   onNext ( Timed < Long >  longTimed )   { \n                     long  time  =  longTimed . time ( ) ;             // 连续数据间的间隔时间 \n                     TimeUnit  unit  =  longTimed . unit ( ) ;         // 连续数据间的时间间隔单位 \n                     Long  value  =  longTimed . value ( ) ;           // Observable发送的数据项 \n                     System . out . println ( "--\x3e onNext(1): "   +  longTimed . toString ( ) ) ; \n                 } \n\n                 @Override \n                 public   void   onError ( Throwable  e )   { \n                     System . out . println ( "--\x3e onError(1): "   +  e ) ; \n                 } \n\n                 @Override \n                 public   void   onComplete ( )   { \n                     System . out . println ( "--\x3e onComplete(1)" ) ; \n                 } \n             } ) ; \n\n     System . in . read ( ) ; \n     System . out . println ( "-------------------------------------------------" ) ; \n     /**\n     *  2. timeInterval(TimeUnit unit, Scheduler scheduler)\n     *  指定时间间隔单位和指定工作线程，接收原始数据项，发射射表示相邻发射物时间间隔的对象\n     */ \n     Observable . intervalRange ( 1 ,   10 ,   1000 ,   1200 ,   TimeUnit . MILLISECONDS ) \n         //  .timeInterval(TimeUnit.SECONDS)                             // 指定时间间隔单位 \n             . timeInterval ( TimeUnit . SECONDS ,   Schedulers . newThread ( ) )       // 指定时间间隔单位和指定工作线程 \n             . subscribe ( new   Observer < Timed < Long > > ( )   { \n                 @Override \n                 public   void   onSubscribe ( Disposable  d )   { \n                     System . out . println ( "--\x3e onSubscribe(2)" ) ; \n                 } \n\n                 @Override \n                 public   void   onNext ( Timed < Long >  longTimed )   { \n                     System . out . println ( "--\x3e onNext(2): "   +  longTimed . toString ( ) ) ; \n                 } \n\n                 @Override \n                 public   void   onError ( Throwable  e )   { \n                     System . out . println ( "--\x3e onError(2): "   +  e ) ; \n                 } \n\n                 @Override \n                 public   void   onComplete ( )   { \n                     System . out . println ( "--\x3e onComplete(2)" ) ; \n                 } \n             } ) ; \n\n     System . in . read ( ) ; \n \n 输出： \n --\x3e onSubscribe(1)\n--\x3e onNext(1): Timed[time=104, unit=MILLISECONDS, value=1]\n--\x3e onNext(1): Timed[time=100, unit=MILLISECONDS, value=2]\n--\x3e onNext(1): Timed[time=100, unit=MILLISECONDS, value=3]\n--\x3e onNext(1): Timed[time=100, unit=MILLISECONDS, value=4]\n--\x3e onNext(1): Timed[time=100, unit=MILLISECONDS, value=5]\n--\x3e onNext(1): Timed[time=100, unit=MILLISECONDS, value=6]\n--\x3e onNext(1): Timed[time=100, unit=MILLISECONDS, value=7]\n--\x3e onNext(1): Timed[time=100, unit=MILLISECONDS, value=8]\n--\x3e onNext(1): Timed[time=100, unit=MILLISECONDS, value=9]\n--\x3e onNext(1): Timed[time=100, unit=MILLISECONDS, value=10]\n--\x3e onComplete(1)\n-------------------------------------------------\n--\x3e onSubscribe(2)\n--\x3e onNext(2): Timed[time=1, unit=SECONDS, value=1]\n--\x3e onNext(2): Timed[time=1, unit=SECONDS, value=2]\n--\x3e onNext(2): Timed[time=1, unit=SECONDS, value=3]\n--\x3e onNext(2): Timed[time=1, unit=SECONDS, value=4]\n--\x3e onNext(2): Timed[time=1, unit=SECONDS, value=5]\n--\x3e onNext(2): Timed[time=2, unit=SECONDS, value=6]\n--\x3e onNext(2): Timed[time=1, unit=SECONDS, value=7]\n--\x3e onNext(2): Timed[time=1, unit=SECONDS, value=8]\n--\x3e onNext(2): Timed[time=1, unit=SECONDS, value=9]\n--\x3e onNext(2): Timed[time=1, unit=SECONDS, value=10]\n--\x3e onComplete(2)\n \n \n Javadoc:   timeInterval() \nJavadoc:   timeInterval(Scheduler scheduler) \nJavadoc:   timeInterval(TimeUnit unit) \nJavadoc:   timeInterval(TimeUnit unit, Scheduler scheduler) \n 9. Timeout \n 对原始Observable的一个镜像，如果过了一个指定的时长仍没有发射数据，它会发一个错误通知。 \n RxJava中的实现为  timeout  操作符，具有多个不同的变体。 \n 9.1 timeout(timeout, timeUnit) \n 如果原始 Observable 过了指定的一段时长没有发射任何数据， Timeout 操作符会以一个  onError  通知终止这个Observable。 \n \n 示例代码： \n      /**\n     *  1. timeout(long timeout, TimeUnit timeUnit)\n     *  接受一个时长参数，如果在指定的时间段内没有数据项发射，将会发射一个Error通知，\n     *  或者每当原始Observable发射了一项数据， timeout 就启动一个计时器，\n     *  如果计时器超过了指定指定的时长而原始Observable没有发射另一项数据， \n     *  就抛出 TimeoutException ，以一个错误通知终止Observable。\n     */ \n     Observable . create ( new   ObservableOnSubscribe < Long > ( )   { \n         @Override \n         public   void   subscribe ( ObservableEmitter < Long >  emitter )   throws   Exception   { \n             //  Thread.sleep(2000);     // 延迟2秒后发射数据，此时会有TimeoutException \n            emitter . onNext ( 1L ) ; \n             Thread . sleep ( 2000 ) ;       // 延迟2秒后发射数据，此时会有TimeoutException \n            emitter . onNext ( 2L ) ; \n            emitter . onComplete ( ) ; \n         } \n     } ) . timeout ( 1 ,   TimeUnit . SECONDS )       // 指定超时时间段为1秒 \n       . subscribe ( new   Observer < Long > ( )   { \n             @Override \n             public   void   onSubscribe ( Disposable  d )   { \n                 System . out . println ( "--\x3e onSubscribe(1)" ) ; \n             } \n\n             @Override \n             public   void   onNext ( Long  aLong )   { \n                 System . out . println ( "--\x3e onNext(1): "   +  aLong ) ; \n             } \n\n             @Override \n             public   void   onError ( Throwable  e )   { \n                 System . out . println ( "--\x3e onError(1): "   +  e ) ; \n             } \n\n             @Override \n             public   void   onComplete ( )   { \n                 System . out . println ( "--\x3e onComplete(1)" ) ; \n             } \n       } ) ; \n\n     System . in . read ( ) ; \n \n 输出： \n --\x3e onSubscribe(1)\n--\x3e onNext(1): 1\n--\x3e onError(1): java.util.concurrent.TimeoutException: The source did not signal an event for 1 seconds and has been terminated.\n \n \n Javadoc:  timeout(long timeout, TimeUnit timeUnit) \n 9.2 timeout(timeout, timeUnit, scheduler, other) \n 在指定时间段后超时时会切换到使用一个你指定的备用的 Observable，而不是发 onError 通知，可以通过 scheduler  来指定工作线程。 \n \n 示例代码： \n      /**\n     *  2. timeout(long timeout, TimeUnit timeUnit,\n     *  Scheduler scheduler,        // 可选参数，指定线程调度器\n     *  ObservableSource other      // 可选参数，超时备用Observable\n     *  )\n     *\n     *  在指定时间段后超时时会切换到使用一个你指定的备用的Observable，而不是发onError通知。\n     */ \n     Observable . create ( new   ObservableOnSubscribe < Long > ( )   { \n         @Override \n         public   void   subscribe ( ObservableEmitter < Long >  emitter )   throws   Exception   { \n             //  Thread.sleep(2000);     // 延迟2秒后发射数据，此时会有TimeoutException \n            emitter . onNext ( 1L ) ; \n             Thread . sleep ( 2000 ) ;      \t // 延迟2秒后发射数据，此时会有TimeoutException \n            emitter . onNext ( 2L ) ; \n            emitter . onComplete ( ) ; \n         } \n     } ) . timeout ( 1 ,   TimeUnit . SECONDS ,      \t\t // 指定超时时间段为1秒 \n             Schedulers . newThread ( ) ,               // 指定工作线程为子线程 \n             Observable . just ( 888L ) )                // 超时后默认发射的Observable \n             . subscribe ( new   Observer < Long > ( )   { \n                 @Override \n                 public   void   onSubscribe ( Disposable  d )   { \n                     System . out . println ( "--\x3e onSubscribe(2)" ) ; \n                 } \n\n                 @Override \n                 public   void   onNext ( Long  aLong )   { \n                     System . out . println ( "--\x3e onNext(2): "   +  aLong ) ; \n                 } \n\n                 @Override \n                 public   void   onError ( Throwable  e )   { \n                     System . out . println ( "--\x3e onError(2): "   +  e ) ; \n                 } \n\n                 @Override \n                 public   void   onComplete ( )   { \n                     System . out . println ( "--\x3e onComplete(2)" ) ; \n                 } \n             } ) ; \n    \n     System . in . read ( ) ; \n \n 输出： \n --\x3e onSubscribe(2)\n--\x3e onNext(2): 1\n--\x3e onNext(2): 888\n--\x3e onComplete(2)\n \n \n Javadoc:  timeout(long timeout, TimeUnit timeUnit, Scheduler scheduler, ObservableSource other) \n 9.3 timeout(Function itemTimeoutIndicator, ObservableSource other) \n 使用一个函数  itemTimeoutIndicator  针对原始 Observable 的每一项返回一个 Observable，如果当这个 Observable 终止时原始 Observable 还没有发射另一项数据，就会认为是超时了，如果没有指定超时备用的  other ，就抛出  TimeoutException ，以一个错误通知终止 bservable，否则超时后发射备用的 Observable。 \n \n 示例代码： \n      /**\n     *  3. timeout(Function<T, ObservableSource> itemTimeoutIndicator\n     *  ObservableSource other      // 可选参数，当超时后发射的备用Observable\n     *  )\n     *  对原始Observable的每一项返回一个Observable，\n     *  如果当这个Observable终止时原始Observable还没有发射另一项数据，就会认为是超时了，\n     *  如果没有指定超时备用的Observable，就抛出TimeoutException，以一个错误通知终止Observable，\n     *  否则超时后发射备用的Observable。\n     */ \n     Observable . create ( new   ObservableOnSubscribe < Long > ( )   { \n         @Override \n         public   void   subscribe ( ObservableEmitter < Long >  emitter )   throws   Exception   { \n            emitter . onNext ( 1L ) ; \n             Thread . sleep ( 3000 ) ;       // 延迟3秒后发射数据，此时会有TimeoutException \n            emitter . onNext ( 2L ) ; \n            emitter . onComplete ( ) ; \n         } \n     } ) . timeout ( new   Function < Long ,   ObservableSource < Long > > ( )   { \n         @Override \n         public   ObservableSource < Long >   apply ( Long  aLong )   throws   Exception   { \n             // 为每一个原始数据发射一个Observable来指示下一个数据发射的Timeout，这里指定1秒超时时间 \n             return   Observable . timer ( 1 ,   TimeUnit . SECONDS ) ; \n         } \n     } ,   Observable . just ( 888L ) )    // 超时后默认发射的Observable \n             . subscribe ( new   Observer < Long > ( )   { \n                 @Override \n                 public   void   onSubscribe ( Disposable  d )   { \n                     System . out . println ( "--\x3e onSubscribe(3)" ) ; \n                 } \n\n                 @Override \n                 public   void   onNext ( Long  aLong )   { \n                     System . out . println ( "--\x3e onNext(3): "   +  aLong ) ; \n                 } \n\n                 @Override \n                 public   void   onError ( Throwable  e )   { \n                     System . out . println ( "--\x3e onError(3): "   +  e ) ; \n                 } \n\n                 @Override \n                 public   void   onComplete ( )   { \n                     System . out . println ( "--\x3e onComplete(3)" ) ; \n                 } \n             } ) ; \n\n     System . in . read ( ) ; \n \n 输出： \n --\x3e onSubscribe(3)\n--\x3e onNext(3): 1\n--\x3e onNext(3): 888\n--\x3e onComplete(3)\n \n \n Javadoc:  timeout(Function<T, ObservableSource> itemTimeoutIndicator) \nJavadoc:  timeout(Function<T, ObservableSource> itemTimeoutIndicator, ObservableSource other) \n 10. Timestamp \n 给Observable发射的数据项附加一个指定的时间戳。 \n \n timestamp  ，它将一个发射 Timed 类型数据的Observable转换为一个发射类型为  Timestamped<Timed>  的数据的Observable，每一项都包含数据的原始发射时间信息和原始数据。 \n 示例代码： \n      /**\n     *  1. timestamp(Scheduler scheduler)\n     *  scheduler: 可选参数，指定线程调度器\n     *\n     *  给Observable发射的数据项附加一个时间戳信息\n     */ \n     Observable . intervalRange ( 1 ,   5 ,   1 ,   100 ,   TimeUnit . MILLISECONDS ) \n             . timestamp ( Schedulers . newThread ( ) )        // 指定在子线程调度处理 \n             . subscribe ( new   Observer < Timed < Long > > ( )   { \n                 @Override \n                 public   void   onSubscribe ( Disposable  d )   { \n                     System . out . println ( "--\x3e onSubscribe(1)" ) ; \n                 } \n\n                 @Override \n                 public   void   onNext ( Timed < Long >  longTimed )   { \n                     long  time  =  longTimed . time ( ) ;             // 连续数据间的间隔时间 \n                     TimeUnit  unit  =  longTimed . unit ( ) ;         // 连续数据间的时间间隔单位 \n                     Long  value  =  longTimed . value ( ) ;           // Observable发送的数据项 \n                     System . out . println ( "--\x3e onNext(1): "   +  longTimed ) ; \n                 } \n\n                 @Override \n                 public   void   onError ( Throwable  e )   { \n                     System . out . println ( "--\x3e onError(1): "   +  e ) ; \n                 } \n\n                 @Override \n                 public   void   onComplete ( )   { \n                     System . out . println ( "--\x3e onComplete(1)" ) ; \n                 } \n             } ) ; \n\n     System . in . read ( ) ; \n     System . out . println ( "-------------------------------------------" ) ; \n     /**\n     *  2. timestamp(TimeUnit unit, Scheduler scheduler)\n     *  scheduler: 可选参数，指定线程调度器\n     *\n     *  给Observable发射的数据项附加一个指定单位的时间戳信息\n     */ \n     Observable . intervalRange ( 1 ,   5 ,   1 ,   1200 ,   TimeUnit . MILLISECONDS ) \n             . timestamp ( TimeUnit . SECONDS ,   Schedulers . newThread ( ) )      // 指定时间单位为秒，在子线程调度处理 \n             . subscribe ( new   Observer < Timed < Long > > ( )   { \n                 @Override \n                 public   void   onSubscribe ( Disposable  d )   { \n                     System . out . println ( "--\x3e onSubscribe(2)" ) ; \n                 } \n\n                 @Override \n                 public   void   onNext ( Timed < Long >  longTimed )   { \n                     System . out . println ( "--\x3e onNext(2): "   +  longTimed ) ; \n                 } \n\n                 @Override \n                 public   void   onError ( Throwable  e )   { \n                     System . out . println ( "--\x3e onError(2): "   +  e ) ; \n                 } \n\n                 @Override \n                 public   void   onComplete ( )   { \n                     System . out . println ( "--\x3e onComplete(2)" ) ; \n                 } \n             } ) ; \n\n     System . in . read ( ) ; \n \n 输出： \n --\x3e onSubscribe(1)\n--\x3e onNext(1): Timed[time=1577455367446, unit=MILLISECONDS, value=1]\n--\x3e onNext(1): Timed[time=1577455367545, unit=MILLISECONDS, value=2]\n--\x3e onNext(1): Timed[time=1577455367645, unit=MILLISECONDS, value=3]\n--\x3e onNext(1): Timed[time=1577455367745, unit=MILLISECONDS, value=4]\n--\x3e onNext(1): Timed[time=1577455367845, unit=MILLISECONDS, value=5]\n--\x3e onComplete(1)\n-------------------------------------------\n--\x3e onSubscribe(2)\n--\x3e onNext(2): Timed[time=1577455369, unit=SECONDS, value=1]\n--\x3e onNext(2): Timed[time=1577455370, unit=SECONDS, value=2]\n--\x3e onNext(2): Timed[time=1577455371, unit=SECONDS, value=3]\n--\x3e onNext(2): Timed[time=1577455373, unit=SECONDS, value=4]\n--\x3e onNext(2): Timed[time=1577455374, unit=SECONDS, value=5]\n--\x3e onComplete(2)\n \n \n Javadoc:  timestamp() \nJavadoc:  timestamp(Scheduler scheduler) \nJavadoc:  timestamp(TimeUnit unit) \nJavadoc:  timestamp(TimeUnit unit, Scheduler scheduler) \n 11. Using \n 创建一个只在Observable生命周期内存在的一次性资源。 \n Using  操作符让你可以指示Observable创建一个只在它的生命周期内存在的资源，当Observable终止时这个资源会被自动释放。 \n \n using 操作符接受三个参数： \n \n observableFactory ：一个用户创建一次性资源的工厂函数 \n resourceFactory ：一个用于创建Observable的工厂函数 \n disposeFunction ：一个用于释放资源的函数 \n \n 当一个观察者订阅 using 返回的Observable时， using 将会使用Observable工厂函数创建观察者要观察的Observable，同时使用资源工厂函数创建一个你想要创建的资源。当观察者取消订阅这个Observable时，或者当观察者终止时（无论是正常终止还是因错误而终止）， using 使用第三个函数释放它创建的资源。 \n 示例代码： \n      /**\n     * 用于在Observable的生命周期内存在的资源对象\n     */ \n     class   MyResource   { \n         private   String  resource ; \n\n         public   MyResource ( String  resource )   { \n             this . resource  =  resource ; \n         } \n\n         @Override \n         public   String   toString ( )   { \n             return   "MyResource{"   + \n                     "resource=\'"   +  resource  +   \'\\\'\'   + \n                     \'}\' ; \n         } \n\n         public   void   releaseResource ( )   { \n             System . out . println ( "----\x3e MyResource resource is release. " ) ; \n            resource  =   null ; \n         } \n     } \n    \n     /**\n     *  1. using(Callable resourceSupplier, Function sourceSupplier, Consumer disposer, boolean eager)\n     *\n     *  resourceSupplier:   // 一个用户创建一次性资源的工厂函数\n     *  sourceSupplier:     // 一个用于创建Observable的工厂函数\n     *  disposer:           // 一个用于释放资源的函数\n     *  eager:              // 可选参数，如果为true的话，则第三个函数disposer的处理在Observable的结束前执行\n     *\n     *  当一个观察者订阅 using 返回的Observable时， using 将会使用Observable工厂函数创建观察者要观察的Observable，\n     *  同时使用资源工厂函数创建一个你想要创建的资源。\n     *  当观察者取消订阅这个Observable时，或者当观察者终止时（无论是正常终止还是因错误而终止）， \n     *  using 使用第三个函数释放它创建的资源。\n     */ \n     Observable . using ( \n             // 一个用户创建一次性资源的工厂函数 \n             new   Callable < MyResource > ( )   { \n                 @Override \n                 public   MyResource   call ( )   throws   Exception   { \n                     System . out . println ( "----\x3e resourceSupplier call" ) ; \n                     return   new   MyResource ( "This is Observable resource!" ) ; \n                 } \n             } , \n             // 一个用于创建Observable的工厂函数，这个函数返回的Observable就是最终被观察的Observable \n             new   Function < MyResource ,   ObservableSource < Long > > ( )   { \n                 @Override \n                 public   ObservableSource < Long >   apply ( MyResource  myResource )   throws   Exception   { \n                     System . out . println ( "----\x3e sourceSupplier apply: "   +  myResource ) ; \n                     return   Observable . rangeLong ( 1 ,   5 ) ; \n                 } \n             } , \n             // 一个用于释放资源的函数 \n             new   Consumer < MyResource > ( )   { \n                 @Override \n                 public   void   accept ( MyResource  myResource )   throws   Exception   { \n                     System . out . println ( "----\x3e disposer accept: " ) ; \n                    myResource . releaseResource ( ) ; \n                 } \n             } , \n             // 可选参数，如果为true的话，则在Observable的结束前执行释放资源的函数 \n             true ) . subscribe ( new   Observer < Long > ( )   { \n                 @Override \n                 public   void   onSubscribe ( Disposable  d )   { \n                     System . out . println ( "--\x3e onSubscribe" ) ; \n                 } \n\n                 @Override \n                 public   void   onNext ( Long  aLong )   { \n                     System . out . println ( "--\x3e onNext: "   +  aLong ) ; \n                 } \n\n                 @Override \n                 public   void   onError ( Throwable  e )   { \n                     System . out . println ( "--\x3e onError: "   +  e ) ; \n                 } \n\n                 @Override \n                 public   void   onComplete ( )   { \n                     System . out . println ( "--\x3e onComplete" ) ; \n                 } \n             } ) ; \n \n 输出： \n ----\x3e resourceSupplier call(1)\n----\x3e sourceSupplier apply(1): MyResource{resource=\'This is Observable resource!\'}\n--\x3e onSubscribe(1)\n--\x3e onNext(1): 1\n--\x3e onNext(1): 2\n--\x3e onNext(1): 3\n--\x3e onNext(1): 4\n--\x3e onNext(1): 5\n----\x3e disposer accept(1): \n----\x3e MyResource resource is release. \n--\x3e onComplete\n \n \n Javadoc:  using(Callable resourceSupplier, Function sourceSupplier, Consumer disposer) \nJavadoc:  using(Callable resourceSupplier, Function sourceSupplier, Consumer disposer, boolean eager) \n 12. To \n 将Observable转换为另一个对象或数据结构。 \n \n 将 Observable 或者Observable 发射的数据序列转换为另一个对象或数据结构。它们中的一些会阻塞直到 Observable 终止，然后生成一个等价的对象或数据结构；另一些返回一个发射那个对象或数据结构的 Observable。 \n 由于 rxjava 的  To  操作符中有很多  toXXX  操作符的实现和不同的变体重载，此处就不详细的展开了，有兴趣的可以查看官方的 API 文档  详细参阅。 \n 下面几个是常见的几种 To 操作符的： \n \n toList() ：让Observable将多项数据组合成一个List，然后调用一次onNext方法传递整个列表。 \n toMap(Function keySelector,Function valueSelector) ：toMap收集原始Observable发射的所有数据项到一个Map（默认是HashMap）然后发射这个Map。 你可以提供一个用于生成Map的Key的函数，还可以提供一个函数转换数据项到Map存储的值（默认数据项本身就是值）。 \n toSortedList() ： 它会对产生的列表排序，默认是自然升序，如果发射的数据项没有实现Comparable接口，会抛出一个异常，你也可以传递一个函数作为用于比较两个数据项。 \n toMultimap(Function keySelector, Function valueSelector) ：类似于toMap，不同的是，它生成的这个Map的value类型还是一个ArrayList。 \n \n 示例代码： \n          /**\n         *  1. toList()\n         *  让Observable将多项数据组合成一个List，然后调用一次onNext方法传递整个列表。\n         */ \n        range . toList ( ) \n                 . subscribe ( new   Consumer < List < Integer > > ( )   { \n                     @Override \n                     public   void   accept ( List < Integer >  integers )   throws   Exception   { \n                         System . out . println ( "--\x3e toList accept(1): "   +  integers ) ; \n                     } \n                 } ) ; \n\n         System . out . println ( "------------------------------------------" ) ; \n         /**\n         *  2. toMap(Function<? super T, ? extends K> keySelector,Function<? super T, ? extends V> valueSelector)\n         *   toMap收集原始Observable发射的所有数据项到一个Map（默认是HashMap）然后发射这个Map。\n         *   你可以提供一个用于生成Map的Key的函数，还可以提供一个函数转换数据项到Map存储的值（默认数据项本身就是值）。\n         */ \n        range . toMap ( new   Function < Integer ,   String > ( )   { \n             @Override \n             public   String   apply ( Integer  integer )   throws   Exception   { \n                 return   "key"   +  integer ;       // 返回一个Map的key \n             } \n         } ,   new   Function < Integer ,   Integer > ( )   { \n             @Override \n             public   Integer   apply ( Integer  integer )   throws   Exception   { \n                 return  integer ;              \t\t // 返回一个Map的value \n             } \n         } ) . subscribe ( new   SingleObserver < Map < String ,   Integer > > ( )   { \n             @Override \n             public   void   onSubscribe ( Disposable  d )   { \n                 System . out . println ( "--\x3e onSubscribe(2)" ) ; \n             } \n\n             @Override \n             public   void   onSuccess ( Map < String ,   Integer >  stringIntegerMap )   { \n                 System . out . println ( "--\x3e onSuccess(2): "   +  stringIntegerMap ) ; \n             } \n\n             @Override \n             public   void   onError ( Throwable  e )   { \n                 System . out . println ( "--\x3e onError(2): "   +  e ) ; \n             } \n         } ) ; \n\n         System . out . println ( "------------------------------------------" ) ; \n         /**\n         *  3. toSortedList()\n         *  它会对产生的列表排序，默认是自然升序，如果发射的数据项没有实现Comparable接口，会抛出一个异常。\n         *  然而，你也可以传递一个函数作为用于比较两个数据项\n         */ \n         Observable . just ( 5 ,   3 ,   8 ,   6 ,   9 ,   10 ) \n                 . toSortedList ( ) \n                 . subscribe ( new   SingleObserver < List < Integer > > ( )   { \n                     @Override \n                     public   void   onSubscribe ( Disposable  d )   { \n                         System . out . println ( "--\x3e onSubscribe(3)" ) ; \n                     } \n\n                     @Override \n                     public   void   onSuccess ( List < Integer >  integers )   { \n                         System . out . println ( "--\x3e onSuccess(3): "   +  integers ) ; \n                     } \n\n                     @Override \n                     public   void   onError ( Throwable  e )   { \n                         System . out . println ( "--\x3e onError(3): "   +  e ) ; \n                     } \n                 } ) ; \n\n         System . out . println ( "------------------------------------------" ) ; \n         /**\n         *  4. toSortedList(Comparator comparator)\n         *\n         *  传递一个函数comparator作为用于比较两个数据项，它会对产生的列表排序\n         */ \n         Observable . just ( 5 ,   3 ,   8 ,   6 ,   9 ,   10 ) \n                 . toSortedList ( new   Comparator < Integer > ( )   { \n                     @Override \n                     public   int   compare ( Integer  o1 ,   Integer  o2 )   { \n                         System . out . println ( "--\x3e compare: o1 = "   +  o1  +   ", o2 = "   +  o2 ) ; \n                         return  o1  -  o2 ;       // 比较器的排序逻辑 \n                     } \n                 } ) . subscribe ( new   SingleObserver < List < Integer > > ( )   { \n                     @Override \n                     public   void   onSubscribe ( Disposable  d )   { \n                         System . out . println ( "--\x3e onSubscribe(4)" ) ; \n                     } \n\n                     @Override \n                     public   void   onSuccess ( List < Integer >  integers )   { \n                         System . out . println ( "--\x3e onSuccess(4): "   +  integers ) ; \n                     } \n\n                     @Override \n                     public   void   onError ( Throwable  e )   { \n                         System . out . println ( "--\x3e onError(4): "   +  e ) ; \n                     } \n                 } ) ; \n\n         System . out . println ( "------------------------------------------" ) ; \n         /**\n         *  5. toMultimap(Function<T, K> keySelector, Function<T, V> valueSelector)\n         *  类似于 toMap ，不同的是，它生成的这个Map的value类型还是一个ArrayList\n         */ \n        range . toMultimap ( new   Function < Integer ,   String > ( )   { \n             @Override \n             public   String   apply ( Integer  integer )   throws   Exception   { \n                 return   "key"   +  integer ;       // 返回一个Map的key \n             } \n         } ,   new   Function < Integer ,   Integer > ( )   { \n             @Override \n             public   Integer   apply ( Integer  integer )   throws   Exception   { \n                 return  integer ;             \t\t  // 返回一个Map的value \n             } \n         } ) . subscribe ( new   SingleObserver < Map < String ,   Collection < Integer > > > ( )   { \n             @Override \n             public   void   onSubscribe ( Disposable  d )   { \n                 System . out . println ( "--\x3e onSubscribe(5)" ) ; \n             } \n\n             @Override \n             public   void   onSuccess ( Map < String ,   Collection < Integer > >  stringCollectionMap )   { \n                 System . out . println ( "--\x3e onSuccess(5): "   +  stringCollectionMap ) ; \n             } \n\n             @Override \n             public   void   onError ( Throwable  e )   { \n                 System . out . println ( "--\x3e onError(5): "   +  e ) ; \n             } \n         } ) ; \n \n 输出： \n --\x3e toList accept(1): [1, 2, 3, 4, 5]\n------------------------------------------\n--\x3e onSubscribe(2)\n--\x3e onSuccess(2): {key1=1, key2=2, key5=5, key3=3, key4=4}\n------------------------------------------\n--\x3e onSubscribe(3)\n--\x3e onSuccess(3): [3, 5, 6, 8, 9, 10]\n------------------------------------------\n--\x3e onSubscribe(4)\n--\x3e compare: o1 = 3, o2 = 5\n--\x3e compare: o1 = 8, o2 = 3\n--\x3e compare: o1 = 8, o2 = 5\n--\x3e compare: o1 = 6, o2 = 5\n--\x3e compare: o1 = 6, o2 = 8\n--\x3e compare: o1 = 9, o2 = 6\n--\x3e compare: o1 = 9, o2 = 8\n--\x3e compare: o1 = 10, o2 = 6\n--\x3e compare: o1 = 10, o2 = 9\n--\x3e onSuccess(4): [3, 5, 6, 8, 9, 10]\n------------------------------------------\n--\x3e onSubscribe(5)\n--\x3e onSuccess(5): {key1=[1], key2=[2], key5=[5], key3=[3], key4=[4]}\n \n \n Javadoc:  toList() \nJavadoc:  toMap(Function keySelector,Function valueSelector) \nJavadoc:  toSortedList() \nJavadoc:  toMultimap(Function keySelector, Function valueSelector) \n 小结 \n 本节主要是介绍了  Rxjava  中的各种辅助操作符，比如延迟、超时，事件监听等相关的辅助类型的操作，这在开发中是很有用处的。 \n \n 提示 ：以上使用的Rxjava2版本:  2.2.12 \n \n 实例代码： \n \n \n 代码下载 \n Github \n Gitee（码云） \n \n \n'},{title:"11. Observable的条件操作符",frontmatter:{author:"JiangMing",title:"11. Observable的条件操作符",date:"2019-12-30 22:36:56",sidebar:"auto",categories:["Java","Rxjava2"],tags:["Rxjava2"],publish:!0,showSponsor:!0},regularPath:"/developer/rxjava2/11.rxjava2.html",relativePath:"developer/rxjava2/11.rxjava2.md",key:"v-76ae860a",path:"/developer/rxjava2/11.rxjava2.html",headers:[{level:2,title:"简要：",slug:"简要"},{level:2,title:"1. Amb",slug:"_1-amb"},{level:2,title:"2. DefaultIfEmpty",slug:"_2-defaultifempty"},{level:2,title:"3. SwitchIfEmpty",slug:"_3-switchifempty"},{level:2,title:"4. SkipUntil",slug:"_4-skipuntil"},{level:2,title:"5. SkipWhile",slug:"_5-skipwhile"},{level:2,title:"6. TakeUntil",slug:"_6-takeuntil"},{level:3,title:"6.1 takeUntil(ObservableSource other)",slug:"_6-1-takeuntil-observablesource-other"},{level:3,title:"6.2 takeUntil(Predicate stopPredicate)",slug:"_6-2-takeuntil-predicate-stoppredicate"},{level:2,title:"7. TakeWhile",slug:"_7-takewhile"},{level:2,title:"小结",slug:"小结"}],content:' 简要： \n 需求了解： \n 在使用 Rxjava 开发中，经常有一些各种条件的操作 ，如比较两个 Observable 谁先发射了数据、跳过指定条件的 Observable 等一系列的条件操作需求，那么很幸运， Rxjava 中已经有了很多条件操作符，一起来了解一下吧。 \n 下面列出了一些 Rxjava 的用于条件操作符： \n \n Amb ：给定两个或多个Observables，它只发射首先发射数据或通知的那个Observable的所有数据。 \n DefaultIfEmpty ：发射来自原始Observable的值，如果原始 Observable 没有发射任何数据项，就发射一个默认值。 \n SwitchIfEmpty ：如果原始Observable没有发射数据时，发射切换一个指定的Observable继续发射数据。 \n SkipUntil ：丢弃原始 Observable 发射的数据，直到第二个 Observable 发射了一个数据，然后发射原始 Observable 的剩余数据。 \n SkipWhile ：丢弃原始 Observable 发射的数据，直到一个特定的条件为假，然后发射原始 Observable 剩余的数据。 \n TakeUntil ：发射来自原始 Observable 的数据，直到第二个 Observable 发射了一个数据或一个通知。 \n 1. Amb \n 给定两个或多个Observables，它只发射首先发射数据或通知的那个Observable的所有数据。 \n \n 解析：  对多个Observable进行监听，首先发射通知（包括数据）的Observable将会被观察者观察，发射这个Observable的所有数据。 \n 示例代码： \n      // 创建Observable \n    Observable < Integer >  delayObservable  =   Observable . range ( 1 ,   5 ) \n                                            \t\t\t\t\t\t\t\t\t\t . delay ( 100 ,   TimeUnit . MILLISECONDS ) ;   // 延迟100毫秒发射数据 \n     Observable < Integer >  rangeObservable  =   Observable . range ( 6 ,   5 ) ; \n\n     // 创建Observable的集合 \n     ArrayList < Observable < Integer > >  list  =   new   ArrayList < > ( ) ; \n    list . add ( delayObservable ) ; \n    list . add ( rangeObservable ) ; \n\n     // 创建Observable的数组 \n     Observable < Integer > [ ]  array  =   new   Observable [ 2 ] ; \n    array [ 0 ]   =  delayObservable ; \n    array [ 1 ]   =  rangeObservable ; \n\n     /**\n     *  1. ambWith(ObservableSource<? extends T> other)\n     *  与另外一个Observable比较，只发射首先发射通知的Observable的数据\n     */ \n    rangeObservable . ambWith ( delayObservable ) \n             . subscribe ( new   Consumer < Integer > ( )   { \n                 @Override \n                 public   void   accept ( Integer  integer )   throws   Exception   { \n                     System . out . println ( "--\x3e accept(1): "   +  integer ) ; \n                 } \n             } ) ; \n\n     System . in . read ( ) ; \n     System . out . println ( "------------------------------------------------" ) ; \n     /**\n     *  2. amb(Iterable<? extends ObservableSource<? extends T>> sources)\n     *  接受一个Observable类型的集合， 只发射集合中首先发射通知的Observable的数据\n     */ \n     Observable . amb ( list ) \n             . subscribe ( new   Consumer < Integer > ( )   { \n                 @Override \n                 public   void   accept ( Integer  integer )   throws   Exception   { \n                     System . out . println ( "--\x3e accept(2): "   +  integer ) ; \n                 } \n             } ) ; \n\n     System . in . read ( ) ; \n     System . out . println ( "------------------------------------------------" ) ; \n     /**\n     *  3. ambArray(ObservableSource<? extends T>... sources)\n     *  接受一个Observable类型的数组， 只发射数组中首先发射通知的Observable的数据\n     */ \n     Observable . ambArray ( array ) \n             . subscribe ( new   Consumer < Integer > ( )   { \n                 @Override \n                 public   void   accept ( Integer  integer )   throws   Exception   { \n                     System . out . println ( "--\x3e accept(3): "   +  integer ) ; \n                 } \n             } ) ; \n\n     System . in . read ( ) ; \n \n 输出： \n --\x3e accept(1): 6\n--\x3e accept(1): 7\n--\x3e accept(1): 8\n--\x3e accept(1): 9\n--\x3e accept(1): 10\n------------------------------------------------\n--\x3e accept(2): 6\n--\x3e accept(2): 7\n--\x3e accept(2): 8\n--\x3e accept(2): 9\n--\x3e accept(2): 10\n------------------------------------------------\n--\x3e accept(3): 6\n--\x3e accept(3): 7\n--\x3e accept(3): 8\n--\x3e accept(3): 9\n--\x3e accept(3): 10\n \n \n Javadoc:  ambWith(ObservableSource other) \nJavadoc:  amb(Iterable sources) \nJavadoc:  ambArray(ObservableSource... sources) \n 2. DefaultIfEmpty \n 发射来自原始Observable的值，如果原始 Observable 没有发射数据项，就发射一个默认值。\n \n 解析：   DefaultIfEmpty  简单的精确地发射原始Observable的值，如果原始Observable没有发射任何数据正常终止（以 onCompleted 的形式），  DefaultIfEmpty  返回的Observable就发射一个你提供的默认值。如果你需要发射更多的数据，或者切换备用的Observable，你可以考虑使用  switchIfEmpty  操作符 。 \n 示例代码： \n      /**\n     *   defaultIfEmpty(@NotNull T defaultItem)\n     *  如果原始Observable没有发射任何数据正常终止（以 onCompleted 的形式），\n     *  DefaultIfEmpty 返回的Observable就发射一个你提供的默认值defaultItem。\n     */ \n     Observable . create ( new   ObservableOnSubscribe < String > ( )   { \n         @Override \n         public   void   subscribe ( ObservableEmitter < String >  emitter )   throws   Exception   { \n            emitter . onComplete ( ) ;     // 不发射任何数据，直接发射完成通知 \n         } \n     } ) . defaultIfEmpty ( "No Data emitter!!!" ) \n             . subscribe ( new   Observer < String > ( )   { \n                 @Override \n                 public   void   onSubscribe ( Disposable  d )   { \n                     System . out . println ( "--\x3e onSubscribe" ) ; \n                 } \n\n                 @Override \n                 public   void   onNext ( String  s )   { \n                     System . out . println ( "--\x3e onNext: "   +  s ) ; \n                 } \n\n                 @Override \n                 public   void   onError ( Throwable  e )   { \n                     System . out . println ( "--\x3e onError: "   +  e ) ; \n                 } \n\n                 @Override \n                 public   void   onComplete ( )   { \n                     System . out . println ( "--\x3e onComplete" ) ; \n                 } \n             } ) ; \n \n 输出： \n --\x3e onSubscribe\n--\x3e onNext: No Data emitter!!!\n--\x3e onComplete\n \n \n Javadoc:  defaultIfEmpty(T defaultItem) \n 3. SwitchIfEmpty \n 如果原始Observable没有发射数据时，发射切换一个指定的Observable继续发射数据。 \n \n 解析：  如果原始 Observable 没有发射数据时，发射切换指定的  other  继续发射数据。 \n 示例代码： \n      /**\n     *  switchIfEmpty(ObservableSource other)\n     *  如果原始Observable没有发射数据时，发射切换指定的other继续发射数据\n     */ \n     Observable . create ( new   ObservableOnSubscribe < Integer > ( )   { \n         @Override \n         public   void   subscribe ( ObservableEmitter < Integer >  emitter )   throws   Exception   { \n            emitter . onComplete ( ) ;             // 不发射任何数据，直接发射完成通知 \n         } \n     } ) . switchIfEmpty ( Observable . just ( 888 ) )    // 如果原始Observable没有发射数据项，默认发射备用的Observable，发射数据项888 \n             . subscribe ( new   Observer < Integer > ( )   { \n                 @Override \n                 public   void   onSubscribe ( Disposable  d )   { \n                     System . out . println ( "--\x3e onSubscribe" ) ; \n                 } \n\n                 @Override \n                 public   void   onNext ( Integer  integer )   { \n                     System . out . println ( "--\x3e onNext: "   +  integer ) ; \n                 } \n\n                 @Override \n                 public   void   onError ( Throwable  e )   { \n                     System . out . println ( "--\x3e onError: "   +  e ) ; \n                 } \n\n                 @Override \n                 public   void   onComplete ( )   { \n                     System . out . println ( "--\x3e onComplete" ) ; \n                 } \n             } ) ; \n \n 输出： \n --\x3e onSubscribe\n--\x3e onNext: 888\n--\x3e onComplete\n \n \n Javadoc:  switchIfEmpty(ObservableSource other) \n 4. SkipUntil \n 丢弃原始 Observable 发射的数据，直到第二个 Observable 发射了一个数据，然后发射原始 Observable 的剩余数据。 \n \n 示例代码： \n      /**\n     *  skipUntil(ObservableSource other)\n     *  丢弃原始Observable发射的数据，直到other发射了一个数据，然后发射原始Observable的剩余数据。\n     */ \n     Observable . intervalRange ( 1 ,   10 ,   0 ,   500 ,   TimeUnit . MILLISECONDS ) \n             // 丢弃2000毫秒的原始Observable发射的数据，接受后面的剩余部分数据 \n             . skipUntil ( Observable . timer ( 2000 ,   TimeUnit . MILLISECONDS ) ) \n             . subscribe ( new   Observer < Long > ( )   { \n                 @Override \n                 public   void   onSubscribe ( Disposable  d )   { \n                     System . out . println ( "--\x3e onSubscribe" ) ; \n                 } \n\n                 @Override \n                 public   void   onNext ( Long  aLong )   { \n                     System . out . println ( "--\x3e onNext: "   +  aLong ) ; \n                 } \n\n                 @Override \n                 public   void   onError ( Throwable  e )   { \n                     System . out . println ( "--\x3e onError: "   +  e ) ; \n                 } \n\n                 @Override \n                 public   void   onComplete ( )   { \n                     System . out . println ( "--\x3e onComplete" ) ; \n                 } \n             } ) ; \n\n     System . in . read ( ) ; \n \n 输出： \n --\x3e onSubscribe\n--\x3e onNext: 5\n--\x3e onNext: 6\n--\x3e onNext: 7\n--\x3e onNext: 8\n--\x3e onNext: 9\n--\x3e onNext: 10\n--\x3e onComplete\n \n \n Javadoc:  skipUntil(ObservableSource other) \n 5. SkipWhile \n 丢弃原始 Observable 发射的数据，直到一个特定的条件为假，然后发射原始 Observable 剩余的数据。 \n \n 示例代码： \n          /**\n         *  skipWhile(Predicate<? super T> predicate)\n         *  丢弃原始 Observable 发射的数据，直到函数predicate的条件为假，然后发射原始Observable剩余的数据。\n         */ \n         Observable . intervalRange ( 1 ,   10 ,   0 ,   500 ,   TimeUnit . MILLISECONDS ) \n                 . skipWhile ( new   Predicate < Long > ( )   { \n                     @Override \n                     public   boolean   test ( Long  aLong )   throws   Exception   { \n                         if   ( aLong  >   5 )   { \n                             return   false ;         // 当原始数据大于5时，发射后面的剩余部分数据 \n                         } \n                         return   true ;              // 丢弃原始数据项 \n                     } \n                 } ) . subscribe ( new   Observer < Long > ( )   { \n                     @Override \n                     public   void   onSubscribe ( Disposable  d )   { \n                         System . out . println ( "--\x3e onSubscribe" ) ; \n                     } \n\n                     @Override \n                     public   void   onNext ( Long  aLong )   { \n                         System . out . println ( "--\x3e onNext: "   +  aLong ) ; \n                     } \n\n                     @Override \n                     public   void   onError ( Throwable  e )   { \n                         System . out . println ( "--\x3e onError: "   +  e ) ; \n                     } \n\n                     @Override \n                     public   void   onComplete ( )   { \n                         System . out . println ( "--\x3e onComplete" ) ; \n                     } \n                 } ) ; \n\n         System . in . read ( ) ; \n \n 输出： \n --\x3e onSubscribe\n--\x3e onNext: 6\n--\x3e onNext: 7\n--\x3e onNext: 8\n--\x3e onNext: 9\n--\x3e onNext: 10\n--\x3e onComplete\n \n \n Javadoc:  skipWhile(Predicate predicate) \n 6. TakeUntil \n 发射来自原始 Observable 的数据，直到第二个 Observable 发射了一个数据或一个通知。 \n 6.1 takeUntil(ObservableSource other) \n TakeUntil  订阅并开始发射原始 Observable，它还监视你提供的第二个 Observable。如果第二个 Observable 发射了一项数据或者发射了一个终止通知， TakeUntil  返回的 Observable 会停止发射原始 Observable 并终止。 \n \n 解析：  第二个Observable发射一项数据或一个  onError  通知或一个  onCompleted  通知都会导致  takeUntil  停止发射数据。 \n 示例代码： \n      // 创建Observable，发送数字1~10，每间隔200毫秒发射一个数据 \n     Observable < Long >  observable  =   Observable . intervalRange ( 1 ,   10 ,   0 ,   200 ,   TimeUnit . MILLISECONDS ) ; \n\n     /**\n     *  1. takeUntil(ObservableSource other)\n     *  发射来自原始Observable的数据，直到other发射了一个数据或一个通知后停止发射原始Observable并终止。\n     */ \n    observable . takeUntil ( Observable . timer ( 1000 ,   TimeUnit . MILLISECONDS ) )   // 1000毫秒后停止发射原始数据 \n             . subscribe ( new   Observer < Long > ( )   { \n                 @Override \n                 public   void   onSubscribe ( Disposable  d )   { \n                     System . out . println ( "--\x3e onSubscribe(1)" ) ; \n                 } \n\n                 @Override \n                 public   void   onNext ( Long  aLong )   { \n                     System . out . println ( "--\x3e onNext(1): "   +  aLong ) ; \n                 } \n\n                 @Override \n                 public   void   onError ( Throwable  e )   { \n                     System . out . println ( "--\x3e onError(1): "   +  e ) ; \n                 } \n\n                 @Override \n                 public   void   onComplete ( )   { \n                     System . out . println ( "--\x3e onComplete(1)" ) ; \n                 } \n             } ) ; \n\n     System . in . read ( ) ; \n \n 输出： \n --\x3e onSubscribe(1)\n--\x3e onNext(1): 1\n--\x3e onNext(1): 2\n--\x3e onNext(1): 3\n--\x3e onNext(1): 4\n--\x3e onNext(1): 5\n--\x3e onComplete(1)\n \n \n Javadoc:  takeUntil(ObservableSource other) \n 6.2 takeUntil(Predicate stopPredicate) \n 每次发射数据后，通过一个谓词函数来判定是否需要终止发射数据。 \n \n 解析：  每次发射数据后，通过一个谓词函数  stopPredicate  来判定是否需要终止发射数据，如果  stopPredicate  返回  true  怎表示停止发射原始Observable后面的数据，否则继续发射后面的数据。 \n 示例代码： \n      /**\n     *  2. takeUntil(Predicate<? super T> stopPredicate)\n     *  每次发射数据后，通过一个谓词函数stopPredicate来判定是否需要终止发射数据\n     *  如果stopPredicate返回true怎表示停止发射后面的数据，否则继续发射后面的数据\n     */ \n    observable . takeUntil ( new   Predicate < Long > ( )   { \n         @Override \n         public   boolean   test ( Long  aLong )   throws   Exception   {    // 函数返回false则为继续发射原始数据，true则停止发射原始数据 \n             if ( aLong  >   5 ) { \n                 return   true ;        // 满足条件后，停止发射数据 \n             } \n             return   false ;           // 继续发射数据 \n         } \n     } ) . subscribe ( new   Observer < Long > ( )   { \n         @Override \n         public   void   onSubscribe ( Disposable  d )   { \n             System . out . println ( "--\x3e onSubscribe(2)" ) ; \n         } \n\n         @Override \n         public   void   onNext ( Long  aLong )   { \n             System . out . println ( "--\x3e onNext(2): "   +  aLong ) ; \n         } \n\n         @Override \n         public   void   onError ( Throwable  e )   { \n             System . out . println ( "--\x3e onError(2): "   +  e ) ; \n         } \n\n         @Override \n         public   void   onComplete ( )   { \n             System . out . println ( "--\x3e onComplete(2)" ) ; \n         } \n     } ) ; \n\n     System . in . read ( ) ; \n \n 输出： \n --\x3e onSubscribe(2)\n--\x3e onNext(2): 1\n--\x3e onNext(2): 2\n--\x3e onNext(2): 3\n--\x3e onNext(2): 4\n--\x3e onNext(2): 5\n--\x3e onNext(2): 6\n--\x3e onComplete(2)\n \n \n Javadoc:  takeUntil(Predicate stopPredicate) \n 7. TakeWhile \n 发射原始Observable的数据，直到一个特定的条件，然后跳过剩余的数据。 \n \n 解析：  发射原始 Observable 的数据，直到  predicate  的条件为  false  ，然后跳过剩余的数据。 \n 示例代码： \n          // 创建Observable，发送数字1～10，每间隔200毫秒发射一个数据 \n         Observable < Long >  observable  =   Observable . intervalRange ( 1 ,   10 ,   0 ,   200 ,   TimeUnit . MILLISECONDS ) ; \n\n         /**\n         *  takeWhile(Predicate predicate)\n         *  发射原始Observable的数据，直到predicate的条件为false，然后跳过剩余的数据\n         */ \n        observable . takeWhile ( new   Predicate < Long > ( )   { \n             @Override \n             public   boolean   test ( Long  aLong )   throws   Exception   {    // 函数返回值决定是否继续发射后续的数据 \n                 if ( aLong  >   5 ) { \n                     return   false ;          // 满足条件后跳过后面的数据 \n                 } \n                 return   true ;               // 继续发射数据 \n             } \n         } ) . subscribe ( new   Observer < Long > ( )   { \n             @Override \n             public   void   onSubscribe ( Disposable  d )   { \n                 System . out . println ( "--\x3e onSubscribe" ) ; \n             } \n\n             @Override \n             public   void   onNext ( Long  aLong )   { \n                 System . out . println ( "--\x3e onNext: "   +  aLong ) ; \n             } \n\n             @Override \n             public   void   onError ( Throwable  e )   { \n                 System . out . println ( "--\x3e onError: "   +  e ) ; \n             } \n\n             @Override \n             public   void   onComplete ( )   { \n                 System . out . println ( "--\x3e onComplete" ) ; \n             } \n         } ) ; \n\n         System . in . read ( ) ; \n \n 输出： \n --\x3e onSubscribe(1)\n--\x3e onNext(1): 1\n--\x3e onNext(1): 2\n--\x3e onNext(1): 3\n--\x3e onNext(1): 4\n--\x3e onNext(1): 5\n--\x3e onComplete(1)\n \n \n Javadoc:  takeWhile(Predicate predicate) \n 小结 \n 本节主要介绍了 Rxjava 条件操作符可以根据不同的条件进行数据的发射，变换等相关行为。 \n \n 提示 ：以上使用的Rxjava2版本:  2.2.12 \n \n 实例代码： \n \n \n 代码下载 \n Github \n Gitee（码云） \n \n \n'},{title:"12. Observable的布尔操作符",frontmatter:{author:"JiangMing",title:"12. Observable的布尔操作符",date:"2019-12-30 22:37:56",sidebar:"auto",categories:["Java","Rxjava2"],tags:["Rxjava2"],publish:!0,showSponsor:!0},regularPath:"/developer/rxjava2/12.rxjava2.html",relativePath:"developer/rxjava2/12.rxjava2.md",key:"v-5ffe1439",path:"/developer/rxjava2/12.rxjava2.html",headers:[{level:2,title:"简要：",slug:"简要"},{level:2,title:"1. All",slug:"_1-all"},{level:2,title:"2. Contains",slug:"_2-contains"},{level:2,title:"3. IsEmpty",slug:"_3-isempty"},{level:2,title:"4. SequenceEqual",slug:"_4-sequenceequal"},{level:2,title:"小结",slug:"小结"}],content:' 简要： \n 需求了解： \n 在 Rxjava 的众多操作符中，有数据变换、过滤等，但是有的时候是不是有一些 判断的操作 呢？比如判断一个 Observable 的所有数据是否满足一个指定的条件，判断某个 Observable 是否会发射一个指定的值等等的判断操作，答案是肯定的，Rxjava 中提供了一系列的 布尔条件判断操作符 。 \n Rxjava 中的布尔操作符主要包括： \n \n All ：判断是否所有的数据项都满足某个条件。 \n Contains ：判断 Observable 是否会发射一个指定的值。 \n IsEmpty ：判断原始Observable是否未发射任何数据。 \n SequenceEqual ：判断两个 Observables 发射的序列是否相等。 \n 1. All \n 判断是否所有的数据项都满足某个条件。 \n \n 解析：  传递一个谓词函数（ predicate ）给  All  操作符，这个函数接受原始 Observable 发射的数据，根据计算返回一个布尔值。 All 返回一个只发射一个单个布尔值的 Observable，如果原始 Observable 正常终止并且 每一项数据都满足条件 ，就返回  true ；如果原始 Observable 的 任何一项数据不满足条件 就返回  false 。 \n 示例代码： \n          /**\n         *  all(Predicate predicate)\n         *  通过传入的谓语函数predicate进行判断所有数据项是否满足条件，然后返回一个判断结果发射给观察者\n         */ \n         Observable . just ( 1 ,   2 ,   3 ,   4 ,   5 ) \n                 . all ( new   Predicate < Integer > ( )   { \n                     @Override \n                     public   boolean   test ( Integer  integer )   throws   Exception   { \n                         return  integer  >   5 ;   // 判断原始数据项中的所有数据项是否大于5 \n                     } \n                 } ) \n                 . subscribe ( new   SingleObserver < Boolean > ( )   { \n                     @Override \n                     public   void   onSubscribe ( Disposable  d )   { \n                         System . out . println ( "--\x3e onSubscribe" ) ; \n                     } \n\n                     @Override \n                     public   void   onSuccess ( Boolean  aBoolean )   { \n                         System . out . println ( "--\x3e onSuccess: "   +  aBoolean ) ; \n                     } \n\n                     @Override \n                     public   void   onError ( Throwable  e )   { \n                         System . out . println ( "--\x3e onError: "   +  e ) ; \n                     } \n                 } ) ; \n \n 输出： \n --\x3e onSubscribe\n--\x3e onSuccess: false\n \n \n Javadoc:  all(Predicate predicate) \n 2. Contains \n 判断 Observable 是否会发射一个指定的值。 \n \n 解析：  给  Contains  传一个指定的值，如果原始 Observable 发射了那个值，它返回的 Observable 将发射  true  ，否则发射  false 。 \n 示例代码： \n      /**\n     *  contains(Object element)\n     *  判断原始Observable是否发射了指定的element数据\n     */ \n     Observable . just ( 1 ,   2 ,   3 ,   4 ,   5 ) \n             . contains ( 5 )      // 判断原始数据项中是否有数据项5 \n             . subscribe ( new   SingleObserver < Boolean > ( )   { \n                 @Override \n                 public   void   onSubscribe ( Disposable  d )   { \n                     System . out . println ( "--\x3e onSubscribe" ) ; \n                 } \n\n                 @Override \n                 public   void   onSuccess ( Boolean  aBoolean )   { \n                     System . out . println ( "--\x3e onSuccess: "   +  aBoolean ) ; \n                 } \n\n                 @Override \n                 public   void   onError ( Throwable  e )   { \n                     System . out . println ( "--\x3e onError: "   +  e ) ; \n                 } \n             } ) ; \n \n 输出： \n --\x3e onSubscribe\n--\x3e onSuccess: true\n \n \n Javadoc:  contains(Object element) \n 3. IsEmpty \n 判断原始Observable是否未发射任何数据。 \n \n 解析：  判断原始 Observable 是否发射了数据项，如果原始 Observable 发射了数据，将发射  false ，否则发射  true 。 \n 示例代码： \n      /**\n     *  isEmpty()\n     *  判断原始Observable是否发射了数据项，如果原始Observable发射了数据，将发射false，否则发射true。\n     */ \n     Observable . create ( new   ObservableOnSubscribe < Integer > ( )   { \n         @Override \n         public   void   subscribe ( ObservableEmitter < Integer >  emitter )   throws   Exception   { \n            emitter . onComplete ( ) ;         // 不发射任何数据，直接发射完成通知 \n         } \n     } ) . isEmpty ( ) \n       . subscribe ( new   SingleObserver < Boolean > ( )   { \n           @Override \n           public   void   onSubscribe ( Disposable  d )   { \n               System . out . println ( "--\x3e onSubscribe" ) ; \n           } \n\n           @Override \n           public   void   onSuccess ( Boolean  aBoolean )   { \n               System . out . println ( "--\x3e onSuccess: "   +  aBoolean ) ; \n           } \n\n           @Override \n           public   void   onError ( Throwable  e )   { \n               System . out . println ( "--\x3e onError: "   +  e ) ; \n           } \n       } ) ; \n \n 输出： \n --\x3e onSubscribe\n--\x3e onSuccess: true\n \n \n Javadoc:  isEmpty() \n 4. SequenceEqual \n 判断两个 Observables 发射的序列是否相等。 \n \n 解析：  传递两个 Observable 给  SequenceEqual  操作符，它会比较两个 Observable 的发射物，如果两个序列是相同的（相同的数据，相同的顺序，相同的终止状态），它就发射  true ，否则发射  false 。还可以可以传递一个函数用于比较两个数据项是否相同或者设置一个缓存大小指定第一个和第二个源  ObservableSource  预取的项数。 \n 示例代码： \n      // 创建Observable \n     Observable < Integer >  observable1  =   Observable . range ( 1 ,   10 ) ; \n     Observable < Integer >  observable2  =   Observable . range ( 1 ,   10 ) ; \n\n     /**\n     *  1. sequenceEqual(ObservableSource source1, ObservableSource source2)\n     *  比较两个Observable的数据项是否完全相同（相同数据，顺序，相同终止状态），相同则发射true，否则发射false\n     */ \n     Observable . sequenceEqual ( observable1 ,  observable2 ) \n             . subscribe ( new   SingleObserver < Boolean > ( )   { \n                 @Override \n                 public   void   onSubscribe ( Disposable  d )   { \n                     System . out . println ( "--\x3e onSubscribe(1)" ) ; \n                 } \n\n                 @Override \n                 public   void   onSuccess ( Boolean  aBoolean )   { \n                     System . out . println ( "--\x3e onSuccess(1): "   +  aBoolean ) ; \n                 } \n\n                 @Override \n                 public   void   onError ( Throwable  e )   { \n                     System . out . println ( "--\x3e onError(1): "   +  e ) ; \n                 } \n             } ) ; \n\n     System . out . println ( "----------------------------------------" ) ; \n     /**\n     *  2. sequenceEqual(ObservableSource source1, ObservableSource source2, BiPredicate isEqual, int bufferSize)\n     *  isEqual:             // 可选参数，定义两个Observable的数据项比较规则\n     *  bufferSize：         //  从第一个和第二个源ObservableSource预取的项数\n     *  通过指定的比较函数isEqual比较两个Observable的数据项是否完全相同（相同数据，顺序，相同终止状态），\n     *  相同则发射true，否则发射false。还可以通过bufferSize指定一个缓存大小。\n     */ \n     Observable . sequenceEqual ( observable1 ,  observable2 ,   new   BiPredicate < Integer ,   Integer > ( )   { \n         @Override \n         public   boolean   test ( Integer  t1 ,   Integer  t2 )   throws   Exception   { \n             System . out . println ( "--\x3e test(2): t1 = "   +  t1  +   ", t2 = "   +  t2 ) ; \n             return  t1  ==  t2 ;      // 比较两个Observable的数据序列数据是否相等 \n         } \n     } ,   3 ) . subscribe ( new   SingleObserver < Boolean > ( )   { \n         @Override \n         public   void   onSubscribe ( Disposable  d )   { \n             System . out . println ( "--\x3e onSubscribe(2)" ) ; \n         } \n\n         @Override \n         public   void   onSuccess ( Boolean  aBoolean )   { \n             System . out . println ( "--\x3e onSuccess(2): "   +  aBoolean ) ; \n         } \n\n         @Override \n         public   void   onError ( Throwable  e )   { \n             System . out . println ( "--\x3e onError(2): "   +  e ) ; \n         } \n     } ) ; \n \n 输出： \n --\x3e onSubscribe(1)\n--\x3e onSuccess(1): true\n----------------------------------------\n--\x3e onSubscribe(2)\n--\x3e test(2): t1 = 1, t2 = 1\n--\x3e test(2): t1 = 2, t2 = 2\n--\x3e test(2): t1 = 3, t2 = 3\n--\x3e test(2): t1 = 4, t2 = 4\n--\x3e test(2): t1 = 5, t2 = 5\n--\x3e test(2): t1 = 6, t2 = 6\n--\x3e test(2): t1 = 7, t2 = 7\n--\x3e test(2): t1 = 8, t2 = 8\n--\x3e test(2): t1 = 9, t2 = 9\n--\x3e test(2): t1 = 10, t2 = 10\n--\x3e onSuccess(2): true\n \n \n Javadoc:  sequenceEqual(ObservableSource source1, ObservableSource source2) \nJavadoc:  sequenceEqual(ObservableSource source1, ObservableSource source2, BiPredicate isEqual) \nJavadoc:  sequenceEqual(ObservableSource source1, ObservableSource source2, int bufferSize) \nJavadoc:  sequenceEqual(ObservableSource source1, ObservableSource source2, BiPredicate isEqual, int bufferSize) \n 小结 \n 本节主要介绍了 Rxjava 布尔（判断）操作符可以根据不同的条件返回  boolean  类型的值，对 Observable 进行不同的判断。 \n \n 提示 ：以上使用的Rxjava2版本:  2.2.12 \n \n 实例代码： \n \n \n 代码下载 \n Github \n Gitee（码云） \n \n \n'},{title:"Gitbook详细教程",frontmatter:{author:"JiangMing",title:"Gitbook详细教程",date:"2021-04-17 22:01:53",sidebar:"auto",categories:["Gitbook"],tags:["Gitbook"],publish:!0,showSponsor:!0},regularPath:"/tutorial/gitbook/",relativePath:"tutorial/gitbook/README.md",key:"v-874e03a0",path:"/tutorial/gitbook/",headers:[{level:2,title:"简单介绍",slug:"简单介绍"},{level:2,title:"相关概述",slug:"相关概述"},{level:2,title:"书籍概况",slug:"书籍概况"},{level:2,title:"教程链接：",slug:"教程链接"}],content:" 简单介绍 \n Gitbook  是什么？其实用一句话就可以概括，它是一个  能将使用 Markown 语法的  md  格式文档，快速制作成各种格式电子书的工具 。 \n 常被用于编写文档或者电子书，特点是方便简洁，易于使用。只要熟悉轻量级标记语法的  Markdown   语法，就能使用Gitbook 来制作各种格式的电子书。 \n 整理了一份  【GItbook 详细教程】 ，详细的介绍了使用 Gitbook 的相关方法和经验，欢迎大家的浏览和分享，本教程 独立发布 并遵循  MIT  协议许可， 转载需要注明来源 。 \n 相关概述 \n \n 看完上面的介绍，是不是知道了 Gitbook 是什么，主要用于做什么了？其实就是将我们的书写的文章生成对应格式的电子书，方便分享大家浏览，比如生成 PDF 文档分享给其他人查看相关的内容，或者生成静态 HTML，发布到网站服务器，可以通过在线电子书的方式分享给更多的人。 \n 与 Git 工具对应的 Github 仓库一样，Gitbook 也有一个官方的仓库（可以在线编辑制作），可以上传我们的电子书的文件，不过在国内貌似部分用户访问不了，但是也没有关系，因为大多数情况主要还是利用这个工具生成的对应的格式电子书进行分享或者发布。 \n 总之， Gitbook 就是一个电子书生成工具  ，类似与 Git ， Git  是一个代码仓库管理工具，用于管理代码文件，并且可以生成代码的变更记录，同时具备上传这些文件和变更记录到指定的服务器。那么同理，我们也可以结合 Gitbook 和 Git 来管理我们的文档和生成的电子书文件。当然，本书主要介绍 Gitbook，关于Git 的相关知识，可以参考其他相关的教程。 \n 书籍概况 \n 本书将分 简单介绍 、 安装使用 、 结构配置 、 插件使用 、 书籍导出 、 编辑工具 、 发布书籍 、 结束语录  八个部分，分别来介绍 Gitbook 相关的基础知识和相关使用方法和笔者的一些结束语以及联系方式。 \n \n 简单介绍：对 Gitbook 进行简单的介绍了解，本书相关概况信息以及相关网站参考推荐。 \n 安装使用：介绍如何安装 Gitbook 环境，和一些基本的命令的使用。 \n 结构配置：介绍如何 Gitbook 项目的目录结构，如何进行相关的配置和使用。 \n 插件使用：介绍了如何配置和使用插件，并介绍了一些第三方的插件和相关的使用方法。 \n 书籍导出：介绍了如何将书籍编译和导出各种类型的电子书文件。 \n 编辑工具：介绍和列举了一些相关的 Mardown 文档的可视化编辑器工具。 \n 发布书籍：介绍了几种常见的方式将自己创作的书籍发布分享出去，供大家浏览。 \n 结束语录：主要对本书的做了一个简单的总结，碎碎念，回顾及相关联系方式。 \n 教程链接： \n 👉  https://jiangminggithub.github.io/gitbook/ \n 👉  https://jiangming_gitee.gitee.io/gitbook/ \n Gitbook 系列教程独立成书发布，阅读请访问上面的链接☝️ \n "},{frontmatter:{layout:"Tags",title:"Tags"},regularPath:"/tag/",key:"v-b1564aac",path:"/tag/",content:""},{frontmatter:{layout:"FrontmatterKey",title:"Categories"},regularPath:"/categories/",key:"v-ef9325c4",path:"/categories/",content:""},{frontmatter:{layout:"TimeLines",title:"Timeline"},regularPath:"/timeline/",key:"v-6319eb4e",path:"/timeline/",content:""},{frontmatter:{layout:"Tag",title:"Android 开发基础 Tags"},regularPath:"/tag/Android%20%E5%BC%80%E5%8F%91%E5%9F%BA%E7%A1%80/",key:"v-77167f66",path:"/tag/Android 开发基础/",content:""},{frontmatter:{layout:"Tag",title:"ThreadPoolExecutor Tags"},regularPath:"/tag/ThreadPoolExecutor/",key:"v-2dddd40c",path:"/tag/ThreadPoolExecutor/",content:""},{frontmatter:{layout:"Tag",title:"随笔 Tags"},regularPath:"/tag/%E9%9A%8F%E7%AC%94/",key:"v-1eedfa34",path:"/tag/随笔/",content:""},{frontmatter:{layout:"Tag",title:"JavaSocket Tags"},regularPath:"/tag/JavaSocket/",key:"v-53105ce0",path:"/tag/JavaSocket/",content:""},{frontmatter:{layout:"Tag",title:"Rxjava2 Tags"},regularPath:"/tag/Rxjava2/",key:"v-c86f3322",path:"/tag/Rxjava2/",content:""},{frontmatter:{layout:"Tag",title:"Gitbook Tags"},regularPath:"/tag/Gitbook/",key:"v-1cb99a9e",path:"/tag/Gitbook/",content:""},{frontmatter:{layout:"Category",title:"Android Categories"},regularPath:"/categories/Android/",key:"v-41b76ade",path:"/categories/Android/",content:""},{frontmatter:{layout:"Category",title:"Java Categories"},regularPath:"/categories/Java/",key:"v-6137bfcf",path:"/categories/Java/",content:""},{frontmatter:{layout:"Category",title:"JavaSocket Categories"},regularPath:"/categories/JavaSocket/",key:"v-1bc5ee9c",path:"/categories/JavaSocket/",content:""},{frontmatter:{layout:"Category",title:"Rxjava2 Categories"},regularPath:"/categories/Rxjava2/",key:"v-41fa44e3",path:"/categories/Rxjava2/",content:""},{frontmatter:{layout:"Category",title:"Gitbook Categories"},regularPath:"/categories/Gitbook/",key:"v-7a290ddc",path:"/categories/Gitbook/",content:""},{frontmatter:{layout:"Layout",title:"Page 2 - Android 开发基础 | Tags"},regularPath:"/tag/Android%20%E5%BC%80%E5%8F%91%E5%9F%BA%E7%A1%80/page/2/",key:"v-6d3e9797",path:"/tag/Android 开发基础/page/2/",content:""},{frontmatter:{layout:"Layout",title:"Page 2 - Rxjava2 | Tags"},regularPath:"/tag/Rxjava2/page/2/",key:"v-b4553724",path:"/tag/Rxjava2/page/2/",content:""},{frontmatter:{layout:"Layout",title:"Page 2 - Android | Categories"},regularPath:"/categories/Android/page/2/",key:"v-574755c2",path:"/categories/Android/page/2/",content:""},{frontmatter:{layout:"Layout",title:"Page 2 - Java | Categories"},regularPath:"/categories/Java/page/2/",key:"v-1ade81e4",path:"/categories/Java/page/2/",content:""},{frontmatter:{layout:"Layout",title:"Page 2 - Rxjava2 | Categories"},regularPath:"/categories/Rxjava2/page/2/",key:"v-2d761b7a",path:"/categories/Rxjava2/page/2/",content:""}],themeConfig:{type:"blog",subSidebar:"auto",authorAvatar:"/img/icon/icon.png",author:"JiangMing-JIM",smoothScroll:!0,mode:"light",modePicker:!0,blogConfig:{category:{location:2,text:"文章分类"},tag:{location:3,text:"文章标签"},socialLinks:[{icon:"reco-github",link:"https://github.com/jiangminggithub"},{icon:"reco-mayun",link:"https://gitee.com/jiangming_gitee"},{icon:"reco-coding",link:"https://jiangming-it.coding.net"},{icon:"reco-csdn",link:"https://blog.csdn.net/ming_97y"},{icon:"reco-jianshu",link:"https://www.jianshu.com/u/bbe6d4f1373a"},{icon:"reco-bokeyuan",link:"https://www.cnblogs.com/jiangming-blogs"}]},valineConfig:{recordIP:!0,visitor:!0,placeholder:"写下你的评论吧...",appId:"e25fSC2liCi9xq0ECcLC0lfk-9Nh9j0Va",appKey:"w5qCQ1RBIgzrfaOPzGwyU5US"},friendLink:[{title:"江明的个人网站",desc:"专注互联网领域研究和软件技术的研发、挖掘与分享。",email:"jiangmingyx@126.com",logo:"/img/icon/favicon.ico",link:"https://itjiangming.github.io"},{title:"JiangMing-Gitbook",desc:"一个非常详细的gitbook实战教程。",email:"jiangmingyx@126.com",logo:"/img/icon/favicon.ico",link:"https://jiangminggithub.github.io/gitbook/"},{title:"JiangMing-JLog",desc:"一个非常好用的Java平台Log框架工具，可以用于Android和Java平台，可以自定义的Log输出。",email:"jiangmingyx@126.com",logo:"/img/icon/favicon.ico",link:"https://github.com/jiangminggithub/JLog"},{title:"Android developer",desc:"面向Android应用开发者的网站。",logo:"/img/icon/icon_android.png",link:"https://developer.android.google.cn/"},{title:"vuepress",desc:"Vue 驱动的静态网站生成器。",logo:"https://vuepress.vuejs.org/logo.png",link:"https://vuepress.vuejs.org"},{title:"vuepress-theme-reco",desc:"A simple and beautiful vuepress Blog & Doc theme.",logo:"https://vuepress-theme-reco.recoluan.com/icon_vuepress_reco.png",link:"https://vuepress-theme-reco.recoluan.com"}],sidebar:{"/developer/rxjava2/":["01.rxjava2","02.rxjava2","03.rxjava2","04.rxjava2","05.rxjava2","06.rxjava2","07.rxjava2","08.rxjava2","09.rxjava2","10.rxjava2","11.rxjava2","12.rxjava2"],"/developer/javasocket/":["","01.tcp","02.udp"],"/developer/android/base/":["","01.learning_route","02.dev_environment","03.project_structure_resources","04.fundamentals_knowledge","05.user_interface","06.00_ui_layout_components","06.01_layout_components_linerlayout","06.02_layout_components_relativelayout","06.03_layout_components_absolutelayout","06.04_layout_components_framelayout","06.05_layout_components_tablelayout","06.06_layout_components_gridlayout","06.07_layout_components_constraintlayout","07.00_ui_control_components","07.01_ui_control_components_textview"]},nav:[{text:"主页",link:"/",icon:"reco-home"},{text:"时间线",link:"/timeline/",icon:"reco-date"},{text:"系列教程",icon:"reco-document",ariaLabel:"tutorial Menu",items:[{text:"Android",link:"/developer/android/base/"},{text:"Rxjava2",link:"/developer/rxjava2/01.rxjava2"},{text:"JavaSocket",link:"/developer/javasocket/"},{text:"Gitbook",link:"/tutorial/gitbook/"},{text:"...",link:"/"}]},{text:"个人博客",icon:"reco-blog",ariaLabel:"blog Menu",items:[{text:"CSDN",link:"https://blog.csdn.net/ming_97y",icon:"reco-csdn"},{text:"简书",link:"https://www.jianshu.com/u/bbe6d4f1373a",icon:"reco-jianshu"},{text:"博客园",link:"https://www.cnblogs.com/jiangming-blogs",icon:"reco-bokeyuan"}]},{text:"代码仓库",icon:"reco-api",ariaLabel:"code repository Menu",items:[{text:"Github",link:"https://github.com/jiangminggithub",icon:"reco-github"},{text:"Gitee",link:"https://gitee.com/jiangming_gitee",icon:"reco-mayun"}]},{text:"留言板",link:"/comment/",icon:"reco-suggestion"},{text:"了解本站",link:"/about/",icon:"reco-faq"}]},locales:{"/":{lang:"zh-CN",path:"/"}}},Xe=(n(43),n(236),n(237),n(73),n(238),n(70)),Qe={computed:{$recoPosts:function(){var t=this.$site.pages;return t=Object(Xe.a)(t,!1),Object(Xe.c)(t),t},$recoPostsForTimeline:function(){var t=this.$recoPosts,e={},n=[];t=Object(Xe.a)(t,!0),this.pages=0==t.length?[]:t;for(var r=0,o=t.length;r<o;r++){var i=t[r],a=Ke(i.frontmatter.date,"year");e[a]?e[a].push(i):e[a]=[i]}for(var s in e){var c=e[s];Object(Xe.b)(c),n.unshift({year:s,data:c})}return n},$categoriesList:function(){return this.$categories.list.map((function(t){return t.pages=t.pages.filter((function(t){return!1!==t.frontmatter.publish})),t}))},$tagesList:function(){return this.$tags.list.map((function(t){return t.pages=t.pages.filter((function(t){return!1!==t.frontmatter.publish})),t}))},$showSubSideBar:function(){var t=this.$themeConfig,e=t.subSidebar,n=t.sidebar,r=this.$frontmatter,o=r.subSidebar,i=r.sidebar,a=this.$page.headers||[];return!([o,i].indexOf(!1)>-1)&&([o,i].indexOf("auto")>-1&&a.length>0||[e,n].indexOf("auto")>-1&&a.length>0)}}};function Ke(t,e){t=function(t){var e=new Date(t).toJSON();return new Date(+new Date(e)+288e5).toISOString().replace(/T/g," ").replace(/\.[\d]{3}Z/,"").replace(/-/g,"/")}(t);var n=new Date(t),r=n.getFullYear(),o=n.getMonth()+1,i=n.getDate();return"year"==e?r:"".concat(o,"-").concat(i)}var Ze=n(7),tn={all:"全部",article:"文章",tag:"标签",category:"分类",friendLink:"友情链接",timeLine:"时间轴",timeLineMsg:"昨日重现！"},en={all:"全部",article:"文章",tag:"標簽",category:"分類",friendLink:"友情鏈接",timeLine:"時間軸",timeLineMsg:"昨日重現！"},nn={all:"All",article:"Articles",tag:"Tags",category:"Categories",friendLink:"Friend Links",timeLine:"TimeLine",timeLineMsg:"Yesterday Once More!"},rn={all:"全部",article:"文章",tag:"ラベル",category:"分類",friendLink:"友情リンク",timeLine:"タイムライン",timeLineMsg:"昨日また！"},on={all:"전체",article:"글",tag:"태그",category:"분류",friendLink:"링크 참조",timeLine:"타임 라인",timeLineMsg:"어제 또!"},an={all:"Todas",article:"Artículos",tag:"Etiquetas",category:"Categorías",friendLink:"Páginas amigas",timeLine:"Cronología",timeLineMsg:"¡Ayer otra vez!"},sn={computed:{$recoLocales:function(){var t=this.$themeLocaleConfig.recoLocales||{};return/^zh\-(CN|SG)$/.test(this.$lang)?Object(Ze.a)(Object(Ze.a)({},tn),t):/^zh\-(HK|MO|TW)$/.test(this.$lang)?Object(Ze.a)(Object(Ze.a)({},en),t):/^ja\-JP$/.test(this.$lang)?Object(Ze.a)(Object(Ze.a)({},rn),t):/^ko\-KR$/.test(this.$lang)?Object(Ze.a)(Object(Ze.a)({},on),t):/^es(\-[A-Z]+)?$/.test(this.$lang)?Object(Ze.a)(Object(Ze.a)({},an),t):Object(Ze.a)(Object(Ze.a)({},nn),t)}}},cn=n(27),ln=n(74),un=n(132);n(365);i.default.component("Badge",(function(){return Promise.all([n.e(0),n.e(8)]).then(n.bind(null,565))}));n(366);var pn={name:"BackToTop",data:function(){return{visible:!1,customStyle:{right:"1rem",bottom:"6rem",width:"2.5rem",height:"2.5rem","border-radius":".25rem","line-height":"2.5rem"},visibilityHeight:400}},mounted:function(){window.addEventListener("scroll",this.throttle(this.handleScroll,500))},beforeDestroy:function(){window.removeEventListener("scroll",this.throttle(this.handleScroll,500))},methods:{handleScroll:function(){this.visible=window.pageYOffset>this.visibilityHeight},backToTop:function(){window.scrollTo(0,0)},throttle:function(t,e){var n=null,r=Date.now();return function(){var o=Date.now(),i=e-(o-r),a=this,s=arguments;clearTimeout(n),i<=0?(t.apply(a,s),r=Date.now()):n=setTimeout(t,i)}}}},dn=(n(367),Object(He.a)(pn,(function(){var t=this.$createElement,e=this._self._c||t;return e("transition",{attrs:{name:"fade"}},[e("div",{directives:[{name:"show",rawName:"v-show",value:this.visible,expression:"visible"}],staticClass:"back-to-ceiling",style:this.customStyle,on:{click:this.backToTop}},[e("svg",{staticClass:"icon",attrs:{t:"1574745035067",viewBox:"0 0 1024 1024",version:"1.1",xmlns:"http://www.w3.org/2000/svg","p-id":"5404"}},[e("path",{attrs:{d:"M526.60727968 10.90185116a27.675 27.675 0 0 0-29.21455937 0c-131.36607665 82.28402758-218.69155461 228.01873535-218.69155402 394.07834331a462.20625001 462.20625001 0 0 0 5.36959153 69.94390903c1.00431239 6.55289093-0.34802892 13.13561351-3.76865779 18.80351572-32.63518765 54.11355614-51.75690182 118.55860487-51.7569018 187.94566865a371.06718723 371.06718723 0 0 0 11.50484808 91.98906777c6.53300375 25.50556257 41.68394495 28.14064038 52.69160883 4.22606766 17.37162448-37.73630017 42.14135425-72.50938081 72.80769204-103.21549295 2.18761121 3.04276886 4.15646224 6.24463696 6.40373557 9.22774369a1871.4375 1871.4375 0 0 0 140.04691725 5.34970492 1866.36093723 1866.36093723 0 0 0 140.04691723-5.34970492c2.24727335-2.98310674 4.21612437-6.18497483 6.3937923-9.2178004 30.66633723 30.70611158 55.4360664 65.4791928 72.80769147 103.21549355 11.00766384 23.91457269 46.15860503 21.27949489 52.69160879-4.22606768a371.15156223 371.15156223 0 0 0 11.514792-91.99901164c0-69.36717486-19.13165746-133.82216804-51.75690182-187.92578088-3.42062944-5.66790279-4.76302748-12.26056868-3.76865837-18.80351632a462.20625001 462.20625001 0 0 0 5.36959269-69.943909c-0.00994388-166.08943902-87.32547796-311.81420293-218.6915546-394.09823051zM605.93803103 357.87693858a93.93749974 93.93749974 0 1 1-187.89594924 6.1e-7 93.93749974 93.93749974 0 0 1 187.89594924-6.1e-7z","p-id":"5405"}}),e("path",{attrs:{d:"M429.50777625 765.63860547C429.50777625 803.39355007 466.44236686 1000.39046097 512.00932183 1000.39046097c45.56695499 0 82.4922232-197.00623328 82.5015456-234.7518555 0-37.75494459-36.9345906-68.35043303-82.4922232-68.34111062-45.57627738-0.00932239-82.52019037 30.59548842-82.51086798 68.34111062z","p-id":"5406"}})])])])}),[],!1,null,"c6073ba8",null).exports),hn=(n(368),Object(He.a)({},(function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("div",{attrs:{id:"loader-wrapper"}},[n("div",{staticClass:"loader-main"},t._l(4,(function(t){return n("div",{key:"out"+t})})),0),t._v(" "),t.$frontmatter.home?n("h3",{staticClass:"title"},[t._v(t._s(t.$site.title||t.$localeConfig.title))]):t._e(),t._v(" "),t.$frontmatter.home?n("p",{staticClass:"description"},[t._v(t._s(t.$site.description||t.$localeConfig.description))]):t._e()])}),[],!1,null,"d48f4d20",null).exports),fn=(n(369),n(228),{prev:"上一页",next:"下一页",go:"前往",jump:"跳转至"}),vn={prev:"上壹頁",next:"下壹頁",go:"前往",jump:"跳轉至"},bn={prev:"Prev",next:"Next",go:"Go",jump:"Jump To"},mn={prev:"前のページ",next:"次のページ",go:"へ",jump:"ジャンプ"},gn={prev:"이전 페이지",next:"다음 페이지",go:"행",jump:"건너뛰기"};var yn={data:function(){return{changePage:"",pageSize:10}},props:{total:{type:Number,default:10},perPage:{type:Number,default:10},currentPage:{type:Number,default:1}},computed:{pages:function(){var t=this.pageSize||this.perPage;return Math.ceil(this.total/t)},show:function(){return this.pages&&1!=this.pages},efont:function(){return!(this.pages<=7)&&this.currentPage>5},indexs:function(){var t=1,e=this.pages,n=[];for(this.pages>=7&&(this.currentPage>5&&this.currentPage<this.pages-4?(t=Number(this.currentPage)-3,e=Number(this.currentPage)+3):this.currentPage<=5?(t=1,e=7):(e=this.pages,t=this.pages-6));t<=e;)n.push(t),t++;return n},pagationLocales:function(){return e=(t=this).$lang,n=t.$recoLocales,(n=void 0===n?{}:n).pagation||(/^zh\-(CN|SG)$/.test(e)?fn:/^zh\-(HK|MO|TW)$/.test(e)?vn:/^ja\-JP$/.test(e)?mn:/^ko\-KR$/.test(e)?gn:bn);var t,e,n}},methods:{goPrev:function(){var t=this.currentPage;this.currentPage>1&&this.emit(--t)},goNext:function(){var t=this.currentPage;t<this.pages&&this.emit(++t)},jumpPage:function(t){var e=parseInt(t);e<=this.pages&&e>0?this.emit(e):alert("请输入大于0，并且小于".concat(this.pages,"的页码！"))},emit:function(t){this.$emit("getCurrentPage",t)}}},_n=(n(371),Object(He.a)(yn,(function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("div",{directives:[{name:"show",rawName:"v-show",value:t.show,expression:"show"}],staticClass:"pagation"},[n("div",{staticClass:"pagation-list"},[n("span",{directives:[{name:"show",rawName:"v-show",value:t.currentPage>1,expression:"currentPage > 1"}],staticClass:"jump",attrs:{unselectable:"on"},on:{click:t.goPrev}},[t._v(t._s(t.pagationLocales.prev))]),t._v(" "),n("span",{directives:[{name:"show",rawName:"v-show",value:t.efont,expression:"efont"}],staticClass:"jump",on:{click:function(e){return t.jumpPage(1)}}},[t._v("1")]),t._v(" "),n("span",{directives:[{name:"show",rawName:"v-show",value:t.efont,expression:"efont"}],staticClass:"ellipsis"},[t._v("...")]),t._v(" "),t._l(t.indexs,(function(e){return n("span",{key:e,staticClass:"jump",class:{bgprimary:t.currentPage==e},on:{click:function(n){return t.jumpPage(e)}}},[t._v(t._s(e))])})),t._v(" "),n("span",{directives:[{name:"show",rawName:"v-show",value:t.efont&&t.currentPage<t.pages-4,expression:"efont&&currentPage<pages-4"}],staticClass:"ellipsis"},[t._v("...")]),t._v(" "),n("span",{directives:[{name:"show",rawName:"v-show",value:t.efont&&t.currentPage<t.pages-4,expression:"efont&&currentPage<pages-4"}],staticClass:"jump",on:{click:function(e){return t.jumpPage(t.pages)}}},[t._v(t._s(t.pages))]),t._v(" "),n("span",{directives:[{name:"show",rawName:"v-show",value:t.currentPage<t.pages,expression:"currentPage < pages"}],staticClass:"jump",on:{click:t.goNext}},[t._v(t._s(t.pagationLocales.next))]),t._v(" "),n("span",{staticClass:"jumppoint"},[t._v(t._s(t.pagationLocales.jump))]),t._v(" "),n("span",{staticClass:"jumpinp"},[n("input",{directives:[{name:"model",rawName:"v-model",value:t.changePage,expression:"changePage"}],attrs:{type:"text"},domProps:{value:t.changePage},on:{input:function(e){e.target.composing||(t.changePage=e.target.value)}}})]),t._v(" "),n("span",{staticClass:"jump gobtn",on:{click:function(e){return t.jumpPage(t.changePage)}}},[t._v(t._s(t.pagationLocales.go))])],2)])}),[],!1,null,"094d08e4",null).exports),xn={name:"Valine",props:{options:{type:Object,default:function(){return{}}}},mounted:function(){this.initValine()},methods:{initValine:function(){new(n(372))(Object(Ze.a)({el:"#valine",placeholder:"just go go",notify:!1,verify:!1,avatar:"retro",visitor:!0,recordIP:!1,path:window.location.pathname},this.options))}},watch:{$route:function(t,e){var n=this;t.path!==e.path&&setTimeout((function(){n.initValine()}),300)}}},wn=(n(373),Object(He.a)(xn,(function(){var t=this.$createElement;this._self._c;return this._m(0)}),[function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"valine-wrapper"},[e("div",{attrs:{id:"valine"}})])}],!1,null,null,null).exports),Sn=n(5);function On(t){return Object(Sn.a)((function(e,n){void 0===e.inject&&(e.inject={}),Array.isArray(e.inject)||(e.inject[n]=t||n)}))}function $n(t){return"function"!=typeof t||!t.managed&&!t.managedReactive}function Tn(t){var e=function(){var n=this,r="function"==typeof t?t.call(this):t;for(var o in(r=Object.create(r||null))[En]=Object.create(this[En]||{}),e.managed)r[e.managed[o]]=this[o];var i=function(t){r[e.managedReactive[t]]=a[t],Object.defineProperty(r[En],e.managedReactive[t],{enumerable:!0,configurable:!0,get:function(){return n[t]}})},a=this;for(var o in e.managedReactive)i(o);return r};return e.managed={},e.managedReactive={},e}var En="__reactiveInject__";function Cn(t){Array.isArray(t.inject)||(t.inject=t.inject||{},t.inject[En]={from:En,default:{}})}var In="undefined"!=typeof Reflect&&void 0!==Reflect.getMetadata;function An(t,e,n){if(In&&!Array.isArray(t)&&"function"!=typeof t&&!t.hasOwnProperty("type")&&void 0===t.type){var r=Reflect.getMetadata("design:type",e,n);r!==Object&&(t.type=r)}}function kn(t){return void 0===t&&(t={}),function(e,n){An(t,e,n),Object(Sn.a)((function(e,n){(e.props||(e.props={}))[n]=t}))(e,n)}}function Ln(t,e){void 0===e&&(e={});var n=e.deep,r=void 0!==n&&n,o=e.immediate,i=void 0!==o&&o;return Object(Sn.a)((function(e,n){"object"!=typeof e.watch&&(e.watch=Object.create(null));var o=e.watch;"object"!=typeof o[t]||Array.isArray(o[t])?void 0===o[t]&&(o[t]=[]):o[t]=[o[t]],o[t].push({handler:n,deep:r,immediate:i})}))}var Pn=n(51);const Mn=t=>Object(Pn.stringify)(t),Nn=(t,e)=>`${t}${Object(Pn.stringify)(e,{addQueryPrefix:!0})}`,Dn=(t,e)=>`${t.replace(/\/$/,"")}/${e.replace(/^\//,"")}`;var jn=n(225),Rn=n.n(jn);const Fn=t=>Rn()(t,"YYYY-MM-DD HH:mm:ss"),Un=t=>(t.split("#")[0]||"").split("?")[0]||"",Bn=t=>Object(Pn.parse)(t,{ignoreQueryPrefix:!0})
/*!
 * vue-i18n v8.24.4 
 * (c) 2021 kazuya kawaguchi
 * Released under the MIT License.
 */;var zn=["compactDisplay","currency","currencyDisplay","currencySign","localeMatcher","notation","numberingSystem","signDisplay","style","unit","unitDisplay","useGrouping","minimumIntegerDigits","minimumFractionDigits","maximumFractionDigits","minimumSignificantDigits","maximumSignificantDigits"];function Gn(t,e){"undefined"!=typeof console&&(console.warn("[vue-i18n] "+t),e&&console.warn(e.stack))}var Vn=Array.isArray;function Jn(t){return null!==t&&"object"==typeof t}function Hn(t){return"string"==typeof t}var Wn=Object.prototype.toString;function qn(t){return"[object Object]"===Wn.call(t)}function Yn(t){return null==t}function Xn(t){return"function"==typeof t}function Qn(){for(var t=[],e=arguments.length;e--;)t[e]=arguments[e];var n=null,r=null;return 1===t.length?Jn(t[0])||Vn(t[0])?r=t[0]:"string"==typeof t[0]&&(n=t[0]):2===t.length&&("string"==typeof t[0]&&(n=t[0]),(Jn(t[1])||Vn(t[1]))&&(r=t[1])),{locale:n,params:r}}function Kn(t){return JSON.parse(JSON.stringify(t))}function Zn(t,e){return!!~t.indexOf(e)}var tr=Object.prototype.hasOwnProperty;function er(t,e){return tr.call(t,e)}function nr(t){for(var e=arguments,n=Object(t),r=1;r<arguments.length;r++){var o=e[r];if(null!=o){var i=void 0;for(i in o)er(o,i)&&(Jn(o[i])?n[i]=nr(n[i],o[i]):n[i]=o[i])}}return n}function rr(t,e){if(t===e)return!0;var n=Jn(t),r=Jn(e);if(!n||!r)return!n&&!r&&String(t)===String(e);try{var o=Vn(t),i=Vn(e);if(o&&i)return t.length===e.length&&t.every((function(t,n){return rr(t,e[n])}));if(o||i)return!1;var a=Object.keys(t),s=Object.keys(e);return a.length===s.length&&a.every((function(n){return rr(t[n],e[n])}))}catch(t){return!1}}function or(t){return null!=t&&Object.keys(t).forEach((function(e){"string"==typeof t[e]&&(t[e]=t[e].replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/"/g,"&quot;").replace(/'/g,"&apos;"))})),t}var ir={beforeCreate:function(){var t=this.$options;if(t.i18n=t.i18n||(t.__i18n?{}:null),t.i18n)if(t.i18n instanceof Mr){if(t.__i18n)try{var e=t.i18n&&t.i18n.messages?t.i18n.messages:{};t.__i18n.forEach((function(t){e=nr(e,JSON.parse(t))})),Object.keys(e).forEach((function(n){t.i18n.mergeLocaleMessage(n,e[n])}))}catch(t){0}this._i18n=t.i18n,this._i18nWatcher=this._i18n.watchI18nData()}else if(qn(t.i18n)){var n=this.$root&&this.$root.$i18n&&this.$root.$i18n instanceof Mr?this.$root.$i18n:null;if(n&&(t.i18n.root=this.$root,t.i18n.formatter=n.formatter,t.i18n.fallbackLocale=n.fallbackLocale,t.i18n.formatFallbackMessages=n.formatFallbackMessages,t.i18n.silentTranslationWarn=n.silentTranslationWarn,t.i18n.silentFallbackWarn=n.silentFallbackWarn,t.i18n.pluralizationRules=n.pluralizationRules,t.i18n.preserveDirectiveContent=n.preserveDirectiveContent),t.__i18n)try{var r=t.i18n&&t.i18n.messages?t.i18n.messages:{};t.__i18n.forEach((function(t){r=nr(r,JSON.parse(t))})),t.i18n.messages=r}catch(t){0}var o=t.i18n.sharedMessages;o&&qn(o)&&(t.i18n.messages=nr(t.i18n.messages,o)),this._i18n=new Mr(t.i18n),this._i18nWatcher=this._i18n.watchI18nData(),(void 0===t.i18n.sync||t.i18n.sync)&&(this._localeWatcher=this.$i18n.watchLocale()),n&&n.onComponentInstanceCreated(this._i18n)}else 0;else this.$root&&this.$root.$i18n&&this.$root.$i18n instanceof Mr?this._i18n=this.$root.$i18n:t.parent&&t.parent.$i18n&&t.parent.$i18n instanceof Mr&&(this._i18n=t.parent.$i18n)},beforeMount:function(){var t=this.$options;t.i18n=t.i18n||(t.__i18n?{}:null),t.i18n?(t.i18n instanceof Mr||qn(t.i18n))&&(this._i18n.subscribeDataChanging(this),this._subscribing=!0):(this.$root&&this.$root.$i18n&&this.$root.$i18n instanceof Mr||t.parent&&t.parent.$i18n&&t.parent.$i18n instanceof Mr)&&(this._i18n.subscribeDataChanging(this),this._subscribing=!0)},mounted:function(){this!==this.$root&&this.$options.__INTLIFY_META__&&this.$el&&this.$el.setAttribute("data-intlify",this.$options.__INTLIFY_META__)},beforeDestroy:function(){if(this._i18n){var t=this;this.$nextTick((function(){t._subscribing&&(t._i18n.unsubscribeDataChanging(t),delete t._subscribing),t._i18nWatcher&&(t._i18nWatcher(),t._i18n.destroyVM(),delete t._i18nWatcher),t._localeWatcher&&(t._localeWatcher(),delete t._localeWatcher)}))}}},ar={name:"i18n",functional:!0,props:{tag:{type:[String,Boolean,Object],default:"span"},path:{type:String,required:!0},locale:{type:String},places:{type:[Array,Object]}},render:function(t,e){var n=e.data,r=e.parent,o=e.props,i=e.slots,a=r.$i18n;if(a){var s=o.path,c=o.locale,l=o.places,u=i(),p=a.i(s,c,function(t){var e;for(e in t)if("default"!==e)return!1;return Boolean(e)}(u)||l?function(t,e){var n=e?function(t){0;return Array.isArray(t)?t.reduce(cr,{}):Object.assign({},t)}(e):{};if(!t)return n;var r=(t=t.filter((function(t){return t.tag||""!==t.text.trim()}))).every(lr);0;return t.reduce(r?sr:cr,n)}(u.default,l):u),d=o.tag&&!0!==o.tag||!1===o.tag?o.tag:"span";return d?t(d,n,p):p}}};function sr(t,e){return e.data&&e.data.attrs&&e.data.attrs.place&&(t[e.data.attrs.place]=e),t}function cr(t,e,n){return t[n]=e,t}function lr(t){return Boolean(t.data&&t.data.attrs&&t.data.attrs.place)}var ur,pr={name:"i18n-n",functional:!0,props:{tag:{type:[String,Boolean,Object],default:"span"},value:{type:Number,required:!0},format:{type:[String,Object]},locale:{type:String}},render:function(t,e){var n=e.props,r=e.parent,o=e.data,i=r.$i18n;if(!i)return null;var a=null,s=null;Hn(n.format)?a=n.format:Jn(n.format)&&(n.format.key&&(a=n.format.key),s=Object.keys(n.format).reduce((function(t,e){var r;return Zn(zn,e)?Object.assign({},t,((r={})[e]=n.format[e],r)):t}),null));var c=n.locale||i.locale,l=i._ntp(n.value,c,a,s),u=l.map((function(t,e){var n,r=o.scopedSlots&&o.scopedSlots[t.type];return r?r(((n={})[t.type]=t.value,n.index=e,n.parts=l,n)):t.value})),p=n.tag&&!0!==n.tag||!1===n.tag?n.tag:"span";return p?t(p,{attrs:o.attrs,class:o.class,staticClass:o.staticClass},u):u}};function dr(t,e,n){vr(t,n)&&br(t,e,n)}function hr(t,e,n,r){if(vr(t,n)){var o=n.context.$i18n;(function(t,e){var n=e.context;return t._locale===n.$i18n.locale})(t,n)&&rr(e.value,e.oldValue)&&rr(t._localeMessage,o.getLocaleMessage(o.locale))||br(t,e,n)}}function fr(t,e,n,r){if(n.context){var o=n.context.$i18n||{};e.modifiers.preserve||o.preserveDirectiveContent||(t.textContent=""),t._vt=void 0,delete t._vt,t._locale=void 0,delete t._locale,t._localeMessage=void 0,delete t._localeMessage}else Gn("Vue instance does not exists in VNode context")}function vr(t,e){var n=e.context;return n?!!n.$i18n||(Gn("VueI18n instance does not exists in Vue instance"),!1):(Gn("Vue instance does not exists in VNode context"),!1)}function br(t,e,n){var r,o,i=function(t){var e,n,r,o;Hn(t)?e=t:qn(t)&&(e=t.path,n=t.locale,r=t.args,o=t.choice);return{path:e,locale:n,args:r,choice:o}}(e.value),a=i.path,s=i.locale,c=i.args,l=i.choice;if(a||s||c)if(a){var u=n.context;t._vt=t.textContent=null!=l?(r=u.$i18n).tc.apply(r,[a,l].concat(mr(s,c))):(o=u.$i18n).t.apply(o,[a].concat(mr(s,c))),t._locale=u.$i18n.locale,t._localeMessage=u.$i18n.getLocaleMessage(u.$i18n.locale)}else Gn("`path` is required in v-t directive");else Gn("value type not supported")}function mr(t,e){var n=[];return t&&n.push(t),e&&(Array.isArray(e)||qn(e))&&n.push(e),n}function gr(t){gr.installed=!0;var e;(ur=t).version&&Number(ur.version.split(".")[0]);(e=ur).prototype.hasOwnProperty("$i18n")||Object.defineProperty(e.prototype,"$i18n",{get:function(){return this._i18n}}),e.prototype.$t=function(t){for(var e=[],n=arguments.length-1;n-- >0;)e[n]=arguments[n+1];var r=this.$i18n;return r._t.apply(r,[t,r.locale,r._getMessages(),this].concat(e))},e.prototype.$tc=function(t,e){for(var n=[],r=arguments.length-2;r-- >0;)n[r]=arguments[r+2];var o=this.$i18n;return o._tc.apply(o,[t,o.locale,o._getMessages(),this,e].concat(n))},e.prototype.$te=function(t,e){var n=this.$i18n;return n._te(t,n.locale,n._getMessages(),e)},e.prototype.$d=function(t){for(var e,n=[],r=arguments.length-1;r-- >0;)n[r]=arguments[r+1];return(e=this.$i18n).d.apply(e,[t].concat(n))},e.prototype.$n=function(t){for(var e,n=[],r=arguments.length-1;r-- >0;)n[r]=arguments[r+1];return(e=this.$i18n).n.apply(e,[t].concat(n))},ur.mixin(ir),ur.directive("t",{bind:dr,update:hr,unbind:fr}),ur.component(ar.name,ar),ur.component(pr.name,pr),ur.config.optionMergeStrategies.i18n=function(t,e){return void 0===e?t:e}}var yr=function(){this._caches=Object.create(null)};yr.prototype.interpolate=function(t,e){if(!e)return[t];var n=this._caches[t];return n||(n=function(t){var e=[],n=0,r="";for(;n<t.length;){var o=t[n++];if("{"===o){r&&e.push({type:"text",value:r}),r="";var i="";for(o=t[n++];void 0!==o&&"}"!==o;)i+=o,o=t[n++];var a="}"===o,s=_r.test(i)?"list":a&&xr.test(i)?"named":"unknown";e.push({value:i,type:s})}else"%"===o?"{"!==t[n]&&(r+=o):r+=o}return r&&e.push({type:"text",value:r}),e}(t),this._caches[t]=n),function(t,e){var n=[],r=0,o=Array.isArray(e)?"list":Jn(e)?"named":"unknown";if("unknown"===o)return n;for(;r<t.length;){var i=t[r];switch(i.type){case"text":n.push(i.value);break;case"list":n.push(e[parseInt(i.value,10)]);break;case"named":"named"===o&&n.push(e[i.value]);break;case"unknown":0}r++}return n}(n,e)};var _r=/^(?:\d)+/,xr=/^(?:\w)+/;var wr=[];wr[0]={ws:[0],ident:[3,0],"[":[4],eof:[7]},wr[1]={ws:[1],".":[2],"[":[4],eof:[7]},wr[2]={ws:[2],ident:[3,0],0:[3,0],number:[3,0]},wr[3]={ident:[3,0],0:[3,0],number:[3,0],ws:[1,1],".":[2,1],"[":[4,1],eof:[7,1]},wr[4]={"'":[5,0],'"':[6,0],"[":[4,2],"]":[1,3],eof:8,else:[4,0]},wr[5]={"'":[4,0],eof:8,else:[5,0]},wr[6]={'"':[4,0],eof:8,else:[6,0]};var Sr=/^\s?(?:true|false|-?[\d.]+|'[^']*'|"[^"]*")\s?$/;function Or(t){if(null==t)return"eof";switch(t.charCodeAt(0)){case 91:case 93:case 46:case 34:case 39:return t;case 95:case 36:case 45:return"ident";case 9:case 10:case 13:case 160:case 65279:case 8232:case 8233:return"ws"}return"ident"}function $r(t){var e,n,r,o=t.trim();return("0"!==t.charAt(0)||!isNaN(t))&&(r=o,Sr.test(r)?(n=(e=o).charCodeAt(0))!==e.charCodeAt(e.length-1)||34!==n&&39!==n?e:e.slice(1,-1):"*"+o)}var Tr=function(){this._cache=Object.create(null)};Tr.prototype.parsePath=function(t){var e=this._cache[t];return e||(e=function(t){var e,n,r,o,i,a,s,c=[],l=-1,u=0,p=0,d=[];function h(){var e=t[l+1];if(5===u&&"'"===e||6===u&&'"'===e)return l++,r="\\"+e,d[0](),!0}for(d[1]=function(){void 0!==n&&(c.push(n),n=void 0)},d[0]=function(){void 0===n?n=r:n+=r},d[2]=function(){d[0](),p++},d[3]=function(){if(p>0)p--,u=4,d[0]();else{if(p=0,void 0===n)return!1;if(!1===(n=$r(n)))return!1;d[1]()}};null!==u;)if(l++,"\\"!==(e=t[l])||!h()){if(o=Or(e),8===(i=(s=wr[u])[o]||s.else||8))return;if(u=i[0],(a=d[i[1]])&&(r=void 0===(r=i[2])?e:r,!1===a()))return;if(7===u)return c}}(t))&&(this._cache[t]=e),e||[]},Tr.prototype.getPathValue=function(t,e){if(!Jn(t))return null;var n=this.parsePath(e);if(0===n.length)return null;for(var r=n.length,o=t,i=0;i<r;){var a=o[n[i]];if(null==a)return null;o=a,i++}return o};var Er,Cr=/<\/?[\w\s="/.':;#-\/]+>/,Ir=/(?:@(?:\.[a-z]+)?:(?:[\w\-_|.]+|\([\w\-_|.]+\)))/g,Ar=/^@(?:\.([a-z]+))?:/,kr=/[()]/g,Lr={upper:function(t){return t.toLocaleUpperCase()},lower:function(t){return t.toLocaleLowerCase()},capitalize:function(t){return""+t.charAt(0).toLocaleUpperCase()+t.substr(1)}},Pr=new yr,Mr=function(t){var e=this;void 0===t&&(t={}),!ur&&"undefined"!=typeof window&&window.Vue&&gr(window.Vue);var n=t.locale||"en-US",r=!1!==t.fallbackLocale&&(t.fallbackLocale||"en-US"),o=t.messages||{},i=t.dateTimeFormats||{},a=t.numberFormats||{};this._vm=null,this._formatter=t.formatter||Pr,this._modifiers=t.modifiers||{},this._missing=t.missing||null,this._root=t.root||null,this._sync=void 0===t.sync||!!t.sync,this._fallbackRoot=void 0===t.fallbackRoot||!!t.fallbackRoot,this._formatFallbackMessages=void 0!==t.formatFallbackMessages&&!!t.formatFallbackMessages,this._silentTranslationWarn=void 0!==t.silentTranslationWarn&&t.silentTranslationWarn,this._silentFallbackWarn=void 0!==t.silentFallbackWarn&&!!t.silentFallbackWarn,this._dateTimeFormatters={},this._numberFormatters={},this._path=new Tr,this._dataListeners=new Set,this._componentInstanceCreatedListener=t.componentInstanceCreatedListener||null,this._preserveDirectiveContent=void 0!==t.preserveDirectiveContent&&!!t.preserveDirectiveContent,this.pluralizationRules=t.pluralizationRules||{},this._warnHtmlInMessage=t.warnHtmlInMessage||"off",this._postTranslation=t.postTranslation||null,this._escapeParameterHtml=t.escapeParameterHtml||!1,this.getChoiceIndex=function(t,n){var r=Object.getPrototypeOf(e);if(r&&r.getChoiceIndex)return r.getChoiceIndex.call(e,t,n);var o,i;return e.locale in e.pluralizationRules?e.pluralizationRules[e.locale].apply(e,[t,n]):(o=t,i=n,o=Math.abs(o),2===i?o?o>1?1:0:1:o?Math.min(o,2):0)},this._exist=function(t,n){return!(!t||!n)&&(!Yn(e._path.getPathValue(t,n))||!!t[n])},"warn"!==this._warnHtmlInMessage&&"error"!==this._warnHtmlInMessage||Object.keys(o).forEach((function(t){e._checkLocaleMessage(t,e._warnHtmlInMessage,o[t])})),this._initVM({locale:n,fallbackLocale:r,messages:o,dateTimeFormats:i,numberFormats:a})},Nr={vm:{configurable:!0},messages:{configurable:!0},dateTimeFormats:{configurable:!0},numberFormats:{configurable:!0},availableLocales:{configurable:!0},locale:{configurable:!0},fallbackLocale:{configurable:!0},formatFallbackMessages:{configurable:!0},missing:{configurable:!0},formatter:{configurable:!0},silentTranslationWarn:{configurable:!0},silentFallbackWarn:{configurable:!0},preserveDirectiveContent:{configurable:!0},warnHtmlInMessage:{configurable:!0},postTranslation:{configurable:!0}};Mr.prototype._checkLocaleMessage=function(t,e,n){var r=function(t,e,n,o){if(qn(n))Object.keys(n).forEach((function(i){var a=n[i];qn(a)?(o.push(i),o.push("."),r(t,e,a,o),o.pop(),o.pop()):(o.push(i),r(t,e,a,o),o.pop())}));else if(Vn(n))n.forEach((function(n,i){qn(n)?(o.push("["+i+"]"),o.push("."),r(t,e,n,o),o.pop(),o.pop()):(o.push("["+i+"]"),r(t,e,n,o),o.pop())}));else if(Hn(n)){if(Cr.test(n)){var i="Detected HTML in message '"+n+"' of keypath '"+o.join("")+"' at '"+e+"'. Consider component interpolation with '<i18n>' to avoid XSS. See https://bit.ly/2ZqJzkp";"warn"===t?Gn(i):"error"===t&&function(t,e){"undefined"!=typeof console&&(console.error("[vue-i18n] "+t),e&&console.error(e.stack))}(i)}}};r(e,t,n,[])},Mr.prototype._initVM=function(t){var e=ur.config.silent;ur.config.silent=!0,this._vm=new ur({data:t}),ur.config.silent=e},Mr.prototype.destroyVM=function(){this._vm.$destroy()},Mr.prototype.subscribeDataChanging=function(t){this._dataListeners.add(t)},Mr.prototype.unsubscribeDataChanging=function(t){!function(t,e){if(t.delete(e));}(this._dataListeners,t)},Mr.prototype.watchI18nData=function(){var t=this;return this._vm.$watch("$data",(function(){t._dataListeners.forEach((function(t){ur.nextTick((function(){t&&t.$forceUpdate()}))}))}),{deep:!0})},Mr.prototype.watchLocale=function(){if(!this._sync||!this._root)return null;var t=this._vm;return this._root.$i18n.vm.$watch("locale",(function(e){t.$set(t,"locale",e),t.$forceUpdate()}),{immediate:!0})},Mr.prototype.onComponentInstanceCreated=function(t){this._componentInstanceCreatedListener&&this._componentInstanceCreatedListener(t,this)},Nr.vm.get=function(){return this._vm},Nr.messages.get=function(){return Kn(this._getMessages())},Nr.dateTimeFormats.get=function(){return Kn(this._getDateTimeFormats())},Nr.numberFormats.get=function(){return Kn(this._getNumberFormats())},Nr.availableLocales.get=function(){return Object.keys(this.messages).sort()},Nr.locale.get=function(){return this._vm.locale},Nr.locale.set=function(t){this._vm.$set(this._vm,"locale",t)},Nr.fallbackLocale.get=function(){return this._vm.fallbackLocale},Nr.fallbackLocale.set=function(t){this._localeChainCache={},this._vm.$set(this._vm,"fallbackLocale",t)},Nr.formatFallbackMessages.get=function(){return this._formatFallbackMessages},Nr.formatFallbackMessages.set=function(t){this._formatFallbackMessages=t},Nr.missing.get=function(){return this._missing},Nr.missing.set=function(t){this._missing=t},Nr.formatter.get=function(){return this._formatter},Nr.formatter.set=function(t){this._formatter=t},Nr.silentTranslationWarn.get=function(){return this._silentTranslationWarn},Nr.silentTranslationWarn.set=function(t){this._silentTranslationWarn=t},Nr.silentFallbackWarn.get=function(){return this._silentFallbackWarn},Nr.silentFallbackWarn.set=function(t){this._silentFallbackWarn=t},Nr.preserveDirectiveContent.get=function(){return this._preserveDirectiveContent},Nr.preserveDirectiveContent.set=function(t){this._preserveDirectiveContent=t},Nr.warnHtmlInMessage.get=function(){return this._warnHtmlInMessage},Nr.warnHtmlInMessage.set=function(t){var e=this,n=this._warnHtmlInMessage;if(this._warnHtmlInMessage=t,n!==t&&("warn"===t||"error"===t)){var r=this._getMessages();Object.keys(r).forEach((function(t){e._checkLocaleMessage(t,e._warnHtmlInMessage,r[t])}))}},Nr.postTranslation.get=function(){return this._postTranslation},Nr.postTranslation.set=function(t){this._postTranslation=t},Mr.prototype._getMessages=function(){return this._vm.messages},Mr.prototype._getDateTimeFormats=function(){return this._vm.dateTimeFormats},Mr.prototype._getNumberFormats=function(){return this._vm.numberFormats},Mr.prototype._warnDefault=function(t,e,n,r,o,i){if(!Yn(n))return n;if(this._missing){var a=this._missing.apply(null,[t,e,r,o]);if(Hn(a))return a}else 0;if(this._formatFallbackMessages){var s=Qn.apply(void 0,o);return this._render(e,i,s.params,e)}return e},Mr.prototype._isFallbackRoot=function(t){return!t&&!Yn(this._root)&&this._fallbackRoot},Mr.prototype._isSilentFallbackWarn=function(t){return this._silentFallbackWarn instanceof RegExp?this._silentFallbackWarn.test(t):this._silentFallbackWarn},Mr.prototype._isSilentFallback=function(t,e){return this._isSilentFallbackWarn(e)&&(this._isFallbackRoot()||t!==this.fallbackLocale)},Mr.prototype._isSilentTranslationWarn=function(t){return this._silentTranslationWarn instanceof RegExp?this._silentTranslationWarn.test(t):this._silentTranslationWarn},Mr.prototype._interpolate=function(t,e,n,r,o,i,a){if(!e)return null;var s,c=this._path.getPathValue(e,n);if(Vn(c)||qn(c))return c;if(Yn(c)){if(!qn(e))return null;if(!Hn(s=e[n])&&!Xn(s))return null}else{if(!Hn(c)&&!Xn(c))return null;s=c}return Hn(s)&&(s.indexOf("@:")>=0||s.indexOf("@.")>=0)&&(s=this._link(t,e,s,r,"raw",i,a)),this._render(s,o,i,n)},Mr.prototype._link=function(t,e,n,r,o,i,a){var s=n,c=s.match(Ir);for(var l in c)if(c.hasOwnProperty(l)){var u=c[l],p=u.match(Ar),d=p[0],h=p[1],f=u.replace(d,"").replace(kr,"");if(Zn(a,f))return s;a.push(f);var v=this._interpolate(t,e,f,r,"raw"===o?"string":o,"raw"===o?void 0:i,a);if(this._isFallbackRoot(v)){if(!this._root)throw Error("unexpected error");var b=this._root.$i18n;v=b._translate(b._getMessages(),b.locale,b.fallbackLocale,f,r,o,i)}v=this._warnDefault(t,f,v,r,Vn(i)?i:[i],o),this._modifiers.hasOwnProperty(h)?v=this._modifiers[h](v):Lr.hasOwnProperty(h)&&(v=Lr[h](v)),a.pop(),s=v?s.replace(u,v):s}return s},Mr.prototype._createMessageContext=function(t){var e=Vn(t)?t:[],n=Jn(t)?t:{};return{list:function(t){return e[t]},named:function(t){return n[t]}}},Mr.prototype._render=function(t,e,n,r){if(Xn(t))return t(this._createMessageContext(n));var o=this._formatter.interpolate(t,n,r);return o||(o=Pr.interpolate(t,n,r)),"string"!==e||Hn(o)?o:o.join("")},Mr.prototype._appendItemToChain=function(t,e,n){var r=!1;return Zn(t,e)||(r=!0,e&&(r="!"!==e[e.length-1],e=e.replace(/!/g,""),t.push(e),n&&n[e]&&(r=n[e]))),r},Mr.prototype._appendLocaleToChain=function(t,e,n){var r,o=e.split("-");do{var i=o.join("-");r=this._appendItemToChain(t,i,n),o.splice(-1,1)}while(o.length&&!0===r);return r},Mr.prototype._appendBlockToChain=function(t,e,n){for(var r=!0,o=0;o<e.length&&"boolean"==typeof r;o++){var i=e[o];Hn(i)&&(r=this._appendLocaleToChain(t,i,n))}return r},Mr.prototype._getLocaleChain=function(t,e){if(""===t)return[];this._localeChainCache||(this._localeChainCache={});var n=this._localeChainCache[t];if(!n){e||(e=this.fallbackLocale),n=[];for(var r,o=[t];Vn(o);)o=this._appendBlockToChain(n,o,e);(o=Hn(r=Vn(e)?e:Jn(e)?e.default?e.default:null:e)?[r]:r)&&this._appendBlockToChain(n,o,null),this._localeChainCache[t]=n}return n},Mr.prototype._translate=function(t,e,n,r,o,i,a){for(var s,c=this._getLocaleChain(e,n),l=0;l<c.length;l++){var u=c[l];if(!Yn(s=this._interpolate(u,t[u],r,o,i,a,[r])))return s}return null},Mr.prototype._t=function(t,e,n,r){for(var o,i=[],a=arguments.length-4;a-- >0;)i[a]=arguments[a+4];if(!t)return"";var s=Qn.apply(void 0,i);this._escapeParameterHtml&&(s.params=or(s.params));var c=s.locale||e,l=this._translate(n,c,this.fallbackLocale,t,r,"string",s.params);if(this._isFallbackRoot(l)){if(!this._root)throw Error("unexpected error");return(o=this._root).$t.apply(o,[t].concat(i))}return l=this._warnDefault(c,t,l,r,i,"string"),this._postTranslation&&null!=l&&(l=this._postTranslation(l,t)),l},Mr.prototype.t=function(t){for(var e,n=[],r=arguments.length-1;r-- >0;)n[r]=arguments[r+1];return(e=this)._t.apply(e,[t,this.locale,this._getMessages(),null].concat(n))},Mr.prototype._i=function(t,e,n,r,o){var i=this._translate(n,e,this.fallbackLocale,t,r,"raw",o);if(this._isFallbackRoot(i)){if(!this._root)throw Error("unexpected error");return this._root.$i18n.i(t,e,o)}return this._warnDefault(e,t,i,r,[o],"raw")},Mr.prototype.i=function(t,e,n){return t?(Hn(e)||(e=this.locale),this._i(t,e,this._getMessages(),null,n)):""},Mr.prototype._tc=function(t,e,n,r,o){for(var i,a=[],s=arguments.length-5;s-- >0;)a[s]=arguments[s+5];if(!t)return"";void 0===o&&(o=1);var c={count:o,n:o},l=Qn.apply(void 0,a);return l.params=Object.assign(c,l.params),a=null===l.locale?[l.params]:[l.locale,l.params],this.fetchChoice((i=this)._t.apply(i,[t,e,n,r].concat(a)),o)},Mr.prototype.fetchChoice=function(t,e){if(!t||!Hn(t))return null;var n=t.split("|");return n[e=this.getChoiceIndex(e,n.length)]?n[e].trim():t},Mr.prototype.tc=function(t,e){for(var n,r=[],o=arguments.length-2;o-- >0;)r[o]=arguments[o+2];return(n=this)._tc.apply(n,[t,this.locale,this._getMessages(),null,e].concat(r))},Mr.prototype._te=function(t,e,n){for(var r=[],o=arguments.length-3;o-- >0;)r[o]=arguments[o+3];var i=Qn.apply(void 0,r).locale||e;return this._exist(n[i],t)},Mr.prototype.te=function(t,e){return this._te(t,this.locale,this._getMessages(),e)},Mr.prototype.getLocaleMessage=function(t){return Kn(this._vm.messages[t]||{})},Mr.prototype.setLocaleMessage=function(t,e){"warn"!==this._warnHtmlInMessage&&"error"!==this._warnHtmlInMessage||this._checkLocaleMessage(t,this._warnHtmlInMessage,e),this._vm.$set(this._vm.messages,t,e)},Mr.prototype.mergeLocaleMessage=function(t,e){"warn"!==this._warnHtmlInMessage&&"error"!==this._warnHtmlInMessage||this._checkLocaleMessage(t,this._warnHtmlInMessage,e),this._vm.$set(this._vm.messages,t,nr(void 0!==this._vm.messages[t]&&Object.keys(this._vm.messages[t]).length?this._vm.messages[t]:{},e))},Mr.prototype.getDateTimeFormat=function(t){return Kn(this._vm.dateTimeFormats[t]||{})},Mr.prototype.setDateTimeFormat=function(t,e){this._vm.$set(this._vm.dateTimeFormats,t,e),this._clearDateTimeFormat(t,e)},Mr.prototype.mergeDateTimeFormat=function(t,e){this._vm.$set(this._vm.dateTimeFormats,t,nr(this._vm.dateTimeFormats[t]||{},e)),this._clearDateTimeFormat(t,e)},Mr.prototype._clearDateTimeFormat=function(t,e){for(var n in e){var r=t+"__"+n;this._dateTimeFormatters.hasOwnProperty(r)&&delete this._dateTimeFormatters[r]}},Mr.prototype._localizeDateTime=function(t,e,n,r,o){for(var i=e,a=r[i],s=this._getLocaleChain(e,n),c=0;c<s.length;c++){var l=s[c];if(i=l,!Yn(a=r[l])&&!Yn(a[o]))break}if(Yn(a)||Yn(a[o]))return null;var u=a[o],p=i+"__"+o,d=this._dateTimeFormatters[p];return d||(d=this._dateTimeFormatters[p]=new Intl.DateTimeFormat(i,u)),d.format(t)},Mr.prototype._d=function(t,e,n){if(!n)return new Intl.DateTimeFormat(e).format(t);var r=this._localizeDateTime(t,e,this.fallbackLocale,this._getDateTimeFormats(),n);if(this._isFallbackRoot(r)){if(!this._root)throw Error("unexpected error");return this._root.$i18n.d(t,n,e)}return r||""},Mr.prototype.d=function(t){for(var e=[],n=arguments.length-1;n-- >0;)e[n]=arguments[n+1];var r=this.locale,o=null;return 1===e.length?Hn(e[0])?o=e[0]:Jn(e[0])&&(e[0].locale&&(r=e[0].locale),e[0].key&&(o=e[0].key)):2===e.length&&(Hn(e[0])&&(o=e[0]),Hn(e[1])&&(r=e[1])),this._d(t,r,o)},Mr.prototype.getNumberFormat=function(t){return Kn(this._vm.numberFormats[t]||{})},Mr.prototype.setNumberFormat=function(t,e){this._vm.$set(this._vm.numberFormats,t,e),this._clearNumberFormat(t,e)},Mr.prototype.mergeNumberFormat=function(t,e){this._vm.$set(this._vm.numberFormats,t,nr(this._vm.numberFormats[t]||{},e)),this._clearNumberFormat(t,e)},Mr.prototype._clearNumberFormat=function(t,e){for(var n in e){var r=t+"__"+n;this._numberFormatters.hasOwnProperty(r)&&delete this._numberFormatters[r]}},Mr.prototype._getNumberFormatter=function(t,e,n,r,o,i){for(var a=e,s=r[a],c=this._getLocaleChain(e,n),l=0;l<c.length;l++){var u=c[l];if(a=u,!Yn(s=r[u])&&!Yn(s[o]))break}if(Yn(s)||Yn(s[o]))return null;var p,d=s[o];if(i)p=new Intl.NumberFormat(a,Object.assign({},d,i));else{var h=a+"__"+o;(p=this._numberFormatters[h])||(p=this._numberFormatters[h]=new Intl.NumberFormat(a,d))}return p},Mr.prototype._n=function(t,e,n,r){if(!Mr.availabilities.numberFormat)return"";if(!n)return(r?new Intl.NumberFormat(e,r):new Intl.NumberFormat(e)).format(t);var o=this._getNumberFormatter(t,e,this.fallbackLocale,this._getNumberFormats(),n,r),i=o&&o.format(t);if(this._isFallbackRoot(i)){if(!this._root)throw Error("unexpected error");return this._root.$i18n.n(t,Object.assign({},{key:n,locale:e},r))}return i||""},Mr.prototype.n=function(t){for(var e=[],n=arguments.length-1;n-- >0;)e[n]=arguments[n+1];var r=this.locale,o=null,i=null;return 1===e.length?Hn(e[0])?o=e[0]:Jn(e[0])&&(e[0].locale&&(r=e[0].locale),e[0].key&&(o=e[0].key),i=Object.keys(e[0]).reduce((function(t,n){var r;return Zn(zn,n)?Object.assign({},t,((r={})[n]=e[0][n],r)):t}),null)):2===e.length&&(Hn(e[0])&&(o=e[0]),Hn(e[1])&&(r=e[1])),this._n(t,r,o,i)},Mr.prototype._ntp=function(t,e,n,r){if(!Mr.availabilities.numberFormat)return[];if(!n)return(r?new Intl.NumberFormat(e,r):new Intl.NumberFormat(e)).formatToParts(t);var o=this._getNumberFormatter(t,e,this.fallbackLocale,this._getNumberFormats(),n,r),i=o&&o.formatToParts(t);if(this._isFallbackRoot(i)){if(!this._root)throw Error("unexpected error");return this._root.$i18n._ntp(t,e,n,r)}return i||[]},Object.defineProperties(Mr.prototype,Nr),Object.defineProperty(Mr,"availabilities",{get:function(){if(!Er){var t="undefined"!=typeof Intl;Er={dateTimeFormat:t&&void 0!==Intl.DateTimeFormat,numberFormat:t&&void 0!==Intl.NumberFormat}}return Er}}),Mr.install=gr,Mr.version="8.24.4";var Dr=Mr;
/*!
 * vssue - A vue-powered issue-based comment plugin
 *
 * @version v1.4.8
 * @link https://vssue.js.org
 * @license MIT
 * @copyright 2018-2021 meteorlxy
 */
/*! *****************************************************************************
Copyright (c) Microsoft Corporation. All rights reserved.
Licensed under the Apache License, Version 2.0 (the "License"); you may not use
this file except in compliance with the License. You may obtain a copy of the
License at http://www.apache.org/licenses/LICENSE-2.0

THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
MERCHANTABLITY OR NON-INFRINGEMENT.

See the Apache Version 2.0 License for specific language governing permissions
and limitations under the License.
***************************************************************************** */function jr(t,e,n,r){var o,i=arguments.length,a=i<3?e:null===r?r=Object.getOwnPropertyDescriptor(e,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)a=Reflect.decorate(t,e,n,r);else for(var s=t.length-1;s>=0;s--)(o=t[s])&&(a=(i<3?o(a):i>3?o(e,n,a):o(e,n))||a);return i>3&&a&&Object.defineProperty(e,n,a),a}var Rr=i.default.extend({name:"Iconfont"});function Fr(t,e,n,r,o,i,a,s,c,l){"boolean"!=typeof a&&(c=s,s=a,a=!1);const u="function"==typeof n?n.options:n;let p;if(t&&t.render&&(u.render=t.render,u.staticRenderFns=t.staticRenderFns,u._compiled=!0,o&&(u.functional=!0)),r&&(u._scopeId=r),i?(p=function(t){(t=t||this.$vnode&&this.$vnode.ssrContext||this.parent&&this.parent.$vnode&&this.parent.$vnode.ssrContext)||"undefined"==typeof __VUE_SSR_CONTEXT__||(t=__VUE_SSR_CONTEXT__),e&&e.call(this,c(t)),t&&t._registeredComponents&&t._registeredComponents.add(i)},u._ssrRegister=p):e&&(p=a?function(t){e.call(this,l(t,this.$root.$options.shadowRoot))}:function(t){e.call(this,s(t))}),p)if(u.functional){const t=u.render;u.render=function(e,n){return p.call(n),t(e,n)}}else{const t=u.beforeCreate;u.beforeCreate=t?[].concat(t,p):[p]}return n}"undefined"!=typeof navigator&&/msie [6-9]\\b/.test(navigator.userAgent.toLowerCase());const Ur=Fr({render:function(t,e){var n=e._c;return n("svg",{directives:[{name:"show",rawName:"v-show",value:!1,expression:"false"}]},[n("symbol",{attrs:{id:"vssue-icon-bitbucket",viewBox:"0 0 1024 1024"}},[n("path",{attrs:{d:"M579.5522464 489.45249493q4.8371808 38.38537173-30.81752427 61.55702827t-67.95459093 3.66689493q-23.79580907-10.37653333-32.6119616-35.34262826t-0.31207573-50.01020907 31.67573333-35.34262827q21.92335253-11.00068587 44.1587808-7.33379093t39.00952427 21.61127573 16.77409493 41.1160384zM647.19476053 476.65737173q-8.50407573-65.22392427-68.8908192-99.9424t-120.07131413-7.9579424q-38.38537173 17.08617173-61.24495253 53.9111616t-21.0651424 78.95527574q2.41859093 55.4715424 47.20152426 94.48106666t100.87862827 34.1723424q55.4715424-4.8371808 92.60860907-51.18049493t30.50544746-102.43900907zM792.93434133 146.32472427q-12.17097173-16.4620192-34.1723424-27.15062827t-35.34262826-13.41927573-43.30057174-7.64586667q-177.33729493-28.63299093-345.00022826 1.24830507-26.2144 4.29104747-40.25782827 7.33379093t-33.54819093 13.41927573-30.50544747 26.2144q18.2564576 17.08617173 46.34331413 27.6967616t44.78293334 13.41927574 53.36502826 7.02171413q138.95192427 17.71032427 273.06666667 0.62415253 38.38537173-4.8371808 54.53531413-7.33379093t44.1587808-13.1072 45.7191616-28.32091413zM827.65281813 777.10872427q-4.8371808 15.83786667-9.44030506 46.65539093t-8.50407574 51.18049493-17.39824746 42.6764192-35.34262827 34.4064q-52.4288 29.2571424-115.46819093 43.61264747t-123.1140576 13.41927573-122.8019808-11.3127616q-28.0088384-4.8371808-49.69813334-11.00068586t-46.65539093-16.4620192-44.4708576-26.52647574-31.67573333-37.4491424q-15.21371413-58.51428587-34.71847574-177.96144746l3.66689494-9.7523808 11.00068586-5.46133334q135.9091808 90.1900192 308.72137174 90.1900192t309.34552426-90.1900192q12.79512427 3.66689493 14.5895616 14.04342827t-3.0427424 27.46270507-4.8371808 22.54750506zM937.97175147 191.41973333q-15.83786667 101.8148576-67.64251414 399.22346667-3.0427424 18.2564576-16.4620192 34.1723424t-26.52647573 24.3419424-33.23611413 18.88060907q-153.61950507 76.7707424-371.8387808 53.67710506-151.12289493-16.4620192-240.14262827-84.72868586-9.12822827-7.33379093-15.52579093-16.1499424t-10.37653334-21.2992-5.46133333-20.75306667-3.66689493-24.10788587-3.3548192-21.2992q-5.46133333-30.50544747-16.1499424-91.43832426t-17.08617174-98.4600384-14.35550506-89.8779424-13.41927574-96.27550507q1.7944384-15.83786667 10.68860907-29.5692192t19.19268587-22.8595808 27.46270506-18.2564576 28.0088384-13.73135253 29.2571424-11.3127616q76.22460907-28.0088384 190.75657174-39.00952427 231.0144-22.54750507 412.01859093 30.50544747 94.48106667 28.0088384 131.072 74.35215253 9.7523808 12.17097173 10.0644576 31.0515808t-3.3548192 32.9240384z"}})]),e._v(" "),n("symbol",{attrs:{id:"vssue-icon-gitea",viewBox:"0 0 1024 1024"}},[n("path",{attrs:{d:"M184.31868985 236.10860742C106.94832667 235.94086648 3.32655508 285.13080468 9.02973665 408.46209936c8.93218827 192.65010787 206.32096845 210.5144844 285.20099725 212.06608453 8.63864186 36.14810496 101.48307766 160.77938883 170.21479898 167.32127321h301.09442177c180.57278288-11.99345499 315.77172611-546.07960359 215.54670217-548.09249109-165.7696721 7.79993906-264.02374305 11.74184405-348.27147151 12.41280591v166.69224585l-26.25140843-11.61603761-0.16773997-154.99233728c-96.70246985-0.04193548-181.83083757-4.52899687-343.4069947-12.49667687-20.21274496-0.12580547-48.39316992-3.5644886-78.67035236-3.64835859z m10.94507577 68.14462849h9.22573371c10.98701124 98.75729283 28.85138778 156.50200291 64.99949274 244.73357185-92.25734394-10.90314029-170.75995634-37.69970509-185.18564974-137.75698809-7.46445813-51.78991757 17.69663558-105.84433456 110.96042329-107.01851827z m358.83913087 97.07988723c6.29027343 0.08386999 12.70635233 1.25805468 18.74501482 4.02577499l31.40943263 13.54505513-22.51917887 41.05451824a28.18042496 25.03528825 0 0 0-10.10637297 1.59353561 28.18042496 25.03528825 0 0 0-16.98373825 32.038459 28.18042496 25.03528825 0 0 0 4.69673781 7.29671718l-38.83195528 70.70267333a28.18042496 25.03528825 0 0 0-9.30960467 1.59353659 28.18042496 25.03528825 0 0 0-16.98373825 32.038459 28.18042496 25.03528825 0 0 0 36.06423497 15.09665623 28.18042496 25.03528825 0 0 0 16.94180276-32.08039449 28.18042496 25.03528825 0 0 0-6.62575434-9.22573468l37.82551056-68.85752581a28.18042496 25.03528825 0 0 0 12.28700044-1.25805469 28.18042496 25.03528825 0 0 0 8.93218826-4.69673783c14.59343435 6.12253248 26.54495386 11.11281671 35.14166122 15.34826717 12.91602778 6.37414341 17.48696012 10.60959485 18.87082027 15.30633169 1.38386015 4.61286685-0.12580547 13.50312062-7.42252263 29.10299872-5.45157063 11.61603859-14.46762889 28.09655497-25.11915823 47.51253164a28.18042496 25.03528825 0 0 0-10.52572486 1.59353659 28.18042496 25.03528825 0 0 0-16.98373826 32.038459 28.18042496 25.03528825 0 0 0 36.06423498 15.09665623 28.18042496 25.03528825 0 0 0 16.94180278-32.03845901 28.18042496 25.03528825 0 0 0-5.74511608-8.47090188c10.52572388-19.20630122 19.58371762-35.72875308 25.41270465-48.14155897 7.88380904-16.85793279 11.99345499-29.39654416 8.38703091-41.51580463-3.60642311-12.11926046-14.67730434-20.0030695-29.35460966-27.25785217-9.6450856-4.73867233-21.68047607-9.77089106-36.06423399-15.80955357a28.18042496 25.03528825 0 0 0-1.59353562-10.022502 28.18042496 25.03528825 0 0 0-6.08059796-8.7644483l22.14176246-40.38355541 122.61839638 52.96410227c22.14176247 9.6031511 31.2836262 33.12877372 20.54822685 52.8382968l-84.28966393 154.32137544c-10.77733482 19.66758857-37.23841869 27.80300855-59.38018118 18.24179293l-173.48574115-74.98005927c-22.14176247-9.5612156-31.32556167-33.12877372-20.54822687-52.83829679l84.28966395-154.27943995c7.38058716-13.54505513 22.22563246-21.59660511 37.951317-22.22563246h2.68384935z"}})]),e._v(" "),n("symbol",{attrs:{id:"vssue-icon-gitee",viewBox:"0 0 1024 1024"}},[n("path",{attrs:{d:"M978.404275 409.561604H455.061338c-25.117645 0-45.499734 20.382089-45.499734 45.499734l-0.031997 113.781333c0 25.117645 20.350092 45.499734 45.499734 45.531731h318.594132c25.117645 0 45.499734 20.382089 45.499734 45.499735v22.749867a136.5312 136.5312 0 0 1-136.5312 136.5312H250.248539a45.499734 45.499734 0 0 1-45.499734-45.499734V341.343999a136.5312 136.5312 0 0 1 136.5312-136.5312L978.308284 204.780802c25.117645 0 45.499734-20.350092 45.499734-45.467738L1023.904009 45.531731h0.031997A45.499734 45.499734 0 0 0 978.468269 0h-0.031997L341.343999 0.031997C152.84967 0.031997 0.031997 152.84967 0.031997 341.343999v637.092273c0 25.117645 20.382089 45.499734 45.499734 45.499734h671.233072a307.171203 307.171203 0 0 0 307.171203-307.171203v-261.671468c0-25.117645-20.382089-45.499734-45.499734-45.499734z"}})]),e._v(" "),n("symbol",{attrs:{id:"vssue-icon-github",viewBox:"0 0 1024 1024"}},[n("path",{attrs:{d:"M512 20.4425c-278.334 0-504 225.6345-504 504 0 222.6735 144.4275 411.6105 344.673 478.233 25.2 4.662 34.461-10.9305 34.461-24.255 0-12.0015-0.4725-51.723-0.693-93.8385-140.238 30.492-169.8165-59.472-169.8165-59.472-22.932-58.2435-55.944-73.7415-55.944-73.7415-45.738-31.2795 3.465-30.6495 3.465-30.6495 50.589 3.5595 77.238 51.9435 77.238 51.9435 44.9505 77.049 117.9045 54.7785 146.664 41.895 4.5045-32.571 17.577-54.81 32.004-67.41-111.951-12.726-229.635-55.9755-229.635-249.0705 0-55.0305 19.6875-99.981 51.9435-135.2925-5.229-12.6945-22.491-63.945 4.8825-133.371 0 0 42.336-13.545 138.6315 51.66 40.194-11.1825 83.3175-16.758 126.1575-16.9785 42.8085 0.189 85.9635 5.796 126.252 16.9785 96.201-65.205 138.4425-51.66 138.4425-51.66 27.4365 69.426 10.1745 120.6765 4.9455 133.371 32.319 35.28 51.8805 80.262 51.8805 135.2925 0 193.5675-117.9045 236.187-230.139 248.6925 18.081 15.6555 34.1775 46.305 34.1775 93.3345 0 67.4415-0.5985 121.716-0.5985 138.3165 0 13.419 9.072 29.1375 34.6185 24.192 200.151-66.717 344.3895-255.5595 344.3895-478.17 0-278.3655-225.666-504-504-504z"}})]),e._v(" "),n("symbol",{attrs:{id:"vssue-icon-gitlab",viewBox:"0 0 1024 1024"}},[n("path",{attrs:{d:"M66.61375986 405.11600042L512.11376028 976.03999972 23.84576 621.65599958a39.312 39.312 0 0 1-14.07600042-43.30799944l56.8080007-173.26800028z m259.88400014 0h371.26800014L512.14975986 976.03999972zM215.11376 60.88400042l111.384 344.232H66.61375986l111.384-344.232a19.72800014 19.72800014 0 0 1 37.11600014 0z m742.49999972 344.232l56.8080007 173.2679993a39.23999986 39.23999986 0 0 1-14.07600042 43.30800042l-488.26800028 354.38400014 445.50000042-570.92400028z m0 0h-259.88400014l111.384-344.232a19.72800014 19.72800014 0 0 1 37.11600014 0z"}})]),e._v(" "),n("symbol",{attrs:{id:"vssue-icon-loading",viewBox:"0 0 1024 1024"}},[n("path",{attrs:{d:"M843.307 742.24c0 3.217 2.607 5.824 5.824 5.824s5.824-2.607 5.824-5.824a5.823 5.823 0 0 0-5.824-5.824 5.823 5.823 0 0 0-5.824 5.824zM714.731 874.912c0 6.398 5.186 11.584 11.584 11.584s11.584-5.186 11.584-11.584-5.186-11.584-11.584-11.584-11.584 5.186-11.584 11.584zM541.419 943.2c0 9.614 7.794 17.408 17.408 17.408s17.408-7.794 17.408-17.408-7.794-17.408-17.408-17.408-17.408 7.794-17.408 17.408z m-186.56-9.152c0 12.795 10.373 23.168 23.168 23.168s23.168-10.373 23.168-23.168-10.373-23.168-23.168-23.168-23.168 10.373-23.168 23.168zM189.355 849.12c0 16.012 12.98 28.992 28.992 28.992s28.992-12.98 28.992-28.992-12.98-28.992-28.992-28.992-28.992 12.98-28.992 28.992zM74.731 704.736c0 19.228 15.588 34.816 34.816 34.816s34.816-15.588 34.816-34.816-15.588-34.816-34.816-34.816-34.816 15.588-34.816 34.816z m-43.008-177.28c0 22.41 18.166 40.576 40.576 40.576s40.576-18.166 40.576-40.576-18.166-40.576-40.576-40.576-40.576 18.166-40.576 40.576z m35.392-176.128c0 25.626 20.774 46.4 46.4 46.4s46.4-20.774 46.4-46.4c0-25.626-20.774-46.4-46.4-46.4-25.626 0-46.4 20.774-46.4 46.4z m106.176-142.016c0 28.843 23.381 52.224 52.224 52.224s52.224-23.381 52.224-52.224c0-28.843-23.381-52.224-52.224-52.224-28.843 0-52.224 23.381-52.224 52.224z m155.904-81.344c0 32.024 25.96 57.984 57.984 57.984s57.984-25.96 57.984-57.984-25.96-57.984-57.984-57.984-57.984 25.96-57.984 57.984z m175.104-5.056c0 35.24 28.568 63.808 63.808 63.808s63.808-28.568 63.808-63.808c0-35.24-28.568-63.808-63.808-63.808-35.24 0-63.808 28.568-63.808 63.808z m160.32 72.128c0 38.421 31.147 69.568 69.568 69.568s69.568-31.147 69.568-69.568-31.147-69.568-69.568-69.568-69.568 31.147-69.568 69.568z m113.92 135.488c0 41.638 33.754 75.392 75.392 75.392s75.392-33.754 75.392-75.392-33.754-75.392-75.392-75.392-75.392 33.754-75.392 75.392z m45.312 175.488c0 44.854 36.362 81.216 81.216 81.216s81.216-36.362 81.216-81.216c0-44.854-36.362-81.216-81.216-81.216-44.854 0-81.216 36.362-81.216 81.216z"}})]),e._v(" "),n("symbol",{attrs:{id:"vssue-icon-like",viewBox:"0 0 1024 1024"}},[n("path",{attrs:{d:"M885.9 533.7c16.8-22.2 26.1-49.4 26.1-77.7 0-44.9-25.1-87.4-65.5-111.1a67.67 67.67 0 0 0-34.3-9.3H572.4l6-122.9c1.4-29.7-9.1-57.9-29.5-79.4-20.5-21.5-48.1-33.4-77.9-33.4-52 0-98 35-111.8 85.1l-85.9 311H144c-17.7 0-32 14.3-32 32v364c0 17.7 14.3 32 32 32h601.3c9.2 0 18.2-1.8 26.5-5.4 47.6-20.3 78.3-66.8 78.3-118.4 0-12.6-1.8-25-5.4-37 16.8-22.2 26.1-49.4 26.1-77.7 0-12.6-1.8-25-5.4-37 16.8-22.2 26.1-49.4 26.1-77.7-0.2-12.6-2-25.1-5.6-37.1zM184 852V568h81v284h-81z m636.4-353l-21.9 19 13.9 25.4c4.6 8.4 6.9 17.6 6.9 27.3 0 16.5-7.2 32.2-19.6 43l-21.9 19 13.9 25.4c4.6 8.4 6.9 17.6 6.9 27.3 0 16.5-7.2 32.2-19.6 43l-21.9 19 13.9 25.4c4.6 8.4 6.9 17.6 6.9 27.3 0 22.4-13.2 42.6-33.6 51.8H329V564.8l99.5-360.5c5.2-18.9 22.5-32.2 42.2-32.3 7.6 0 15.1 2.2 21.1 6.7 9.9 7.4 15.2 18.6 14.6 30.5l-9.6 198.4h314.4C829 418.5 840 436.9 840 456c0 16.5-7.2 32.1-19.6 43z"}})]),e._v(" "),n("symbol",{attrs:{id:"vssue-icon-unlike",viewBox:"0 0 1024 1024"}},[n("path",{attrs:{d:"M885.9 490.3c3.6-12 5.4-24.4 5.4-37 0-28.3-9.3-55.5-26.1-77.7 3.6-12 5.4-24.4 5.4-37 0-28.3-9.3-55.5-26.1-77.7 3.6-12 5.4-24.4 5.4-37 0-51.6-30.7-98.1-78.3-118.4-8.3-3.6-17.2-5.4-26.5-5.4H144c-17.7 0-32 14.3-32 32v364c0 17.7 14.3 32 32 32h129.3l85.8 310.8C372.9 889 418.9 924 470.9 924c29.7 0 57.4-11.8 77.9-33.4 20.5-21.5 31-49.7 29.5-79.4l-6-122.9h239.9c12.1 0 23.9-3.2 34.3-9.3 40.4-23.5 65.5-66.1 65.5-111 0-28.3-9.3-55.5-26.1-77.7zM184 456V172h81v284h-81z m627.2 160.4H496.8l9.6 198.4c0.6 11.9-4.7 23.1-14.6 30.5-6.1 4.5-13.6 6.8-21.1 6.7-19.6-0.1-36.9-13.4-42.2-32.3L329 459.2V172h415.4c20.4 9.2 33.6 29.4 33.6 51.8 0 9.7-2.3 18.9-6.9 27.3l-13.9 25.4 21.9 19c12.5 10.8 19.6 26.5 19.6 43 0 9.7-2.3 18.9-6.9 27.3l-13.9 25.4 21.9 19c12.5 10.8 19.6 26.5 19.6 43 0 9.7-2.3 18.9-6.9 27.3l-14 25.5 21.9 19c12.5 10.8 19.6 26.5 19.6 43 0 19.1-11 37.5-28.8 48.4z"}})]),e._v(" "),n("symbol",{attrs:{id:"vssue-icon-heart",viewBox:"0 0 1024 1024"}},[n("path",{attrs:{d:"M923 283.6c-13.4-31.1-32.6-58.9-56.9-82.8-24.3-23.8-52.5-42.4-84-55.5-32.5-13.5-66.9-20.3-102.4-20.3-49.3 0-97.4 13.5-139.2 39-10 6.1-19.5 12.8-28.5 20.1-9-7.3-18.5-14-28.5-20.1-41.8-25.5-89.9-39-139.2-39-35.5 0-69.9 6.8-102.4 20.3-31.4 13-59.7 31.7-84 55.5-24.4 23.9-43.5 51.7-56.9 82.8-13.9 32.3-21 66.6-21 101.9 0 33.3 6.8 68 20.3 103.3 11.3 29.5 27.5 60.1 48.2 91 32.8 48.9 77.9 99.9 133.9 151.6 92.8 85.7 184.7 144.9 188.6 147.3l23.7 15.2c10.5 6.7 24 6.7 34.5 0l23.7-15.2c3.9-2.5 95.7-61.6 188.6-147.3 56-51.7 101.1-102.7 133.9-151.6 20.7-30.9 37-61.5 48.2-91 13.5-35.3 20.3-70 20.3-103.3 0.1-35.3-7-69.6-20.9-101.9zM512 814.8S156 586.7 156 385.5C156 283.6 240.3 201 344.3 201c73.1 0 136.5 40.8 167.7 100.4C543.2 241.8 606.6 201 679.7 201c104 0 188.3 82.6 188.3 184.5 0 201.2-356 429.3-356 429.3z"}})]),e._v(" "),n("symbol",{attrs:{id:"vssue-icon-edit",viewBox:"0 0 1024 1024"}},[n("path",{attrs:{d:"M723.2 917.76H286.72c-65.28 0-118.4-51.2-118.4-113.92V261.76C168.32 198.4 221.44 147.2 286.72 147.2h375.04c17.92 0 32 14.08 32 32s-14.08 32-32 32H286.72c-30.08 0-54.4 22.4-54.4 49.92v542.08c0 27.52 24.32 49.92 54.4 49.92H723.2c30.08 0 54.4-22.4 54.4-49.92V440.32c0-17.92 14.08-32 32-32s32 14.08 32 32v363.52c0 62.72-53.12 113.92-118.4 113.92z"}}),e._v(" "),n("path",{attrs:{d:"M499.84 602.24c-7.68 0-14.72-2.56-21.12-7.68-13.44-11.52-14.72-32-3.2-45.44L780.16 198.4c11.52-13.44 32-14.72 45.44-3.2s14.72 32 3.2 45.44L524.16 591.36c-6.4 7.04-15.36 10.88-24.32 10.88z"}})]),e._v(" "),n("symbol",{attrs:{id:"vssue-icon-delete",viewBox:"0 0 1024 1024"}},[n("path",{attrs:{d:"M677.647059 256l0-90.352941c0-37.436235-23.461647-60.235294-61.771294-60.235294L408.094118 105.411765c-38.249412 0-61.741176 22.799059-61.741176 60.235294l0 90.352941-180.705882 0 0 60.235294 60.235294 0 0 512c0 54.272 33.972706 90.352941 90.352941 90.352941l391.529412 0c55.085176 0 90.352941-33.490824 90.352941-90.352941l0-512 60.235294 0 0-60.235294L677.647059 256zM406.588235 165.647059l210.823529 0-1.264941 90.352941L406.588235 256 406.588235 165.647059zM737.882353 858.352941l-451.764706 0 0-542.117647 451.764706 0L737.882353 858.352941zM466.823529 376.470588l-58.729412 0-1.505882 391.529412 60.235294 0L466.823529 376.470588zM617.411765 376.470588l-60.235294 0 0 391.529412 60.235294 0L617.411765 376.470588z"}})]),e._v(" "),n("symbol",{attrs:{id:"vssue-icon-reply",viewBox:"0 0 1024 1024"}},[n("path",{attrs:{d:"M426.666667 384 426.666667 213.333333 128 512 426.666667 810.666667 426.666667 635.733333C640 635.733333 789.333333 704 896 853.333333 853.333333 640 725.333333 426.666667 426.666667 384Z"}})]),e._v(" "),n("symbol",{attrs:{id:"vssue-icon-error",viewBox:"0 0 1024 1024"}},[n("path",{attrs:{d:"M512 720m-48 0a48 48 0 1 0 96 0 48 48 0 1 0-96 0Z"}}),e._v(" "),n("path",{attrs:{d:"M480 416v184c0 4.4 3.6 8 8 8h48c4.4 0 8-3.6 8-8V416c0-4.4-3.6-8-8-8h-48c-4.4 0-8 3.6-8 8z"}}),e._v(" "),n("path",{attrs:{d:"M955.7 856l-416-720c-6.2-10.7-16.9-16-27.7-16s-21.6 5.3-27.7 16l-416 720C56 877.4 71.4 904 96 904h832c24.6 0 40-26.6 27.7-48z m-783.5-27.9L512 239.9l339.8 588.2H172.2z"}})])])},staticRenderFns:[]},void 0,Rr,void 0,!0,void 0,!1,void 0,void 0,void 0);const Br=Fr({},void 0,i.default.extend({name:"TransitionFade",functional:!0,props:{group:{type:Boolean,required:!1,default:!1},tag:{type:String,required:!1,default:"div"}},render:(t,{props:e,children:n})=>t(e.group?"TransitionGroup":"Transition",{props:{name:"fade",mode:"out-in",appear:!0,tag:e.tag}},n)}),void 0,void 0,void 0,!1,void 0,void 0,void 0);const zr=Fr({},void 0,i.default.extend({name:"VssueIcon",functional:!0,props:{name:{type:String,required:!0},title:{type:String,required:!1,default:null}},render:(t,{props:e,data:n})=>t("svg",Object.assign(Object.assign({},n),{class:["vssue-icon","vssue-icon-"+e.name],attrs:{"aria-hidden":"true"}}),[t("title",e.title),t("use",{attrs:{"xlink:href":"#vssue-icon-"+e.name}})])}),void 0,void 0,void 0,!1,void 0,void 0,void 0);let Gr=class extends i.default{constructor(){super(...arguments),this.editMode=!1,this.editContent=this.comment.contentRaw,this.creatingReactions=[],this.isPutingComment=!1,this.isDeletingComment=!1}get currentUser(){return this.vssue.user?this.vssue.user.username:null}get content(){return this.comment.content}get author(){return this.comment.author}get createdAt(){return Fn(this.comment.createdAt)}get updatedAt(){return Fn(this.comment.updatedAt)}get showReactions(){return Boolean(this.vssue.API&&this.vssue.API.platform.meta.reactable&&this.comment.reactions&&!this.editMode)}get reactionKeys(){return["heart","like","unlike"]}get editContentRows(){return this.editContent.split("\n").length-1}get editInputRows(){return this.editContentRows<3?5:this.editContentRows+2}async postReaction({reaction:t}){try{if(this.creatingReactions.includes(t))return;this.creatingReactions.push(t);await this.vssue.postCommentReaction({commentId:this.comment.id,reaction:t})||this.vssue.$emit("error",new Error(this.vssue.$t("reactionGiven",{reaction:this.vssue.$t(t)})));const e=await this.vssue.getCommentReactions({commentId:this.comment.id});e&&(this.comment.reactions=e)}finally{this.creatingReactions.splice(this.creatingReactions.findIndex(e=>e===t),1)}}enterEdit(){this.editMode=!0,this.$nextTick(()=>{this.$refs.input.focus()})}resetEdit(){this.editMode=!1,this.editContent=this.comment.contentRaw}async putComment(){try{if(this.vssue.isPending)return;if(this.editContent!==this.comment.contentRaw){this.isPutingComment=!0,this.vssue.isUpdatingComment=!0;const t=await this.vssue.putComment({commentId:this.comment.id,content:this.editContent});t&&this.vssue.comments.data.splice(this.vssue.comments.data.findIndex(t=>t.id===this.comment.id),1,t)}this.editMode=!1}finally{this.isPutingComment=!1,this.vssue.isUpdatingComment=!1}}async deleteComment(){try{if(this.vssue.isPending)return;if(!window.confirm(this.vssue.$t("deleteConfirm")))return;this.isDeletingComment=!0,this.vssue.isUpdatingComment=!0;await this.vssue.deleteComment({commentId:this.comment.id})?(this.vssue.comments.count-=1,this.vssue.comments.data.length>1&&this.vssue.comments.data.splice(this.vssue.comments.data.findIndex(t=>t.id===this.comment.id),1),this.vssue.query.page>1&&this.vssue.query.page>Math.ceil(this.vssue.comments.count/this.vssue.query.perPage)?this.vssue.query.page-=1:await this.vssue.getComments()):this.vssue.$emit("error",new Error(this.vssue.$t("deleteFailed")))}finally{this.isDeletingComment=!1,this.vssue.isUpdatingComment=!1}}};jr([kn({type:Object,required:!0})],Gr.prototype,"comment",void 0),jr([On()],Gr.prototype,"vssue",void 0),Gr=jr([Object(Sn.b)({components:{VssueIcon:zr}})],Gr);const Vr=Fr({render:function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("div",{staticClass:"vssue-comment",class:{"vssue-comment-edit-mode":t.editMode,"vssue-comment-disabled":t.isDeletingComment||t.isPutingComment}},[n("div",{staticClass:"vssue-comment-avatar"},[n("a",{attrs:{href:t.author.homepage,title:t.author.username,target:"_blank",rel:"noopener noreferrer"}},[n("img",{attrs:{src:t.author.avatar,alt:t.author.username}})])]),t._v(" "),n("div",{staticClass:"vssue-comment-body"},[t._t("body",[n("div",{staticClass:"vssue-comment-header"},[n("span",{staticClass:"vssue-comment-author"},[n("a",{attrs:{href:t.author.homepage,title:t.author.username,target:"_blank",rel:"noopener noreferrer"}},[t._v("\n            "+t._s(t.author.username)+"\n          ")])]),t._v(" "),n("span",{staticClass:"vssue-comment-created-at"},[t._v("\n          "+t._s(t.createdAt)+"\n        ")])]),t._v(" "),n("div",{staticClass:"vssue-comment-main"},[t.editMode?n("textarea",{directives:[{name:"model",rawName:"v-model",value:t.editContent,expression:"editContent"}],ref:"input",staticClass:"vssue-edit-comment-input",attrs:{rows:t.editInputRows},domProps:{value:t.editContent},on:{keyup:function(e){return!e.type.indexOf("key")&&t._k(e.keyCode,"enter",13,e.key,"Enter")?null:e.ctrlKey?t.putComment():null},input:function(e){e.target.composing||(t.editContent=e.target.value)}}}):n("article",{staticClass:"markdown-body",domProps:{innerHTML:t._s(t.content)}})]),t._v(" "),n("div",{staticClass:"vssue-comment-footer"},[t.editMode?n("span",{staticClass:"vssue-comment-hint"},[t._v("\n          "+t._s(t.vssue.$t("editMode"))+"\n        ")]):t._e(),t._v(" "),t.showReactions?n("span",{staticClass:"vssue-comment-reactions"},t._l(t.reactionKeys,(function(e){return n("span",{key:e,staticClass:"vssue-comment-reaction",attrs:{title:t.vssue.$t(t.creatingReactions.includes(e)?"loading":e)},on:{click:function(n){return t.postReaction({reaction:e})}}},[n("VssueIcon",{attrs:{name:t.creatingReactions.includes(e)?"loading":e,title:t.vssue.$t(t.creatingReactions.includes(e)?"loading":e)}}),t._v(" "),n("span",{staticClass:"vssue-comment-reaction-number"},[t._v("\n              "+t._s(t.comment.reactions[e])+"\n            ")])],1)})),0):t._e(),t._v(" "),n("span",{staticClass:"vssue-comment-operations"},[t.comment.author.username===t.currentUser&&t.editMode?n("span",{staticClass:"vssue-comment-operation",class:{"vssue-comment-operation-muted":t.isPutingComment},attrs:{title:t.vssue.$t(t.isPutingComment?"loading":"submit")},on:{click:function(e){return t.putComment()}}},[n("VssueIcon",{directives:[{name:"show",rawName:"v-show",value:t.isPutingComment,expression:"isPutingComment"}],attrs:{name:"loading",title:t.vssue.$t("loading")}}),t._v("\n\n            "+t._s(t.vssue.$t("submit"))+"\n          ")],1):t._e(),t._v(" "),t.comment.author.username===t.currentUser&&t.editMode?n("span",{staticClass:"vssue-comment-operation vssue-comment-operation-muted",attrs:{title:t.vssue.$t("cancel")},on:{click:function(e){return t.resetEdit()}}},[t._v("\n            "+t._s(t.vssue.$t("cancel"))+"\n          ")]):t._e(),t._v(" "),t.comment.author.username===t.currentUser?n("span",{directives:[{name:"show",rawName:"v-show",value:!t.editMode,expression:"!editMode"}],staticClass:"vssue-comment-operation",on:{click:function(e){return t.enterEdit()}}},[n("VssueIcon",{attrs:{name:"edit",title:t.vssue.$t("edit")}})],1):t._e(),t._v(" "),t.comment.author.username===t.currentUser||t.vssue.isAdmin?n("span",{directives:[{name:"show",rawName:"v-show",value:!t.editMode,expression:"!editMode"}],staticClass:"vssue-comment-operation",on:{click:function(e){return t.deleteComment()}}},[n("VssueIcon",{attrs:{name:t.isDeletingComment?"loading":"delete",title:t.vssue.$t(t.isDeletingComment?"loading":"delete")}})],1):t._e(),t._v(" "),n("span",{directives:[{name:"show",rawName:"v-show",value:!t.editMode,expression:"!editMode"}],staticClass:"vssue-comment-operation",on:{click:function(e){return t.vssue.$emit("reply-comment",t.comment)}}},[n("VssueIcon",{attrs:{name:"reply",title:t.vssue.$t("reply")}})],1)])])])],2)])},staticRenderFns:[]},void 0,Gr,void 0,!1,void 0,!1,void 0,void 0,void 0);let Jr=class extends i.default{get disabled(){return this.vssue.isPending}get pageCount(){const t=Math.ceil(this.vssue.comments.count/this.vssue.comments.perPage);return t>1?t:1}get perPageOptions(){const t=[5,10,20,50];return!t.includes(this.vssue.options.perPage)&&this.vssue.options.perPage<100&&t.push(this.vssue.options.perPage),t.sort((t,e)=>t-e)}get page(){return this.vssue.query.page>this.pageCount?this.pageCount:this.vssue.query.page}set page(t){t>0&&t<=this.pageCount&&(this.vssue.query.page=t)}get perPage(){return this.vssue.query.perPage}set perPage(t){this.perPageOptions.includes(t)&&(this.vssue.query.perPage=t)}};jr([On()],Jr.prototype,"vssue",void 0),Jr=jr([Object(Sn.b)({components:{VssueIcon:zr}})],Jr);const Hr=Fr({render:function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("div",{staticClass:"vssue-pagination"},[n("div",{staticClass:"vssue-pagination-per-page"},[n("label",[n("select",{directives:[{name:"model",rawName:"v-model",value:t.perPage,expression:"perPage"}],staticClass:"vssue-pagination-select",attrs:{disabled:t.disabled},on:{change:function(e){var n=Array.prototype.filter.call(e.target.options,(function(t){return t.selected})).map((function(t){return"_value"in t?t._value:t.value}));t.perPage=e.target.multiple?n:n[0]}}},t._l(t.perPageOptions,(function(e){return n("option",{key:e,domProps:{value:e}},[t._v("\n          "+t._s(e)+"\n        ")])})),0),t._v(" "),n("span",[t._v("\n        "+t._s(t.vssue.$t("perPage"))+"\n      ")])]),t._v(" "),t.vssue.API.platform.meta.sortable?n("span",{class:{"vssue-pagination-link":!0,disabled:t.disabled},attrs:{title:t.vssue.$t("sort")},on:{click:function(e){t.vssue.query.sort="asc"===t.vssue.query.sort?"desc":"asc"}}},[t._v("\n      "+t._s("asc"===t.vssue.query.sort?"↑":"↓")+"\n    ")]):t._e()]),t._v(" "),n("div",{staticClass:"vssue-pagination-page"},[n("span",{class:{"vssue-pagination-link":!0,disabled:1===t.page||t.disabled},attrs:{title:t.vssue.$t("prev")},domProps:{textContent:t._s("<")},on:{click:function(e){t.page-=1}}}),t._v(" "),n("label",[n("span",[t._v("\n        "+t._s(t.vssue.$t("page"))+"\n      ")]),t._v(" "),n("select",{directives:[{name:"show",rawName:"v-show",value:t.pageCount>1,expression:"pageCount > 1"},{name:"model",rawName:"v-model",value:t.page,expression:"page"}],staticClass:"vssue-pagination-select",attrs:{disabled:t.disabled},on:{change:function(e){var n=Array.prototype.filter.call(e.target.options,(function(t){return t.selected})).map((function(t){return"_value"in t?t._value:t.value}));t.page=e.target.multiple?n:n[0]}}},t._l(t.pageCount,(function(e){return n("option",{key:e,domProps:{value:e}},[t._v("\n          "+t._s(e)+"\n        ")])})),0),t._v(" "),n("span",{directives:[{name:"show",rawName:"v-show",value:t.pageCount<2,expression:"pageCount < 2"}],domProps:{textContent:t._s(t.page)}}),t._v(" "),n("span",{domProps:{textContent:t._s(" / "+t.pageCount+" ")}})]),t._v(" "),n("span",{class:{"vssue-pagination-link":!0,disabled:t.page===t.pageCount||t.disabled},attrs:{title:t.vssue.$t("next")},domProps:{textContent:t._s(">")},on:{click:function(e){t.page+=1}}})])])},staticRenderFns:[]},void 0,Jr,void 0,!1,void 0,!1,void 0,void 0,void 0);let Wr=class extends i.default{};jr([On()],Wr.prototype,"vssue",void 0),Wr=jr([Object(Sn.b)({components:{TransitionFade:Br,VssueComment:Vr,VssuePagination:Hr}})],Wr);const qr=Fr({render:function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"vssue-comments"},[e("VssuePagination"),this._v(" "),e("TransitionFade",{attrs:{group:""}},this._l(this.vssue.comments.data,(function(t){return e("VssueComment",{key:t.id,attrs:{comment:t}})})),1),this._v(" "),e("VssuePagination",{directives:[{name:"show",rawName:"v-show",value:this.vssue.comments.data.length>5,expression:"vssue.comments.data.length > 5"}]})],1)},staticRenderFns:[]},void 0,Wr,void 0,!1,void 0,!1,void 0,void 0,void 0);const Yr=Fr({},void 0,i.default.extend({name:"VssueIcon",functional:!0,props:{type:{type:String,required:!1,default:"default"}},render:(t,{props:e,data:n,children:r})=>t("button",Object.assign(Object.assign({},n),{class:["vssue-button","vssue-button-"+e.type]}),r)}),void 0,void 0,void 0,!1,void 0,void 0,void 0);let Xr=class extends i.default{constructor(){super(...arguments),this.content=""}get user(){return this.vssue.user}get platform(){return this.vssue.API&&this.vssue.API.platform.name}get isInputDisabled(){return this.loading||null===this.user||null===this.vssue.issue}get isSubmitDisabled(){return""===this.content||this.vssue.isPending||null===this.vssue.issue}get loading(){return this.vssue.isCreatingComment}get contentRows(){return this.content.split("\n").length-1}get inputRows(){return this.contentRows<3?5:this.contentRows+2}created(){this.vssue.$on("reply-comment",t=>{const e=t.contentRaw.replace(/\n/g,"\n> "),n=`@${t.author.username}\n\n> ${e}\n\n`;this.content=this.content.concat(n),this.focus()})}beforeDestroy(){this.vssue.$off("reply-comment")}focus(){this.$refs.input.focus()}async submit(){this.isSubmitDisabled||(await this.vssue.postComment({content:this.content}),this.content="",await this.vssue.getComments())}};jr([On()],Xr.prototype,"vssue",void 0),Xr=jr([Object(Sn.b)({components:{VssueButton:Yr,VssueIcon:zr}})],Xr);const Qr=Fr({render:function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("div",{staticClass:"vssue-new-comment"},[n("div",{staticClass:"vssue-comment-avatar"},[t.user?n("a",{attrs:{href:t.user.homepage,title:t.user.username,target:"_blank",rel:"noopener noreferrer"}},[n("img",{attrs:{src:t.user.avatar,alt:t.user.username}})]):n("VssueIcon",{attrs:{name:t.platform.toLowerCase(),title:t.vssue.$t("loginToComment",{platform:t.platform})},on:{click:function(e){return t.vssue.login()}}})],1),t._v(" "),n("div",{staticClass:"vssue-new-comment-body"},[n("textarea",{directives:[{name:"model",rawName:"v-model",value:t.content,expression:"content"}],ref:"input",staticClass:"vssue-new-comment-input",attrs:{rows:t.inputRows,disabled:t.isInputDisabled,placeholder:t.vssue.$t(t.user?"placeholder":"noLoginPlaceHolder"),spellcheck:!1,"aria-label":"leave a comment"},domProps:{value:t.content},on:{keyup:function(e){return!e.type.indexOf("key")&&t._k(e.keyCode,"enter",13,e.key,"Enter")?null:e.ctrlKey?t.submit():null},input:function(e){e.target.composing||(t.content=e.target.value)}}})]),t._v(" "),n("div",{staticClass:"vssue-new-comment-footer"},[t.user?n("span",{staticClass:"vssue-current-user"},[n("span",[t._v(t._s(t.vssue.$t("currentUser"))+" - "+t._s(t.user.username)+" - ")]),t._v(" "),n("a",{staticClass:"vssue-logout",on:{click:function(e){return t.vssue.logout()}}},[t._v("\n        "+t._s(t.vssue.$t("logout"))+"\n      ")])]):n("span",{staticClass:"vssue-current-user"},[t._v("\n      "+t._s(t.vssue.$t("loginToComment",{platform:t.platform}))+"\n    ")]),t._v(" "),n("div",{staticClass:"vssue-new-comment-operations"},[t.user?n("VssueButton",{staticClass:"vssue-button-submit-comment",attrs:{type:"primary",disabled:t.isSubmitDisabled},on:{click:function(e){return t.submit()}}},[n("VssueIcon",{directives:[{name:"show",rawName:"v-show",value:t.loading,expression:"loading"}],attrs:{name:"loading"}}),t._v("\n\n        "+t._s(t.vssue.$t(t.loading?"submitting":"submitComment"))+"\n      ")],1):n("VssueButton",{staticClass:"vssue-button-login",attrs:{type:"primary",title:t.vssue.$t("loginToComment",{platform:t.platform})},on:{click:function(e){return t.vssue.login()}}},[t._v("\n        "+t._s(t.vssue.$t("login",{platform:t.platform}))+"\n      ")])],1)])])},staticRenderFns:[]},void 0,Xr,void 0,!1,void 0,!1,void 0,void 0,void 0);let Kr=class extends i.default{constructor(){super(...arguments),this.progress={show:!1,percent:0,timer:null,speed:200},this.alert={show:!1,message:null,timer:null}}onLoadingCommentsChange(t){this.vssue.comments&&(t?this.progressStart():this.progressDone())}created(){this.vssue.$on("error",t=>this.alertShow(t.message))}beforeDestroy(){this.vssue.$off("error"),null!==this.progress.timer&&window.clearTimeout(this.progress.timer),null!==this.alert.timer&&window.clearTimeout(this.alert.timer)}progressStart(){this.progress.show=!0,this.progress.percent=0,this.progress.timer=window.setInterval(()=>{this.progress.percent+=5,this.progress.percent>94&&null!==this.progress.timer&&window.clearInterval(this.progress.timer)},this.progress.speed)}progressDone(){this.progress.percent=100,null!==this.progress.timer&&window.clearTimeout(this.progress.timer),this.progress.timer=null,window.setTimeout(()=>{this.progress.show=!1},this.progress.speed)}alertShow(t){this.alert.show=!0,this.alert.message=t,null!==this.alert.timer&&window.clearTimeout(this.alert.timer),this.alert.timer=window.setTimeout(()=>{this.alertHide()},3e3)}alertHide(){this.alert.show=!1,null!==this.alert.timer&&window.clearTimeout(this.alert.timer),this.alert.timer=null}};jr([On()],Kr.prototype,"vssue",void 0),jr([Ln("vssue.isLoadingComments")],Kr.prototype,"onLoadingCommentsChange",null),Kr=jr([Object(Sn.b)({components:{TransitionFade:Br}})],Kr);const Zr=Fr({render:function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("div",{staticClass:"vssue-notice"},[n("div",{directives:[{name:"show",rawName:"v-show",value:t.progress.show,expression:"progress.show"}],staticClass:"vssue-progress",style:{width:t.progress.percent+"%",transition:"all "+t.progress.speed+"ms linear"}}),t._v(" "),n("TransitionFade",[n("div",{directives:[{name:"show",rawName:"v-show",value:t.alert.show,expression:"alert.show"}],staticClass:"vssue-alert",domProps:{textContent:t._s(t.alert.message)},on:{click:function(e){return t.alertHide()}}})])],1)},staticRenderFns:[]},void 0,Kr,void 0,!1,void 0,!1,void 0,void 0,void 0);let to=class extends i.default{get status(){return this.vssue.isFailed?"failed":this.vssue.isInitializing?"initializing":this.vssue.isIssueNotCreated&&!this.vssue.isCreatingIssue?this.vssue.isAdmin||!this.vssue.isLogined?"issueNotCreated":"failed":this.vssue.isLoginRequired?"loginRequired":!this.vssue.comments||this.vssue.isCreatingIssue?"loadingComments":0===this.vssue.comments.data.length?"noComments":null}handleClick(){"issueNotCreated"===this.status?this.vssue.postIssue():"loginRequired"===this.status&&this.vssue.login()}};jr([On()],to.prototype,"vssue",void 0),to=jr([Object(Sn.b)({components:{TransitionFade:Br,VssueIcon:zr}})],to);const eo=Fr({render:function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("TransitionFade",[t.status?n("div",{key:t.status,staticClass:"vssue-status"},[["failed","loadingComments","initializing"].includes(t.status)?n("VssueIcon",{attrs:{name:"failed"===t.status?"error":"loading"}}):t._e(),t._v(" "),n("p",{staticClass:"vssue-status-info"},[n(["issueNotCreated","loginRequired"].includes(t.status)?"a":"span",{tag:"Component",on:{click:t.handleClick}},[t._v("\n        "+t._s(t.vssue.$t(t.status))+"\n      ")])],1)],1):t._e()])},staticRenderFns:[]},void 0,to,void 0,!1,void 0,!1,void 0,void 0,void 0);let no=class extends i.default{};jr([On()],no.prototype,"vssue",void 0),no=jr([Object(Sn.b)({components:{TransitionFade:Br,VssueIcon:zr,VssueComments:qr,VssueNewComment:Qr,VssueNotice:Zr,VssueStatus:eo}})],no);const ro=Fr({render:function(){var t=this.$createElement,e=this._self._c||t;return e("TransitionFade",[this.vssue.isInitializing?e("VssueStatus"):e("div",{staticClass:"vssue-body"},[this.vssue.API?e("VssueNewComment"):this._e(),this._v(" "),e("VssueNotice"),this._v(" "),e("TransitionFade",[this.vssue.comments&&this.vssue.comments.data.length>0?e("VssueComments"):e("VssueStatus")],1)],1)],1)},staticRenderFns:[]},void 0,no,void 0,!1,void 0,!1,void 0,void 0,void 0);let oo=class extends i.default{};jr([On()],oo.prototype,"vssue",void 0),oo=jr([Sn.b],oo);const io=Fr({render:function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("div",{staticClass:"vssue-header"},[n("a",{staticClass:"vssue-header-comments-count",attrs:{href:t.vssue.issue?t.vssue.issue.link:null,target:"_blank",rel:"noopener noreferrer"}},[n("span",[t._v("\n      "+t._s(t.vssue.comments?t.vssue.$tc("comments",t.vssue.comments.count,{count:t.vssue.comments.count}):t.vssue.$tc("comments",0))+"\n    ")])]),t._v(" "),n("span",{staticClass:"vssue-header-powered-by"},[n("span",[t._v("Powered by")]),t._v(" "),t.vssue.API?n("span",[n("a",{attrs:{href:t.vssue.API.platform.link,title:t.vssue.API.platform.name+" API "+t.vssue.API.platform.version,target:"_blank",rel:"noopener noreferrer"}},[t._v("\n        "+t._s(t.vssue.API.platform.name)+"\n      ")]),t._v(" "),n("span",[t._v("&")])]):t._e(),t._v(" "),n("a",{attrs:{href:"https://github.com/meteorlxy/vssue",title:"Vssue v"+t.vssue.version,target:"_blank",rel:"noopener noreferrer"}},[t._v("\n      Vssue\n    ")])])])},staticRenderFns:[]},void 0,oo,void 0,!1,void 0,!1,void 0,void 0,void 0),ao={login:"Login with {platform}",logout:"Logout",currentUser:"Current User",loading:"Loading",submit:"Submit",submitting:"Submitting",submitComment:"Submit Comment",cancel:"Cancel",edit:"Edit",editMode:"Edit Mode",delete:"Delete",reply:"Reply",heart:"Heart",like:"Like",unlike:"Unlike",perPage:"Comments per page",sort:"Click to change the sort direction",page:"Page",prev:"Previous Page",next:"Next Page",comments:"Comments | {count} Comment | {count} Comments",loginToComment:"Login with {platform} account to leave a comment",placeholder:"Leave a comment. Styling with Markdown is supported. Ctrl + Enter to submit.",noLoginPlaceHolder:"Login to leave a comment. Styling with Markdown is supported. ",failed:"Failed to load comments",initializing:"Initializing...",issueNotCreated:"Click to create issue",loadingComments:"Loading comments...",loginRequired:"Login to view comments",noComments:"No comments yet. Leave the first comment !",reactionGiven:"Already given '{reaction}' reaction",deleteConfirm:"Confirm to delete this comment ?",deleteFailed:"Failed to delete comment"},so={login:"使用 {platform} 登录",logout:"退出登录",currentUser:"当前用户",loading:"加载中",submit:"提交",submitting:"发表中",submitComment:"发表评论",cancel:"取消",edit:"编辑",editMode:"编辑模式",delete:"删除",reply:"回复",heart:"喜欢",like:"赞",unlike:"踩",perPage:"每页评论数",sort:"点击改变排序方式",page:"页数",prev:"上一页",next:"下一页",comments:"评论 | {count} 条评论 | {count} 条评论",loginToComment:"使用 {platform} 帐号登录后发表评论",placeholder:"留下你的评论丨支持 Markdown 语法丨Ctrl + Enter 发表评论",noLoginPlaceHolder:"登录后才能发表评论丨支持 Markdown 语法",failed:"评论加载失败",initializing:"正在初始化...",issueNotCreated:"点击创建 Issue",loadingComments:"正在加载评论...",loginRequired:"登录后查看评论",noComments:"还没有评论，来发表第一条评论吧！",reactionGiven:"已经添加过 '{reaction}' 了",deleteConfirm:"确认要删除该评论吗？",deleteFailed:"评论删除失败"},co={login:"Entrar com {platform}",logout:"Sair",currentUser:"Usuário Atual",loading:"Carregando",submit:"Enviar",submitting:"Enviando",submitComment:"Enviar Comentário",cancel:"Cancelar",edit:"Editar",editMode:"Modo de Edição",delete:"Apagar",reply:"Responder",heart:"Heart",like:"Like",unlike:"Unlike",perPage:"Comentários por página",sort:"Clique para alterar a ordenação",page:"Página",prev:"Página Anterior",next:"Próxima Página",comments:"Comentários | {count} Comentário | {count} Comentários",loginToComment:"Entre com uma conta {platform} para deixar um comentário",placeholder:"Deixe um comentário. Estilos com Markdown suportados. Ctrl + Enter para enviar.",noLoginPlaceHolder:"Entre para deixar um comentário. Estilos com Markdown suportados. ",failed:"Falha ao carregar comentários",initializing:"Inicializando...",issueNotCreated:"Click to create issue",loadingComments:"Carregando comentários...",loginRequired:"Entrar para visualizar comentários",noComments:"Nenhum comentário. Deixe o primeiro comentário!",reactionGiven:"Já reagiu com '{reaction}'",deleteConfirm:"Apagar este comentário?",deleteFailed:"Falha ao apagar comentário"},lo={login:"{platform} でログイン",logout:"ログアウト",currentUser:"現在のユーザー",loading:"読み込み中",submit:"送信",submitting:"送信中",submitComment:"コメントを送信",cancel:"キャンセル",edit:"編集",editMode:"編集モード",delete:"削除",reply:"返信",heart:"ハート",like:"高評価",unlike:"低評価",perPage:"コメント/ページ",sort:"並び順を変更するにはクリックしてください",page:"ページ",prev:"前のページ",next:"次のページ",comments:"コメント | {count} コメント | {count} コメント",loginToComment:"コメントを残すには {platform} アカウントでログインしてください。",placeholder:"コメントを残してください。Markdown 記法をサポートしています。 Ctrl + Enter で送信できます。",noLoginPlaceHolder:"コメントを残すにはログインしてください。マークダウン記法をサポートしています。",failed:"コメントの読み込みに失敗しました",initializing:"初期化中...",issueNotCreated:"Click to create issue",loadingComments:"コメントの読み込み中...",loginRequired:"コメントを見るにはログインしてください",noComments:"まだコメントがありません。最初のコメントを残しましょう！",reactionGiven:"既に '{reaction}' のリアクションをしています",deleteConfirm:"本当にコメントを削除してもいいですか？",deleteFailed:"コメントの削除に失敗しました"},uo={login:"התחברו עם {platform}",logout:"התנתקו",currentUser:"משתמש/ת נוכחי/ת",loading:"טוען",submit:"שליחה",submitting:"שולח",submitComment:"שליחת תגובה",cancel:"ביטל",edit:"עריכה",editMode:"מצב עריכה",delete:"מחיקה",reply:"תשובה",heart:"לב",like:"לייק",unlike:"אנלייק",perPage:"תגובות לדף",sort:"לחצו כדי לשנות את כיוון המיון",page:"דף",prev:"הדף הקודם",next:"הדף הבא",comments:"תגובות | {count} תגובה | {count} תגובות",loginToComment:"התחברו עם חשבון {platform} כדי להשאיר תגובה",placeholder:"השאירו תגובה. יש תמיכה בעיצוב בעזרת Markdown. Ctrl + Enter כדי לשלוח.",noLoginPlaceHolder:"התחברו כדי להשאיר תגובה. יש תמיכה בעיצוב בעזרת Markdown. ",failed:"כשלון בטעינת התגובות",initializing:"מאתחל...",issueNotCreated:"לחצו ליצירת issue",loadingComments:"טוען תגובות...",loginRequired:"התחברו כדי לצפות בתגובות",noComments:"עדיין אין תגובות. השאירו תגובה ראשונה !",reactionGiven:"כבר ניתן חיווי '{reaction}'",deleteConfirm:"בטוחים במחיקת התגובה ?",deleteFailed:"כשלון במחיקת התגובה"};Object.prototype.hasOwnProperty.call(i.default,"$i18n")||i.default.use(Dr);const po=new Dr({locale:"en",fallbackLocale:"en",messages:{en:ao,"en-US":ao,zh:so,"zh-CN":so,pt:co,"pt-BR":co,ja:lo,"ja-JP":lo,he:uo,"he-IL":uo}});let ho=class extends i.default{constructor(){super(...arguments),this.title=t=>`${t.prefix}${document.title}`,this.issueId=null,this.options=null,this.API=null,this.accessToken=null,this.user=null,this.issue=null,this.comments=null,this.query={page:1,perPage:10,sort:"desc"},this.isInitializing=!0,this.isIssueNotCreated=!1,this.isLoginRequired=!1,this.isFailed=!1,this.isCreatingIssue=!1,this.isLoadingComments=!1,this.isCreatingComment=!1,this.isUpdatingComment=!1}get version(){return"1.4.8"}get issueTitle(){return null===this.options?"":"function"==typeof this.title?this.title(this.options):`${this.options.prefix}${this.title}`}get isPending(){return this.isLoadingComments||this.isCreatingComment||this.isUpdatingComment}get isLogined(){return null!==this.accessToken&&null!==this.user}get isAdmin(){return null!==this.options&&null!==this.accessToken&&null!==this.user&&(this.user.username===this.options.owner||this.options.admins.includes(this.user.username))}get accessTokenKey(){return this.API?`Vssue.${this.API.platform.name.toLowerCase()}.access_token`:""}onQueryPerPageChange(){this.query.page=1,this.getComments()}onQueryChange(){this.getComments()}setOptions(t){this.options=Object.assign({labels:["Vssue"],state:"Vssue",prefix:"[Vssue]",admins:[],perPage:10,proxy:t=>"https://cors-anywhere.azm.workers.dev/"+t,issueContent:({url:t})=>t,autoCreateIssue:!1},t);const e=["api","owner","repo","clientId"];for(const t of e)this.options[t]||console.warn(`[Vssue] the option '${t}' is required`);if(this.options.locale)this.$i18n.locale=this.options.locale;else{const t=Object.keys(this.$i18n.messages),e=window.navigator.languages;this.$i18n.locale=e.filter(e=>t.includes(e)).shift()||"en"}}async init(){try{await this.initStore(),await this.initComments()}catch(t){t.response&&[401,403].includes(t.response.status)?this.isLoginRequired=!0:this.isFailed=!0,console.error(t)}}async initStore(){try{if(!this.options)throw new Error("Options are required to initialize Vssue");this.API=null,this.accessToken=null,this.user=null,this.issue=null,this.comments=null,this.query={page:1,perPage:this.options.perPage,sort:"desc"},this.isInitializing=!0,this.isIssueNotCreated=!1,this.isLoginRequired=!1,this.isFailed=!1,this.isCreatingIssue=!1,this.isLoadingComments=!1,this.isCreatingComment=!1,this.isUpdatingComment=!1;const t=this.options.api;this.API=new t({baseURL:this.options.baseURL,labels:this.options.labels,state:this.options.state,owner:this.options.owner,repo:this.options.repo,clientId:this.options.clientId,clientSecret:this.options.clientSecret,proxy:this.options.proxy}),await this.handleAuth()}finally{this.isInitializing=!1}}async initComments(){if(this.API&&this.options)if(this.issueId){const[t,e]=await Promise.all([this.API.getIssue({accessToken:this.accessToken,issueId:this.issueId}),this.API.getComments({accessToken:this.accessToken,issueId:this.issueId,query:this.query})]);this.issue=t,this.comments=e}else this.issue=await this.API.getIssue({accessToken:this.accessToken,issueTitle:this.issueTitle}),null===this.issue?(this.isIssueNotCreated=!0,this.options.autoCreateIssue&&await this.postIssue()):await this.getComments()}async postIssue(){if(this.API&&this.options&&!this.issue&&!this.issueId&&(this.isLogined||this.login(),this.isAdmin))try{this.isCreatingIssue=!0;const t=await this.API.postIssue({title:this.issueTitle,content:await this.options.issueContent({options:this.options,url:Un(window.location.href)}),accessToken:this.accessToken});this.issue=t,this.isIssueNotCreated=!1,await this.getComments()}catch(t){this.isFailed=!0}finally{this.isCreatingIssue=!1}}async getComments(){try{if(!this.API||!this.issue||this.isLoadingComments)return;this.isLoadingComments=!0;const t=await this.API.getComments({accessToken:this.accessToken,issueId:this.issue.id,query:this.query});return this.comments=t,this.query.page!==t.page&&(this.query.page=t.page),this.query.perPage!==t.perPage&&(this.query.perPage=t.perPage),t}catch(t){if(!t.response||![401,403].includes(t.response.status)||this.isLogined)throw this.$emit("error",t),t;this.isLoginRequired=!0}finally{this.isLoadingComments=!1}}async postComment({content:t}){try{if(!this.API||!this.issue||this.isCreatingComment)return;this.isCreatingComment=!0;return await this.API.postComment({accessToken:this.accessToken,content:t,issueId:this.issue.id})}catch(t){throw this.$emit("error",t),t}finally{this.isCreatingComment=!1}}async putComment({commentId:t,content:e}){try{if(!this.API||!this.issue)return;return await this.API.putComment({accessToken:this.accessToken,issueId:this.issue.id,commentId:t,content:e})}catch(t){throw this.$emit("error",t),t}}async deleteComment({commentId:t}){try{if(!this.API||!this.issue)return;return await this.API.deleteComment({accessToken:this.accessToken,issueId:this.issue.id,commentId:t})}catch(t){throw this.$emit("error",t),t}}async getCommentReactions({commentId:t}){try{if(!this.API||!this.issue)return;return await this.API.getCommentReactions({accessToken:this.accessToken,issueId:this.issue.id,commentId:t})}catch(t){throw this.$emit("error",t),t}}async postCommentReaction({commentId:t,reaction:e}){try{if(!this.API||!this.issue)return!1;return await this.API.postCommentReaction({accessToken:this.accessToken,issueId:this.issue.id,commentId:t,reaction:e})}catch(t){throw this.$emit("error",t),t}}login(){this.API&&this.API.redirectAuth()}logout(){this.setAccessToken(null),this.user=null}async handleAuth(){if(!this.API)return;const t=await this.API.handleAuth();t?(this.setAccessToken(t),this.user=await this.API.getUser({accessToken:t})):this.getAccessToken()?this.user=await this.API.getUser({accessToken:this.accessToken}):(this.setAccessToken(null),this.user=null)}getAccessToken(){return this.accessToken=window.localStorage.getItem(this.accessTokenKey),this.accessToken}setAccessToken(t){null===t?window.localStorage.removeItem(this.accessTokenKey):window.localStorage.setItem(this.accessTokenKey,t),this.accessToken=t}};jr([Ln("query.perPage")],ho.prototype,"onQueryPerPageChange",null),jr([Ln("query.page"),Ln("query.sort")],ho.prototype,"onQueryChange",null),ho=jr([Object(Sn.b)({i18n:po})],ho);var fo=ho;let vo=class extends i.default{constructor(){super(...arguments),this.vssue=new fo}onOptionsChange(t){this.vssue.setOptions(t)}mounted(){null!==this.title&&(this.vssue.title=this.title),null!==this.issueId&&(this.vssue.issueId=this.issueId),this.vssue.setOptions(this.options),this.vssue.init()}};var bo;jr([kn({type:[String,Function],required:!1,default:null})],vo.prototype,"title",void 0),jr([kn({type:[String,Number],required:!1,default:null})],vo.prototype,"issueId",void 0),jr([kn({type:Object,required:!1,default:()=>({})})],vo.prototype,"options",void 0),jr([(bo="vssue",Object(Sn.a)((function(t,e){var n=t.provide;Cn(t),$n(n)&&(n=t.provide=Tn(n)),n.managed[e]=bo||e})))],vo.prototype,"vssue",void 0),jr([Ln("options",{deep:!0})],vo.prototype,"onOptionsChange",null),vo=jr([Object(Sn.b)({components:{Iconfont:Ur,VssueBody:ro,VssueHeader:io}})],vo);const mo=Fr({render:function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"vssue"},[e("Iconfont"),this._v(" "),e("VssueHeader"),this._v(" "),e("VssueBody")],1)},staticRenderFns:[]},void 0,vo,void 0,!1,void 0,!1,void 0,void 0,void 0);var go=n(18),yo=n.n(go);function _o(t){return{username:t.login,avatar:t.avatar_url,homepage:t.html_url}}function xo(t){return{id:t.number,title:t.title,content:t.body,link:t.html_url}}function wo(t){return{like:t["+1"],unlike:t[-1],heart:t.heart}}function So(t){return{id:t.id,content:t.body_html,contentRaw:t.body,author:_o(t.user),createdAt:t.created_at,updatedAt:t.updated_at,reactions:wo(t.reactions)}}function Oo(t){return"like"===t?"+1":"unlike"===t?"-1":t}class $o{constructor({baseURL:t="https://github.com",owner:e,repo:n,labels:r,clientId:o,clientSecret:i,state:a,proxy:s}){if(void 0===i||void 0===s)throw new Error("clientSecret and proxy is required for GitHub V3");this.baseURL=t,this.owner=e,this.repo=n,this.labels=r,this.clientId=o,this.clientSecret=i,this.state=a,this.proxy=s,this.$http=yo.a.create({baseURL:"https://github.com"===t?"https://api.github.com":Dn(t,"api/v3"),headers:{Accept:"application/vnd.github.v3+json"}}),this.$http.interceptors.response.use(t=>t.data&&t.data.error?Promise.reject(new Error(t.data.error_description)):t,t=>(void 0===t.response&&"Network Error"===t.message&&(t.response={status:403}),Promise.reject(t)))}get platform(){return{name:"GitHub",link:this.baseURL,version:"v3",meta:{reactable:!0,sortable:!1}}}redirectAuth(){window.location.href=Nn(Dn(this.baseURL,"login/oauth/authorize"),{client_id:this.clientId,redirect_uri:window.location.href,scope:"public_repo",state:this.state})}async handleAuth(){const t=Bn(window.location.search);if(t.code){if(t.state!==this.state)return null;const e=t.code;delete t.code,delete t.state;const n=Nn(Un(window.location.href),t)+window.location.hash;window.history.replaceState(null,"",n);return await this.getAccessToken({code:e})}return null}async getAccessToken({code:t}){const e=Dn(this.baseURL,"login/oauth/access_token"),n="function"==typeof this.proxy?this.proxy(e):this.proxy,{data:r}=await this.$http.post(n,{client_id:this.clientId,client_secret:this.clientSecret,code:t},{headers:{Accept:"application/json"}});return r.access_token}async getUser({accessToken:t}){const{data:e}=await this.$http.get("user",{headers:{Authorization:"token "+t}});return _o(e)}async getIssue({accessToken:t,issueId:e,issueTitle:n}){const r={};if(t&&(r.headers={Authorization:"token "+t}),!e){r.params={q:[`"${n}"`,"is:issue","in:title",`repo:${this.owner}/${this.repo}`,"is:public",...this.labels.map(t=>"label:"+t)].join(" "),timestamp:Date.now()};const{data:t}=await this.$http.get("search/issues",r);return t.items.map(xo).find(t=>t.title===n)||null}try{r.params={timestamp:Date.now()};const{data:t}=await this.$http.get(`repos/${this.owner}/${this.repo}/issues/${e}`,r);return xo(t)}catch(t){if(t.response&&404===t.response.status)return null;throw t}}async postIssue({accessToken:t,title:e,content:n}){const{data:r}=await this.$http.post(`repos/${this.owner}/${this.repo}/issues`,{title:e,body:n,labels:this.labels},{headers:{Authorization:"token "+t}});return xo(r)}async getComments({accessToken:t,issueId:e,query:{page:n=1,perPage:r=10}={}}){const o={params:{timestamp:Date.now()}},i={params:{page:n,per_page:r,timestamp:Date.now()},headers:{Accept:["application/vnd.github.v3.raw+json","application/vnd.github.v3.html+json","application/vnd.github.squirrel-girl-preview"]}};t&&(o.headers={Authorization:"token "+t},i.headers.Authorization="token "+t);const[a,s]=await Promise.all([this.$http.get(`repos/${this.owner}/${this.repo}/issues/${e}`,o),this.$http.get(`repos/${this.owner}/${this.repo}/issues/${e}/comments`,i)]),c=s.headers.link||null,l=/rel="next"/.test(c)?Number(c.replace(/^.*[^_]page=(\d*).*rel="next".*$/,"$1"))-1:/rel="prev"/.test(c)?Number(c.replace(/^.*[^_]page=(\d*).*rel="prev".*$/,"$1"))+1:1,u=c?Number(c.replace(/^.*per_page=(\d*).*$/,"$1")):r;return{count:Number(a.data.comments),page:l,perPage:u,data:s.data.map(So)}}async postComment({accessToken:t,issueId:e,content:n}){const{data:r}=await this.$http.post(`repos/${this.owner}/${this.repo}/issues/${e}/comments`,{body:n},{headers:{Authorization:"token "+t,Accept:["application/vnd.github.v3.raw+json","application/vnd.github.v3.html+json","application/vnd.github.squirrel-girl-preview"]}});return So(r)}async putComment({accessToken:t,commentId:e,content:n}){const{data:r}=await this.$http.patch(`repos/${this.owner}/${this.repo}/issues/comments/${e}`,{body:n},{headers:{Authorization:"token "+t,Accept:["application/vnd.github.v3.raw+json","application/vnd.github.v3.html+json","application/vnd.github.squirrel-girl-preview"]}});return So(r)}async deleteComment({accessToken:t,commentId:e}){const{status:n}=await this.$http.delete(`repos/${this.owner}/${this.repo}/issues/comments/${e}`,{headers:{Authorization:"token "+t}});return 204===n}async getCommentReactions({accessToken:t,commentId:e}){const{data:n}=await this.$http.get(`repos/${this.owner}/${this.repo}/issues/comments/${e}`,{params:{timestamp:Date.now()},headers:{Authorization:"token "+t,Accept:"application/vnd.github.squirrel-girl-preview"}});return wo(n.reactions)}async postCommentReaction({accessToken:t,commentId:e,reaction:n}){const r=await this.$http.post(`repos/${this.owner}/${this.repo}/issues/comments/${e}/reactions`,{content:Oo(n)},{headers:{Authorization:"token "+t,Accept:"application/vnd.github.squirrel-girl-preview"}});return 200===r.status?this.deleteCommentReaction({accessToken:t,commentId:e,reactionId:r.data.id}):201===r.status}async deleteCommentReaction({accessToken:t,commentId:e,reactionId:n}){return 204===(await this.$http.delete(`repos/${this.owner}/${this.repo}/issues/comments/${e}/reactions/${n}`,{headers:{Authorization:"token "+t,Accept:"application/vnd.github.squirrel-girl-preview"}})).status}}function To(t){return null===t?{username:"ghost",avatar:"https://avatars3.githubusercontent.com/u/10137?v=4",homepage:"https://github.com/ghost"}:{username:t.login,avatar:t.avatarUrl,homepage:t.url}}function Eo(t){return{id:t.number,title:t.title,content:t.body,link:t.url}}function Co(t){return{like:t.find(t=>"THUMBS_UP"===t.content).users.totalCount,unlike:t.find(t=>"THUMBS_DOWN"===t.content).users.totalCount,heart:t.find(t=>"HEART"===t.content).users.totalCount}}function Io(t){return{id:t.id,content:t.bodyHTML,contentRaw:t.body,author:To(t.author),createdAt:t.createdAt,updatedAt:t.updatedAt,reactions:Co(t.reactionGroups)}}function Ao(t){return"like"===t?"THUMBS_UP":"unlike"===t?"THUMBS_DOWN":"heart"===t?"HEART":t}class ko{constructor({baseURL:t="https://github.com",owner:e,repo:n,labels:r,clientId:o,clientSecret:i,state:a,proxy:s}){if(void 0===i||void 0===s)throw new Error("clientSecret and proxy is required for GitHub V4");this.baseURL=t,this.owner=e,this.repo=n,this.labels=r,this.clientId=o,this.clientSecret=i,this.state=a,this.proxy=s,this._pageInfo={page:1,startCursor:null,endCursor:null,sort:null,perPage:null},this._issueNodeId=null,this.$http=yo.a.create({baseURL:"https://github.com"===t?"https://api.github.com":Dn(t,"api"),headers:{Accept:"application/vnd.github.v3+json"}}),this.$http.interceptors.response.use(t=>t.data.error?Promise.reject(t.data.error_description):t.data.errors?Promise.reject(t.data.errors[0].message):t)}get platform(){return{name:"GitHub",link:this.baseURL,version:"v4",meta:{reactable:!0,sortable:!0}}}redirectAuth(){window.location.href=Nn(Dn(this.baseURL,"login/oauth/authorize"),{client_id:this.clientId,redirect_uri:window.location.href,scope:"public_repo",state:this.state})}async handleAuth(){const t=Bn(window.location.search);if(t.code){if(t.state!==this.state)return null;const e=t.code;delete t.code,delete t.state;const n=Nn(Un(window.location.href),t)+window.location.hash;window.history.replaceState(null,"",n);return await this.getAccessToken({code:e})}return null}async getAccessToken({code:t}){const e=Dn(this.baseURL,"login/oauth/access_token"),n="function"==typeof this.proxy?this.proxy(e):this.proxy,{data:r}=await this.$http.post(n,{client_id:this.clientId,client_secret:this.clientSecret,code:t},{headers:{Accept:"application/json"}});return r.access_token}async getUser({accessToken:t}){const{data:e}=await this.$http.post("graphql",{query:"query getUser {\n  viewer {\n    login\n    avatarUrl\n    url\n  }\n}"},{headers:{Authorization:"token "+t}});return To(e.data.viewer)}async getIssue({accessToken:t,issueId:e,issueTitle:n}){const r={};if(t&&(r.headers={Authorization:"token "+t}),!e){const t=[`"${n}"`,"in:title",`repo:${this.owner}/${this.repo}`,"is:public",...this.labels.map(t=>"label:"+t)].join(" "),{data:e}=await this.$http.post("graphql",{variables:{query:t},query:"query getIssueByTitle(\n  $query: String!\n) {\n  search(\n    query: $query\n    type: ISSUE\n    first: 20\n    ) {\n      nodes {\n      ... on Issue {\n        id\n        number\n        title\n        body\n        url\n      }\n    }\n  }\n}"},r),o=e.data.search.nodes.find(t=>t.title===n);return o?(this._issueNodeId=o.id,Eo(o)):null}try{const{data:t}=await this.$http.post("graphql",{query:`query getIssueById {\n  repository(owner: "${this.owner}", name: "${this.repo}") {\n    issue (number: ${e}) {\n      id\n      number\n      title\n      body\n      url\n    }\n  }\n}`},r);return this._issueNodeId=t.data.repository.issue.id,Eo(t.data.repository.issue)}catch(t){if(t.response&&404===t.response.status)return null;throw t}}async postIssue({accessToken:t,title:e,content:n}){const{data:r}=await this.$http.post(`repos/${this.owner}/${this.repo}/issues`,{title:e,body:n,labels:this.labels},{headers:{Authorization:"token "+t}});return r.url=r.html_url,this._issueNodeId=r.node_id,Eo(r)}async getComments({accessToken:t,issueId:e,query:{page:n=1,perPage:r=10,sort:o="desc"}={}}){const i={};t&&(i.headers={Authorization:"token "+t}),null!==this._pageInfo.sort&&o!==this._pageInfo.sort&&(n=1);const{firstOrLast:a,afterOrBefore:s,cursor:c}=this._getQueryParams({page:n,sort:o}),{data:l}=await this.$http.post("graphql",{variables:{owner:this.owner,repo:this.repo,issueId:e,perPage:r},query:`query getComments(\n  $owner: String!\n  $repo: String!\n  $issueId: Int!\n  $perPage: Int!\n) {\n  repository(owner: $owner, name: $repo) {\n    issue(number: $issueId) {\n      comments(\n        ${a}: $perPage\n        ${null===s?"":`${s}: "${c}"`}\n      ) {\n        totalCount\n        pageInfo {\n          endCursor\n          startCursor\n        }\n        nodes {\n          id\n          body\n          bodyHTML\n          createdAt\n          updatedAt\n          author {\n            avatarUrl\n            login\n            url\n          }\n          reactionGroups {\n            users (first: 0) {\n              totalCount\n            }\n            content\n          }\n        }\n      }\n    }\n  }\n}`},i),u=l.data.repository.issue.comments;return"desc"===o&&u.nodes.reverse(),this._pageInfo={page:n,startCursor:u.pageInfo.startCursor,endCursor:u.pageInfo.endCursor,sort:o,perPage:r},{count:u.totalCount,page:n,perPage:r,data:u.nodes.map(Io)}}async postComment({accessToken:t,content:e}){const{data:n}=await this.$http.post("graphql",{variables:{issueNodeId:this._issueNodeId,content:e},query:"mutation postComment(\n  $issueNodeId: ID!\n  $content: String!\n) {\n  addComment(\n    input: {\n      subjectId: $issueNodeId\n      body: $content\n    }\n  ) {\n    commentEdge {\n      node {\n        id\n        body\n        bodyHTML\n        createdAt\n        updatedAt\n        author {\n          avatarUrl\n          login\n          url\n        }\n        reactionGroups {\n          users (first: 0) {\n            totalCount\n          }\n          content\n        }\n      }\n    }\n  }\n}"},{headers:{Authorization:"token "+t}});return Io(n.data.addComment.commentEdge.node)}async putComment({accessToken:t,commentId:e,content:n}){const{data:r}=await this.$http.post("graphql",{variables:{commentId:e,content:n},query:"mutation putComment(\n  $commentId: ID!,\n  $content: String!,\n) {\n  updateIssueComment(input: {\n    id: $commentId\n    body: $content\n  }) {\n    issueComment {\n      id\n      body\n      bodyHTML\n      createdAt\n      updatedAt\n      author {\n        avatarUrl\n        login\n        url\n      }\n      reactionGroups {\n        users (first: 0) {\n          totalCount\n        }\n        content\n      }\n    }\n  }\n}"},{headers:{Authorization:"token "+t}});return Io(r.data.updateIssueComment.issueComment)}async deleteComment({accessToken:t,commentId:e}){return await this.$http.post("graphql",{variables:{commentId:e},query:"mutation deleteComment(\n  $commentId: ID!,\n) {\n  deleteIssueComment(input: {\n    id: $commentId\n  }) {\n    clientMutationId\n  }\n}"},{headers:{Authorization:"token "+t}}),!0}async getCommentReactions({accessToken:t,issueId:e,commentId:n}){const{firstOrLast:r,afterOrBefore:o,cursor:i}=this._getQueryParams(),{data:a}=await this.$http.post("graphql",{variables:{owner:this.owner,repo:this.repo,issueId:e,perPage:this._pageInfo.perPage},query:`query getComments(\n  $owner: String!\n  $repo: String!\n  $issueId: Int!\n  $perPage: Int!\n) {\n  repository(owner: $owner, name: $repo) {\n    issue(number: $issueId) {\n      comments(\n        ${r}: $perPage\n        ${null===o?"":`${o}: "${i}"`}\n      ) {\n        nodes {\n          id\n          reactionGroups {\n            users (first: 0) {\n              totalCount\n            }\n            content\n          }\n        }\n      }\n    }\n  }\n}`},{headers:{Authorization:"token "+t}});return Co(a.data.repository.issue.comments.nodes.find(t=>t.id===n).reactionGroups)}async postCommentReaction({accessToken:t,commentId:e,reaction:n}){return await this.$http.post("graphql",{variables:{commentId:e,content:Ao(n)},query:"mutation postCommentReaction(\n  $commentId: ID!,\n  $content: ReactionContent!,\n) {\n  addReaction(input: {\n    subjectId: $commentId\n    content: $content\n  }) {\n    reaction {\n      databaseId\n    }\n  }\n}"},{headers:{Authorization:"token "+t}}),!0}_getQueryParams({page:t=this._pageInfo.page,sort:e=this._pageInfo.sort}={}){let n,r,o;return 1===t?(n="asc"===e?"first":"last",r=null,o=null):"asc"===e?t>this._pageInfo.page?(n="first",r="after",o=this._pageInfo.endCursor):(n="last",r="before",o=this._pageInfo.startCursor):t>this._pageInfo.page?(n="last",r="before",o=this._pageInfo.startCursor):(n="first",r="after",o=this._pageInfo.endCursor),{firstOrLast:n,afterOrBefore:r,cursor:o}}}function Lo(t){return{username:t.username,avatar:t.avatar_url,homepage:t.web_url}}function Po(t){return{id:t.iid,title:t.title,content:t.description,link:t.web_url}}function Mo(t){return{id:t.id,content:t.body_html||"",contentRaw:t.body,author:Lo(t.author),createdAt:t.created_at,updatedAt:t.updated_at,reactions:t.reactions}}function No(t){return{like:t.filter(t=>"thumbsup"===t.name).length,unlike:t.filter(t=>"thumbsdown"===t.name).length,heart:t.filter(t=>"heart"===t.name).length}}function Do(t){return"like"===t?"thumbsup":"unlike"===t?"thumbsdown":t}class jo{constructor({baseURL:t="https://gitlab.com",owner:e,repo:n,labels:r,clientId:o,state:i}){this.baseURL=t,this.owner=e,this.repo=n,this.labels=r,this.clientId=o,this.state=i,this._encodedRepo=encodeURIComponent(`${this.owner}/${this.repo}`),this.$http=yo.a.create({baseURL:Dn(t,"api/v4"),headers:{Accept:"application/json"}})}get platform(){return{name:"GitLab",link:this.baseURL,version:"v4",meta:{reactable:!0,sortable:!0}}}redirectAuth(){window.location.href=Nn(Dn(this.baseURL,"oauth/authorize"),{client_id:this.clientId,redirect_uri:window.location.href,response_type:"token",state:this.state})}async handleAuth(){const t=Bn(window.location.hash.slice(1));if(!t.access_token||t.state!==this.state)return null;const e=t.access_token;delete t.access_token,delete t.token_type,delete t.expires_in,delete t.state;const n=Mn(t),r=n?"#"+n:"",o=`${Un(window.location.href)}${window.location.search}${r}`;return window.history.replaceState(null,"",o),e}async getUser({accessToken:t}){const{data:e}=await this.$http.get("user",{headers:{Authorization:"Bearer "+t}});return Lo(e)}async getIssue({accessToken:t,issueId:e,issueTitle:n}){const r={};if(t&&(r.headers={Authorization:"Bearer "+t}),!e){r.params={labels:this.labels.join(","),order_by:"created_at",sort:"asc",search:n};const{data:t}=await this.$http.get(`projects/${this._encodedRepo}/issues`,r);return t.map(Po).find(t=>t.title===n)||null}try{const{data:t}=await this.$http.get(`projects/${this._encodedRepo}/issues/${e}`,r);return Po(t)}catch(t){if(t.response&&404===t.response.status)return null;throw t}}async postIssue({accessToken:t,title:e,content:n}){const{data:r}=await this.$http.post(`projects/${this._encodedRepo}/issues`,{title:e,description:n,labels:this.labels.join(",")},{headers:{Authorization:"Bearer "+t}});return Po(r)}async getComments({accessToken:t,issueId:e,query:{page:n=1,perPage:r=10,sort:o="desc"}={}}){const i={params:{page:n,per_page:r,order_by:"created_at",sort:o}};t&&(i.headers={Authorization:"Bearer "+t});const a=await this.$http.get(`projects/${this._encodedRepo}/issues/${e}/notes`,i),s=a.data,c=[];for(const n of s)c.push((async()=>{n.body_html=await this.getMarkdownContent({accessToken:t,contentRaw:n.body})})()),c.push((async()=>{n.reactions=await this.getCommentReactions({accessToken:t,issueId:e,commentId:n.id})})());return await Promise.all(c),{count:Number(a.headers["x-total"]),page:Number(a.headers["x-page"]),perPage:Number(a.headers["x-per-page"]),data:s.map(Mo)}}async postComment({accessToken:t,issueId:e,content:n}){const{data:r}=await this.$http.post(`projects/${this._encodedRepo}/issues/${e}/notes`,{body:n},{headers:{Authorization:"Bearer "+t}});return Mo(r)}async putComment({accessToken:t,issueId:e,commentId:n,content:r}){const{data:o}=await this.$http.put(`projects/${this._encodedRepo}/issues/${e}/notes/${n}`,{body:r},{headers:{Authorization:"Bearer "+t}}),[i,a]=await Promise.all([this.getMarkdownContent({accessToken:t,contentRaw:o.body}),this.getCommentReactions({accessToken:t,issueId:e,commentId:o.id})]);return o.body_html=i,o.reactions=a,Mo(o)}async deleteComment({accessToken:t,issueId:e,commentId:n}){const{status:r}=await this.$http.delete(`projects/${this._encodedRepo}/issues/${e}/notes/${n}`,{headers:{Authorization:"Bearer "+t}});return 204===r}async getCommentReactions({accessToken:t,issueId:e,commentId:n}){const{data:r}=await this.$http.get(`projects/${this._encodedRepo}/issues/${e}/notes/${n}/award_emoji`,{headers:{Authorization:"Bearer "+t}});return No(r)}async postCommentReaction({issueId:t,commentId:e,reaction:n,accessToken:r}){try{return 201===(await this.$http.post(`projects/${this._encodedRepo}/issues/${t}/notes/${e}/award_emoji`,{name:Do(n)},{headers:{Authorization:"Bearer "+r}})).status}catch(t){if(t.response&&404===t.response.status)return!1;throw t}}async getMarkdownContent({accessToken:t,contentRaw:e}){const n={};t&&(n.headers={Authorization:"Bearer "+t});const{data:r}=await this.$http.post("markdown",{text:e,gfm:!0},n);return r.html}}function Ro(t){return{username:t.nickname,avatar:t.links.avatar.href,homepage:t.links.html.href}}function Fo(t){return{id:t.id,title:t.title,content:t.content.raw,link:t.links.html.href}}function Uo(t){return{id:t.id,content:t.content.html,contentRaw:t.content.raw,author:Ro(t.user),createdAt:t.created_on,updatedAt:t.updated_on,reactions:null}}class Bo{constructor({baseURL:t="https://bitbucket.org",owner:e,repo:n,clientId:r,state:o}){this.baseURL=t,this.owner=e,this.repo=n,this.clientId=r,this.state=o,this.$http=yo.a.create({baseURL:"https://api.bitbucket.org/2.0",headers:{Accept:"application/json"}})}get platform(){return{name:"Bitbucket",link:this.baseURL,version:"v2",meta:{reactable:!1,sortable:!0}}}redirectAuth(){window.location.href=Nn(Dn(this.baseURL,"site/oauth2/authorize"),{client_id:this.clientId,redirect_uri:window.location.href,response_type:"token",state:this.state})}async handleAuth(){const t=Bn(window.location.hash.slice(1));if(!t.access_token||t.state!==this.state)return null;const e=t.access_token;delete t.access_token,delete t.token_type,delete t.expires_in,delete t.state,delete t.scopes;const n=Mn(t),r=n?"#"+n:"",o=`${Un(window.location.href)}${window.location.search}${r}`;return window.history.replaceState(null,"",o),e}async getUser({accessToken:t}){const{data:e}=await this.$http.get("user",{headers:{Authorization:"Bearer "+t}});return Ro(e)}async getIssue({accessToken:t,issueId:e,issueTitle:n}){const r={};if(t&&(r.headers={Authorization:"Bearer "+t}),!e){r.params={sort:"created_on",q:`title="${n}"`,timestamp:Date.now()};const{data:t}=await this.$http.get(`repositories/${this.owner}/${this.repo}/issues`,r);return t.size>0?Fo(t.values[0]):null}try{r.params={timestamp:Date.now()};const{data:t}=await this.$http.get(`repositories/${this.owner}/${this.repo}/issues/${e}`,r);return Fo(t)}catch(t){if(t.response&&404===t.response.status)return null;throw t}}async postIssue({accessToken:t,title:e,content:n}){const{data:r}=await this.$http.post(`repositories/${this.owner}/${this.repo}/issues`,{title:e,content:{raw:n},priority:"trivial",kind:"task"},{headers:{Authorization:"Bearer "+t}});return r.links.html={href:Dn(this.baseURL,`${this.owner}/${this.repo}/issues/${r.id}`)},Fo(r)}async getComments({accessToken:t,issueId:e,query:{page:n=1,perPage:r=10,sort:o="desc"}={}}){const i={params:{page:n,pagelen:r,sort:"desc"===o?"-created_on":"created_on",timestamp:Date.now()}};t&&(i.headers={Authorization:"Bearer "+t});const{data:a}=await this.$http.get(`repositories/${this.owner}/${this.repo}/issues/${e}/comments`,i);return{count:a.size,page:a.page,perPage:a.pagelen,data:a.values.filter(t=>null!==t.content.raw).map(Uo)}}async postComment({accessToken:t,issueId:e,content:n}){const{data:r}=await this.$http.post(`repositories/${this.owner}/${this.repo}/issues/${e}/comments`,{content:{raw:n}},{headers:{Authorization:"Bearer "+t}});return Uo(r)}async putComment({accessToken:t,issueId:e,commentId:n,content:r}){const{data:o}=await this.$http.put(`repositories/${this.owner}/${this.repo}/issues/${e}/comments/${n}`,{content:{raw:r}},{headers:{Authorization:"Bearer "+t}});return Uo(o)}async deleteComment({accessToken:t,issueId:e,commentId:n}){const{status:r}=await this.$http.delete(`repositories/${this.owner}/${this.repo}/issues/${e}/comments/${n}`,{headers:{Authorization:"Bearer "+t}});return 204===r}async getCommentReactions(t){throw new Error("501 Not Implemented")}async postCommentReaction(t){throw new Error("501 Not Implemented")}}function zo(t){return{username:t.login,avatar:t.avatar_url,homepage:t.html_url}}function Go(t){return{id:t.number,title:t.title,content:t.body,link:t.html_url}}function Vo(t){return{id:t.id,content:t.body_html||"",contentRaw:t.body,author:zo(t.user),createdAt:t.created_at,updatedAt:t.updated_at||"",reactions:null}}class Jo{constructor({baseURL:t="https://gitee.com",owner:e,repo:n,labels:r,clientId:o,clientSecret:i,state:a,proxy:s}){if(void 0===i||void 0===s)throw new Error("clientSecret and proxy is required for Gitee V5");this.baseURL=t,this.owner=e,this.repo=n,this.labels=r,this.clientId=o,this.clientSecret=i,this.state=a,this.proxy=s,this.$http=yo.a.create({baseURL:Dn(t,"api/v5")}),this.$http.interceptors.response.use(t=>t,t=>(t.response.data&&t.response.data.message&&(t.message=t.response.data.message),Promise.reject(t)))}get platform(){return{name:"Gitee",link:this.baseURL,version:"v5",meta:{reactable:!1,sortable:!1}}}redirectAuth(){window.location.href=Nn(Dn(this.baseURL,"oauth/authorize"),{client_id:this.clientId,redirect_uri:window.location.href,scope:"user_info issues notes",response_type:"code",state:this.state})}async handleAuth(){const t=Bn(window.location.search);if(t.code){if(t.state!==this.state)return null;const e=t.code;delete t.code,delete t.state;const n=Nn(Un(window.location.href),t)+window.location.hash;window.history.replaceState(null,"",n);return await this.getAccessToken({code:e})}return null}async getAccessToken({code:t}){const e=Dn(this.baseURL,"oauth/token"),n="function"==typeof this.proxy?this.proxy(e):this.proxy,{data:r}=await this.$http.post(n,{client_id:this.clientId,client_secret:this.clientSecret,code:t,grant_type:"authorization_code",redirect_uri:window.location.href});return r.access_token}async getUser({accessToken:t}){const{data:e}=await this.$http.get("user",{params:{access_token:t}});return zo(e)}async getIssue({accessToken:t,issueId:e,issueTitle:n}){const r={params:{timestamp:Date.now()}};if(t&&(r.params.access_token=t),!e){Object.assign(r.params,{q:n,repo:`${this.owner}/${this.repo}`,per_page:1});const{data:t}=await this.$http.get("search/issues",r);return t.map(Go).find(t=>t.title===n)||null}try{const{data:t}=await this.$http.get(`repos/${this.owner}/${this.repo}/issues/${e}`,r);return Go(t)}catch(t){if(t.response&&404===t.response.status)return null;throw t}}async postIssue({accessToken:t,title:e,content:n}){const{data:r}=await this.$http.post(`repos/${this.owner}/issues`,{access_token:t,repo:this.repo,title:e,body:n,labels:this.labels.join(",")});return Go(r)}async getComments({accessToken:t,issueId:e,query:{page:n=1,perPage:r=10}={}}){const o={params:{page:n,per_page:r,timestamp:Date.now()},headers:{Accept:["application/vnd.gitee.html+json"]}};t&&(o.params.access_token=t);const i=await this.$http.get(`repos/${this.owner}/${this.repo}/issues/${e}/comments`,o);return{count:Number(i.headers.total_count),page:n,perPage:r,data:i.data.map(Vo)}}async postComment({accessToken:t,issueId:e,content:n}){const{data:r}=await this.$http.post(`repos/${this.owner}/${this.repo}/issues/${e}/comments`,{body:n,access_token:t},{headers:{Accept:["application/vnd.gitee.html+json"]}});return Vo(r)}async putComment({accessToken:t,commentId:e,content:n}){const{data:r}=await this.$http.patch(`repos/${this.owner}/${this.repo}/issues/comments/${e}`,{body:n,access_token:t},{headers:{Accept:["application/vnd.gitee.html+json"]}});return Vo(r)}async deleteComment({accessToken:t,commentId:e}){const{status:n}=await this.$http.delete(`repos/${this.owner}/${this.repo}/issues/comments/${e}`,{params:{access_token:t}});return 204===n}async getCommentReactions(t){throw new Error("501 Not Implemented")}async postCommentReaction(t){throw new Error("501 Not Implemented")}}n(415);var Ho={name:"Vssue",components:{VssueComponent:mo},props:{options:{type:Object,default:function(){return{}}}},data:function(){return{key:"key",platformOptions:{github:$o,"github-v4":ko,gitlab:jo,bitbucket:Bo,gitee:Jo}}},computed:{vssueOptions:function(){var t=this.platformOptions,e=this.options,n=t[e.platform];return Object(Ze.a)(Object(Ze.a)({},e),{},{api:n})}},watch:{$route:function(t,e){var n=this;t.path!==e.path&&setTimeout((function(){n.key="reco-".concat((new Date).getTime())}),300)}}},Wo=(n(416),{components:{Valine:wn,Vssue:Object(He.a)(Ho,(function(){var t=this.$createElement;return(this._self._c||t)("VssueComponent",{key:this.key,staticClass:"vssue-wrapper",attrs:{options:this.vssueOptions}})}),[],!1,null,null,null).exports},props:{isShowComments:{type:Boolean,default:!0}},data:function(){return{commentsOptions:{}}},computed:{solution:function(){var t=this.commentsOptions.solution,e=this.$themeConfig,n=e.valineConfig,r=e.vssueConfig,o=this.$themeLocaleConfig,i=o.valineConfig,a=o.vssueConfig,s="";return void 0!==t?s=t:void 0!==i||void 0!==n?s="valine":void 0===a&&void 0===r||(s="vssue"),s},options:function(){var t=this.commentsOptions.options,e=this.$themeConfig,n=e.valineConfig,r=e.vssueConfig,o=this.$themeLocaleConfig,i=o.valineConfig,a=o.vssueConfig;return void 0!==t?t:void 0!==i||void 0!==n?i||n:void 0!==a||void 0!==r?a||r:null},componentName:function(){var t=this.solution;return"valine"===t?"Valine":"vssue"===t?"Vssue":""}},mounted:function(){this.$themeConfig.commentsSolution=this.solution}}),qo=Object(He.a)(Wo,(function(){var t=this.$createElement,e=this._self._c||t;return e("div",{directives:[{name:"show",rawName:"v-show",value:this.isShowComments,expression:"isShowComments"}],staticClass:"comments-wrapper"},[e("ClientOnly",[e(this.componentName,{tag:"component",attrs:{options:this.options}})],1)],1)}),[],!1,null,null,null).exports,Yo={props:{idVal:String,numStyle:Object,flagTitle:{type:String,default:"Your Article Title"}},methods:{getIdVal:function(t){var e=this.$site.base;return e.slice(0,e.length-1)+t}}},Xo=Object(He.a)(Yo,(function(){var t=this.$createElement,e=this._self._c||t;return e("span",{staticClass:"leancloud-visitors",attrs:{id:this.getIdVal(this.idVal),"data-flag-title":this.flagTitle}},[e("a",{staticClass:"leancloud-visitors-count",style:this.numStyle})])}),[],!1,null,null,null).exports,Qo=(n(417),n(71)),Ko=n(11),Zo=n(16),ti={tags:{"Android 开发基础":{key:"Android 开发基础",scope:"tags",path:"/tag/Android 开发基础/",pageKeys:["v-d5bebee2","v-0a1a659b","v-5c11c33b","v-7c6aabea","v-c6f25ac6","v-59bb4d4a","v-3225e486","v-e571bd4a","v-022d481b","v-6c159fd9","v-580c0e15","v-2ee42e9b","v-8f041e3a","v-ecbbc74a","v-015f1e9b","v-55c82270"]},ThreadPoolExecutor:{key:"ThreadPoolExecutor",scope:"tags",path:"/tag/ThreadPoolExecutor/",pageKeys:["v-b348e4ca"]},"随笔":{key:"随笔",scope:"tags",path:"/tag/随笔/",pageKeys:["v-b348e4ca"]},JavaSocket:{key:"JavaSocket",scope:"tags",path:"/tag/JavaSocket/",pageKeys:["v-10f6d00a","v-3f89301b","v-d2096aa0"]},Rxjava2:{key:"Rxjava2",scope:"tags",path:"/tag/Rxjava2/",pageKeys:["v-1559a70e","v-deaef892","v-2bfddaf5","v-71599b9a","v-62a88971","v-04043ea2","v-cd599026","v-34a88f2b","v-6004332e","v-295365bd","v-76ae860a","v-5ffe1439"]},Gitbook:{key:"Gitbook",scope:"tags",path:"/tag/Gitbook/",pageKeys:["v-874e03a0"]}},categories:{Android:{key:"Android",scope:"categories",path:"/categories/Android/",pageKeys:["v-d5bebee2","v-0a1a659b","v-5c11c33b","v-7c6aabea","v-c6f25ac6","v-59bb4d4a","v-3225e486","v-e571bd4a","v-022d481b","v-6c159fd9","v-580c0e15","v-2ee42e9b","v-8f041e3a","v-ecbbc74a","v-015f1e9b","v-55c82270"]},Java:{key:"Java",scope:"categories",path:"/categories/Java/",pageKeys:["v-b348e4ca","v-10f6d00a","v-3f89301b","v-d2096aa0","v-1559a70e","v-deaef892","v-2bfddaf5","v-71599b9a","v-62a88971","v-04043ea2","v-cd599026","v-34a88f2b","v-6004332e","v-295365bd","v-76ae860a","v-5ffe1439"]},JavaSocket:{key:"JavaSocket",scope:"categories",path:"/categories/JavaSocket/",pageKeys:["v-10f6d00a","v-3f89301b","v-d2096aa0"]},Rxjava2:{key:"Rxjava2",scope:"categories",path:"/categories/Rxjava2/",pageKeys:["v-1559a70e","v-deaef892","v-2bfddaf5","v-71599b9a","v-62a88971","v-04043ea2","v-cd599026","v-34a88f2b","v-6004332e","v-295365bd","v-76ae860a","v-5ffe1439"]},Gitbook:{key:"Gitbook",scope:"categories",path:"/categories/Gitbook/",pageKeys:["v-874e03a0"]}},timeline:{}},ei=function(){function t(e,n){var r=this;Object(Ko.a)(this,t),this._metaMap=Object.assign({},e),Object.keys(this._metaMap).forEach((function(t){var e=r._metaMap[t].pageKeys;r._metaMap[t].pages=e.map((function(t){return function(t,e){for(var n=0;n<t.length;n++){var r=t[n];if(r.key===e)return r}return{path:"",frontmatter:{}}}(n,t)}))}))}return Object(Zo.a)(t,[{key:"length",get:function(){return Object.keys(this._metaMap).length}},{key:"map",get:function(){return this._metaMap}},{key:"pages",get:function(){return this.list}},{key:"list",get:function(){return this.toArray()}},{key:"toArray",value:function(){var t=this,e=[];return Object.keys(this._metaMap).forEach((function(n){var r=t._metaMap[n],o=r.pages,i=r.path;e.push({name:n,pages:o,path:i})})),e}},{key:"getItemByName",value:function(t){return this._metaMap[t]}}]),t}(),ni=(n(197),{tags:function(t,e){var r=n(215);return r(t.frontmatter.date)-r(e.frontmatter.date)>0?-1:1},categories:function(t,e){var r=n(215);return r(t.frontmatter.date)-r(e.frontmatter.date)>0?-1:1}}),ri={tags:function(t,e,n){var r=e;return["tags"].some((function(e){var n=t.frontmatter[e];return Array.isArray(n)?n.some((function(t){return t===r})):n===r}))},categories:function(t,e,n){var r=e;return["categories"].some((function(e){var n=t.frontmatter[e];return Array.isArray(n)?n.some((function(t){return t===r})):n===r}))}},oi=[{pid:"tags",id:"Android 开发基础",filter:ri.tags,sorter:ni.tags,pages:[{path:"/tag/Android 开发基础/",interval:[0,9]},{path:"/tag/Android 开发基础/page/2/",interval:[10,16]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"ThreadPoolExecutor",filter:ri.tags,sorter:ni.tags,pages:[{path:"/tag/ThreadPoolExecutor/",interval:[0,1]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"随笔",filter:ri.tags,sorter:ni.tags,pages:[{path:"/tag/随笔/",interval:[0,1]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"JavaSocket",filter:ri.tags,sorter:ni.tags,pages:[{path:"/tag/JavaSocket/",interval:[0,3]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"Rxjava2",filter:ri.tags,sorter:ni.tags,pages:[{path:"/tag/Rxjava2/",interval:[0,9]},{path:"/tag/Rxjava2/page/2/",interval:[10,12]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"Gitbook",filter:ri.tags,sorter:ni.tags,pages:[{path:"/tag/Gitbook/",interval:[0,1]}],prevText:"Prev",nextText:"Next"},{pid:"categories",id:"Android",filter:ri.categories,sorter:ni.categories,pages:[{path:"/categories/Android/",interval:[0,9]},{path:"/categories/Android/page/2/",interval:[10,16]}],prevText:"Prev",nextText:"Next"},{pid:"categories",id:"Java",filter:ri.categories,sorter:ni.categories,pages:[{path:"/categories/Java/",interval:[0,9]},{path:"/categories/Java/page/2/",interval:[10,16]}],prevText:"Prev",nextText:"Next"},{pid:"categories",id:"JavaSocket",filter:ri.categories,sorter:ni.categories,pages:[{path:"/categories/JavaSocket/",interval:[0,3]}],prevText:"Prev",nextText:"Next"},{pid:"categories",id:"Rxjava2",filter:ri.categories,sorter:ni.categories,pages:[{path:"/categories/Rxjava2/",interval:[0,9]},{path:"/categories/Rxjava2/page/2/",interval:[10,12]}],prevText:"Prev",nextText:"Next"},{pid:"categories",id:"Gitbook",filter:ri.categories,sorter:ni.categories,pages:[{path:"/categories/Gitbook/",interval:[0,1]}],prevText:"Prev",nextText:"Next"}],ii=n(226),ai=n.n(ii)()("plugin-blog:pagination"),si=function(){function t(e,n,r){Object(Ko.a)(this,t),ai("pagination",e);var o=e.pages,i=e.prevText,a=e.nextText,s=r.path;this._prevText=i,this._nextText=a;for(var c=0,l=o.length;c<l;c++){if(o[c].path===s){this.paginationIndex=c;break}}this.paginationIndex||(this.paginationIndex=0),this._paginationPages=o,this._currentPage=o[this.paginationIndex],this._matchedPages=n.filter((function(t){return e.filter(t,e.id,e.pid)})).sort(e.sorter)}return Object(Zo.a)(t,[{key:"setIndexPage",value:function(t){this._indexPage=t}},{key:"length",get:function(){return this._paginationPages.length}},{key:"pages",get:function(){var t=ye(this._currentPage.interval,2),e=t[0],n=t[1];return this._matchedPages.slice(e,n+1)}},{key:"hasPrev",get:function(){return 0!==this.paginationIndex}},{key:"prevLink",get:function(){return this.hasPrev?this.paginationIndex-1==0&&this._indexPage?this._indexPage:this._paginationPages[this.paginationIndex-1].path:null}},{key:"hasNext",get:function(){return this.paginationIndex!==this.length-1}},{key:"nextLink",get:function(){return this.hasNext?this._paginationPages[this.paginationIndex+1].path:null}},{key:"prevText",get:function(){return this._prevText}},{key:"nextText",get:function(){return this._nextText}},{key:"getSpecificPageLink",value:function(t){return this._paginationPages[t].path}}]),t}(),ci=new(function(){function t(e){Object(Ko.a)(this,t),this.paginations=e}return Object(Zo.a)(t,[{key:"pages",get:function(){return i.default.$vuepress.$get("siteData").pages}},{key:"getPagination",value:function(t,e,n){ai("id",e),ai("pid",t);var r=this.paginations.filter((function(n){return n.id===e&&n.pid===t}))[0];return new si(r,this.pages,n)}}]),t}())(oi),li={comment:{enabled:!1,service:""},email:{enabled:!1},feed:{rss:!1,atom:!1,json:!1}};var ui=function(t){var e=t.Vue;t.router.options.scrollBehavior=function(t,n,r){if(r)return window.scrollTo({top:r.y,behavior:"smooth"});if(!t.hash)return window.scrollTo({top:0,behavior:"smooth"});if(!e.$vuepress.$get("disableScrollBehavior")){var o,i,a,s=document.querySelector(t.hash);return s?window.scrollTo({top:(o=s,i=document.documentElement.getBoundingClientRect(),a=o.getBoundingClientRect(),{x:a.left-i.left,y:a.top-i.top}).y,behavior:"smooth"}):void 0}}},pi=(n(139),n(69)),di=n(68),hi=(n(420),function(){function t(e){var n=e.origin,r=e.size,o=e.speed,i=e.color,a=e.angle,s=e.context;Object(Ko.a)(this,t),this.origin=n,this.position=Object(Ze.a)({},this.origin),this.size=r,this.color=i,this.speed=o,this.angle=a,this.context=s,this.renderCount=0}return Object(Zo.a)(t,[{key:"draw",value:function(){}},{key:"move",value:function(){this.position.x=Math.sin(this.angle)*this.speed+this.position.x,this.position.y=Math.cos(this.angle)*this.speed+this.position.y+.3*this.renderCount,this.renderCount++}}]),t}()),fi=function(t){Object(pi.a)(n,t);var e=Object(di.a)(n);function n(){return Object(Ko.a)(this,n),e.apply(this,arguments)}return Object(Zo.a)(n,[{key:"draw",value:function(){this.context.fillStyle=this.color,this.context.beginPath(),this.context.arc(this.position.x,this.position.y,this.size,0,2*Math.PI),this.context.fill()}}]),n}(hi),vi=function(t){Object(pi.a)(n,t);var e=Object(di.a)(n);function n(t){var r,o=t.origin,i=t.size,a=t.speed,s=t.color,c=t.angle,l=t.context;return Object(Ko.a)(this,n),(r=e.call(this,{origin:o,size:i,speed:a,color:s,angle:c,context:l})).rotate=0,r}return Object(Zo.a)(n,[{key:"draw",value:function(){this.context.fillStyle=this.color,this.context.beginPath();for(var t=2*this.size,e=this.size,n=0;n<5;n++)this.context.lineTo(Math.cos((18+72*n-this.rotate)/180*Math.PI)*t+this.position.x,-Math.sin((18+72*n-this.rotate)/180*Math.PI)*t+this.position.y),this.context.lineTo(Math.cos((54+72*n-this.rotate)/180*Math.PI)*e+this.position.x,-Math.sin((54+72*n-this.rotate)/180*Math.PI)*e+this.position.y);this.context.fill(),this.rotate+=5}}]),n}(hi),bi=function(){function t(e){var n=e.origin,r=e.context,o=e.shape,i=void 0===o?"star":o,a=e.size,s=void 0===a?2:a,c=e.particleCount,l=void 0===c?10:c,u=e.clientSize;Object(Ko.a)(this,t),this.origin=n,this.context=r,this.shape=i,this.size=s,this.particleCount=l,this.clientSize=u,this.stop=!1,this.particles=[]}return Object(Zo.a)(t,[{key:"randomArray",value:function(t){var e=t.length;return t[Math.floor(e*Math.random())]}},{key:"randomColor",value:function(){var t=["8","9","A","B","C","D","E","F"];return"#"+this.randomArray(t)+this.randomArray(t)+this.randomArray(t)+this.randomArray(t)+this.randomArray(t)+this.randomArray(t)}},{key:"randomRange",value:function(t,e){return(e-t)*Math.random()+t}},{key:"getShape",value:function(t){return{star:vi,circle:fi}[t]}},{key:"init",value:function(){for(var t=0;t<this.particleCount;t++){var e=new(this.getShape(this.shape))({context:this.context,origin:this.origin,size:this.size,color:this.randomColor(),angle:this.randomRange(Math.PI-1,Math.PI+1),speed:this.randomRange(1,6)});this.particles.push(e)}}},{key:"move",value:function(){var t=this;this.particles.forEach((function(e,n){e.position.x<0||e.position.x>t.clientSize.width||e.position.y>t.clientSize.height?t.particles.splice(n,1):e.move()})),0==this.particles.length&&(this.stop=!0)}},{key:"draw",value:function(){this.particles.forEach((function(t){return t.draw()}))}}]),t}(),mi={name:"CursorEffects",data:function(){return{shape:"star",size:2,zIndex:999999999,computerCanvas:null,renderCanvas:null,computerContext:null,renderContext:null,clientSize:{width:0,height:0},resizeTimeout:null}},mounted:function(){this.computerCanvas=document.createElement("canvas"),this.renderCanvas=document.getElementById("vuepress-canvas-cursor"),this.computerContext=this.computerCanvas.getContext("2d"),this.renderContext=this.renderCanvas.getContext("2d"),this.clientSize.width=window.innerWidth,this.clientSize.height=window.innerHeight,this.booms=[],this.running=!1,this.init()},methods:{init:function(){this.setStyle(this.renderCanvas.style),this.renderCanvas.width=this.computerCanvas.width=this.clientSize.width,this.renderCanvas.height=this.computerCanvas.height=this.clientSize.height,this.makeHighRes(this.renderCanvas,this.renderContext),this.makeHighRes(this.computerCanvas,this.computerContext),window.addEventListener("mousedown",this.handleMouseDown),window.addEventListener("pagehide",this.handlePageHide),window.addEventListener("resize",this.handleResize)},setStyle:function(t){t.position="fixed",t.top=0,t.left=0,t.zIndex=this.zIndex,t.pointerEvents="none",t.width=this.clientSize.width,t.height=this.clientSize.height},makeHighRes:function(t,e){var n=window.devicePixelRatio||1,r=t.width,o=t.height;t.width=Math.round(r*n),t.height=Math.round(o*n),t.style.width=r+"px",t.style.height=o+"px",e.scale(n,n)},handleMouseDown:function(t){var e=new bi({origin:{x:t.clientX,y:t.clientY},context:this.computerContext,size:this.size,shape:this.shape,clientSize:this.clientSize});e.init(),this.booms.push(e),this.running||this.run()},handlePageHide:function(){this.booms=[],this.running=!1},handleResize:function(){var t=this;null!=this.resizeTimeout&&clearTimeout(this.resizeTimeout),this.resizeTimeout=setTimeout((function(){t.clientSize.width=window.innerWidth,t.clientSize.height=window.innerHeight,t.renderCanvas.width=t.computerCanvas.width=t.clientSize.width,t.renderCanvas.height=t.computerCanvas.height=t.clientSize.height,t.makeHighRes(t.renderCanvas,t.renderContext),t.makeHighRes(t.computerCanvas,t.computerContext)}),500)},run:function(){var t=this;if(this.running=!0,0==this.booms.length)return this.running=!1;requestAnimationFrame(this.run),this.computerContext.clearRect(0,0,this.clientSize.width,this.clientSize.height),this.renderContext.clearRect(0,0,this.clientSize.width,this.clientSize.height),this.booms.forEach((function(e,n){e.stop?t.booms.splice(n,1):(e.move(),e.draw())})),this.renderContext.drawImage(this.computerCanvas,0,0,this.clientSize.width,this.clientSize.height)}}},gi=Object(He.a)(mi,(function(){var t=this.$createElement;return(this._self._c||t)("canvas",{attrs:{id:"vuepress-canvas-cursor"}})}),[],!1,null,null,null).exports,yi={props:{type:{type:String,default:""},title:{type:String,default:""},content:{type:String,default:""},blockStyle:{type:Object,default:null},titleStyle:{type:Object,default:null},contentStyle:{type:Object,default:null},changeTime:{type:String,default:"false"}},data:function(){return{boxx:{},class_boxx:"",list:xi,type_boxx_list:_i,show_content:!0,show_title:!0,style_boxx:{},style_title:{},style_content:{},interval:{}}},mounted:function(){this.getContent(),this.checkTitleAndConten(),this.checkStyleWithTitleAndContenAndBlock(),this.getShowType(this.type),this.dynamicUpdateType(this.changeTime)},watch:{changeTime:function(t,e){this.dynamicUpdateType(t)}},methods:{getContent:function(){var t=this;this.list.length>=100||(yo.a.get("https://v1.jinrishici.com/all.json").then((function(e){var n=" • <span style='font-size: 13px;'>"+e.data.author+"</span>";t.list.push({title:e.data.origin+n,content:e.data.content})})),yo.a.get("https://v1.hitokoto.cn").then((function(e){if(!(""==e.data.hitokoto||e.data.hitokoto.length>40)){var n="";null!=e.data.from_who&&(n=" • <span style='font-size: 13px;'>"+e.data.from_who+"</span>"),t.list.push({title:e.data.from+n,content:e.data.hitokoto})}})))},getShowType:function(t){t!=_i[2].type?t!=_i[1].type?this.class_boxx=_i[0].class:this.class_boxx=_i[1].class:this.class_boxx=_i[2].class},getboxx:function(){return this.boxx=xi[Math.floor(Math.random()*xi.length)]},checkTitleAndConten:function(){return""!=this.title&&""==this.content?(this.boxx.title=this.title,void(this.show_content=!1)):""==this.title&&""!=this.content?(this.boxx.content=this.content,this.style_content={"margin-top":"1rem","margin-bottom":"0.4rem"},void(this.show_title=!1)):void(""==this.title||""==this.content?this.getboxx():(this.boxx.title=this.title,this.boxx.content=this.content))},checkStyleWithTitleAndContenAndBlock:function(){null!=this.titleStyle&&(this.style_title=this.titleStyle),null!=this.contentStyle&&(this.style_content=this.contentStyle),null!=this.blockStyle&&(this.style_boxx=this.blockStyle)},dynamicUpdateType:function(t){var e=this;if(this.getContent(),""!=t&&"false"!=t&&/^\d+$/.test(t)){var n=0;for(var r in _i)this.type==_i[r].type&&(n=r);clearInterval(this.interval),this.interval=setInterval((function(){++n==_i.length&&(n=0),e.getShowType(_i[n].type),e.checkTitleAndConten()}),t)}}}},_i=[{type:"tip",class:"tip custom-block"},{type:"warning",class:"warning custom-block"},{type:"danger",class:"danger custom-block"}],xi=[{title:"佚名",content:"勇敢不是不害怕，而是害怕的时候你还能坚持去做"}],wi=yi,Si=Object(He.a)(wi,(function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("div",{attrs:{id:"boxx"}},[n("div",{class:t.class_boxx,style:t.style_boxx},[n("p",{staticClass:"custom-block-title",style:t.style_title,attrs:{"v-if":t.show_title},domProps:{innerHTML:t._s(t.boxx.title)}}),t._v(" "),n("p",{style:t.style_content,attrs:{"v-if":t.show_content},domProps:{innerHTML:t._s(t.boxx.content)}})])])}),[],!1,null,"f4ca0dac",null).exports,Oi={name:"KanBanNiang",data:function(){return{isLoaded:!0,displayBanNiang:!1,isShowMessageBox:!1,isShowBtns:!1,messages:{message:"我是江明，欢迎你的关注",welcome:"我是江明，欢迎你的关注",home:"心里的花，我想要带你回家~",theme:"换一个主题，希望你能喜欢我的其他小伙伴哦~",close:"关闭快捷面板，再见哦(●—●)"},currentTheme:"simple"[0],myTheme:"simple",themeName:["blackCat","whiteCat","haru1","haru2","haruto","koharu","izumi","shizuku","wanko","miku","z16"],model:{blackCat:"https://cdn.jsdelivr.net/gh/QiShaoXuan/live2DModel@1.0.0/live2d-widget-model-hijiki/assets/hijiki.model.json",whiteCat:"https://cdn.jsdelivr.net/gh/QiShaoXuan/live2DModel@1.0.0/live2d-widget-model-tororo/assets/tororo.model.json",haru1:"https://cdn.jsdelivr.net/gh/QiShaoXuan/live2DModel@1.0.0/live2d-widget-model-haru/01/assets/haru01.model.json",haru2:"https://cdn.jsdelivr.net/gh/QiShaoXuan/live2DModel@1.0.0/live2d-widget-model-haru/02/assets/haru02.model.json",haruto:"https://cdn.jsdelivr.net/gh/QiShaoXuan/live2DModel@1.0.0/live2d-widget-model-haruto/assets/haruto.model.json",koharu:"https://cdn.jsdelivr.net/gh/QiShaoXuan/live2DModel@1.0.0/live2d-widget-model-koharu/assets/koharu.model.json",izumi:"https://cdn.jsdelivr.net/gh/QiShaoXuan/live2DModel@1.0.0/live2d-widget-model-izumi/assets/izumi.model.json",shizuku:"https://cdn.jsdelivr.net/gh/QiShaoXuan/live2DModel@1.0.0/live2d-widget-model-shizuku/assets/shizuku.model.json",wanko:"https://cdn.jsdelivr.net/gh/QiShaoXuan/live2DModel@1.0.0/live2d-widget-model-wanko/assets/wanko.model.json",miku:"https://cdn.jsdelivr.net/gh/QiShaoXuan/live2DModel@1.0.0/live2d-widget-model-miku/assets/miku.model.json",z16:"https://cdn.jsdelivr.net/gh/QiShaoXuan/live2DModel@1.0.0/live2d-widget-model-z16/assets/z16.model.json"},style:{width:150,height:220},modelStyle:{right:"90px",bottom:"-20px",opacity:"0.9"},messageStyle:{right:"68px",bottom:"190px"},btnStyle:{right:"90px",bottom:"40px"}}},mounted:function(){this.btnStyle=Object(Ze.a)(Object(Ze.a)({},this.btnStyle),{},{height:this.myTheme.length>1?"120px":"100px"}),this.initBanNiang()},methods:{hoverGoHome:function(){this.messages.message=this.messages.home},hoverChangeTheme:function(){this.messages.message=this.messages.theme},hoverMoreInfo:function(){this.messages.message="想知道关于本站的更多信息吗？"},hoverCloseBanNiang:function(){this.messages.message=this.messages.close},resetMessage:function(){this.messages.message=this.messages.welocme},goHome:function(){"/"!==this.$route.path&&this.$router.push("/")},changeTheme:function(){for(var t=[],e=0;e<this.myTheme.length;e++)this.myTheme[e]!=this.currentTheme&&t.push(this.myTheme[e]);var n=Math.floor(Math.random()*(this.myTheme.length-1));this.currentTheme=t[n],this.initBanNiang()},closeBanNiang:function(){this.isLoaded=!1,this.displayBanNiang=!0},showBanNiang:function(){this.isLoaded=!0,this.displayBanNiang=!1,this.initBanNiang()},initBanNiang:function(){if(!!/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent))return this.isLoaded=!1,console.log("mobile do not load model");if(-1===this.themeName.indexOf(this.currentTheme)&&(this.myTheme=this.themeName,this.currentTheme=this.themeName[8],console.log("@vuepress-reco/vuepress-plugin-kan-ban-niang, currentTheme = "+this.currentTheme+", 前往https://vuepress-theme-reco.recoluan.com/views/plugins/kanbanniang.html 查看支持的主题")),!window.loadlive2d){var t=document.createElement("script");t.innerHTML='!function(t){function i(r){if(e[r])return e[r].exports;var o=e[r]={i:r,l:!1,exports:{}};return t[r].call(o.exports,o,o.exports,i),o.l=!0,o.exports}var e={};i.m=t,i.c=e,i.d=function(t,e,r){i.o(t,e)||Object.defineProperty(t,e,{configurable:!1,enumerable:!0,get:r})},i.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return i.d(e,"a",e),e},i.o=function(t,i){return Object.prototype.hasOwnProperty.call(t,i)},i.p="",i(i.s=4)}([function(t,i,e){"use strict";function r(){this.live2DModel=null,this.modelMatrix=null,this.eyeBlink=null,this.physics=null,this.pose=null,this.debugMode=!1,this.initialized=!1,this.updating=!1,this.alpha=1,this.accAlpha=0,this.lipSync=!1,this.lipSyncValue=0,this.accelX=0,this.accelY=0,this.accelZ=0,this.dragX=0,this.dragY=0,this.startTimeMSec=null,this.mainMotionManager=new h,this.expressionManager=new h,this.motions={},this.expressions={},this.isTexLoaded=!1}function o(){AMotion.prototype.constructor.call(this),this.paramList=new Array}function n(){this.id="",this.type=-1,this.value=null}function s(){this.nextBlinkTime=null,this.stateStartTime=null,this.blinkIntervalMsec=null,this.eyeState=g.STATE_FIRST,this.blinkIntervalMsec=4e3,this.closingMotionMsec=100,this.closedMotionMsec=50,this.openingMotionMsec=150,this.closeIfZero=!0,this.eyeID_L="PARAM_EYE_L_OPEN",this.eyeID_R="PARAM_EYE_R_OPEN"}function _(){this.tr=new Float32Array(16),this.identity()}function a(t,i){_.prototype.constructor.call(this),this.width=t,this.height=i}function h(){MotionQueueManager.prototype.constructor.call(this),this.currentPriority=null,this.reservePriority=null,this.super=MotionQueueManager.prototype}function l(){this.physicsList=new Array,this.startTimeMSec=UtSystem.getUserTimeMSec()}function $(){this.lastTime=0,this.lastModel=null,this.partsGroups=new Array}function u(t){this.paramIndex=-1,this.partsIndex=-1,this.link=null,this.id=t}function p(){this.EPSILON=.01,this.faceTargetX=0,this.faceTargetY=0,this.faceX=0,this.faceY=0,this.faceVX=0,this.faceVY=0,this.lastTimeSec=0}function f(){_.prototype.constructor.call(this),this.screenLeft=null,this.screenRight=null,this.screenTop=null,this.screenBottom=null,this.maxLeft=null,this.maxRight=null,this.maxTop=null,this.maxBottom=null,this.max=Number.MAX_VALUE,this.min=0}function c(){}var d=0;r.prototype.getModelMatrix=function(){return this.modelMatrix},r.prototype.setAlpha=function(t){t>.999&&(t=1),t<.001&&(t=0),this.alpha=t},r.prototype.getAlpha=function(){return this.alpha},r.prototype.isInitialized=function(){return this.initialized},r.prototype.setInitialized=function(t){this.initialized=t},r.prototype.isUpdating=function(){return this.updating},r.prototype.setUpdating=function(t){this.updating=t},r.prototype.getLive2DModel=function(){return this.live2DModel},r.prototype.setLipSync=function(t){this.lipSync=t},r.prototype.setLipSyncValue=function(t){this.lipSyncValue=t},r.prototype.setAccel=function(t,i,e){this.accelX=t,this.accelY=i,this.accelZ=e},r.prototype.setDrag=function(t,i){this.dragX=t,this.dragY=i},r.prototype.getMainMotionManager=function(){return this.mainMotionManager},r.prototype.getExpressionManager=function(){return this.expressionManager},r.prototype.loadModelData=function(t,i){var e=c.getPlatformManager();this.debugMode&&e.log("Load model : "+t);var r=this;e.loadLive2DModel(t,function(t){if(r.live2DModel=t,r.live2DModel.saveParam(),0!=Live2D.getError())return void console.error("Error : Failed to loadModelData().");r.modelMatrix=new a(r.live2DModel.getCanvasWidth(),r.live2DModel.getCanvasHeight()),r.modelMatrix.setWidth(2),r.modelMatrix.setCenterPosition(0,0),i(r.live2DModel)})},r.prototype.loadTexture=function(t,i,e){d++;var r=c.getPlatformManager();this.debugMode&&r.log("Load Texture : "+i);var o=this;r.loadTexture(this.live2DModel,t,i,function(){d--,0==d&&(o.isTexLoaded=!0),"function"==typeof e&&e()})},r.prototype.loadMotion=function(t,i,e){var r=c.getPlatformManager();this.debugMode&&r.log("Load Motion : "+i);var o=null,n=this;r.loadBytes(i,function(i){o=Live2DMotion.loadMotion(i),null!=t&&(n.motions[t]=o),e(o)})},r.prototype.loadExpression=function(t,i,e){var r=c.getPlatformManager();this.debugMode&&r.log("Load Expression : "+i);var n=this;r.loadBytes(i,function(i){null!=t&&(n.expressions[t]=o.loadJson(i)),"function"==typeof e&&e()})},r.prototype.loadPose=function(t,i){var e=c.getPlatformManager();this.debugMode&&e.log("Load Pose : "+t);var r=this;try{e.loadBytes(t,function(t){r.pose=$.load(t),"function"==typeof i&&i()})}catch(t){console.warn(t)}},r.prototype.loadPhysics=function(t){var i=c.getPlatformManager();this.debugMode&&i.log("Load Physics : "+t);var e=this;try{i.loadBytes(t,function(t){e.physics=l.load(t)})}catch(t){console.warn(t)}},r.prototype.hitTestSimple=function(t,i,e){if(null===this.live2DModel)return!1;var r=this.live2DModel.getDrawDataIndex(t);if(r<0)return!1;for(var o=this.live2DModel.getTransformedPoints(r),n=this.live2DModel.getCanvasWidth(),s=0,_=this.live2DModel.getCanvasHeight(),a=0,h=0;h<o.length;h+=2){var l=o[h],$=o[h+1];l<n&&(n=l),l>s&&(s=l),$<_&&(_=$),$>a&&(a=$)}var u=this.modelMatrix.invertTransformX(i),p=this.modelMatrix.invertTransformY(e);return n<=u&&u<=s&&_<=p&&p<=a},r.prototype.hitTestSimpleCustom=function(t,i,e,r){return null!==this.live2DModel&&t&&(e>=t[0]&&e<=i[0]&&r<=t[1]&&r>=i[1])},o.prototype=new AMotion,o.EXPRESSION_DEFAULT="DEFAULT",o.TYPE_SET=0,o.TYPE_ADD=1,o.TYPE_MULT=2,o.loadJson=function(t){var i=new o,e=c.getPlatformManager(),r=e.jsonParseFromBytes(t);if(i.setFadeIn(parseInt(r.fade_in)>0?parseInt(r.fade_in):1e3),i.setFadeOut(parseInt(r.fade_out)>0?parseInt(r.fade_out):1e3),null==r.params)return i;var s=r.params,_=s.length;i.paramList=[];for(var a=0;a<_;a++){var h=s[a],l=h.id.toString(),$=parseFloat(h.val),u=o.TYPE_ADD,p=null!=h.calc?h.calc.toString():"add";if((u="add"===p?o.TYPE_ADD:"mult"===p?o.TYPE_MULT:"set"===p?o.TYPE_SET:o.TYPE_ADD)==o.TYPE_ADD){var f=null==h.def?0:parseFloat(h.def);$-=f}else if(u==o.TYPE_MULT){var f=null==h.def?1:parseFloat(h.def);0==f&&(f=1),$/=f}var d=new n;d.id=l,d.type=u,d.value=$,i.paramList.push(d)}return i},o.prototype.updateParamExe=function(t,i,e,r){for(var n=this.paramList.length-1;n>=0;--n){var s=this.paramList[n];s.type==o.TYPE_ADD?t.addToParamFloat(s.id,s.value,e):s.type==o.TYPE_MULT?t.multParamFloat(s.id,s.value,e):s.type==o.TYPE_SET&&t.setParamFloat(s.id,s.value,e)}},s.prototype.calcNextBlink=function(){return UtSystem.getUserTimeMSec()+Math.random()*(2*this.blinkIntervalMsec-1)},s.prototype.setInterval=function(t){this.blinkIntervalMsec=t},s.prototype.setEyeMotion=function(t,i,e){this.closingMotionMsec=t,this.closedMotionMsec=i,this.openingMotionMsec=e},s.prototype.updateParam=function(t){var i,e=UtSystem.getUserTimeMSec(),r=0;switch(this.eyeState){case g.STATE_CLOSING:r=(e-this.stateStartTime)/this.closingMotionMsec,r>=1&&(r=1,this.eyeState=g.STATE_CLOSED,this.stateStartTime=e),i=1-r;break;case g.STATE_CLOSED:r=(e-this.stateStartTime)/this.closedMotionMsec,r>=1&&(this.eyeState=g.STATE_OPENING,this.stateStartTime=e),i=0;break;case g.STATE_OPENING:r=(e-this.stateStartTime)/this.openingMotionMsec,r>=1&&(r=1,this.eyeState=g.STATE_INTERVAL,this.nextBlinkTime=this.calcNextBlink()),i=r;break;case g.STATE_INTERVAL:this.nextBlinkTime<e&&(this.eyeState=g.STATE_CLOSING,this.stateStartTime=e),i=1;break;case g.STATE_FIRST:default:this.eyeState=g.STATE_INTERVAL,this.nextBlinkTime=this.calcNextBlink(),i=1}this.closeIfZero||(i=-i),t.setParamFloat(this.eyeID_L,i),t.setParamFloat(this.eyeID_R,i)};var g=function(){};g.STATE_FIRST="STATE_FIRST",g.STATE_INTERVAL="STATE_INTERVAL",g.STATE_CLOSING="STATE_CLOSING",g.STATE_CLOSED="STATE_CLOSED",g.STATE_OPENING="STATE_OPENING",_.mul=function(t,i,e){var r,o,n,s=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];for(r=0;r<4;r++)for(o=0;o<4;o++)for(n=0;n<4;n++)s[r+4*o]+=t[r+4*n]*i[n+4*o];for(r=0;r<16;r++)e[r]=s[r]},_.prototype.identity=function(){for(var t=0;t<16;t++)this.tr[t]=t%5==0?1:0},_.prototype.getArray=function(){return this.tr},_.prototype.getCopyMatrix=function(){return new Float32Array(this.tr)},_.prototype.setMatrix=function(t){if(null!=this.tr&&this.tr.length==this.tr.length)for(var i=0;i<16;i++)this.tr[i]=t[i]},_.prototype.getScaleX=function(){return this.tr[0]},_.prototype.getScaleY=function(){return this.tr[5]},_.prototype.transformX=function(t){return this.tr[0]*t+this.tr[12]},_.prototype.transformY=function(t){return this.tr[5]*t+this.tr[13]},_.prototype.invertTransformX=function(t){return(t-this.tr[12])/this.tr[0]},_.prototype.invertTransformY=function(t){return(t-this.tr[13])/this.tr[5]},_.prototype.multTranslate=function(t,i){var e=[1,0,0,0,0,1,0,0,0,0,1,0,t,i,0,1];_.mul(e,this.tr,this.tr)},_.prototype.translate=function(t,i){this.tr[12]=t,this.tr[13]=i},_.prototype.translateX=function(t){this.tr[12]=t},_.prototype.translateY=function(t){this.tr[13]=t},_.prototype.multScale=function(t,i){var e=[t,0,0,0,0,i,0,0,0,0,1,0,0,0,0,1];_.mul(e,this.tr,this.tr)},_.prototype.scale=function(t,i){this.tr[0]=t,this.tr[5]=i},a.prototype=new _,a.prototype.setPosition=function(t,i){this.translate(t,i)},a.prototype.setCenterPosition=function(t,i){var e=this.width*this.getScaleX(),r=this.height*this.getScaleY();this.translate(t-e/2,i-r/2)},a.prototype.top=function(t){this.setY(t)},a.prototype.bottom=function(t){var i=this.height*this.getScaleY();this.translateY(t-i)},a.prototype.left=function(t){this.setX(t)},a.prototype.right=function(t){var i=this.width*this.getScaleX();this.translateX(t-i)},a.prototype.centerX=function(t){var i=this.width*this.getScaleX();this.translateX(t-i/2)},a.prototype.centerY=function(t){var i=this.height*this.getScaleY();this.translateY(t-i/2)},a.prototype.setX=function(t){this.translateX(t)},a.prototype.setY=function(t){this.translateY(t)},a.prototype.setHeight=function(t){var i=t/this.height,e=-i;this.scale(i,e)},a.prototype.setWidth=function(t){var i=t/this.width,e=-i;this.scale(i,e)},h.prototype=new MotionQueueManager,h.prototype.getCurrentPriority=function(){return this.currentPriority},h.prototype.getReservePriority=function(){return this.reservePriority},h.prototype.reserveMotion=function(t){return!(this.reservePriority>=t)&&(!(this.currentPriority>=t)&&(this.reservePriority=t,!0))},h.prototype.setReservePriority=function(t){this.reservePriority=t},h.prototype.updateParam=function(t){var i=MotionQueueManager.prototype.updateParam.call(this,t);return this.isFinished()&&(this.currentPriority=0),i},h.prototype.startMotionPrio=function(t,i){return i==this.reservePriority&&(this.reservePriority=0),this.currentPriority=i,this.startMotion(t,!1)},l.load=function(t){for(var i=new l,e=c.getPlatformManager(),r=e.jsonParseFromBytes(t),o=r.physics_hair,n=o.length,s=0;s<n;s++){var _=o[s],a=new PhysicsHair,h=_.setup,$=parseFloat(h.length),u=parseFloat(h.regist),p=parseFloat(h.mass);a.setup($,u,p);for(var f=_.src,d=f.length,g=0;g<d;g++){var y=f[g],m=y.id,T=PhysicsHair.Src.SRC_TO_X,P=y.ptype;"x"===P?T=PhysicsHair.Src.SRC_TO_X:"y"===P?T=PhysicsHair.Src.SRC_TO_Y:"angle"===P?T=PhysicsHair.Src.SRC_TO_G_ANGLE:UtDebug.error("live2d","Invalid parameter:PhysicsHair.Src");var S=parseFloat(y.scale),v=parseFloat(y.weight);a.addSrcParam(T,m,S,v)}for(var L=_.targets,M=L.length,g=0;g<M;g++){var E=L[g],m=E.id,T=PhysicsHair.Target.TARGET_FROM_ANGLE,P=E.ptype;"angle"===P?T=PhysicsHair.Target.TARGET_FROM_ANGLE:"angle_v"===P?T=PhysicsHair.Target.TARGET_FROM_ANGLE_V:UtDebug.error("live2d","Invalid parameter:PhysicsHair.Target");var S=parseFloat(E.scale),v=parseFloat(E.weight);a.addTargetParam(T,m,S,v)}i.physicsList.push(a)}return i},l.prototype.updateParam=function(t){for(var i=UtSystem.getUserTimeMSec()-this.startTimeMSec,e=0;e<this.physicsList.length;e++)this.physicsList[e].update(t,i)},$.load=function(t){for(var i=new $,e=c.getPlatformManager(),r=e.jsonParseFromBytes(t),o=r.parts_visible,n=o.length,s=0;s<n;s++){for(var _=o[s],a=_.group,h=a.length,l=new Array,p=0;p<h;p++){var f=a[p],d=new u(f.id);if(l[p]=d,null!=f.link){var g=f.link,y=g.length;d.link=new Array;for(var m=0;m<y;m++){var T=new u(g[m]);d.link.push(T)}}}i.partsGroups.push(l)}return i},$.prototype.updateParam=function(t){if(null!=t){t!=this.lastModel&&this.initParam(t),this.lastModel=t;var i=UtSystem.getUserTimeMSec(),e=0==this.lastTime?0:(i-this.lastTime)/1e3;this.lastTime=i,e<0&&(e=0);for(var r=0;r<this.partsGroups.length;r++)this.normalizePartsOpacityGroup(t,this.partsGroups[r],e),this.copyOpacityOtherParts(t,this.partsGroups[r])}},$.prototype.initParam=function(t){if(null!=t)for(var i=0;i<this.partsGroups.length;i++)for(var e=this.partsGroups[i],r=0;r<e.length;r++){e[r].initIndex(t);var o=e[r].partsIndex,n=e[r].paramIndex;if(!(o<0)){var s=0!=t.getParamFloat(n);if(t.setPartsOpacity(o,s?1:0),t.setParamFloat(n,s?1:0),null!=e[r].link)for(var _=0;_<e[r].link.length;_++)e[r].link[_].initIndex(t)}}},$.prototype.normalizePartsOpacityGroup=function(t,i,e){for(var r=-1,o=1,n=0;n<i.length;n++){var s=i[n].partsIndex,_=i[n].paramIndex;if(!(s<0)&&0!=t.getParamFloat(_)){if(r>=0)break;r=n,o=t.getPartsOpacity(s),o+=e/.5,o>1&&(o=1)}}r<0&&(r=0,o=1);for(var n=0;n<i.length;n++){var s=i[n].partsIndex;if(!(s<0))if(r==n)t.setPartsOpacity(s,o);else{var a,h=t.getPartsOpacity(s);a=o<.5?-.5*o/.5+1:.5*(1-o)/.5;var l=(1-a)*(1-o);l>.15&&(a=1-.15/(1-o)),h>a&&(h=a),t.setPartsOpacity(s,h)}}},$.prototype.copyOpacityOtherParts=function(t,i){for(var e=0;e<i.length;e++){var r=i[e];if(null!=r.link&&!(r.partsIndex<0))for(var o=t.getPartsOpacity(r.partsIndex),n=0;n<r.link.length;n++){var s=r.link[n];s.partsIndex<0||t.setPartsOpacity(s.partsIndex,o)}}},u.prototype.initIndex=function(t){this.paramIndex=t.getParamIndex("VISIBLE:"+this.id),this.partsIndex=t.getPartsDataIndex(PartsDataID.getID(this.id)),t.setParamFloat(this.paramIndex,1)},p.FRAME_RATE=30,p.prototype.setPoint=function(t,i){this.faceTargetX=t,this.faceTargetY=i},p.prototype.getX=function(){return this.faceX},p.prototype.getY=function(){return this.faceY},p.prototype.update=function(){var t=40/7.5/p.FRAME_RATE;if(0==this.lastTimeSec)return void(this.lastTimeSec=UtSystem.getUserTimeMSec());var i=UtSystem.getUserTimeMSec(),e=(i-this.lastTimeSec)*p.FRAME_RATE/1e3;this.lastTimeSec=i;var r=.15*p.FRAME_RATE,o=e*t/r,n=this.faceTargetX-this.faceX,s=this.faceTargetY-this.faceY;if(!(Math.abs(n)<=this.EPSILON&&Math.abs(s)<=this.EPSILON)){var _=Math.sqrt(n*n+s*s),a=t*n/_,h=t*s/_,l=a-this.faceVX,$=h-this.faceVY,u=Math.sqrt(l*l+$*$);(u<-o||u>o)&&(l*=o/u,$*=o/u,u=o),this.faceVX+=l,this.faceVY+=$;var f=.5*(Math.sqrt(o*o+16*o*_-8*o*_)-o),c=Math.sqrt(this.faceVX*this.faceVX+this.faceVY*this.faceVY);c>f&&(this.faceVX*=f/c,this.faceVY*=f/c),this.faceX+=this.faceVX,this.faceY+=this.faceVY}},f.prototype=new _,f.prototype.getMaxScale=function(){return this.max},f.prototype.getMinScale=function(){return this.min},f.prototype.setMaxScale=function(t){this.max=t},f.prototype.setMinScale=function(t){this.min=t},f.prototype.isMaxScale=function(){return this.getScaleX()==this.max},f.prototype.isMinScale=function(){return this.getScaleX()==this.min},f.prototype.adjustTranslate=function(t,i){this.tr[0]*this.maxLeft+(this.tr[12]+t)>this.screenLeft&&(t=this.screenLeft-this.tr[0]*this.maxLeft-this.tr[12]),this.tr[0]*this.maxRight+(this.tr[12]+t)<this.screenRight&&(t=this.screenRight-this.tr[0]*this.maxRight-this.tr[12]),this.tr[5]*this.maxTop+(this.tr[13]+i)<this.screenTop&&(i=this.screenTop-this.tr[5]*this.maxTop-this.tr[13]),this.tr[5]*this.maxBottom+(this.tr[13]+i)>this.screenBottom&&(i=this.screenBottom-this.tr[5]*this.maxBottom-this.tr[13]);var e=[1,0,0,0,0,1,0,0,0,0,1,0,t,i,0,1];_.mul(e,this.tr,this.tr)},f.prototype.adjustScale=function(t,i,e){var r=e*this.tr[0];r<this.min?this.tr[0]>0&&(e=this.min/this.tr[0]):r>this.max&&this.tr[0]>0&&(e=this.max/this.tr[0]);var o=[1,0,0,0,0,1,0,0,0,0,1,0,t,i,0,1],n=[e,0,0,0,0,e,0,0,0,0,1,0,0,0,0,1],s=[1,0,0,0,0,1,0,0,0,0,1,0,-t,-i,0,1];_.mul(s,this.tr,this.tr),_.mul(n,this.tr,this.tr),_.mul(o,this.tr,this.tr)},f.prototype.setScreenRect=function(t,i,e,r){this.screenLeft=t,this.screenRight=i,this.screenTop=r,this.screenBottom=e},f.prototype.setMaxScreenRect=function(t,i,e,r){this.maxLeft=t,this.maxRight=i,this.maxTop=r,this.maxBottom=e},f.prototype.getScreenLeft=function(){return this.screenLeft},f.prototype.getScreenRight=function(){return this.screenRight},f.prototype.getScreenBottom=function(){return this.screenBottom},f.prototype.getScreenTop=function(){return this.screenTop},f.prototype.getMaxLeft=function(){return this.maxLeft},f.prototype.getMaxRight=function(){return this.maxRight},f.prototype.getMaxBottom=function(){return this.maxBottom},f.prototype.getMaxTop=function(){return this.maxTop},c.platformManager=null,c.getPlatformManager=function(){return c.platformManager},c.setPlatformManager=function(t){c.platformManager=t},t.exports={L2DTargetPoint:p,Live2DFramework:c,L2DViewMatrix:f,L2DPose:$,L2DPartsParam:u,L2DPhysics:l,L2DMotionManager:h,L2DModelMatrix:a,L2DMatrix44:_,EYE_STATE:g,L2DEyeBlink:s,L2DExpressionParam:n,L2DExpressionMotion:o,L2DBaseModel:r}},function(t,i,e){"use strict";var r={DEBUG_LOG:!1,DEBUG_MOUSE_LOG:!1,DEBUG_DRAW_HIT_AREA:!1,DEBUG_DRAW_ALPHA_MODEL:!1,VIEW_MAX_SCALE:2,VIEW_MIN_SCALE:.8,VIEW_LOGICAL_LEFT:-1,VIEW_LOGICAL_RIGHT:1,VIEW_LOGICAL_MAX_LEFT:-2,VIEW_LOGICAL_MAX_RIGHT:2,VIEW_LOGICAL_MAX_BOTTOM:-2,VIEW_LOGICAL_MAX_TOP:2,PRIORITY_NONE:0,PRIORITY_IDLE:1,PRIORITY_SLEEPY:2,PRIORITY_NORMAL:3,PRIORITY_FORCE:4,MOTION_GROUP_IDLE:"idle",MOTION_GROUP_SLEEPY:"sleepy",MOTION_GROUP_TAP_BODY:"tap_body",MOTION_GROUP_FLICK_HEAD:"flick_head",MOTION_GROUP_PINCH_IN:"pinch_in",MOTION_GROUP_PINCH_OUT:"pinch_out",MOTION_GROUP_SHAKE:"shake",HIT_AREA_HEAD:"head",HIT_AREA_BODY:"body"};t.exports=r},function(t,i,e){"use strict";function r(t){n=t}function o(){return n}Object.defineProperty(i,"__esModule",{value:!0}),i.setContext=r,i.getContext=o;var n=void 0},function(t,i,e){"use strict";function r(){}r.matrixStack=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],r.depth=0,r.currentMatrix=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],r.tmp=new Array(16),r.reset=function(){this.depth=0},r.loadIdentity=function(){for(var t=0;t<16;t++)this.currentMatrix[t]=t%5==0?1:0},r.push=function(){var t=(this.depth,16*(this.depth+1));this.matrixStack.length<t+16&&(this.matrixStack.length=t+16);for(var i=0;i<16;i++)this.matrixStack[t+i]=this.currentMatrix[i];this.depth++},r.pop=function(){--this.depth<0&&(myError("Invalid matrix stack."),this.depth=0);for(var t=16*this.depth,i=0;i<16;i++)this.currentMatrix[i]=this.matrixStack[t+i]},r.getMatrix=function(){return this.currentMatrix},r.multMatrix=function(t){var i,e,r;for(i=0;i<16;i++)this.tmp[i]=0;for(i=0;i<4;i++)for(e=0;e<4;e++)for(r=0;r<4;r++)this.tmp[i+4*e]+=this.currentMatrix[i+4*r]*t[r+4*e];for(i=0;i<16;i++)this.currentMatrix[i]=this.tmp[i]},t.exports=r},function(t,i,e){t.exports=e(5)},function(t,i,e){"use strict";function r(t){return t&&t.__esModule?t:{default:t}}function o(t){C=document.getElementById(t),C.addEventListener&&(window.addEventListener("click",g),window.addEventListener("mousedown",g),window.addEventListener("mousemove",g),window.addEventListener("mouseup",g),document.addEventListener("mouseout",g),window.addEventListener("touchstart",y),window.addEventListener("touchend",y),window.addEventListener("touchmove",y))}function n(t){var i=C.width,e=C.height;N=new M.L2DTargetPoint;var r=e/i,o=w.default.VIEW_LOGICAL_LEFT,n=w.default.VIEW_LOGICAL_RIGHT,_=-r,h=r;if(window.Live2D.captureFrame=!1,B=new M.L2DViewMatrix,B.setScreenRect(o,n,_,h),B.setMaxScreenRect(w.default.VIEW_LOGICAL_MAX_LEFT,w.default.VIEW_LOGICAL_MAX_RIGHT,w.default.VIEW_LOGICAL_MAX_BOTTOM,w.default.VIEW_LOGICAL_MAX_TOP),B.setMaxScale(w.default.VIEW_MAX_SCALE),B.setMinScale(w.default.VIEW_MIN_SCALE),U=new M.L2DMatrix44,U.multScale(1,i/e),G=new M.L2DMatrix44,G.multTranslate(-i/2,-e/2),G.multScale(2/i,-2/i),F=v(),(0,D.setContext)(F),!F)return console.error("Failed to create WebGL context."),void(window.WebGLRenderingContext&&console.error("Your browser don\'t support WebGL, check https://get.webgl.org/ for futher information."));window.Live2D.setGL(F),F.clearColor(0,0,0,0),a(t),s()}function s(){b||(b=!0,function t(){_();var i=window.requestAnimationFrame||window.mozRequestAnimationFrame||window.webkitRequestAnimationFrame||window.msRequestAnimationFrame;if(window.Live2D.captureFrame){window.Live2D.captureFrame=!1;var e=document.createElement("a");document.body.appendChild(e),e.setAttribute("type","hidden"),e.href=C.toDataURL(),e.download=window.Live2D.captureName||"live2d.png",e.click()}i(t,C)}())}function _(){O.default.reset(),O.default.loadIdentity(),N.update(),R.setDrag(N.getX(),N.getY()),F.clear(F.COLOR_BUFFER_BIT),O.default.multMatrix(U.getArray()),O.default.multMatrix(B.getArray()),O.default.push();for(var t=0;t<R.numModels();t++){var i=R.getModel(t);if(null==i)return;i.initialized&&!i.updating&&(i.update(),i.draw(F))}O.default.pop()}function a(t){R.reloadFlg=!0,R.count++,R.changeModel(F,t)}function h(t,i){return t.x*i.x+t.y*i.y}function l(t,i){var e=Math.sqrt(t*t+i*i);return{x:t/e,y:i/e}}function $(t,i,e){function r(t,i){return 180*Math.acos(h({x:0,y:1},l(t,i)))/Math.PI}if(i.x<e.left+e.width&&i.y<e.top+e.height&&i.x>e.left&&i.y>e.top)return i;var o=t.x-i.x,n=t.y-i.y,s=r(o,n);i.x<t.x&&(s=360-s);var _=360-r(e.left-t.x,-1*(e.top-t.y)),a=360-r(e.left-t.x,-1*(e.top+e.height-t.y)),$=r(e.left+e.width-t.x,-1*(e.top-t.y)),u=r(e.left+e.width-t.x,-1*(e.top+e.height-t.y)),p=n/o,f={};if(s<$){var c=e.top-t.y,d=c/p;f={y:t.y+c,x:t.x+d}}else if(s<u){var g=e.left+e.width-t.x,y=g*p;f={y:t.y+y,x:t.x+g}}else if(s<a){var m=e.top+e.height-t.y,T=m/p;f={y:t.y+m,x:t.x+T}}else if(s<_){var P=t.x-e.left,S=P*p;f={y:t.y-S,x:t.x-P}}else{var v=e.top-t.y,L=v/p;f={y:t.y+v,x:t.x+L}}return f}function u(t){Y=!0;var i=C.getBoundingClientRect(),e=P(t.clientX-i.left),r=S(t.clientY-i.top),o=$({x:i.left+i.width/2,y:i.top+i.height*X},{x:t.clientX,y:t.clientY},i),n=m(o.x-i.left),s=T(o.y-i.top);w.default.DEBUG_MOUSE_LOG&&console.log("onMouseMove device( x:"+t.clientX+" y:"+t.clientY+" ) view( x:"+n+" y:"+s+")"),k=e,V=r,N.setPoint(n,s)}function p(t){Y=!0;var i=C.getBoundingClientRect(),e=P(t.clientX-i.left),r=S(t.clientY-i.top),o=$({x:i.left+i.width/2,y:i.top+i.height*X},{x:t.clientX,y:t.clientY},i),n=m(o.x-i.left),s=T(o.y-i.top);w.default.DEBUG_MOUSE_LOG&&console.log("onMouseDown device( x:"+t.clientX+" y:"+t.clientY+" ) view( x:"+n+" y:"+s+")"),k=e,V=r,R.tapEvent(n,s)}function f(t){var i=C.getBoundingClientRect(),e=P(t.clientX-i.left),r=S(t.clientY-i.top),o=$({x:i.left+i.width/2,y:i.top+i.height*X},{x:t.clientX,y:t.clientY},i),n=m(o.x-i.left),s=T(o.y-i.top);w.default.DEBUG_MOUSE_LOG&&console.log("onMouseMove device( x:"+t.clientX+" y:"+t.clientY+" ) view( x:"+n+" y:"+s+")"),Y&&(k=e,V=r,N.setPoint(n,s))}function c(){Y&&(Y=!1),N.setPoint(0,0)}function d(){w.default.DEBUG_LOG&&console.log("Set Session Storage."),sessionStorage.setItem("Sleepy","1")}function g(t){if("mousewheel"==t.type);else if("mousedown"==t.type)p(t);else if("mousemove"==t.type){var i=sessionStorage.getItem("Sleepy");"1"===i&&sessionStorage.setItem("Sleepy","0"),u(t)}else if("mouseup"==t.type){if("button"in t&&0!=t.button)return}else if("mouseout"==t.type){w.default.DEBUG_LOG&&console.log("Mouse out Window."),c();var e=sessionStorage.getItem("SleepyTimer");window.clearTimeout(e),e=window.setTimeout(d,5e4),sessionStorage.setItem("SleepyTimer",e)}}function y(t){var i=t.touches[0];"touchstart"==t.type?1==t.touches.length&&u(i):"touchmove"==t.type?f(i):"touchend"==t.type&&c()}function m(t){var i=G.transformX(t);return B.invertTransformX(i)}function T(t){var i=G.transformY(t);return B.invertTransformY(i)}function P(t){return G.transformX(t)}function S(t){return G.transformY(t)}function v(){for(var t=["webgl","experimental-webgl","webkit-3d","moz-webgl"],i=0;i<t.length;i++)try{var e=C.getContext(t[i],{premultipliedAlpha:!0});if(e)return e}catch(t){}return null}function L(t,i,e){X=void 0===e?.5:e,o(t),n(i)}e(6);var M=e(0),E=e(8),A=r(E),I=e(1),w=r(I),x=e(3),O=r(x),D=e(2),R=(window.navigator.platform.toLowerCase(),new A.default),b=!1,F=null,C=null,N=null,B=null,U=null,G=null,Y=!1,k=0,V=0,X=.5;window.loadlive2d=L},function(t,i,e){"use strict";(function(t){!function(){function i(){At||(this._$MT=null,this._$5S=null,this._$NP=0,i._$42++,this._$5S=new Y(this))}function e(t){if(!At){this.clipContextList=new Array,this.glcontext=t.gl,this.dp_webgl=t,this.curFrameNo=0,this.firstError_clipInNotUpdate=!0,this.colorBuffer=0,this.isInitGLFBFunc=!1,this.tmpBoundsOnModel=new S,at.glContext.length>at.frameBuffers.length&&(this.curFrameNo=this.getMaskRenderTexture()),this.tmpModelToViewMatrix=new R,this.tmpMatrix2=new R,this.tmpMatrixForMask=new R,this.tmpMatrixForDraw=new R,this.CHANNEL_COLORS=new Array;var i=new A;i=new A,i.r=0,i.g=0,i.b=0,i.a=1,this.CHANNEL_COLORS.push(i),i=new A,i.r=1,i.g=0,i.b=0,i.a=0,this.CHANNEL_COLORS.push(i),i=new A,i.r=0,i.g=1,i.b=0,i.a=0,this.CHANNEL_COLORS.push(i),i=new A,i.r=0,i.g=0,i.b=1,i.a=0,this.CHANNEL_COLORS.push(i);for(var e=0;e<this.CHANNEL_COLORS.length;e++)this.dp_webgl.setChannelFlagAsColor(e,this.CHANNEL_COLORS[e])}}function r(t,i,e){this.clipIDList=new Array,this.clipIDList=e,this.clippingMaskDrawIndexList=new Array;for(var r=0;r<e.length;r++)this.clippingMaskDrawIndexList.push(i.getDrawDataIndex(e[r]));this.clippedDrawContextList=new Array,this.isUsing=!0,this.layoutChannelNo=0,this.layoutBounds=new S,this.allClippedDrawRect=new S,this.matrixForMask=new Float32Array(16),this.matrixForDraw=new Float32Array(16),this.owner=t}function o(t,i){this._$gP=t,this.drawDataIndex=i}function n(){At||(this.color=null)}function s(){At||(this._$dP=null,this._$eo=null,this._$V0=null,this._$dP=1e3,this._$eo=1e3,this._$V0=1,this._$a0())}function _(){}function a(){this._$r=null,this._$0S=null}function h(){At||(this.x=null,this.y=null,this.width=null,this.height=null)}function l(t){At||et.prototype.constructor.call(this,t)}function $(){}function u(t){At||et.prototype.constructor.call(this,t)}function p(){At||(this._$vo=null,this._$F2=null,this._$ao=400,this._$1S=400,p._$42++)}function f(){At||(this.p1=new c,this.p2=new c,this._$Fo=0,this._$Db=0,this._$L2=0,this._$M2=0,this._$ks=0,this._$9b=0,this._$iP=0,this._$iT=0,this._$lL=new Array,this._$qP=new Array,this.setup(.3,.5,.1))}function c(){this._$p=1,this.x=0,this.y=0,this.vx=0,this.vy=0,this.ax=0,this.ay=0,this.fx=0,this.fy=0,this._$s0=0,this._$70=0,this._$7L=0,this._$HL=0}function d(t,i,e){this._$wL=null,this.scale=null,this._$V0=null,this._$wL=t,this.scale=i,this._$V0=e}function g(t,i,e,r){d.prototype.constructor.call(this,i,e,r),this._$tL=null,this._$tL=t}function y(t,i,e){this._$wL=null,this.scale=null,this._$V0=null,this._$wL=t,this.scale=i,this._$V0=e}function T(t,i,e,r){y.prototype.constructor.call(this,i,e,r),this._$YP=null,this._$YP=t}function P(){At||(this._$fL=0,this._$gL=0,this._$B0=1,this._$z0=1,this._$qT=0,this.reflectX=!1,this.reflectY=!1)}function S(){At||(this.x=null,this.y=null,this.width=null,this.height=null)}function v(){}function L(){At||(this.x=null,this.y=null)}function M(){At||(this._$gP=null,this._$dr=null,this._$GS=null,this._$qb=null,this._$Lb=null,this._$mS=null,this.clipID=null,this.clipIDList=new Array)}function E(){At||(this._$Eb=E._$ps,this._$lT=1,this._$C0=1,this._$tT=1,this._$WL=1,this.culling=!1,this.matrix4x4=new Float32Array(16),this.premultipliedAlpha=!1,this.anisotropy=0,this.clippingProcess=E.CLIPPING_PROCESS_NONE,this.clipBufPre_clipContextMask=null,this.clipBufPre_clipContextDraw=null,this.CHANNEL_COLORS=new Array)}function A(){At||(this.a=1,this.r=1,this.g=1,this.b=1,this.scale=1,this._$ho=1,this.blendMode=at.L2D_COLOR_BLEND_MODE_MULT)}function I(){At||(this._$kP=null,this._$dr=null,this._$Ai=!0,this._$mS=null)}function w(){}function x(){At||(this._$VP=0,this._$wL=null,this._$GP=null,this._$8o=x._$ds,this._$2r=-1,this._$O2=0,this._$ri=0)}function O(){}function D(){At||(this._$Ob=null)}function R(){this.m=new Float32Array(16),this.identity()}function b(t){At||et.prototype.constructor.call(this,t)}function F(){At||(this._$7=1,this._$f=0,this._$H=0,this._$g=1,this._$k=0,this._$w=0,this._$hi=STATE_IDENTITY,this._$Z=_$pS)}function C(){At||(s.prototype.constructor.call(this),this.motions=new Array,this._$7r=null,this._$7r=C._$Co++,this._$D0=30,this._$yT=0,this._$E=!0,this.loopFadeIn=!0,this._$AS=-1,_$a0())}function N(){this._$P=new Float32Array(100),this.size=0}function B(){this._$4P=null,this._$I0=null,this._$RP=null}function U(){}function G(){}function Y(t){At||(this._$QT=!0,this._$co=-1,this._$qo=0,this._$pb=new Array(Y._$is),this._$_2=new Float32Array(Y._$is),this._$vr=new Float32Array(Y._$is),this._$Rr=new Float32Array(Y._$is),this._$Or=new Float32Array(Y._$is),this._$fs=new Float32Array(Y._$is),this._$Js=new Array(Y._$is),this._$3S=new Array,this._$aS=new Array,this._$Bo=null,this._$F2=new Array,this._$db=new Array,this._$8b=new Array,this._$Hr=new Array,this._$Ws=null,this._$Vs=null,this._$Er=null,this._$Es=new Int16Array(U._$Qb),this._$ZP=new Float32Array(2*U._$1r),this._$Ri=t,this._$b0=Y._$HP++,this.clipManager=null,this.dp_webgl=null)}function k(){}function V(){At||(this._$12=null,this._$bb=null,this._$_L=null,this._$jo=null,this._$iL=null,this._$0L=null,this._$Br=null,this._$Dr=null,this._$Cb=null,this._$mr=null,this._$_L=wt.STATE_FIRST,this._$Br=4e3,this._$Dr=100,this._$Cb=50,this._$mr=150,this._$jo=!0,this._$iL="PARAM_EYE_L_OPEN",this._$0L="PARAM_EYE_R_OPEN")}function X(){At||(E.prototype.constructor.call(this),this._$sb=new Int32Array(X._$As),this._$U2=new Array,this.transform=null,this.gl=null,null==X._$NT&&(X._$NT=X._$9r(256),X._$vS=X._$9r(256),X._$no=X._$vb(256)))}function z(){At||(I.prototype.constructor.call(this),this._$GS=null,this._$Y0=null)}function H(t){_t.prototype.constructor.call(this,t),this._$8r=I._$ur,this._$Yr=null,this._$Wr=null}function W(){At||(M.prototype.constructor.call(this),this._$gP=null,this._$dr=null,this._$GS=null,this._$qb=null,this._$Lb=null,this._$mS=null)}function j(){At||(this._$NL=null,this._$3S=null,this._$aS=null,j._$42++)}function q(){At||(i.prototype.constructor.call(this),this._$zo=new X)}function J(){At||(s.prototype.constructor.call(this),this.motions=new Array,this._$o2=null,this._$7r=J._$Co++,this._$D0=30,this._$yT=0,this._$E=!1,this.loopFadeIn=!0,this._$rr=-1,this._$eP=0)}function Q(t,i){return String.fromCharCode(t.getUint8(i))}function N(){this._$P=new Float32Array(100),this.size=0}function B(){this._$4P=null,this._$I0=null,this._$RP=null}function Z(){At||(I.prototype.constructor.call(this),this._$o=0,this._$A=0,this._$GS=null,this._$Eo=null)}function K(t){_t.prototype.constructor.call(this,t),this._$8r=I._$ur,this._$Cr=null,this._$hr=null}function tt(){At||(this.visible=!0,this._$g0=!1,this._$NL=null,this._$3S=null,this._$aS=null,tt._$42++)}function it(t){this._$VS=null,this._$e0=null,this._$e0=t}function et(t){At||(this.id=t)}function rt(){}function ot(){At||(this._$4S=null)}function nt(t,i){this.canvas=t,this.context=i,this.viewport=new Array(0,0,t.width,t.height),this._$6r=1,this._$xP=0,this._$3r=1,this._$uP=0,this._$Qo=-1,this.cacheImages={}}function st(){At||(this._$TT=null,this._$LT=null,this._$FS=null,this._$wL=null)}function _t(t){At||(this._$e0=null,this._$IP=null,this._$JS=!1,this._$AT=!0,this._$e0=t,this.totalScale=1,this._$7s=1,this.totalOpacity=1)}function at(){}function ht(){}function lt(t){At||(this._$ib=t)}function $t(){At||(W.prototype.constructor.call(this),this._$LP=-1,this._$d0=0,this._$Yo=0,this._$JP=null,this._$5P=null,this._$BP=null,this._$Eo=null,this._$Qi=null,this._$6s=$t._$ms,this.culling=!0,this.gl_cacheImage=null,this.instanceNo=$t._$42++)}function ut(t){Mt.prototype.constructor.call(this,t),this._$8r=W._$ur,this._$Cr=null,this._$hr=null}function pt(){At||(this.x=null,this.y=null)}function ft(t){At||(i.prototype.constructor.call(this),this.drawParamWebGL=new mt(t),this.drawParamWebGL.setGL(at.getGL(t)))}function ct(){At||(this.motions=null,this._$eb=!1,this.motions=new Array)}function dt(){this._$w0=null,this._$AT=!0,this._$9L=!1,this._$z2=-1,this._$bs=-1,this._$Do=-1,this._$sr=null,this._$sr=dt._$Gs++}function gt(){this.m=new Array(1,0,0,0,1,0,0,0,1)}function yt(t){At||et.prototype.constructor.call(this,t)}function mt(t){At||(E.prototype.constructor.call(this),this.textures=new Array,this.transform=null,this.gl=null,this.glno=t,this.firstDraw=!0,this.anisotropyExt=null,this.maxAnisotropy=0,this._$As=32,this._$Gr=!1,this._$NT=null,this._$vS=null,this._$no=null,this.vertShader=null,this.fragShader=null,this.vertShaderOff=null,this.fragShaderOff=null)}function Tt(t,i,e){return null==i&&(i=t.createBuffer()),t.bindBuffer(t.ARRAY_BUFFER,i),t.bufferData(t.ARRAY_BUFFER,e,t.DYNAMIC_DRAW),i}function Pt(t,i,e){return null==i&&(i=t.createBuffer()),t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,i),t.bufferData(t.ELEMENT_ARRAY_BUFFER,e,t.DYNAMIC_DRAW),i}function St(t){At||(this._$P=new Int8Array(8),this._$R0=new DataView(this._$P.buffer),this._$3i=new Int8Array(1e3),this._$hL=0,this._$v0=0,this._$S2=0,this._$Ko=new Array,this._$T=t,this._$F=0)}function vt(){}function Lt(){}function Mt(t){At||(this._$e0=null,this._$IP=null,this._$Us=null,this._$7s=null,this._$IS=[!1],this._$VS=null,this._$AT=!0,this.baseOpacity=1,this.clipBufPre_clipContext=null,this._$e0=t)}function Et(){}var At=!0;i._$0s=1,i._$4s=2,i._$42=0,i._$62=function(t,e){try{if(e instanceof ArrayBuffer&&(e=new DataView(e)),!(e instanceof DataView))throw new lt("_$SS#loadModel(b) / b _$x be DataView or ArrayBuffer");var r,o=new St(e),n=o._$ST(),s=o._$ST(),a=o._$ST();if(109!=n||111!=s||99!=a)throw new lt("_$gi _$C _$li , _$Q0 _$P0.");if(r=o._$ST(),o._$gr(r),r>G._$T7){t._$NP|=i._$4s;throw new lt("_$gi _$C _$li , _$n0 _$_ version _$li ( SDK : "+G._$T7+" < _$f0 : "+r+" )@_$SS#loadModel()\\n")}var h=o._$nP();if(r>=G._$s7){var l=o._$9T(),$=o._$9T();if(-30584!=l||-30584!=$)throw t._$NP|=i._$0s,new lt("_$gi _$C _$li , _$0 _$6 _$Ui.")}t._$KS(h);var u=t.getModelContext();u.setDrawParam(t.getDrawParam()),u.init()}catch(t){_._$Rb(t)}},i.prototype._$KS=function(t){this._$MT=t},i.prototype.getModelImpl=function(){return null==this._$MT&&(this._$MT=new p,this._$MT._$zP()),this._$MT},i.prototype.getCanvasWidth=function(){return null==this._$MT?0:this._$MT.getCanvasWidth()},i.prototype.getCanvasHeight=function(){return null==this._$MT?0:this._$MT.getCanvasHeight()},i.prototype.getParamFloat=function(t){return"number"!=typeof t&&(t=this._$5S.getParamIndex(u.getID(t))),this._$5S.getParamFloat(t)},i.prototype.setParamFloat=function(t,i,e){"number"!=typeof t&&(t=this._$5S.getParamIndex(u.getID(t))),arguments.length<3&&(e=1),this._$5S.setParamFloat(t,this._$5S.getParamFloat(t)*(1-e)+i*e)},i.prototype.addToParamFloat=function(t,i,e){"number"!=typeof t&&(t=this._$5S.getParamIndex(u.getID(t))),arguments.length<3&&(e=1),this._$5S.setParamFloat(t,this._$5S.getParamFloat(t)+i*e)},i.prototype.multParamFloat=function(t,i,e){"number"!=typeof t&&(t=this._$5S.getParamIndex(u.getID(t))),arguments.length<3&&(e=1),this._$5S.setParamFloat(t,this._$5S.getParamFloat(t)*(1+(i-1)*e))},i.prototype.getParamIndex=function(t){return this._$5S.getParamIndex(u.getID(t))},i.prototype.loadParam=function(){this._$5S.loadParam()},i.prototype.saveParam=function(){this._$5S.saveParam()},i.prototype.init=function(){this._$5S.init()},i.prototype.update=function(){this._$5S.update()},i.prototype._$Rs=function(){return _._$li("_$60 _$PT _$Rs()"),-1},i.prototype._$Ds=function(t){_._$li("_$60 _$PT _$SS#_$Ds() \\n")},i.prototype._$K2=function(){},i.prototype.draw=function(){},i.prototype.getModelContext=function(){return this._$5S},i.prototype._$s2=function(){return this._$NP},i.prototype._$P7=function(t,i,e,r){var o=-1,n=0,s=this;if(0!=e)if(1==t.length){var _=t[0],a=0!=s.getParamFloat(_),h=i[0],l=s.getPartsOpacity(h),$=e/r;a?(l+=$)>1&&(l=1):(l-=$)<0&&(l=0),s.setPartsOpacity(h,l)}else{for(var u=0;u<t.length;u++){var _=t[u],p=0!=s.getParamFloat(_);if(p){if(o>=0)break;o=u;var h=i[u];n=s.getPartsOpacity(h),n+=e/r,n>1&&(n=1)}}o<0&&(console.log("No _$wi _$q0/ _$U default[%s]",t[0]),o=0,n=1,s.loadParam(),s.setParamFloat(t[o],n),s.saveParam());for(var u=0;u<t.length;u++){var h=i[u];if(o==u)s.setPartsOpacity(h,n);else{var f,c=s.getPartsOpacity(h);f=n<.5?-.5*n/.5+1:.5*(1-n)/.5;var d=(1-f)*(1-n);d>.15&&(f=1-.15/(1-n)),c>f&&(c=f),s.setPartsOpacity(h,c)}}}else for(var u=0;u<t.length;u++){var _=t[u],h=i[u],p=0!=s.getParamFloat(_);s.setPartsOpacity(h,p?1:0)}},i.prototype.setPartsOpacity=function(t,i){"number"!=typeof t&&(t=this._$5S.getPartsDataIndex(l.getID(t))),this._$5S.setPartsOpacity(t,i)},i.prototype.getPartsDataIndex=function(t){return t instanceof l||(t=l.getID(t)),this._$5S.getPartsDataIndex(t)},i.prototype.getPartsOpacity=function(t){return"number"!=typeof t&&(t=this._$5S.getPartsDataIndex(l.getID(t))),t<0?0:this._$5S.getPartsOpacity(t)},i.prototype.getDrawParam=function(){},i.prototype.getDrawDataIndex=function(t){return this._$5S.getDrawDataIndex(b.getID(t))},i.prototype.getDrawData=function(t){return this._$5S.getDrawData(t)},i.prototype.getTransformedPoints=function(t){var i=this._$5S._$C2(t);return i instanceof ut?i.getTransformedPoints():null},i.prototype.getIndexArray=function(t){if(t<0||t>=this._$5S._$aS.length)return null;var i=this._$5S._$aS[t];return null!=i&&i.getType()==W._$wb&&i instanceof $t?i.getIndexArray():null},e.CHANNEL_COUNT=4,e.RENDER_TEXTURE_USE_MIPMAP=!1,e.NOT_USED_FRAME=-100,e.prototype._$L7=function(){if(this.tmpModelToViewMatrix&&(this.tmpModelToViewMatrix=null),this.tmpMatrix2&&(this.tmpMatrix2=null),this.tmpMatrixForMask&&(this.tmpMatrixForMask=null),this.tmpMatrixForDraw&&(this.tmpMatrixForDraw=null),this.tmpBoundsOnModel&&(this.tmpBoundsOnModel=null),this.CHANNEL_COLORS){for(var t=this.CHANNEL_COLORS.length-1;t>=0;--t)this.CHANNEL_COLORS.splice(t,1);this.CHANNEL_COLORS=[]}this.releaseShader()},e.prototype.releaseShader=function(){for(var t=at.frameBuffers.length,i=0;i<t;i++)this.gl.deleteFramebuffer(at.frameBuffers[i].framebuffer);at.frameBuffers=[],at.glContext=[]},e.prototype.init=function(t,i,e){for(var o=0;o<i.length;o++){var n=i[o].getClipIDList();if(null!=n){var s=this.findSameClip(n);null==s&&(s=new r(this,t,n),this.clipContextList.push(s));var _=i[o].getDrawDataID(),a=t.getDrawDataIndex(_);s.addClippedDrawData(_,a);e[o].clipBufPre_clipContext=s}}},e.prototype.getMaskRenderTexture=function(){var t=null;return t=this.dp_webgl.createFramebuffer(),at.frameBuffers[this.dp_webgl.glno]=t,this.dp_webgl.glno},e.prototype.setupClip=function(t,i){for(var e=0,r=0;r<this.clipContextList.length;r++){var o=this.clipContextList[r];this.calcClippedDrawTotalBounds(t,o),o.isUsing&&e++}if(e>0){var n=i.gl.getParameter(i.gl.FRAMEBUFFER_BINDING),s=new Array(4);s[0]=0,s[1]=0,s[2]=i.gl.canvas.width,s[3]=i.gl.canvas.height,i.gl.viewport(0,0,at.clippingMaskBufferSize,at.clippingMaskBufferSize),this.setupLayoutBounds(e),i.gl.bindFramebuffer(i.gl.FRAMEBUFFER,at.frameBuffers[this.curFrameNo].framebuffer),i.gl.clearColor(0,0,0,0),i.gl.clear(i.gl.COLOR_BUFFER_BIT);for(var r=0;r<this.clipContextList.length;r++){var o=this.clipContextList[r],_=o.allClippedDrawRect,a=(o.layoutChannelNo,o.layoutBounds);this.tmpBoundsOnModel._$jL(_),this.tmpBoundsOnModel.expand(.05*_.width,.05*_.height);var h=a.width/this.tmpBoundsOnModel.width,l=a.height/this.tmpBoundsOnModel.height;this.tmpMatrix2.identity(),this.tmpMatrix2.translate(-1,-1,0),this.tmpMatrix2.scale(2,2,1),this.tmpMatrix2.translate(a.x,a.y,0),this.tmpMatrix2.scale(h,l,1),this.tmpMatrix2.translate(-this.tmpBoundsOnModel.x,-this.tmpBoundsOnModel.y,0),this.tmpMatrixForMask.setMatrix(this.tmpMatrix2.m),this.tmpMatrix2.identity(),this.tmpMatrix2.translate(a.x,a.y,0),this.tmpMatrix2.scale(h,l,1),this.tmpMatrix2.translate(-this.tmpBoundsOnModel.x,-this.tmpBoundsOnModel.y,0),this.tmpMatrixForDraw.setMatrix(this.tmpMatrix2.m);for(var $=this.tmpMatrixForMask.getArray(),u=0;u<16;u++)o.matrixForMask[u]=$[u];for(var p=this.tmpMatrixForDraw.getArray(),u=0;u<16;u++)o.matrixForDraw[u]=p[u];for(var f=o.clippingMaskDrawIndexList.length,c=0;c<f;c++){var d=o.clippingMaskDrawIndexList[c],g=t.getDrawData(d),y=t._$C2(d);i.setClipBufPre_clipContextForMask(o),g.draw(i,t,y)}}i.gl.bindFramebuffer(i.gl.FRAMEBUFFER,n),i.setClipBufPre_clipContextForMask(null),i.gl.viewport(s[0],s[1],s[2],s[3])}},e.prototype.getColorBuffer=function(){return this.colorBuffer},e.prototype.findSameClip=function(t){for(var i=0;i<this.clipContextList.length;i++){var e=this.clipContextList[i],r=e.clipIDList.length;if(r==t.length){for(var o=0,n=0;n<r;n++)for(var s=e.clipIDList[n],_=0;_<r;_++)if(t[_]==s){o++;break}if(o==r)return e}}return null},e.prototype.calcClippedDrawTotalBounds=function(t,i){for(var e=t._$Ri.getModelImpl().getCanvasWidth(),r=t._$Ri.getModelImpl().getCanvasHeight(),o=e>r?e:r,n=o,s=o,_=0,a=0,h=i.clippedDrawContextList.length,l=0;l<h;l++){var $=i.clippedDrawContextList[l],u=$.drawDataIndex,p=t._$C2(u);if(p._$yo()){for(var f=p.getTransformedPoints(),c=f.length,d=[],g=[],y=0,m=U._$i2;m<c;m+=U._$No)d[y]=f[m],g[y]=f[m+1],y++;var T=Math.min.apply(null,d),P=Math.min.apply(null,g),S=Math.max.apply(null,d),v=Math.max.apply(null,g);T<n&&(n=T),P<s&&(s=P),S>_&&(_=S),v>a&&(a=v)}}if(n==o)i.allClippedDrawRect.x=0,i.allClippedDrawRect.y=0,i.allClippedDrawRect.width=0,i.allClippedDrawRect.height=0,i.isUsing=!1;else{var L=_-n,M=a-s;i.allClippedDrawRect.x=n,i.allClippedDrawRect.y=s,i.allClippedDrawRect.width=L,i.allClippedDrawRect.height=M,i.isUsing=!0}},e.prototype.setupLayoutBounds=function(t){var i=t/e.CHANNEL_COUNT,r=t%e.CHANNEL_COUNT;i=~~i,r=~~r;for(var o=0,n=0;n<e.CHANNEL_COUNT;n++){var s=i+(n<r?1:0);if(0==s);else if(1==s){var a=this.clipContextList[o++];a.layoutChannelNo=n,a.layoutBounds.x=0,a.layoutBounds.y=0,a.layoutBounds.width=1,a.layoutBounds.height=1}else if(2==s)for(var h=0;h<s;h++){var l=h%2,$=0;l=~~l;var a=this.clipContextList[o++];a.layoutChannelNo=n,a.layoutBounds.x=.5*l,a.layoutBounds.y=0,a.layoutBounds.width=.5,a.layoutBounds.height=1}else if(s<=4)for(var h=0;h<s;h++){var l=h%2,$=h/2;l=~~l,$=~~$;var a=this.clipContextList[o++];a.layoutChannelNo=n,a.layoutBounds.x=.5*l,a.layoutBounds.y=.5*$,a.layoutBounds.width=.5,a.layoutBounds.height=.5}else if(s<=9)for(var h=0;h<s;h++){var l=h%3,$=h/3;l=~~l,$=~~$;var a=this.clipContextList[o++];a.layoutChannelNo=n,a.layoutBounds.x=l/3,a.layoutBounds.y=$/3,a.layoutBounds.width=1/3,a.layoutBounds.height=1/3}else _._$li("_$6 _$0P mask count : %d",s)}},r.prototype.addClippedDrawData=function(t,i){var e=new o(t,i);this.clippedDrawContextList.push(e)},s._$JT=function(t,i,e){var r=t/i,o=e/i,n=o,s=1-(1-o)*(1-o),_=1-(1-n)*(1-n),a=1/3*(1-o)*s+(n*(2/3)+1/3*(1-n))*(1-s),h=(n+2/3*(1-n))*_+(o*(1/3)+2/3*(1-o))*(1-_),l=1-3*h+3*a-0,$=3*h-6*a+0,u=3*a-0;if(r<=0)return 0;if(r>=1)return 1;var p=r,f=p*p;return l*(p*f)+$*f+u*p+0},s.prototype._$a0=function(){},s.prototype.setFadeIn=function(t){this._$dP=t},s.prototype.setFadeOut=function(t){this._$eo=t},s.prototype._$pT=function(t){this._$V0=t},s.prototype.getFadeOut=function(){return this._$eo},s.prototype._$4T=function(){return this._$eo},s.prototype._$mT=function(){return this._$V0},s.prototype.getDurationMSec=function(){return-1},s.prototype.getLoopDurationMSec=function(){return-1},s.prototype.updateParam=function(t,i){if(i._$AT&&!i._$9L){var e=w.getUserTimeMSec();if(i._$z2<0){i._$z2=e,i._$bs=e;var r=this.getDurationMSec();i._$Do<0&&(i._$Do=r<=0?-1:i._$z2+r)}var o=this._$V0;o=o*(0==this._$dP?1:ht._$r2((e-i._$bs)/this._$dP))*(0==this._$eo||i._$Do<0?1:ht._$r2((i._$Do-e)/this._$eo)),0<=o&&o<=1||console.log("### assert!! ### "),this.updateParamExe(t,e,o,i),i._$Do>0&&i._$Do<e&&(i._$9L=!0)}},s.prototype.updateParamExe=function(t,i,e,r){},_._$8s=0,_._$fT=new Object,_.start=function(t){var i=_._$fT[t];null==i&&(i=new a,i._$r=t,_._$fT[t]=i),i._$0S=w.getSystemTimeMSec()},_.dump=function(t){var i=_._$fT[t];if(null!=i){var e=w.getSystemTimeMSec(),r=e-i._$0S;return console.log(t+" : "+r+"ms"),r}return-1},_.end=function(t){var i=_._$fT[t];if(null!=i){return w.getSystemTimeMSec()-i._$0S}return-1},_._$li=function(t,i){console.log("_$li : "+t+"\\n",i)},_._$Ji=function(t,i){console.log(t,i)},_._$dL=function(t,i){console.log(t,i),console.log("\\n")},_._$KL=function(t,i){for(var e=0;e<i;e++)e%16==0&&e>0?console.log("\\n"):e%8==0&&e>0&&console.log("  "),console.log("%02X ",255&t[e]);console.log("\\n")},_._$nr=function(t,i,e){console.log("%s\\n",t);for(var r=i.length,o=0;o<r;++o)console.log("%5d",i[o]),console.log("%s\\n",e),console.log(",");console.log("\\n")},_._$Rb=function(t){console.log("dump exception : "+t),console.log("stack :: "+t.stack)},h.prototype._$8P=function(){return.5*(this.x+this.x+this.width)},h.prototype._$6P=function(){return.5*(this.y+this.y+this.height)},h.prototype._$EL=function(){return this.x+this.width},h.prototype._$5T=function(){return this.y+this.height},h.prototype._$jL=function(t,i,e,r){this.x=t,this.y=i,this.width=e,this.height=r},h.prototype._$jL=function(t){this.x=t.x,this.y=t.y,this.width=t.width,this.height=t.height},l.prototype=new et,l._$tP=new Object,l._$27=function(){l._$tP.clear()},l.getID=function(t){var i=l._$tP[t];return null==i&&(i=new l(t),l._$tP[t]=i),i},l.prototype._$3s=function(){return new l},u.prototype=new et,u._$tP=new Object,u._$27=function(){u._$tP.clear()},u.getID=function(t){var i=u._$tP[t];return null==i&&(i=new u(t),u._$tP[t]=i),i},u.prototype._$3s=function(){return new u},p._$42=0,p.prototype._$zP=function(){null==this._$vo&&(this._$vo=new ot),null==this._$F2&&(this._$F2=new Array)},p.prototype.getCanvasWidth=function(){return this._$ao},p.prototype.getCanvasHeight=function(){return this._$1S},p.prototype._$F0=function(t){this._$vo=t._$nP(),this._$F2=t._$nP(),this._$ao=t._$6L(),this._$1S=t._$6L()},p.prototype._$6S=function(t){this._$F2.push(t)},p.prototype._$Xr=function(){return this._$F2},p.prototype._$E2=function(){return this._$vo},f.prototype.setup=function(t,i,e){this._$ks=this._$Yb(),this.p2._$xT(),3==arguments.length&&(this._$Fo=t,this._$L2=i,this.p1._$p=e,this.p2._$p=e,this.p2.y=t,this.setup())},f.prototype.getPhysicsPoint1=function(){return this.p1},f.prototype.getPhysicsPoint2=function(){return this.p2},f.prototype._$qr=function(){return this._$Db},f.prototype._$pr=function(t){this._$Db=t},f.prototype._$5r=function(){return this._$M2},f.prototype._$Cs=function(){return this._$9b},f.prototype._$Yb=function(){return-180*Math.atan2(this.p1.x-this.p2.x,-(this.p1.y-this.p2.y))/Math.PI},f.prototype.addSrcParam=function(t,i,e,r){var o=new g(t,i,e,r);this._$lL.push(o)},f.prototype.addTargetParam=function(t,i,e,r){var o=new T(t,i,e,r);this._$qP.push(o)},f.prototype.update=function(t,i){if(0==this._$iP)return this._$iP=this._$iT=i,void(this._$Fo=Math.sqrt((this.p1.x-this.p2.x)*(this.p1.x-this.p2.x)+(this.p1.y-this.p2.y)*(this.p1.y-this.p2.y)));var e=(i-this._$iT)/1e3;if(0!=e){for(var r=this._$lL.length-1;r>=0;--r){this._$lL[r]._$oP(t,this)}this._$oo(t,e),this._$M2=this._$Yb(),this._$9b=(this._$M2-this._$ks)/e,this._$ks=this._$M2}for(var r=this._$qP.length-1;r>=0;--r){this._$qP[r]._$YS(t,this)}this._$iT=i},f.prototype._$oo=function(t,i){i<.033&&(i=.033);var e=1/i;this.p1.vx=(this.p1.x-this.p1._$s0)*e,this.p1.vy=(this.p1.y-this.p1._$70)*e,this.p1.ax=(this.p1.vx-this.p1._$7L)*e,this.p1.ay=(this.p1.vy-this.p1._$HL)*e,this.p1.fx=this.p1.ax*this.p1._$p,this.p1.fy=this.p1.ay*this.p1._$p,this.p1._$xT();var r,o,n=-Math.atan2(this.p1.y-this.p2.y,this.p1.x-this.p2.x),s=Math.cos(n),_=Math.sin(n),a=9.8*this.p2._$p,h=this._$Db*Lt._$bS,l=a*Math.cos(n-h);r=l*_,o=l*s;var $=-this.p1.fx*_*_,u=-this.p1.fy*_*s,p=-this.p2.vx*this._$L2,f=-this.p2.vy*this._$L2;this.p2.fx=r+$+p,this.p2.fy=o+u+f,this.p2.ax=this.p2.fx/this.p2._$p,this.p2.ay=this.p2.fy/this.p2._$p,this.p2.vx+=this.p2.ax*i,this.p2.vy+=this.p2.ay*i,this.p2.x+=this.p2.vx*i,this.p2.y+=this.p2.vy*i;var c=Math.sqrt((this.p1.x-this.p2.x)*(this.p1.x-this.p2.x)+(this.p1.y-this.p2.y)*(this.p1.y-this.p2.y));this.p2.x=this.p1.x+this._$Fo*(this.p2.x-this.p1.x)/c,this.p2.y=this.p1.y+this._$Fo*(this.p2.y-this.p1.y)/c,this.p2.vx=(this.p2.x-this.p2._$s0)*e,this.p2.vy=(this.p2.y-this.p2._$70)*e,this.p2._$xT()},c.prototype._$xT=function(){this._$s0=this.x,this._$70=this.y,this._$7L=this.vx,this._$HL=this.vy},d.prototype._$oP=function(t,i){},g.prototype=new d,g.prototype._$oP=function(t,i){var e=this.scale*t.getParamFloat(this._$wL),r=i.getPhysicsPoint1();switch(this._$tL){default:case f.Src.SRC_TO_X:r.x=r.x+(e-r.x)*this._$V0;break;case f.Src.SRC_TO_Y:r.y=r.y+(e-r.y)*this._$V0;break;case f.Src.SRC_TO_G_ANGLE:var o=i._$qr();o+=(e-o)*this._$V0,i._$pr(o)}},y.prototype._$YS=function(t,i){},T.prototype=new y,T.prototype._$YS=function(t,i){switch(this._$YP){default:case f.Target.TARGET_FROM_ANGLE:t.setParamFloat(this._$wL,this.scale*i._$5r(),this._$V0);break;case f.Target.TARGET_FROM_ANGLE_V:t.setParamFloat(this._$wL,this.scale*i._$Cs(),this._$V0)}},f.Src=function(){},f.Src.SRC_TO_X="SRC_TO_X",f.Src.SRC_TO_Y="SRC_TO_Y",f.Src.SRC_TO_G_ANGLE="SRC_TO_G_ANGLE",f.Target=function(){},f.Target.TARGET_FROM_ANGLE="TARGET_FROM_ANGLE",f.Target.TARGET_FROM_ANGLE_V="TARGET_FROM_ANGLE_V",P.prototype.init=function(t){this._$fL=t._$fL,this._$gL=t._$gL,this._$B0=t._$B0,this._$z0=t._$z0,this._$qT=t._$qT,this.reflectX=t.reflectX,this.reflectY=t.reflectY},P.prototype._$F0=function(t){this._$fL=t._$_T(),this._$gL=t._$_T(),this._$B0=t._$_T(),this._$z0=t._$_T(),this._$qT=t._$_T(),t.getFormatVersion()>=G.LIVE2D_FORMAT_VERSION_V2_10_SDK2&&(this.reflectX=t._$po(),this.reflectY=t._$po())},P.prototype._$e=function(){};var It=function(){};It._$ni=function(t,i,e,r,o,n,s,_,a){var h=s*n-_*o;if(0==h)return null;var l,$=((t-e)*n-(i-r)*o)/h;return l=0!=o?(t-e-$*s)/o:(i-r-$*_)/n,isNaN(l)&&(l=(t-e-$*s)/o,isNaN(l)&&(l=(i-r-$*_)/n),isNaN(l)&&(console.log("a is NaN @UtVector#_$ni() "),console.log("v1x : "+o),console.log("v1x != 0 ? "+(0!=o)))),null==a?new Array(l,$):(a[0]=l,a[1]=$,a)},S.prototype._$8P=function(){return this.x+.5*this.width},S.prototype._$6P=function(){return this.y+.5*this.height},S.prototype._$EL=function(){return this.x+this.width},S.prototype._$5T=function(){return this.y+this.height},S.prototype._$jL=function(t,i,e,r){this.x=t,this.y=i,this.width=e,this.height=r},S.prototype._$jL=function(t){this.x=t.x,this.y=t.y,this.width=t.width,this.height=t.height},S.prototype.contains=function(t,i){return this.x<=this.x&&this.y<=this.y&&this.x<=this.x+this.width&&this.y<=this.y+this.height},S.prototype.expand=function(t,i){this.x-=t,this.y-=i,this.width+=2*t,this.height+=2*i},v._$Z2=function(t,i,e,r){var o=i._$Q2(t,e),n=t._$vs(),s=t._$Tr();if(i._$zr(n,s,o),o<=0)return r[n[0]];if(1==o){var _=r[n[0]],a=r[n[1]],h=s[0];return _+(a-_)*h|0}if(2==o){var _=r[n[0]],a=r[n[1]],l=r[n[2]],$=r[n[3]],h=s[0],u=s[1],p=_+(a-_)*h|0,f=l+($-l)*h|0;return p+(f-p)*u|0}if(3==o){var c=r[n[0]],d=r[n[1]],g=r[n[2]],y=r[n[3]],m=r[n[4]],T=r[n[5]],P=r[n[6]],S=r[n[7]],h=s[0],u=s[1],v=s[2],_=c+(d-c)*h|0,a=g+(y-g)*h|0,l=m+(T-m)*h|0,$=P+(S-P)*h|0,p=_+(a-_)*u|0,f=l+($-l)*u|0;return p+(f-p)*v|0}if(4==o){var L=r[n[0]],M=r[n[1]],E=r[n[2]],A=r[n[3]],I=r[n[4]],w=r[n[5]],x=r[n[6]],O=r[n[7]],D=r[n[8]],R=r[n[9]],b=r[n[10]],F=r[n[11]],C=r[n[12]],N=r[n[13]],B=r[n[14]],U=r[n[15]],h=s[0],u=s[1],v=s[2],G=s[3],c=L+(M-L)*h|0,d=E+(A-E)*h|0,g=I+(w-I)*h|0,y=x+(O-x)*h|0,m=D+(R-D)*h|0,T=b+(F-b)*h|0,P=C+(N-C)*h|0,S=B+(U-B)*h|0,_=c+(d-c)*u|0,a=g+(y-g)*u|0,l=m+(T-m)*u|0,$=P+(S-P)*u|0,p=_+(a-_)*v|0,f=l+($-l)*v|0;return p+(f-p)*G|0}for(var Y=1<<o,k=new Float32Array(Y),V=0;V<Y;V++){for(var X=V,z=1,H=0;H<o;H++)z*=X%2==0?1-s[H]:s[H],X/=2;k[V]=z}for(var W=new Float32Array(Y),j=0;j<Y;j++)W[j]=r[n[j]];for(var q=0,j=0;j<Y;j++)q+=k[j]*W[j];return q+.5|0},v._$br=function(t,i,e,r){var o=i._$Q2(t,e),n=t._$vs(),s=t._$Tr();if(i._$zr(n,s,o),o<=0)return r[n[0]];if(1==o){var _=r[n[0]],a=r[n[1]],h=s[0];return _+(a-_)*h}if(2==o){var _=r[n[0]],a=r[n[1]],l=r[n[2]],$=r[n[3]],h=s[0],u=s[1];return(1-u)*(_+(a-_)*h)+u*(l+($-l)*h)}if(3==o){var p=r[n[0]],f=r[n[1]],c=r[n[2]],d=r[n[3]],g=r[n[4]],y=r[n[5]],m=r[n[6]],T=r[n[7]],h=s[0],u=s[1],P=s[2];return(1-P)*((1-u)*(p+(f-p)*h)+u*(c+(d-c)*h))+P*((1-u)*(g+(y-g)*h)+u*(m+(T-m)*h))}if(4==o){var S=r[n[0]],v=r[n[1]],L=r[n[2]],M=r[n[3]],E=r[n[4]],A=r[n[5]],I=r[n[6]],w=r[n[7]],x=r[n[8]],O=r[n[9]],D=r[n[10]],R=r[n[11]],b=r[n[12]],F=r[n[13]],C=r[n[14]],N=r[n[15]],h=s[0],u=s[1],P=s[2],B=s[3];return(1-B)*((1-P)*((1-u)*(S+(v-S)*h)+u*(L+(M-L)*h))+P*((1-u)*(E+(A-E)*h)+u*(I+(w-I)*h)))+B*((1-P)*((1-u)*(x+(O-x)*h)+u*(D+(R-D)*h))+P*((1-u)*(b+(F-b)*h)+u*(C+(N-C)*h)))}for(var U=1<<o,G=new Float32Array(U),Y=0;Y<U;Y++){for(var k=Y,V=1,X=0;X<o;X++)V*=k%2==0?1-s[X]:s[X],k/=2;G[Y]=V}for(var z=new Float32Array(U),H=0;H<U;H++)z[H]=r[n[H]];for(var W=0,H=0;H<U;H++)W+=G[H]*z[H];return W},v._$Vr=function(t,i,e,r,o,n,s,_){var a=i._$Q2(t,e),h=t._$vs(),l=t._$Tr();i._$zr(h,l,a);var $=2*r,u=s;if(a<=0){var p=h[0],f=o[p];if(2==_&&0==s)w._$jT(f,0,n,0,$);else for(var c=0;c<$;)n[u]=f[c++],n[u+1]=f[c++],u+=_}else if(1==a)for(var f=o[h[0]],d=o[h[1]],g=l[0],y=1-g,c=0;c<$;)n[u]=f[c]*y+d[c]*g,++c,n[u+1]=f[c]*y+d[c]*g,++c,u+=_;else if(2==a)for(var f=o[h[0]],d=o[h[1]],m=o[h[2]],T=o[h[3]],g=l[0],P=l[1],y=1-g,S=1-P,v=S*y,L=S*g,M=P*y,E=P*g,c=0;c<$;)n[u]=v*f[c]+L*d[c]+M*m[c]+E*T[c],++c,n[u+1]=v*f[c]+L*d[c]+M*m[c]+E*T[c],++c,u+=_;else if(3==a)for(var A=o[h[0]],I=o[h[1]],x=o[h[2]],O=o[h[3]],D=o[h[4]],R=o[h[5]],b=o[h[6]],F=o[h[7]],g=l[0],P=l[1],C=l[2],y=1-g,S=1-P,N=1-C,B=N*S*y,U=N*S*g,G=N*P*y,Y=N*P*g,k=C*S*y,V=C*S*g,X=C*P*y,z=C*P*g,c=0;c<$;)n[u]=B*A[c]+U*I[c]+G*x[c]+Y*O[c]+k*D[c]+V*R[c]+X*b[c]+z*F[c],++c,n[u+1]=B*A[c]+U*I[c]+G*x[c]+Y*O[c]+k*D[c]+V*R[c]+X*b[c]+z*F[c],++c,u+=_;else if(4==a)for(var H=o[h[0]],W=o[h[1]],j=o[h[2]],q=o[h[3]],J=o[h[4]],Q=o[h[5]],Z=o[h[6]],K=o[h[7]],tt=o[h[8]],it=o[h[9]],et=o[h[10]],rt=o[h[11]],ot=o[h[12]],nt=o[h[13]],st=o[h[14]],_t=o[h[15]],g=l[0],P=l[1],C=l[2],at=l[3],y=1-g,S=1-P,N=1-C,ht=1-at,lt=ht*N*S*y,$t=ht*N*S*g,ut=ht*N*P*y,pt=ht*N*P*g,ft=ht*C*S*y,ct=ht*C*S*g,dt=ht*C*P*y,gt=ht*C*P*g,yt=at*N*S*y,mt=at*N*S*g,Tt=at*N*P*y,Pt=at*N*P*g,St=at*C*S*y,vt=at*C*S*g,Lt=at*C*P*y,Mt=at*C*P*g,c=0;c<$;)n[u]=lt*H[c]+$t*W[c]+ut*j[c]+pt*q[c]+ft*J[c]+ct*Q[c]+dt*Z[c]+gt*K[c]+yt*tt[c]+mt*it[c]+Tt*et[c]+Pt*rt[c]+St*ot[c]+vt*nt[c]+Lt*st[c]+Mt*_t[c],++c,n[u+1]=lt*H[c]+$t*W[c]+ut*j[c]+pt*q[c]+ft*J[c]+ct*Q[c]+dt*Z[c]+gt*K[c]+yt*tt[c]+mt*it[c]+Tt*et[c]+Pt*rt[c]+St*ot[c]+vt*nt[c]+Lt*st[c]+Mt*_t[c],++c,u+=_;else{for(var Et=1<<a,At=new Float32Array(Et),It=0;It<Et;It++){for(var wt=It,xt=1,Ot=0;Ot<a;Ot++)xt*=wt%2==0?1-l[Ot]:l[Ot],wt/=2;At[It]=xt}for(var Dt=new Float32Array(Et),Rt=0;Rt<Et;Rt++)Dt[Rt]=o[h[Rt]];for(var c=0;c<$;){for(var bt=0,Ft=0,Ct=c+1,Rt=0;Rt<Et;Rt++)bt+=At[Rt]*Dt[Rt][c],Ft+=At[Rt]*Dt[Rt][Ct];c+=2,n[u]=bt,n[u+1]=Ft,u+=_}}},L.prototype._$HT=function(t,i){this.x=t,this.y=i},L.prototype._$HT=function(t){this.x=t.x,this.y=t.y},M._$ur=-2,M._$ES=500,M._$wb=2,M._$8S=3,M._$52=M._$ES,M._$R2=M._$ES,M._$or=function(){return M._$52},M._$Pr=function(){return M._$R2},M.prototype.convertClipIDForV2_11=function(t){var i=[];return null==t?null:0==t.length?null:/,/.test(t)?i=t.id.split(","):(i.push(t.id),i)},M.prototype._$F0=function(t){this._$gP=t._$nP(),this._$dr=t._$nP(),this._$GS=t._$nP(),this._$qb=t._$6L(),this._$Lb=t._$cS(),this._$mS=t._$Tb(),t.getFormatVersion()>=G._$T7?(this.clipID=t._$nP(),this.clipIDList=this.convertClipIDForV2_11(this.clipID)):this.clipIDList=[],this._$MS(this._$Lb)},M.prototype.getClipIDList=function(){return this.clipIDList},M.prototype.init=function(t){},M.prototype._$Nr=function(t,i){if(i._$IS[0]=!1,i._$Us=v._$Z2(t,this._$GS,i._$IS,this._$Lb),at._$Zs);else if(i._$IS[0])return;i._$7s=v._$br(t,this._$GS,i._$IS,this._$mS)},M.prototype._$2b=function(t,i){},M.prototype.getDrawDataID=function(){return this._$gP},M.prototype._$j2=function(t){this._$gP=t},M.prototype.getOpacity=function(t,i){return i._$7s},M.prototype._$zS=function(t,i){return i._$Us},M.prototype._$MS=function(t){for(var i=t.length-1;i>=0;--i){var e=t[i];e<M._$52?M._$52=e:e>M._$R2&&(M._$R2=e)}},M.prototype.getTargetBaseDataID=function(){return this._$dr},M.prototype._$gs=function(t){this._$dr=t},M.prototype._$32=function(){return null!=this._$dr&&this._$dr!=yt._$2o()},M.prototype.preDraw=function(t,i,e){},M.prototype.draw=function(t,i,e){},M.prototype.getType=function(){},M.prototype._$B2=function(t,i,e){},E._$ps=32,E.CLIPPING_PROCESS_NONE=0,E.CLIPPING_PROCESS_OVERWRITE_ALPHA=1,E.CLIPPING_PROCESS_MULTIPLY_ALPHA=2,E.CLIPPING_PROCESS_DRAW=3,E.CLIPPING_PROCESS_CLEAR_ALPHA=4,E.prototype.setChannelFlagAsColor=function(t,i){this.CHANNEL_COLORS[t]=i},E.prototype.getChannelFlagAsColor=function(t){return this.CHANNEL_COLORS[t]},E.prototype._$ZT=function(){},E.prototype._$Uo=function(t,i,e,r,o,n,s){},E.prototype._$Rs=function(){return-1},E.prototype._$Ds=function(t){},E.prototype.setBaseColor=function(t,i,e,r){t<0?t=0:t>1&&(t=1),i<0?i=0:i>1&&(i=1),e<0?e=0:e>1&&(e=1),r<0?r=0:r>1&&(r=1),this._$lT=t,this._$C0=i,this._$tT=e,this._$WL=r},E.prototype._$WP=function(t){this.culling=t},E.prototype.setMatrix=function(t){for(var i=0;i<16;i++)this.matrix4x4[i]=t[i]},E.prototype._$IT=function(){return this.matrix4x4},E.prototype.setPremultipliedAlpha=function(t){this.premultipliedAlpha=t},E.prototype.isPremultipliedAlpha=function(){return this.premultipliedAlpha},E.prototype.setAnisotropy=function(t){this.anisotropy=t},E.prototype.getAnisotropy=function(){return this.anisotropy},E.prototype.getClippingProcess=function(){return this.clippingProcess},E.prototype.setClippingProcess=function(t){this.clippingProcess=t},E.prototype.setClipBufPre_clipContextForMask=function(t){this.clipBufPre_clipContextMask=t},E.prototype.getClipBufPre_clipContextMask=function(){return this.clipBufPre_clipContextMask},E.prototype.setClipBufPre_clipContextForDraw=function(t){this.clipBufPre_clipContextDraw=t},E.prototype.getClipBufPre_clipContextDraw=function(){return this.clipBufPre_clipContextDraw},I._$ur=-2,I._$c2=1,I._$_b=2,I.prototype._$F0=function(t){this._$kP=t._$nP(),this._$dr=t._$nP()},I.prototype.readV2_opacity=function(t){t.getFormatVersion()>=G.LIVE2D_FORMAT_VERSION_V2_10_SDK2&&(this._$mS=t._$Tb())},I.prototype.init=function(t){},I.prototype._$Nr=function(t,i){},I.prototype.interpolateOpacity=function(t,i,e,r){null==this._$mS?e.setInterpolatedOpacity(1):e.setInterpolatedOpacity(v._$br(t,i,r,this._$mS))},I.prototype._$2b=function(t,i){},I.prototype._$nb=function(t,i,e,r,o,n,s){},I.prototype.getType=function(){},I.prototype._$gs=function(t){this._$dr=t},I.prototype._$a2=function(t){this._$kP=t},I.prototype.getTargetBaseDataID=function(){return this._$dr},I.prototype.getBaseDataID=function(){return this._$kP},I.prototype._$32=function(){return null!=this._$dr&&this._$dr!=yt._$2o()},w._$W2=0,w._$CS=w._$W2,w._$Mo=function(){return!0},w._$XP=function(t){try{for(var i=getTimeMSec();getTimeMSec()-i<t;);}catch(t){t._$Rb()}},w.getUserTimeMSec=function(){return w._$CS==w._$W2?w.getSystemTimeMSec():w._$CS},w.setUserTimeMSec=function(t){w._$CS=t},w.updateUserTimeMSec=function(){return w._$CS=w.getSystemTimeMSec()},w.getTimeMSec=function(){return(new Date).getTime()},w.getSystemTimeMSec=function(){return(new Date).getTime()},w._$Q=function(t){},w._$jT=function(t,i,e,r,o){for(var n=0;n<o;n++)e[r+n]=t[i+n]},x._$ds=-2,x.prototype._$F0=function(t){this._$wL=t._$nP(),this._$VP=t._$6L(),this._$GP=t._$nP()},x.prototype.getParamIndex=function(t){return this._$2r!=t&&(this._$8o=x._$ds),this._$8o},x.prototype._$Pb=function(t,i){this._$8o=t,this._$2r=i},x.prototype.getParamID=function(){return this._$wL},x.prototype._$yP=function(t){this._$wL=t},x.prototype._$N2=function(){return this._$VP},x.prototype._$d2=function(){return this._$GP},x.prototype._$t2=function(t,i){this._$VP=t,this._$GP=i},x.prototype._$Lr=function(){return this._$O2},x.prototype._$wr=function(t){this._$O2=t},x.prototype._$SL=function(){return this._$ri},x.prototype._$AL=function(t){this._$ri=t},O.startsWith=function(t,i,e){var r=i+e.length;if(r>=t.length)return!1;for(var o=i;o<r;o++)if(O.getChar(t,o)!=e.charAt(o-i))return!1;return!0},O.getChar=function(t,i){return String.fromCharCode(t.getUint8(i))},O.createString=function(t,i,e){for(var r=new ArrayBuffer(2*e),o=new Uint16Array(r),n=0;n<e;n++)o[n]=t.getUint8(i+n);return String.fromCharCode.apply(null,o)},O._$LS=function(t,i,e,r){t instanceof ArrayBuffer&&(t=new DataView(t));var o=e,n=!1,s=!1,_=0,a=O.getChar(t,o);"-"==a&&(n=!0,o++);for(var h=!1;o<i;o++){switch(a=O.getChar(t,o)){case"0":_*=10;break;case"1":_=10*_+1;break;case"2":_=10*_+2;break;case"3":_=10*_+3;break;case"4":_=10*_+4;break;case"5":_=10*_+5;break;case"6":_=10*_+6;break;case"7":_=10*_+7;break;case"8":_=10*_+8;break;case"9":_=10*_+9;break;case".":s=!0,o++,h=!0;break;default:h=!0}if(h)break}if(s)for(var l=.1,$=!1;o<i;o++){switch(a=O.getChar(t,o)){case"0":break;case"1":_+=1*l;break;case"2":_+=2*l;break;case"3":_+=3*l;break;case"4":_+=4*l;break;case"5":_+=5*l;break;case"6":_+=6*l;break;case"7":_+=7*l;break;case"8":_+=8*l;break;case"9":_+=9*l;break;default:$=!0}if(l*=.1,$)break}return n&&(_=-_),r[0]=o,_},D.prototype._$zP=function(){this._$Ob=new Array},D.prototype._$F0=function(t){this._$Ob=t._$nP()},D.prototype._$Ur=function(t){if(t._$WS())return!0;for(var i=t._$v2(),e=this._$Ob.length-1;e>=0;--e){var r=this._$Ob[e].getParamIndex(i);if(r==x._$ds&&(r=t.getParamIndex(this._$Ob[e].getParamID())),t._$Xb(r))return!0}return!1},D.prototype._$Q2=function(t,i){for(var e,r,o=this._$Ob.length,n=t._$v2(),s=0,_=0;_<o;_++){var a=this._$Ob[_];if(e=a.getParamIndex(n),e==x._$ds&&(e=t.getParamIndex(a.getParamID()),a._$Pb(e,n)),e<0)throw new Exception("err 23242 : "+a.getParamID());var h=e<0?0:t.getParamFloat(e);r=a._$N2();var l,$,u=a._$d2(),p=-1,f=0;if(r<1);else if(1==r)l=u[0],l-U._$J<h&&h<l+U._$J?(p=0,f=0):(p=0,i[0]=!0);else if(l=u[0],h<l-U._$J)p=0,i[0]=!0;else if(h<l+U._$J)p=0;else{for(var c=!1,d=1;d<r;++d){if($=u[d],h<$+U._$J){$-U._$J<h?p=d:(p=d-1,f=(h-l)/($-l),s++),c=!0;break}l=$}c||(p=r-1,f=0,i[0]=!0)}a._$wr(p),a._$AL(f)}return s},D.prototype._$zr=function(t,i,e){var r=1<<e;r+1>U._$Qb&&console.log("err 23245\\n");for(var o=this._$Ob.length,n=1,s=1,_=0,a=0;a<r;++a)t[a]=0;for(var h=0;h<o;++h){var l=this._$Ob[h];if(0==l._$SL()){var $=l._$Lr()*n;if($<0&&at._$3T)throw new Exception("err 23246");for(var a=0;a<r;++a)t[a]+=$}else{for(var $=n*l._$Lr(),u=n*(l._$Lr()+1),a=0;a<r;++a)t[a]+=(a/s|0)%2==0?$:u;i[_++]=l._$SL(),s*=2}n*=l._$N2()}t[r]=65535,i[_]=-1},D.prototype._$h2=function(t,i,e){for(var r=new Float32Array(i),o=0;o<i;++o)r[o]=e[o];var n=new x;n._$yP(t),n._$t2(i,r),this._$Ob.push(n)},D.prototype._$J2=function(t){for(var i=t,e=this._$Ob.length,r=0;r<e;++r){var o=this._$Ob[r],n=o._$N2(),s=i%o._$N2(),_=o._$d2()[s];console.log("%s[%d]=%7.2f / ",o.getParamID(),s,_),i/=n}console.log("\\n")},D.prototype.getParamCount=function(){return this._$Ob.length},D.prototype._$zs=function(){return this._$Ob},R.prototype.identity=function(){for(var t=0;t<16;t++)this.m[t]=t%5==0?1:0},R.prototype.getArray=function(){return this.m},R.prototype.getCopyMatrix=function(){return new Float32Array(this.m)},R.prototype.setMatrix=function(t){if(null!=t&&16==t.length)for(var i=0;i<16;i++)this.m[i]=t[i]},R.prototype.mult=function(t,i,e){return null==i?null:(this==i?this.mult_safe(this.m,t.m,i.m,e):this.mult_fast(this.m,t.m,i.m,e),i)},R.prototype.mult_safe=function(t,i,e,r){if(t==e){var o=new Array(16);this.mult_fast(t,i,o,r);for(var n=15;n>=0;--n)e[n]=o[n]}else this.mult_fast(t,i,e,r)},R.prototype.mult_fast=function(t,i,e,r){r?(e[0]=t[0]*i[0]+t[4]*i[1]+t[8]*i[2],e[4]=t[0]*i[4]+t[4]*i[5]+t[8]*i[6],e[8]=t[0]*i[8]+t[4]*i[9]+t[8]*i[10],e[12]=t[0]*i[12]+t[4]*i[13]+t[8]*i[14]+t[12],e[1]=t[1]*i[0]+t[5]*i[1]+t[9]*i[2],e[5]=t[1]*i[4]+t[5]*i[5]+t[9]*i[6],e[9]=t[1]*i[8]+t[5]*i[9]+t[9]*i[10],e[13]=t[1]*i[12]+t[5]*i[13]+t[9]*i[14]+t[13],e[2]=t[2]*i[0]+t[6]*i[1]+t[10]*i[2],e[6]=t[2]*i[4]+t[6]*i[5]+t[10]*i[6],e[10]=t[2]*i[8]+t[6]*i[9]+t[10]*i[10],e[14]=t[2]*i[12]+t[6]*i[13]+t[10]*i[14]+t[14],e[3]=e[7]=e[11]=0,e[15]=1):(e[0]=t[0]*i[0]+t[4]*i[1]+t[8]*i[2]+t[12]*i[3],e[4]=t[0]*i[4]+t[4]*i[5]+t[8]*i[6]+t[12]*i[7],e[8]=t[0]*i[8]+t[4]*i[9]+t[8]*i[10]+t[12]*i[11],e[12]=t[0]*i[12]+t[4]*i[13]+t[8]*i[14]+t[12]*i[15],e[1]=t[1]*i[0]+t[5]*i[1]+t[9]*i[2]+t[13]*i[3],e[5]=t[1]*i[4]+t[5]*i[5]+t[9]*i[6]+t[13]*i[7],e[9]=t[1]*i[8]+t[5]*i[9]+t[9]*i[10]+t[13]*i[11],e[13]=t[1]*i[12]+t[5]*i[13]+t[9]*i[14]+t[13]*i[15],e[2]=t[2]*i[0]+t[6]*i[1]+t[10]*i[2]+t[14]*i[3],e[6]=t[2]*i[4]+t[6]*i[5]+t[10]*i[6]+t[14]*i[7],e[10]=t[2]*i[8]+t[6]*i[9]+t[10]*i[10]+t[14]*i[11],e[14]=t[2]*i[12]+t[6]*i[13]+t[10]*i[14]+t[14]*i[15],e[3]=t[3]*i[0]+t[7]*i[1]+t[11]*i[2]+t[15]*i[3],e[7]=t[3]*i[4]+t[7]*i[5]+t[11]*i[6]+t[15]*i[7],e[11]=t[3]*i[8]+t[7]*i[9]+t[11]*i[10]+t[15]*i[11],e[15]=t[3]*i[12]+t[7]*i[13]+t[11]*i[14]+t[15]*i[15])},R.prototype.translate=function(t,i,e){this.m[12]=this.m[0]*t+this.m[4]*i+this.m[8]*e+this.m[12],this.m[13]=this.m[1]*t+this.m[5]*i+this.m[9]*e+this.m[13],this.m[14]=this.m[2]*t+this.m[6]*i+this.m[10]*e+this.m[14],this.m[15]=this.m[3]*t+this.m[7]*i+this.m[11]*e+this.m[15]},R.prototype.scale=function(t,i,e){this.m[0]*=t,this.m[4]*=i,this.m[8]*=e,this.m[1]*=t,this.m[5]*=i,this.m[9]*=e,this.m[2]*=t,this.m[6]*=i,this.m[10]*=e,this.m[3]*=t,this.m[7]*=i,this.m[11]*=e},R.prototype.rotateX=function(t){var i=Lt.fcos(t),e=Lt._$9(t),r=this.m[4];this.m[4]=r*i+this.m[8]*e,this.m[8]=r*-e+this.m[8]*i,r=this.m[5],this.m[5]=r*i+this.m[9]*e,this.m[9]=r*-e+this.m[9]*i,r=this.m[6],this.m[6]=r*i+this.m[10]*e,this.m[10]=r*-e+this.m[10]*i,r=this.m[7],this.m[7]=r*i+this.m[11]*e,this.m[11]=r*-e+this.m[11]*i},R.prototype.rotateY=function(t){var i=Lt.fcos(t),e=Lt._$9(t),r=this.m[0];this.m[0]=r*i+this.m[8]*-e,this.m[8]=r*e+this.m[8]*i,r=this.m[1],this.m[1]=r*i+this.m[9]*-e,this.m[9]=r*e+this.m[9]*i,r=m[2],this.m[2]=r*i+this.m[10]*-e,this.m[10]=r*e+this.m[10]*i,r=m[3],this.m[3]=r*i+this.m[11]*-e,this.m[11]=r*e+this.m[11]*i},R.prototype.rotateZ=function(t){var i=Lt.fcos(t),e=Lt._$9(t),r=this.m[0];this.m[0]=r*i+this.m[4]*e,this.m[4]=r*-e+this.m[4]*i,r=this.m[1],this.m[1]=r*i+this.m[5]*e,this.m[5]=r*-e+this.m[5]*i,r=this.m[2],this.m[2]=r*i+this.m[6]*e,this.m[6]=r*-e+this.m[6]*i,r=this.m[3],this.m[3]=r*i+this.m[7]*e,this.m[7]=r*-e+this.m[7]*i},b.prototype=new et,b._$tP=new Object,b._$27=function(){b._$tP.clear()},b.getID=function(t){var i=b._$tP[t];return null==i&&(i=new b(t),b._$tP[t]=i),i},b.prototype._$3s=function(){return new b},F._$kS=-1,F._$pS=0,F._$hb=1,F.STATE_IDENTITY=0,F._$gb=1,F._$fo=2,F._$go=4,F.prototype.transform=function(t,i,e){var r,o,n,s,_,a,h=0,l=0;switch(this._$hi){default:return;case F._$go|F._$fo|F._$gb:for(r=this._$7,o=this._$H,n=this._$k,s=this._$f,_=this._$g,a=this._$w;--e>=0;){var $=t[h++],u=t[h++];i[l++]=r*$+o*u+n,i[l++]=s*$+_*u+a}return;case F._$go|F._$fo:for(r=this._$7,o=this._$H,s=this._$f,_=this._$g;--e>=0;){var $=t[h++],u=t[h++];i[l++]=r*$+o*u,i[l++]=s*$+_*u}return;case F._$go|F._$gb:for(o=this._$H,n=this._$k,s=this._$f,a=this._$w;--e>=0;){var $=t[h++];i[l++]=o*t[h++]+n,i[l++]=s*$+a}return;case F._$go:for(o=this._$H,s=this._$f;--e>=0;){var $=t[h++];i[l++]=o*t[h++],i[l++]=s*$}return;case F._$fo|F._$gb:for(r=this._$7,n=this._$k,_=this._$g,a=this._$w;--e>=0;)i[l++]=r*t[h++]+n,i[l++]=_*t[h++]+a;return;case F._$fo:for(r=this._$7,_=this._$g;--e>=0;)i[l++]=r*t[h++],i[l++]=_*t[h++];return;case F._$gb:for(n=this._$k,a=this._$w;--e>=0;)i[l++]=t[h++]+n,i[l++]=t[h++]+a;return;case F.STATE_IDENTITY:return void(t==i&&h==l||w._$jT(t,h,i,l,2*e))}},F.prototype.update=function(){0==this._$H&&0==this._$f?1==this._$7&&1==this._$g?0==this._$k&&0==this._$w?(this._$hi=F.STATE_IDENTITY,this._$Z=F._$pS):(this._$hi=F._$gb,this._$Z=F._$hb):0==this._$k&&0==this._$w?(this._$hi=F._$fo,this._$Z=F._$kS):(this._$hi=F._$fo|F._$gb,this._$Z=F._$kS):0==this._$7&&0==this._$g?0==this._$k&&0==this._$w?(this._$hi=F._$go,this._$Z=F._$kS):(this._$hi=F._$go|F._$gb,this._$Z=F._$kS):0==this._$k&&0==this._$w?(this._$hi=F._$go|F._$fo,this._$Z=F._$kS):(this._$hi=F._$go|F._$fo|F._$gb,this._$Z=F._$kS)},F.prototype._$RT=function(t){this._$IT(t);var i=t[0],e=t[2],r=t[1],o=t[3],n=Math.sqrt(i*i+r*r),s=i*o-e*r;0==n?at._$so&&console.log("affine._$RT() / rt==0"):(t[0]=n,t[1]=s/n,t[2]=(r*o+i*e)/s,t[3]=Math.atan2(r,i))},F.prototype._$ho=function(t,i,e,r){var o=new Float32Array(6),n=new Float32Array(6);t._$RT(o),i._$RT(n);var s=new Float32Array(6);s[0]=o[0]+(n[0]-o[0])*e,s[1]=o[1]+(n[1]-o[1])*e,s[2]=o[2]+(n[2]-o[2])*e,s[3]=o[3]+(n[3]-o[3])*e,s[4]=o[4]+(n[4]-o[4])*e,s[5]=o[5]+(n[5]-o[5])*e,r._$CT(s)},F.prototype._$CT=function(t){var i=Math.cos(t[3]),e=Math.sin(t[3]);this._$7=t[0]*i,this._$f=t[0]*e,this._$H=t[1]*(t[2]*i-e),this._$g=t[1]*(t[2]*e+i),this._$k=t[4],this._$w=t[5],this.update()},F.prototype._$IT=function(t){t[0]=this._$7,t[1]=this._$f,t[2]=this._$H,t[3]=this._$g,t[4]=this._$k,t[5]=this._$w},C.prototype=new s,C._$cs="VISIBLE:",C._$ar="LAYOUT:",C._$Co=0,C._$D2=[],C._$1T=1,C.loadMotion=function(t){var i=new C,e=[0],r=t.length;i._$yT=0;for(var o=0;o<r;++o){var n=255&t[o];if("\\n"!=n&&"\\r"!=n)if("#"!=n)if("$"!=n){if("a"<=n&&n<="z"||"A"<=n&&n<="Z"||"_"==n){for(var s=o,_=-1;o<r&&("\\r"!=(n=255&t[o])&&"\\n"!=n);++o)if("="==n){_=o;break}if(_>=0){var a=new B;O.startsWith(t,s,C._$cs)?(a._$RP=B._$hs,a._$4P=new String(t,s,_-s)):O.startsWith(t,s,C._$ar)?(a._$4P=new String(t,s+7,_-s-7),O.startsWith(t,s+7,"ANCHOR_X")?a._$RP=B._$xs:O.startsWith(t,s+7,"ANCHOR_Y")?a._$RP=B._$us:O.startsWith(t,s+7,"SCALE_X")?a._$RP=B._$qs:O.startsWith(t,s+7,"SCALE_Y")?a._$RP=B._$Ys:O.startsWith(t,s+7,"X")?a._$RP=B._$ws:O.startsWith(t,s+7,"Y")&&(a._$RP=B._$Ns)):(a._$RP=B._$Fr,a._$4P=new String(t,s,_-s)),i.motions.push(a);var h=0;for(C._$D2.clear(),o=_+1;o<r&&("\\r"!=(n=255&t[o])&&"\\n"!=n);++o)if(","!=n&&" "!=n&&"\\t"!=n){var l=O._$LS(t,r,o,e);if(e[0]>0){C._$D2.push(l),h++;var $=e[0];if($<o){console.log("_$n0 _$hi . @Live2DMotion loadMotion()\\n");break}o=$}}a._$I0=C._$D2._$BL(),h>i._$yT&&(i._$yT=h)}}}else{for(var s=o,_=-1;o<r&&("\\r"!=(n=255&t[o])&&"\\n"!=n);++o)if("="==n){_=o;break}var u=!1;if(_>=0)for(_==s+4&&"f"==t[s+1]&&"p"==t[s+2]&&"s"==t[s+3]&&(u=!0),o=_+1;o<r&&("\\r"!=(n=255&t[o])&&"\\n"!=n);++o)if(","!=n&&" "!=n&&"\\t"!=n){var l=O._$LS(t,r,o,e);e[0]>0&&u&&5<l&&l<121&&(i._$D0=l),o=e[0]}for(;o<r&&("\\n"!=t[o]&&"\\r"!=t[o]);++o);}else for(;o<r&&("\\n"!=t[o]&&"\\r"!=t[o]);++o);}return i._$AS=1e3*i._$yT/i._$D0|0,i},C.prototype.getDurationMSec=function(){return this._$AS},C.prototype.dump=function(){for(var t=0;t<this.motions.length;t++){var i=this.motions[t];console.log("_$wL[%s] [%d]. ",i._$4P,i._$I0.length);for(var e=0;e<i._$I0.length&&e<10;e++)console.log("%5.2f ,",i._$I0[e]);console.log("\\n")}},C.prototype.updateParamExe=function(t,i,e,r){for(var o=i-r._$z2,n=o*this._$D0/1e3,s=0|n,_=n-s,a=0;a<this.motions.length;a++){var h=this.motions[a],l=h._$I0.length,$=h._$4P;if(h._$RP==B._$hs){var u=h._$I0[s>=l?l-1:s];t.setParamFloat($,u)}else if(B._$ws<=h._$RP&&h._$RP<=B._$Ys);else{var p=t.getParamFloat($),f=h._$I0[s>=l?l-1:s],c=h._$I0[s+1>=l?l-1:s+1],d=f+(c-f)*_,g=p+(d-p)*e;t.setParamFloat($,g)}}s>=this._$yT&&(this._$E?(r._$z2=i,this.loopFadeIn&&(r._$bs=i)):r._$9L=!0)},C.prototype._$r0=function(){return this._$E},C.prototype._$aL=function(t){this._$E=t},C.prototype.isLoopFadeIn=function(){return this.loopFadeIn},C.prototype.setLoopFadeIn=function(t){this.loopFadeIn=t},N.prototype.clear=function(){this.size=0},N.prototype.add=function(t){if(this._$P.length<=this.size){var i=new Float32Array(2*this.size);w._$jT(this._$P,0,i,0,this.size),this._$P=i}this._$P[this.size++]=t},N.prototype._$BL=function(){var t=new Float32Array(this.size);return w._$jT(this._$P,0,t,0,this.size),t},B._$Fr=0,B._$hs=1,B._$ws=100,B._$Ns=101,B._$xs=102,B._$us=103,B._$qs=104,B._$Ys=105,U._$Ms=1,U._$Qs=2,U._$i2=0,U._$No=2,U._$do=U._$Ms,U._$Ls=!0,U._$1r=5,U._$Qb=65,U._$J=1e-4,U._$FT=.001,U._$Ss=3,G._$o7=6,G._$S7=7,G._$s7=8,G._$77=9,G.LIVE2D_FORMAT_VERSION_V2_10_SDK2=10,G.LIVE2D_FORMAT_VERSION_V2_11_SDK2_1=11,G._$T7=G.LIVE2D_FORMAT_VERSION_V2_11_SDK2_1,G._$Is=-2004318072,G._$h0=0,G._$4L=23,G._$7P=33,G._$uT=function(t){console.log("_$bo :: _$6 _$mo _$E0 : %d\\n",t)},G._$9o=function(t){if(t<40)return G._$uT(t),null;if(t<50)return G._$uT(t),null;if(t<60)return G._$uT(t),null;if(t<100)switch(t){case 65:return new Z;case 66:return new D;case 67:return new x;case 68:return new z;case 69:return new P;case 70:return new $t;default:return G._$uT(t),null}else if(t<150)switch(t){case 131:return new st;case 133:return new tt;case 136:return new p;case 137:return new ot;case 142:return new j}return G._$uT(t),null},Y._$HP=0,Y._$_0=!0;Y._$V2=-1,Y._$W0=-1,Y._$jr=!1,Y._$ZS=!0,Y._$tr=-1e6,Y._$lr=1e6,Y._$is=32,Y._$e=!1,Y.prototype.getDrawDataIndex=function(t){for(var i=this._$aS.length-1;i>=0;--i)if(null!=this._$aS[i]&&this._$aS[i].getDrawDataID()==t)return i;return-1},Y.prototype.getDrawData=function(t){if(t instanceof b){if(null==this._$Bo){this._$Bo=new Object;for(var i=this._$aS.length,e=0;e<i;e++){var r=this._$aS[e],o=r.getDrawDataID();null!=o&&(this._$Bo[o]=r)}}return this._$Bo[id]}return t<this._$aS.length?this._$aS[t]:null},Y.prototype.release=function(){this._$3S.clear(),this._$aS.clear(),this._$F2.clear(),null!=this._$Bo&&this._$Bo.clear(),this._$db.clear(),this._$8b.clear(),this._$Hr.clear()},Y.prototype.init=function(){this._$co++,this._$F2.length>0&&this.release();for(var t=this._$Ri.getModelImpl(),i=t._$Xr(),r=i.length,o=new Array,n=new Array,s=0;s<r;++s){var _=i[s];this._$F2.push(_),this._$Hr.push(_.init(this));for(var a=_.getBaseData(),h=a.length,l=0;l<h;++l)o.push(a[l]);for(var l=0;l<h;++l){var $=a[l].init(this);$._$l2(s),n.push($)}for(var u=_.getDrawData(),p=u.length,l=0;l<p;++l){var f=u[l],c=f.init(this);c._$IP=s,this._$aS.push(f),this._$8b.push(c)}}for(var d=o.length,g=yt._$2o();;){for(var y=!1,s=0;s<d;++s){var m=o[s];if(null!=m){var T=m.getTargetBaseDataID();(null==T||T==g||this.getBaseDataIndex(T)>=0)&&(this._$3S.push(m),this._$db.push(n[s]),o[s]=null,y=!0)}}if(!y)break}var P=t._$E2();if(null!=P){var S=P._$1s();if(null!=S)for(var v=S.length,s=0;s<v;++s){var L=S[s];null!=L&&this._$02(L.getParamID(),L.getDefaultValue(),L.getMinValue(),L.getMaxValue())}}this.clipManager=new e(this.dp_webgl),this.clipManager.init(this,this._$aS,this._$8b),this._$QT=!0},Y.prototype.update=function(){Y._$e&&_.start("_$zL");for(var t=this._$_2.length,i=0;i<t;i++)this._$_2[i]!=this._$vr[i]&&(this._$Js[i]=Y._$ZS,this._$vr[i]=this._$_2[i]);var e=this._$3S.length,r=this._$aS.length,o=W._$or(),n=W._$Pr(),s=n-o+1;(null==this._$Ws||this._$Ws.length<s)&&(this._$Ws=new Int16Array(s),this._$Vs=new Int16Array(s));for(var i=0;i<s;i++)this._$Ws[i]=Y._$V2,this._$Vs[i]=Y._$V2;(null==this._$Er||this._$Er.length<r)&&(this._$Er=new Int16Array(r));for(var i=0;i<r;i++)this._$Er[i]=Y._$W0;Y._$e&&_.dump("_$zL"),Y._$e&&_.start("_$UL");for(var a=null,h=0;h<e;++h){var l=this._$3S[h],$=this._$db[h];try{l._$Nr(this,$),l._$2b(this,$)}catch(t){null==a&&(a=t)}}null!=a&&Y._$_0&&_._$Rb(a),Y._$e&&_.dump("_$UL"),Y._$e&&_.start("_$DL");for(var u=null,p=0;p<r;++p){var f=this._$aS[p],c=this._$8b[p];try{if(f._$Nr(this,c),c._$u2())continue;f._$2b(this,c);var d,g=Math.floor(f._$zS(this,c)-o);try{d=this._$Vs[g]}catch(t){console.log("_$li :: %s / %s \\t\\t\\t\\t@@_$fS\\n",t.toString(),f.getDrawDataID().toString()),g=Math.floor(f._$zS(this,c)-o);continue}d==Y._$V2?this._$Ws[g]=p:this._$Er[d]=p,this._$Vs[g]=p}catch(t){null==u&&(u=t,at._$sT(at._$H7))}}null!=u&&Y._$_0&&_._$Rb(u),Y._$e&&_.dump("_$DL"),Y._$e&&_.start("_$eL");for(var i=this._$Js.length-1;i>=0;i--)this._$Js[i]=Y._$jr;return this._$QT=!1,Y._$e&&_.dump("_$eL"),!1},Y.prototype.preDraw=function(t){null!=this.clipManager&&(t._$ZT(),this.clipManager.setupClip(this,t))},Y.prototype.draw=function(t){if(null==this._$Ws)return void _._$li("call _$Ri.update() before _$Ri.draw() ");var i=this._$Ws.length;t._$ZT();for(var e=0;e<i;++e){var r=this._$Ws[e];if(r!=Y._$V2)for(;;){var o=this._$aS[r],n=this._$8b[r];if(n._$yo()){var s=n._$IP,a=this._$Hr[s];n._$VS=a.getPartsOpacity(),o.draw(t,this,n)}var h=this._$Er[r];if(h<=r||h==Y._$W0)break;r=h}}},Y.prototype.getParamIndex=function(t){for(var i=this._$pb.length-1;i>=0;--i)if(this._$pb[i]==t)return i;return this._$02(t,0,Y._$tr,Y._$lr)},Y.prototype._$BS=function(t){return this.getBaseDataIndex(t)},Y.prototype.getBaseDataIndex=function(t){for(var i=this._$3S.length-1;i>=0;--i)if(null!=this._$3S[i]&&this._$3S[i].getBaseDataID()==t)return i;return-1},Y.prototype._$UT=function(t,i){var e=new Float32Array(i);return w._$jT(t,0,e,0,t.length),e},Y.prototype._$02=function(t,i,e,r){if(this._$qo>=this._$pb.length){var o=this._$pb.length,n=new Array(2*o);w._$jT(this._$pb,0,n,0,o),this._$pb=n,this._$_2=this._$UT(this._$_2,2*o),this._$vr=this._$UT(this._$vr,2*o),this._$Rr=this._$UT(this._$Rr,2*o),this._$Or=this._$UT(this._$Or,2*o);var s=new Array;w._$jT(this._$Js,0,s,0,o),this._$Js=s}return this._$pb[this._$qo]=t,this._$_2[this._$qo]=i,this._$vr[this._$qo]=i,this._$Rr[this._$qo]=e,this._$Or[this._$qo]=r,this._$Js[this._$qo]=Y._$ZS,this._$qo++},Y.prototype._$Zo=function(t,i){this._$3S[t]=i},Y.prototype.setParamFloat=function(t,i){i<this._$Rr[t]&&(i=this._$Rr[t]),i>this._$Or[t]&&(i=this._$Or[t]),this._$_2[t]=i},Y.prototype.loadParam=function(){var t=this._$_2.length;t>this._$fs.length&&(t=this._$fs.length),w._$jT(this._$fs,0,this._$_2,0,t)},Y.prototype.saveParam=function(){var t=this._$_2.length;t>this._$fs.length&&(this._$fs=new Float32Array(t)),w._$jT(this._$_2,0,this._$fs,0,t)},Y.prototype._$v2=function(){return this._$co},Y.prototype._$WS=function(){return this._$QT},Y.prototype._$Xb=function(t){return this._$Js[t]==Y._$ZS},Y.prototype._$vs=function(){return this._$Es},Y.prototype._$Tr=function(){return this._$ZP},Y.prototype.getBaseData=function(t){return this._$3S[t]},Y.prototype.getParamFloat=function(t){return this._$_2[t]},Y.prototype.getParamMax=function(t){return this._$Or[t]},Y.prototype.getParamMin=function(t){return this._$Rr[t]},Y.prototype.setPartsOpacity=function(t,i){this._$Hr[t].setPartsOpacity(i)},Y.prototype.getPartsOpacity=function(t){return this._$Hr[t].getPartsOpacity()},Y.prototype.getPartsDataIndex=function(t){for(var i=this._$F2.length-1;i>=0;--i)if(null!=this._$F2[i]&&this._$F2[i]._$p2()==t)return i;return-1},Y.prototype._$q2=function(t){return this._$db[t]},Y.prototype._$C2=function(t){return this._$8b[t]},Y.prototype._$Bb=function(t){return this._$Hr[t]},Y.prototype._$5s=function(t,i){for(var e=this._$Ws.length,r=t,o=0;o<e;++o){var n=this._$Ws[o];if(n!=Y._$V2)for(;;){var s=this._$8b[n];s._$yo()&&(s._$GT()._$B2(this,s,r),r+=i);var _=this._$Er[n];if(_<=n||_==Y._$W0)break;n=_}}},Y.prototype.setDrawParam=function(t){this.dp_webgl=t},Y.prototype.getDrawParam=function(){return this.dp_webgl},k._$0T=function(t){return k._$0T(new _$5(t))},k._$0T=function(t){if(!t.exists())throw new _$ls(t._$3b());for(var i,e=t.length(),r=new Int8Array(e),o=new _$Xs(new _$kb(t),8192),n=0;(i=o.read(r,n,e-n))>0;)n+=i;return r},k._$C=function(t){var i=null,e=null;try{i=t instanceof Array?t:new _$Xs(t,8192),e=new _$js;for(var r,o=new Int8Array(1e3);(r=i.read(o))>0;)e.write(o,0,r);return e._$TS()}finally{null!=t&&t.close(),null!=e&&(e.flush(),e.close())}},V.prototype._$T2=function(){return w.getUserTimeMSec()+Math._$10()*(2*this._$Br-1)},V.prototype._$uo=function(t){this._$Br=t},V.prototype._$QS=function(t,i,e){this._$Dr=t,this._$Cb=i,this._$mr=e},V.prototype._$7T=function(t){var i,e=w.getUserTimeMSec(),r=0;switch(this._$_L){case STATE_CLOSING:r=(e-this._$bb)/this._$Dr,r>=1&&(r=1,this._$_L=wt.STATE_CLOSED,this._$bb=e),i=1-r;break;case STATE_CLOSED:r=(e-this._$bb)/this._$Cb,r>=1&&(this._$_L=wt.STATE_OPENING,this._$bb=e),i=0;break;case STATE_OPENING:r=(e-this._$bb)/this._$mr,r>=1&&(r=1,this._$_L=wt.STATE_INTERVAL,this._$12=this._$T2()),i=r;break;case STATE_INTERVAL:this._$12<e&&(this._$_L=wt.STATE_CLOSING,this._$bb=e),i=1;break;case STATE_FIRST:default:this._$_L=wt.STATE_INTERVAL,this._$12=this._$T2(),i=1}this._$jo||(i=-i),t.setParamFloat(this._$iL,i),t.setParamFloat(this._$0L,i)};var wt=function(){};wt.STATE_FIRST="STATE_FIRST",wt.STATE_INTERVAL="STATE_INTERVAL",wt.STATE_CLOSING="STATE_CLOSING",wt.STATE_CLOSED="STATE_CLOSED",wt.STATE_OPENING="STATE_OPENING",X.prototype=new E,X._$As=32,X._$Gr=!1,X._$NT=null,X._$vS=null,X._$no=null,X._$9r=function(t){return new Float32Array(t)},X._$vb=function(t){return new Int16Array(t)},X._$cr=function(t,i){return null==t||t._$yL()<i.length?(t=X._$9r(2*i.length),t.put(i),t._$oT(0)):(t.clear(),t.put(i),t._$oT(0)),t},X._$mb=function(t,i){return null==t||t._$yL()<i.length?(t=X._$vb(2*i.length),t.put(i),t._$oT(0)):(t.clear(),t.put(i),t._$oT(0)),t},X._$Hs=function(){return X._$Gr},X._$as=function(t){X._$Gr=t},X.prototype.setGL=function(t){this.gl=t},X.prototype.setTransform=function(t){this.transform=t},X.prototype._$ZT=function(){},X.prototype._$Uo=function(t,i,e,r,o,n,s,_){if(!(n<.01)){var a=this._$U2[t],h=n>.9?at.EXPAND_W:0;this.gl.drawElements(a,e,r,o,n,h,this.transform,_)}},X.prototype._$Rs=function(){throw new Error("_$Rs")},X.prototype._$Ds=function(t){throw new Error("_$Ds")},X.prototype._$K2=function(){for(var t=0;t<this._$sb.length;t++){0!=this._$sb[t]&&(this.gl._$Sr(1,this._$sb,t),this._$sb[t]=0)}},X.prototype.setTexture=function(t,i){this._$sb.length<t+1&&this._$nS(t),this._$sb[t]=i},X.prototype.setTexture=function(t,i){this._$sb.length<t+1&&this._$nS(t),this._$U2[t]=i},X.prototype._$nS=function(t){var i=Math.max(2*this._$sb.length,t+1+10),e=new Int32Array(i);w._$jT(this._$sb,0,e,0,this._$sb.length),this._$sb=e;var r=new Array;w._$jT(this._$U2,0,r,0,this._$U2.length),this._$U2=r},z.prototype=new I,z._$Xo=new Float32Array(2),z._$io=new Float32Array(2),z._$0o=new Float32Array(2),z._$Lo=new Float32Array(2),z._$To=new Float32Array(2),z._$Po=new Float32Array(2),z._$gT=new Array,z.prototype._$zP=function(){this._$GS=new D,this._$GS._$zP(),this._$Y0=new Array},z.prototype.getType=function(){return I._$c2},z.prototype._$F0=function(t){I.prototype._$F0.call(this,t),this._$GS=t._$nP(),this._$Y0=t._$nP(),I.prototype.readV2_opacity.call(this,t)},z.prototype.init=function(t){var i=new H(this);return i._$Yr=new P,this._$32()&&(i._$Wr=new P),i},z.prototype._$Nr=function(t,i){this!=i._$GT()&&console.log("### assert!! ### ");var e=i;if(this._$GS._$Ur(t)){var r=z._$gT;r[0]=!1;var o=this._$GS._$Q2(t,r);i._$Ib(r[0]),this.interpolateOpacity(t,this._$GS,i,r);var n=t._$vs(),s=t._$Tr();if(this._$GS._$zr(n,s,o),o<=0){var _=this._$Y0[n[0]];e._$Yr.init(_)}else if(1==o){var _=this._$Y0[n[0]],a=this._$Y0[n[1]],h=s[0];e._$Yr._$fL=_._$fL+(a._$fL-_._$fL)*h,e._$Yr._$gL=_._$gL+(a._$gL-_._$gL)*h,e._$Yr._$B0=_._$B0+(a._$B0-_._$B0)*h,e._$Yr._$z0=_._$z0+(a._$z0-_._$z0)*h,e._$Yr._$qT=_._$qT+(a._$qT-_._$qT)*h}else if(2==o){var _=this._$Y0[n[0]],a=this._$Y0[n[1]],l=this._$Y0[n[2]],$=this._$Y0[n[3]],h=s[0],u=s[1],p=_._$fL+(a._$fL-_._$fL)*h,f=l._$fL+($._$fL-l._$fL)*h;e._$Yr._$fL=p+(f-p)*u,p=_._$gL+(a._$gL-_._$gL)*h,f=l._$gL+($._$gL-l._$gL)*h,e._$Yr._$gL=p+(f-p)*u,p=_._$B0+(a._$B0-_._$B0)*h,f=l._$B0+($._$B0-l._$B0)*h,e._$Yr._$B0=p+(f-p)*u,p=_._$z0+(a._$z0-_._$z0)*h,f=l._$z0+($._$z0-l._$z0)*h,e._$Yr._$z0=p+(f-p)*u,p=_._$qT+(a._$qT-_._$qT)*h,f=l._$qT+($._$qT-l._$qT)*h,e._$Yr._$qT=p+(f-p)*u}else if(3==o){var c=this._$Y0[n[0]],d=this._$Y0[n[1]],g=this._$Y0[n[2]],y=this._$Y0[n[3]],m=this._$Y0[n[4]],T=this._$Y0[n[5]],P=this._$Y0[n[6]],S=this._$Y0[n[7]],h=s[0],u=s[1],v=s[2],p=c._$fL+(d._$fL-c._$fL)*h,f=g._$fL+(y._$fL-g._$fL)*h,L=m._$fL+(T._$fL-m._$fL)*h,M=P._$fL+(S._$fL-P._$fL)*h;e._$Yr._$fL=(1-v)*(p+(f-p)*u)+v*(L+(M-L)*u),p=c._$gL+(d._$gL-c._$gL)*h,f=g._$gL+(y._$gL-g._$gL)*h,L=m._$gL+(T._$gL-m._$gL)*h,M=P._$gL+(S._$gL-P._$gL)*h,e._$Yr._$gL=(1-v)*(p+(f-p)*u)+v*(L+(M-L)*u),p=c._$B0+(d._$B0-c._$B0)*h,f=g._$B0+(y._$B0-g._$B0)*h,L=m._$B0+(T._$B0-m._$B0)*h,M=P._$B0+(S._$B0-P._$B0)*h,e._$Yr._$B0=(1-v)*(p+(f-p)*u)+v*(L+(M-L)*u),p=c._$z0+(d._$z0-c._$z0)*h,f=g._$z0+(y._$z0-g._$z0)*h,L=m._$z0+(T._$z0-m._$z0)*h,M=P._$z0+(S._$z0-P._$z0)*h,e._$Yr._$z0=(1-v)*(p+(f-p)*u)+v*(L+(M-L)*u),p=c._$qT+(d._$qT-c._$qT)*h,f=g._$qT+(y._$qT-g._$qT)*h,L=m._$qT+(T._$qT-m._$qT)*h,M=P._$qT+(S._$qT-P._$qT)*h,e._$Yr._$qT=(1-v)*(p+(f-p)*u)+v*(L+(M-L)*u)}else if(4==o){var E=this._$Y0[n[0]],A=this._$Y0[n[1]],I=this._$Y0[n[2]],w=this._$Y0[n[3]],x=this._$Y0[n[4]],O=this._$Y0[n[5]],D=this._$Y0[n[6]],R=this._$Y0[n[7]],b=this._$Y0[n[8]],F=this._$Y0[n[9]],C=this._$Y0[n[10]],N=this._$Y0[n[11]],B=this._$Y0[n[12]],U=this._$Y0[n[13]],G=this._$Y0[n[14]],Y=this._$Y0[n[15]],h=s[0],u=s[1],v=s[2],k=s[3],p=E._$fL+(A._$fL-E._$fL)*h,f=I._$fL+(w._$fL-I._$fL)*h,L=x._$fL+(O._$fL-x._$fL)*h,M=D._$fL+(R._$fL-D._$fL)*h,V=b._$fL+(F._$fL-b._$fL)*h,X=C._$fL+(N._$fL-C._$fL)*h,H=B._$fL+(U._$fL-B._$fL)*h,W=G._$fL+(Y._$fL-G._$fL)*h;e._$Yr._$fL=(1-k)*((1-v)*(p+(f-p)*u)+v*(L+(M-L)*u))+k*((1-v)*(V+(X-V)*u)+v*(H+(W-H)*u)),p=E._$gL+(A._$gL-E._$gL)*h,f=I._$gL+(w._$gL-I._$gL)*h,L=x._$gL+(O._$gL-x._$gL)*h,M=D._$gL+(R._$gL-D._$gL)*h,V=b._$gL+(F._$gL-b._$gL)*h,X=C._$gL+(N._$gL-C._$gL)*h,H=B._$gL+(U._$gL-B._$gL)*h,W=G._$gL+(Y._$gL-G._$gL)*h,e._$Yr._$gL=(1-k)*((1-v)*(p+(f-p)*u)+v*(L+(M-L)*u))+k*((1-v)*(V+(X-V)*u)+v*(H+(W-H)*u)),p=E._$B0+(A._$B0-E._$B0)*h,f=I._$B0+(w._$B0-I._$B0)*h,L=x._$B0+(O._$B0-x._$B0)*h,M=D._$B0+(R._$B0-D._$B0)*h,V=b._$B0+(F._$B0-b._$B0)*h,X=C._$B0+(N._$B0-C._$B0)*h,H=B._$B0+(U._$B0-B._$B0)*h,W=G._$B0+(Y._$B0-G._$B0)*h,e._$Yr._$B0=(1-k)*((1-v)*(p+(f-p)*u)+v*(L+(M-L)*u))+k*((1-v)*(V+(X-V)*u)+v*(H+(W-H)*u)),p=E._$z0+(A._$z0-E._$z0)*h,f=I._$z0+(w._$z0-I._$z0)*h,L=x._$z0+(O._$z0-x._$z0)*h,M=D._$z0+(R._$z0-D._$z0)*h,V=b._$z0+(F._$z0-b._$z0)*h,X=C._$z0+(N._$z0-C._$z0)*h,H=B._$z0+(U._$z0-B._$z0)*h,W=G._$z0+(Y._$z0-G._$z0)*h,e._$Yr._$z0=(1-k)*((1-v)*(p+(f-p)*u)+v*(L+(M-L)*u))+k*((1-v)*(V+(X-V)*u)+v*(H+(W-H)*u)),p=E._$qT+(A._$qT-E._$qT)*h,f=I._$qT+(w._$qT-I._$qT)*h,L=x._$qT+(O._$qT-x._$qT)*h,M=D._$qT+(R._$qT-D._$qT)*h,V=b._$qT+(F._$qT-b._$qT)*h,X=C._$qT+(N._$qT-C._$qT)*h,H=B._$qT+(U._$qT-B._$qT)*h,W=G._$qT+(Y._$qT-G._$qT)*h,e._$Yr._$qT=(1-k)*((1-v)*(p+(f-p)*u)+v*(L+(M-L)*u))+k*((1-v)*(V+(X-V)*u)+v*(H+(W-H)*u))}else{for(var j=0|Math.pow(2,o),q=new Float32Array(j),J=0;J<j;J++){for(var Q=J,Z=1,K=0;K<o;K++)Z*=Q%2==0?1-s[K]:s[K],Q/=2;q[J]=Z}for(var tt=new Array,it=0;it<j;it++)tt[it]=this._$Y0[n[it]];for(var et=0,rt=0,ot=0,nt=0,st=0,it=0;it<j;it++)et+=q[it]*tt[it]._$fL,rt+=q[it]*tt[it]._$gL,ot+=q[it]*tt[it]._$B0,nt+=q[it]*tt[it]._$z0,st+=q[it]*tt[it]._$qT;e._$Yr._$fL=et,e._$Yr._$gL=rt,e._$Yr._$B0=ot,e._$Yr._$z0=nt,e._$Yr._$qT=st}var _=this._$Y0[n[0]];e._$Yr.reflectX=_.reflectX,e._$Yr.reflectY=_.reflectY}},z.prototype._$2b=function(t,i){this!=i._$GT()&&console.log("### assert!! ### ");var e=i;if(e._$hS(!0),this._$32()){var r=this.getTargetBaseDataID();if(e._$8r==I._$ur&&(e._$8r=t.getBaseDataIndex(r)),e._$8r<0)at._$so&&_._$li("_$L _$0P _$G :: %s",r),e._$hS(!1);else{var o=t.getBaseData(e._$8r);if(null!=o){var n=t._$q2(e._$8r),s=z._$Xo;s[0]=e._$Yr._$fL,s[1]=e._$Yr._$gL;var a=z._$io;a[0]=0,a[1]=-.1;n._$GT().getType()==I._$c2?a[1]=-10:a[1]=-.1;var h=z._$0o;this._$Jr(t,o,n,s,a,h);var l=Lt._$92(a,h);o._$nb(t,n,s,s,1,0,2),e._$Wr._$fL=s[0],e._$Wr._$gL=s[1],e._$Wr._$B0=e._$Yr._$B0,e._$Wr._$z0=e._$Yr._$z0,e._$Wr._$qT=e._$Yr._$qT-l*Lt._$NS;var $=n.getTotalScale();e.setTotalScale_notForClient($*e._$Wr._$B0);var u=n.getTotalOpacity();e.setTotalOpacity(u*e.getInterpolatedOpacity()),e._$Wr.reflectX=e._$Yr.reflectX,e._$Wr.reflectY=e._$Yr.reflectY,e._$hS(n._$yo())}else e._$hS(!1)}}else e.setTotalScale_notForClient(e._$Yr._$B0),e.setTotalOpacity(e.getInterpolatedOpacity())},z.prototype._$nb=function(t,i,e,r,o,n,s){this!=i._$GT()&&console.log("### assert!! ### ");for(var _,a,h=i,l=null!=h._$Wr?h._$Wr:h._$Yr,$=Math.sin(Lt._$bS*l._$qT),u=Math.cos(Lt._$bS*l._$qT),p=h.getTotalScale(),f=l.reflectX?-1:1,c=l.reflectY?-1:1,d=u*p*f,g=-$*p*c,y=$*p*f,m=u*p*c,T=l._$fL,P=l._$gL,S=o*s,v=n;v<S;v+=s)_=e[v],a=e[v+1],r[v]=d*_+g*a+T,r[v+1]=y*_+m*a+P},z.prototype._$Jr=function(t,i,e,r,o,n){i!=e._$GT()&&console.log("### assert!! ### ");var s=z._$Lo;z._$Lo[0]=r[0],z._$Lo[1]=r[1],i._$nb(t,e,s,s,1,0,2);for(var _=z._$To,a=z._$Po,h=1,l=0;l<10;l++){if(a[0]=r[0]+h*o[0],a[1]=r[1]+h*o[1],i._$nb(t,e,a,_,1,0,2),_[0]-=s[0],_[1]-=s[1],0!=_[0]||0!=_[1])return n[0]=_[0],void(n[1]=_[1]);if(a[0]=r[0]-h*o[0],a[1]=r[1]-h*o[1],i._$nb(t,e,a,_,1,0,2),_[0]-=s[0],_[1]-=s[1],0!=_[0]||0!=_[1])return _[0]=-_[0],_[0]=-_[0],n[0]=_[0],void(n[1]=_[1]);h*=.1}at._$so&&console.log("_$L0 to transform _$SP\\n")},H.prototype=new _t,W.prototype=new M,W._$ur=-2,W._$ES=500,W._$wb=2,W._$8S=3,W._$os=4,W._$52=W._$ES,W._$R2=W._$ES,W._$Sb=function(t){for(var i=t.length-1;i>=0;--i){var e=t[i];e<W._$52?W._$52=e:e>W._$R2&&(W._$R2=e)}},W._$or=function(){return W._$52},W._$Pr=function(){return W._$R2},W.prototype._$F0=function(t){this._$gP=t._$nP(),this._$dr=t._$nP(),this._$GS=t._$nP(),this._$qb=t._$6L(),this._$Lb=t._$cS(),this._$mS=t._$Tb(),t.getFormatVersion()>=G._$T7?(this.clipID=t._$nP(),this.clipIDList=this.convertClipIDForV2_11(this.clipID)):this.clipIDList=null,W._$Sb(this._$Lb)},W.prototype.getClipIDList=function(){return this.clipIDList},W.prototype._$Nr=function(t,i){if(i._$IS[0]=!1,i._$Us=v._$Z2(t,this._$GS,i._$IS,this._$Lb),at._$Zs);else if(i._$IS[0])return;i._$7s=v._$br(t,this._$GS,i._$IS,this._$mS)},W.prototype._$2b=function(t){},W.prototype.getDrawDataID=function(){return this._$gP},W.prototype._$j2=function(t){this._$gP=t},W.prototype.getOpacity=function(t,i){return i._$7s},W.prototype._$zS=function(t,i){return i._$Us},W.prototype.getTargetBaseDataID=function(){return this._$dr},W.prototype._$gs=function(t){this._$dr=t},W.prototype._$32=function(){return null!=this._$dr&&this._$dr!=yt._$2o()},W.prototype.getType=function(){},j._$42=0,j.prototype._$1b=function(){return this._$3S},j.prototype.getDrawDataList=function(){return this._$aS},j.prototype._$F0=function(t){this._$NL=t._$nP(),this._$aS=t._$nP(),this._$3S=t._$nP()},j.prototype._$kr=function(t){t._$Zo(this._$3S),t._$xo(this._$aS),this._$3S=null,this._$aS=null},q.prototype=new i,q.loadModel=function(t){var e=new q;return i._$62(e,t),e},q.loadModel=function(t){var e=new q;return i._$62(e,t),e},q._$to=function(){return new q},q._$er=function(t){var i=new _$5("../_$_r/_$t0/_$Ri/_$_P._$d");if(0==i.exists())throw new _$ls("_$t0 _$_ _$6 _$Ui :: "+i._$PL());for(var e=["../_$_r/_$t0/_$Ri/_$_P.512/_$CP._$1","../_$_r/_$t0/_$Ri/_$_P.512/_$vP._$1","../_$_r/_$t0/_$Ri/_$_P.512/_$EP._$1","../_$_r/_$t0/_$Ri/_$_P.512/_$pP._$1"],r=q.loadModel(i._$3b()),o=0;o<e.length;o++){var n=new _$5(e[o]);if(0==n.exists())throw new _$ls("_$t0 _$_ _$6 _$Ui :: "+n._$PL());r.setTexture(o,_$nL._$_o(t,n._$3b()))}return r},q.prototype.setGL=function(t){this._$zo.setGL(t)},q.prototype.setTransform=function(t){this._$zo.setTransform(t)},q.prototype.draw=function(){this._$5S.draw(this._$zo)},q.prototype._$K2=function(){this._$zo._$K2()},q.prototype.setTexture=function(t,i){null==this._$zo&&_._$li("_$Yi for QT _$ki / _$XS() is _$6 _$ui!!"),this._$zo.setTexture(t,i)},q.prototype.setTexture=function(t,i){null==this._$zo&&_._$li("_$Yi for QT _$ki / _$XS() is _$6 _$ui!!"),this._$zo.setTexture(t,i)},q.prototype._$Rs=function(){return this._$zo._$Rs()},q.prototype._$Ds=function(t){this._$zo._$Ds(t)},q.prototype.getDrawParam=function(){return this._$zo},J.prototype=new s,J._$cs="VISIBLE:",J._$ar="LAYOUT:",J.MTN_PREFIX_FADEIN="FADEIN:",J.MTN_PREFIX_FADEOUT="FADEOUT:",J._$Co=0,J._$1T=1,J.loadMotion=function(t){var i=k._$C(t);return J.loadMotion(i)},J.loadMotion=function(t){t instanceof ArrayBuffer&&(t=new DataView(t));var i=new J,e=[0],r=t.byteLength;i._$yT=0;for(var o=0;o<r;++o){var n=Q(t,o),s=n.charCodeAt(0);if("\\n"!=n&&"\\r"!=n)if("#"!=n)if("$"!=n){if(97<=s&&s<=122||65<=s&&s<=90||"_"==n){for(var _=o,a=-1;o<r&&("\\r"!=(n=Q(t,o))&&"\\n"!=n);++o)if("="==n){a=o;break}if(a>=0){var h=new B;O.startsWith(t,_,J._$cs)?(h._$RP=B._$hs,h._$4P=O.createString(t,_,a-_)):O.startsWith(t,_,J._$ar)?(h._$4P=O.createString(t,_+7,a-_-7),O.startsWith(t,_+7,"ANCHOR_X")?h._$RP=B._$xs:O.startsWith(t,_+7,"ANCHOR_Y")?h._$RP=B._$us:O.startsWith(t,_+7,"SCALE_X")?h._$RP=B._$qs:O.startsWith(t,_+7,"SCALE_Y")?h._$RP=B._$Ys:O.startsWith(t,_+7,"X")?h._$RP=B._$ws:O.startsWith(t,_+7,"Y")&&(h._$RP=B._$Ns)):(h._$RP=B._$Fr,h._$4P=O.createString(t,_,a-_)),i.motions.push(h);var l=0,$=[];for(o=a+1;o<r&&("\\r"!=(n=Q(t,o))&&"\\n"!=n);++o)if(","!=n&&" "!=n&&"\\t"!=n){var u=O._$LS(t,r,o,e);if(e[0]>0){$.push(u),l++;var p=e[0];if(p<o){console.log("_$n0 _$hi . @Live2DMotion loadMotion()\\n");break}o=p-1}}h._$I0=new Float32Array($),l>i._$yT&&(i._$yT=l)}}}else{for(var _=o,a=-1;o<r&&("\\r"!=(n=Q(t,o))&&"\\n"!=n);++o)if("="==n){a=o;break}var f=!1;if(a>=0)for(a==_+4&&"f"==Q(t,_+1)&&"p"==Q(t,_+2)&&"s"==Q(t,_+3)&&(f=!0),o=a+1;o<r&&("\\r"!=(n=Q(t,o))&&"\\n"!=n);++o)if(","!=n&&" "!=n&&"\\t"!=n){var u=O._$LS(t,r,o,e);e[0]>0&&f&&5<u&&u<121&&(i._$D0=u),o=e[0]}for(;o<r&&("\\n"!=Q(t,o)&&"\\r"!=Q(t,o));++o);}else for(;o<r&&("\\n"!=Q(t,o)&&"\\r"!=Q(t,o));++o);}return i._$rr=1e3*i._$yT/i._$D0|0,i},J.prototype.getDurationMSec=function(){return this._$E?-1:this._$rr},J.prototype.getLoopDurationMSec=function(){return this._$rr},J.prototype.dump=function(){for(var t=0;t<this.motions.length;t++){var i=this.motions[t];console.log("_$wL[%s] [%d]. ",i._$4P,i._$I0.length);for(var e=0;e<i._$I0.length&&e<10;e++)console.log("%5.2f ,",i._$I0[e]);console.log("\\n")}},J.prototype.updateParamExe=function(t,i,e,r){for(var o=i-r._$z2,n=o*this._$D0/1e3,s=0|n,_=n-s,a=0;a<this.motions.length;a++){var h=this.motions[a],l=h._$I0.length,$=h._$4P;if(h._$RP==B._$hs){var u=h._$I0[s>=l?l-1:s];t.setParamFloat($,u)}else if(B._$ws<=h._$RP&&h._$RP<=B._$Ys);else{var p,f=t.getParamIndex($),c=t.getModelContext(),d=c.getParamMax(f),g=c.getParamMin(f),y=.4*(d-g),m=c.getParamFloat(f),T=h._$I0[s>=l?l-1:s],P=h._$I0[s+1>=l?l-1:s+1];p=T<P&&P-T>y||T>P&&T-P>y?T:T+(P-T)*_;var S=m+(p-m)*e;t.setParamFloat($,S)}}s>=this._$yT&&(this._$E?(r._$z2=i,this.loopFadeIn&&(r._$bs=i)):r._$9L=!0),this._$eP=e},J.prototype._$r0=function(){return this._$E},J.prototype._$aL=function(t){this._$E=t},J.prototype._$S0=function(){return this._$D0},J.prototype._$U0=function(t){this._$D0=t},J.prototype.isLoopFadeIn=function(){return this.loopFadeIn},J.prototype.setLoopFadeIn=function(t){this.loopFadeIn=t},N.prototype.clear=function(){this.size=0},N.prototype.add=function(t){if(this._$P.length<=this.size){var i=new Float32Array(2*this.size);w._$jT(this._$P,0,i,0,this.size),this._$P=i}this._$P[this.size++]=t},N.prototype._$BL=function(){var t=new Float32Array(this.size);return w._$jT(this._$P,0,t,0,this.size),t},B._$Fr=0,B._$hs=1,B._$ws=100,B._$Ns=101,B._$xs=102,B._$us=103,B._$qs=104,B._$Ys=105,Z.prototype=new I,Z._$gT=new Array,Z.prototype._$zP=function(){this._$GS=new D,this._$GS._$zP()},Z.prototype._$F0=function(t){I.prototype._$F0.call(this,t),this._$A=t._$6L(),this._$o=t._$6L(),this._$GS=t._$nP(),this._$Eo=t._$nP(),I.prototype.readV2_opacity.call(this,t)},Z.prototype.init=function(t){var i=new K(this),e=(this._$o+1)*(this._$A+1);return null!=i._$Cr&&(i._$Cr=null),i._$Cr=new Float32Array(2*e),null!=i._$hr&&(i._$hr=null),this._$32()?i._$hr=new Float32Array(2*e):i._$hr=null,i},Z.prototype._$Nr=function(t,i){var e=i;if(this._$GS._$Ur(t)){var r=this._$VT(),o=Z._$gT;o[0]=!1,v._$Vr(t,this._$GS,o,r,this._$Eo,e._$Cr,0,2),i._$Ib(o[0]),this.interpolateOpacity(t,this._$GS,i,o)}},Z.prototype._$2b=function(t,i){var e=i;if(e._$hS(!0),this._$32()){var r=this.getTargetBaseDataID();if(e._$8r==I._$ur&&(e._$8r=t.getBaseDataIndex(r)),e._$8r<0)at._$so&&_._$li("_$L _$0P _$G :: %s",r),e._$hS(!1);else{var o=t.getBaseData(e._$8r),n=t._$q2(e._$8r);if(null!=o&&n._$yo()){var s=n.getTotalScale();e.setTotalScale_notForClient(s);var a=n.getTotalOpacity();e.setTotalOpacity(a*e.getInterpolatedOpacity()),o._$nb(t,n,e._$Cr,e._$hr,this._$VT(),0,2),e._$hS(!0)}else e._$hS(!1)}}else e.setTotalOpacity(e.getInterpolatedOpacity())},Z.prototype._$nb=function(t,i,e,r,o,n,s){var _=i,a=null!=_._$hr?_._$hr:_._$Cr;Z.transformPoints_sdk2(e,r,o,n,s,a,this._$o,this._$A)},Z.transformPoints_sdk2=function(i,e,r,o,n,s,_,a){for(var h,l,$,u=r*n,p=0,f=0,c=0,d=0,g=0,y=0,m=!1,T=o;T<u;T+=n){var P,S,v,L;if(v=i[T],L=i[T+1],P=v*_,S=L*a,P<0||S<0||_<=P||a<=S){var M=_+1;if(!m){m=!0,p=.25*(s[2*(0+0*M)]+s[2*(_+0*M)]+s[2*(0+a*M)]+s[2*(_+a*M)]),f=.25*(s[2*(0+0*M)+1]+s[2*(_+0*M)+1]+s[2*(0+a*M)+1]+s[2*(_+a*M)+1]);var E=s[2*(_+a*M)]-s[2*(0+0*M)],A=s[2*(_+a*M)+1]-s[2*(0+0*M)+1],I=s[2*(_+0*M)]-s[2*(0+a*M)],w=s[2*(_+0*M)+1]-s[2*(0+a*M)+1];c=.5*(E+I),d=.5*(A+w),g=.5*(E-I),y=.5*(A-w),p-=.5*(c+g),f-=.5*(d+y)}if(-2<v&&v<3&&-2<L&&L<3)if(v<=0)if(L<=0){var x=s[2*(0+0*M)],O=s[2*(0+0*M)+1],D=p-2*c,R=f-2*d,b=p-2*g,F=f-2*y,C=p-2*c-2*g,N=f-2*d-2*y,B=.5*(v- -2),U=.5*(L- -2);B+U<=1?(e[T]=C+(b-C)*B+(D-C)*U,e[T+1]=N+(F-N)*B+(R-N)*U):(e[T]=x+(D-x)*(1-B)+(b-x)*(1-U),e[T+1]=O+(R-O)*(1-B)+(F-O)*(1-U))}else if(L>=1){var b=s[2*(0+a*M)],F=s[2*(0+a*M)+1],C=p-2*c+1*g,N=f-2*d+1*y,x=p+3*g,O=f+3*y,D=p-2*c+3*g,R=f-2*d+3*y,B=.5*(v- -2),U=.5*(L-1);B+U<=1?(e[T]=C+(b-C)*B+(D-C)*U,e[T+1]=N+(F-N)*B+(R-N)*U):(e[T]=x+(D-x)*(1-B)+(b-x)*(1-U),e[T+1]=O+(R-O)*(1-B)+(F-O)*(1-U))}else{var G=0|S;G==a&&(G=a-1);var B=.5*(v- -2),U=S-G,Y=G/a,k=(G+1)/a,b=s[2*(0+G*M)],F=s[2*(0+G*M)+1],x=s[2*(0+(G+1)*M)],O=s[2*(0+(G+1)*M)+1],C=p-2*c+Y*g,N=f-2*d+Y*y,D=p-2*c+k*g,R=f-2*d+k*y;B+U<=1?(e[T]=C+(b-C)*B+(D-C)*U,e[T+1]=N+(F-N)*B+(R-N)*U):(e[T]=x+(D-x)*(1-B)+(b-x)*(1-U),e[T+1]=O+(R-O)*(1-B)+(F-O)*(1-U))}else if(1<=v)if(L<=0){var D=s[2*(_+0*M)],R=s[2*(_+0*M)+1],x=p+3*c,O=f+3*d,C=p+1*c-2*g,N=f+1*d-2*y,b=p+3*c-2*g,F=f+3*d-2*y,B=.5*(v-1),U=.5*(L- -2);B+U<=1?(e[T]=C+(b-C)*B+(D-C)*U,e[T+1]=N+(F-N)*B+(R-N)*U):(e[T]=x+(D-x)*(1-B)+(b-x)*(1-U),e[T+1]=O+(R-O)*(1-B)+(F-O)*(1-U))}else if(L>=1){var C=s[2*(_+a*M)],N=s[2*(_+a*M)+1],b=p+3*c+1*g,F=f+3*d+1*y,D=p+1*c+3*g,R=f+1*d+3*y,x=p+3*c+3*g,O=f+3*d+3*y,B=.5*(v-1),U=.5*(L-1);B+U<=1?(e[T]=C+(b-C)*B+(D-C)*U,e[T+1]=N+(F-N)*B+(R-N)*U):(e[T]=x+(D-x)*(1-B)+(b-x)*(1-U),e[T+1]=O+(R-O)*(1-B)+(F-O)*(1-U))}else{var G=0|S;G==a&&(G=a-1);var B=.5*(v-1),U=S-G,Y=G/a,k=(G+1)/a,C=s[2*(_+G*M)],N=s[2*(_+G*M)+1],D=s[2*(_+(G+1)*M)],R=s[2*(_+(G+1)*M)+1],b=p+3*c+Y*g,F=f+3*d+Y*y,x=p+3*c+k*g,O=f+3*d+k*y;B+U<=1?(e[T]=C+(b-C)*B+(D-C)*U,e[T+1]=N+(F-N)*B+(R-N)*U):(e[T]=x+(D-x)*(1-B)+(b-x)*(1-U),e[T+1]=O+(R-O)*(1-B)+(F-O)*(1-U))}else if(L<=0){var V=0|P;V==_&&(V=_-1);var B=P-V,U=.5*(L- -2),X=V/_,z=(V+1)/_,D=s[2*(V+0*M)],R=s[2*(V+0*M)+1],x=s[2*(V+1+0*M)],O=s[2*(V+1+0*M)+1],C=p+X*c-2*g,N=f+X*d-2*y,b=p+z*c-2*g,F=f+z*d-2*y;B+U<=1?(e[T]=C+(b-C)*B+(D-C)*U,e[T+1]=N+(F-N)*B+(R-N)*U):(e[T]=x+(D-x)*(1-B)+(b-x)*(1-U),e[T+1]=O+(R-O)*(1-B)+(F-O)*(1-U))}else if(L>=1){var V=0|P;V==_&&(V=_-1);var B=P-V,U=.5*(L-1),X=V/_,z=(V+1)/_,C=s[2*(V+a*M)],N=s[2*(V+a*M)+1],b=s[2*(V+1+a*M)],F=s[2*(V+1+a*M)+1],D=p+X*c+3*g,R=f+X*d+3*y,x=p+z*c+3*g,O=f+z*d+3*y;B+U<=1?(e[T]=C+(b-C)*B+(D-C)*U,e[T+1]=N+(F-N)*B+(R-N)*U):(e[T]=x+(D-x)*(1-B)+(b-x)*(1-U),e[T+1]=O+(R-O)*(1-B)+(F-O)*(1-U))}else t.err.printf("_$li calc : %.4f , %.4f\\t\\t\\t\\t\\t@@BDBoxGrid\\n",v,L);else e[T]=p+v*c+L*g,e[T+1]=f+v*d+L*y}else l=P-(0|P),$=S-(0|S),h=2*((0|P)+(0|S)*(_+1)),l+$<1?(e[T]=s[h]*(1-l-$)+s[h+2]*l+s[h+2*(_+1)]*$,e[T+1]=s[h+1]*(1-l-$)+s[h+3]*l+s[h+2*(_+1)+1]*$):(e[T]=s[h+2*(_+1)+2]*(l-1+$)+s[h+2*(_+1)]*(1-l)+s[h+2]*(1-$),e[T+1]=s[h+2*(_+1)+3]*(l-1+$)+s[h+2*(_+1)+1]*(1-l)+s[h+3]*(1-$))}},Z.prototype.transformPoints_sdk1=function(t,i,e,r,o,n,s){for(var _,a,h,l,$,u,p,f=i,c=this._$o,d=this._$A,g=o*s,y=null!=f._$hr?f._$hr:f._$Cr,m=n;m<g;m+=s)at._$ts?(_=e[m],a=e[m+1],_<0?_=0:_>1&&(_=1),a<0?a=0:a>1&&(a=1),_*=c,a*=d,h=0|_,l=0|a,h>c-1&&(h=c-1),l>d-1&&(l=d-1),u=_-h,p=a-l,$=2*(h+l*(c+1))):(_=e[m]*c,a=e[m+1]*d,u=_-(0|_),p=a-(0|a),$=2*((0|_)+(0|a)*(c+1))),u+p<1?(r[m]=y[$]*(1-u-p)+y[$+2]*u+y[$+2*(c+1)]*p,r[m+1]=y[$+1]*(1-u-p)+y[$+3]*u+y[$+2*(c+1)+1]*p):(r[m]=y[$+2*(c+1)+2]*(u-1+p)+y[$+2*(c+1)]*(1-u)+y[$+2]*(1-p),r[m+1]=y[$+2*(c+1)+3]*(u-1+p)+y[$+2*(c+1)+1]*(1-u)+y[$+3]*(1-p))},Z.prototype._$VT=function(){return(this._$o+1)*(this._$A+1)},Z.prototype.getType=function(){return I._$_b},K.prototype=new _t,tt._$42=0,tt.prototype._$zP=function(){this._$3S=new Array,this._$aS=new Array},tt.prototype._$F0=function(t){this._$g0=t._$8L(),this.visible=t._$8L(),this._$NL=t._$nP(),this._$3S=t._$nP(),this._$aS=t._$nP()},tt.prototype.init=function(t){var i=new it(this);return i.setPartsOpacity(this.isVisible()?1:0),i},tt.prototype._$6o=function(t){if(null==this._$3S)throw new Error("_$3S _$6 _$Wo@_$6o");this._$3S.push(t)},tt.prototype._$3o=function(t){if(null==this._$aS)throw new Error("_$aS _$6 _$Wo@_$3o");this._$aS.push(t)},tt.prototype._$Zo=function(t){this._$3S=t},tt.prototype._$xo=function(t){this._$aS=t},tt.prototype.isVisible=function(){return this.visible},tt.prototype._$uL=function(){return this._$g0},tt.prototype._$KP=function(t){this.visible=t},tt.prototype._$ET=function(t){this._$g0=t},tt.prototype.getBaseData=function(){return this._$3S},tt.prototype.getDrawData=function(){return this._$aS},tt.prototype._$p2=function(){return this._$NL},tt.prototype._$ob=function(t){this._$NL=t},tt.prototype.getPartsID=function(){return this._$NL},tt.prototype._$MP=function(t){this._$NL=t},it.prototype=new $,it.prototype.getPartsOpacity=function(){return this._$VS},it.prototype.setPartsOpacity=function(t){this._$VS=t},et._$L7=function(){u._$27(),yt._$27(),b._$27(),l._$27()},et.prototype.toString=function(){return this.id},rt.prototype._$F0=function(t){},ot.prototype._$1s=function(){return this._$4S},ot.prototype._$zP=function(){this._$4S=new Array},ot.prototype._$F0=function(t){this._$4S=t._$nP()},ot.prototype._$Ks=function(t){this._$4S.push(t)},nt.tr=new gt,nt._$50=new gt,nt._$Ti=new Array(0,0),nt._$Pi=new Array(0,0),nt._$B=new Array(0,0),nt.prototype._$lP=function(t,i,e,r){this.viewport=new Array(t,i,e,r)},nt.prototype._$bL=function(){this.context.save();var t=this.viewport;null!=t&&(this.context.beginPath(),this.context._$Li(t[0],t[1],t[2],t[3]),this.context.clip())},nt.prototype._$ei=function(){this.context.restore()},nt.prototype.drawElements=function(t,i,e,r,o,n,s,a){try{o!=this._$Qo&&(this._$Qo=o,this.context.globalAlpha=o);for(var h=i.length,l=t.width,$=t.height,u=this.context,p=this._$xP,f=this._$uP,c=this._$6r,d=this._$3r,g=nt.tr,y=nt._$Ti,m=nt._$Pi,T=nt._$B,P=0;P<h;P+=3){u.save();var S=i[P],v=i[P+1],L=i[P+2],M=p+c*e[2*S],E=f+d*e[2*S+1],A=p+c*e[2*v],I=f+d*e[2*v+1],w=p+c*e[2*L],x=f+d*e[2*L+1];s&&(s._$PS(M,E,T),M=T[0],E=T[1],s._$PS(A,I,T),A=T[0],I=T[1],s._$PS(w,x,T),w=T[0],x=T[1]);var O=l*r[2*S],D=$-$*r[2*S+1],R=l*r[2*v],b=$-$*r[2*v+1],F=l*r[2*L],C=$-$*r[2*L+1],N=Math.atan2(b-D,R-O),B=Math.atan2(I-E,A-M),U=A-M,G=I-E,Y=Math.sqrt(U*U+G*G),k=R-O,V=b-D,X=Math.sqrt(k*k+V*V),z=Y/X;It._$ni(F,C,O,D,R-O,b-D,-(b-D),R-O,y),It._$ni(w,x,M,E,A-M,I-E,-(I-E),A-M,m);var H=(m[0]-y[0])/y[1],W=Math.min(O,R,F),j=Math.max(O,R,F),q=Math.min(D,b,C),J=Math.max(D,b,C),Q=Math.floor(W),Z=Math.floor(q),K=Math.ceil(j),tt=Math.ceil(J);g.identity(),g.translate(M,E),g.rotate(B),g.scale(1,m[1]/y[1]),g.shear(H,0),g.scale(z,z),g.rotate(-N),g.translate(-O,-D),g.setContext(u);if(n||(n=1.2),at.IGNORE_EXPAND&&(n=0),at.USE_CACHED_POLYGON_IMAGE){var it=a._$e0;if(it.gl_cacheImage=it.gl_cacheImage||{},!it.gl_cacheImage[P]){var et=nt.createCanvas(K-Q,tt-Z);at.DEBUG_DATA.LDGL_CANVAS_MB=at.DEBUG_DATA.LDGL_CANVAS_MB||0,at.DEBUG_DATA.LDGL_CANVAS_MB+=(K-Q)*(tt-Z)*4;var rt=et.getContext("2d");rt.translate(-Q,-Z),nt.clip(rt,g,n,Y,O,D,R,b,F,C,M,E,A,I,w,x),rt.drawImage(t,0,0),it.gl_cacheImage[P]={cacheCanvas:et,cacheContext:rt}}u.drawImage(it.gl_cacheImage[P].cacheCanvas,Q,Z)}else at.IGNORE_CLIP||nt.clip(u,g,n,Y,O,D,R,b,F,C,M,E,A,I,w,x),at.USE_ADJUST_TRANSLATION&&(W=0,j=l,q=0,J=$),u.drawImage(t,W,q,j-W,J-q,W,q,j-W,J-q);u.restore()}}catch(t){_._$Rb(t)}},nt.clip=function(t,i,e,r,o,n,s,_,a,h,l,$,u,p,f,c){e>.02?nt.expandClip(t,i,e,r,l,$,u,p,f,c):nt.clipWithTransform(t,null,o,n,s,_,a,h)},nt.expandClip=function(t,i,e,r,o,n,s,_,a,h){var l=s-o,$=_-n,u=a-o,p=h-n,f=l*p-$*u>0?e:-e,c=-$,d=l,g=a-s,y=h-_,m=-y,T=g,P=Math.sqrt(g*g+y*y),S=-p,v=u,L=Math.sqrt(u*u+p*p),M=o-f*c/r,E=n-f*d/r,A=s-f*c/r,I=_-f*d/r,w=s-f*m/P,x=_-f*T/P,O=a-f*m/P,D=h-f*T/P,R=o+f*S/L,b=n+f*v/L,F=a+f*S/L,C=h+f*v/L,N=nt._$50;return null!=i._$P2(N)&&(nt.clipWithTransform(t,N,M,E,A,I,w,x,O,D,F,C,R,b),!0)},nt.clipWithTransform=function(t,i,e,r,o,n,s,a){if(arguments.length<7)return void _._$li("err : @LDGL.clip()");if(!(arguments[1]instanceof gt))return void _._$li("err : a[0] is _$6 LDTransform @LDGL.clip()");var h=nt._$B,l=i,$=arguments;if(t.beginPath(),l){l._$PS($[2],$[3],h),t.moveTo(h[0],h[1]);for(var u=4;u<$.length;u+=2)l._$PS($[u],$[u+1],h),t.lineTo(h[0],h[1])}else{t.moveTo($[2],$[3]);for(var u=4;u<$.length;u+=2)t.lineTo($[u],$[u+1])}t.clip()},nt.createCanvas=function(t,i){var e=document.createElement("canvas");return e.setAttribute("width",t),e.setAttribute("height",i),e||_._$li("err : "+e),e},nt.dumpValues=function(){for(var t="",i=0;i<arguments.length;i++)t+="["+i+"]= "+arguments[i].toFixed(3)+" , ";console.log(t)},st.prototype._$F0=function(t){this._$TT=t._$_T(),this._$LT=t._$_T(),this._$FS=t._$_T(),this._$wL=t._$nP()},st.prototype.getMinValue=function(){return this._$TT},st.prototype.getMaxValue=function(){return this._$LT},st.prototype.getDefaultValue=function(){return this._$FS},st.prototype.getParamID=function(){return this._$wL},_t.prototype._$yo=function(){return this._$AT&&!this._$JS},_t.prototype._$hS=function(t){this._$AT=t},_t.prototype._$GT=function(){return this._$e0},_t.prototype._$l2=function(t){this._$IP=t},_t.prototype.getPartsIndex=function(){return this._$IP},_t.prototype._$x2=function(){return this._$JS},_t.prototype._$Ib=function(t){this._$JS=t},_t.prototype.getTotalScale=function(){return this.totalScale},_t.prototype.setTotalScale_notForClient=function(t){this.totalScale=t},_t.prototype.getInterpolatedOpacity=function(){return this._$7s},_t.prototype.setInterpolatedOpacity=function(t){this._$7s=t},_t.prototype.getTotalOpacity=function(t){return this.totalOpacity},_t.prototype.setTotalOpacity=function(t){this.totalOpacity=t},at._$2s="2.1.00_1",at._$Kr=201001e3,at._$sP=!0,at._$so=!0,at._$cb=!1,at._$3T=!0,at._$Ts=!0,at._$fb=!0,at._$ts=!0,at.L2D_DEFORMER_EXTEND=!0,at._$Wb=!1;at._$yr=!1,at._$Zs=!1,at.L2D_NO_ERROR=0,at._$i7=1e3,at._$9s=1001,at._$es=1100,at._$r7=2e3,at._$07=2001,at._$b7=2002,at._$H7=4e3,at.L2D_COLOR_BLEND_MODE_MULT=0,at.L2D_COLOR_BLEND_MODE_ADD=1,at.L2D_COLOR_BLEND_MODE_INTERPOLATE=2,at._$6b=!0,at._$cT=0,at.clippingMaskBufferSize=256,at.glContext=new Array,at.frameBuffers=new Array,at.fTexture=new Array,at.IGNORE_CLIP=!1,at.IGNORE_EXPAND=!1,at.EXPAND_W=2,at.USE_ADJUST_TRANSLATION=!0,at.USE_CANVAS_TRANSFORM=!0,at.USE_CACHED_POLYGON_IMAGE=!1,at.DEBUG_DATA={},at.PROFILE_IOS_SPEED={PROFILE_NAME:"iOS Speed",USE_ADJUST_TRANSLATION:!0,USE_CACHED_POLYGON_IMAGE:!0,EXPAND_W:4},at.PROFILE_IOS_QUALITY={PROFILE_NAME:"iOS HiQ",USE_ADJUST_TRANSLATION:!0,USE_CACHED_POLYGON_IMAGE:!1,EXPAND_W:2},at.PROFILE_IOS_DEFAULT=at.PROFILE_IOS_QUALITY,at.PROFILE_ANDROID={PROFILE_NAME:"Android",USE_ADJUST_TRANSLATION:!1,USE_CACHED_POLYGON_IMAGE:!1,EXPAND_W:2},at.PROFILE_DESKTOP={PROFILE_NAME:"Desktop",USE_ADJUST_TRANSLATION:!1,USE_CACHED_POLYGON_IMAGE:!1,EXPAND_W:2},at.initProfile=function(){Et.isIOS()?at.setupProfile(at.PROFILE_IOS_DEFAULT):Et.isAndroid()?at.setupProfile(at.PROFILE_ANDROID):at.setupProfile(at.PROFILE_DESKTOP)},at.setupProfile=function(t,i){if("number"==typeof t)switch(t){case 9901:t=at.PROFILE_IOS_SPEED;break;case 9902:t=at.PROFILE_IOS_QUALITY;break;case 9903:t=at.PROFILE_IOS_DEFAULT;break;case 9904:t=at.PROFILE_ANDROID;break;case 9905:t=at.PROFILE_DESKTOP;break;default:alert("profile _$6 _$Ui : "+t)}arguments.length<2&&(i=!0),i&&console.log("profile : "+t.PROFILE_NAME);for(var e in t)at[e]=t[e],i&&console.log("  ["+e+"] = "+t[e])},at.init=function(){if(at._$6b){console.log("Live2D %s",at._$2s),at._$6b=!1;!0,at.initProfile()}},at.getVersionStr=function(){return at._$2s},at.getVersionNo=function(){return at._$Kr},at._$sT=function(t){at._$cT=t},at.getError=function(){var t=at._$cT;return at._$cT=0,t},at.dispose=function(){at.glContext=[],at.frameBuffers=[],at.fTexture=[]},at.setGL=function(t,i){var e=i||0;at.glContext[e]=t},at.getGL=function(t){return at.glContext[t]},at.setClippingMaskBufferSize=function(t){at.clippingMaskBufferSize=t},at.getClippingMaskBufferSize=function(){return at.clippingMaskBufferSize},at.deleteBuffer=function(t){at.getGL(t).deleteFramebuffer(at.frameBuffers[t].framebuffer),delete at.frameBuffers[t],delete at.glContext[t]},ht._$r2=function(t){return t<0?0:t>1?1:.5-.5*Math.cos(t*Lt.PI_F)},lt._$fr=-1,lt.prototype.toString=function(){return this._$ib},$t.prototype=new W,$t._$42=0,$t._$Os=30,$t._$ms=0,$t._$ns=1,$t._$_s=2,$t._$gT=new Array,$t.prototype._$_S=function(t){this._$LP=t},$t.prototype.getTextureNo=function(){return this._$LP},$t.prototype._$ZL=function(){return this._$Qi},$t.prototype._$H2=function(){return this._$JP},$t.prototype.getNumPoints=function(){return this._$d0},$t.prototype.getType=function(){return W._$wb},$t.prototype._$B2=function(t,i,e){var r=i,o=null!=r._$hr?r._$hr:r._$Cr;switch(U._$do){default:case U._$Ms:throw new Error("_$L _$ro ");case U._$Qs:for(var n=this._$d0-1;n>=0;--n)o[n*U._$No+4]=e}},$t.prototype._$zP=function(){this._$GS=new D,this._$GS._$zP()},$t.prototype._$F0=function(t){W.prototype._$F0.call(this,t),this._$LP=t._$6L(),this._$d0=t._$6L(),this._$Yo=t._$6L();var i=t._$nP();this._$BP=new Int16Array(3*this._$Yo);for(var e=3*this._$Yo-1;e>=0;--e)this._$BP[e]=i[e];if(this._$Eo=t._$nP(),this._$Qi=t._$nP(),t.getFormatVersion()>=G._$s7){if(this._$JP=t._$6L(),0!=this._$JP){if(0!=(1&this._$JP)){var r=t._$6L();null==this._$5P&&(this._$5P=new Object),this._$5P._$Hb=parseInt(r)}0!=(this._$JP&$t._$Os)?this._$6s=(this._$JP&$t._$Os)>>1:this._$6s=$t._$ms,0!=(32&this._$JP)&&(this.culling=!1)}}else this._$JP=0},$t.prototype.init=function(t){var i=new ut(this),e=this._$d0*U._$No,r=this._$32();switch(null!=i._$Cr&&(i._$Cr=null),i._$Cr=new Float32Array(e),null!=i._$hr&&(i._$hr=null),i._$hr=r?new Float32Array(e):null,U._$do){default:case U._$Ms:if(U._$Ls)for(var o=this._$d0-1;o>=0;--o){var n=o<<1;this._$Qi[n+1]=1-this._$Qi[n+1]}break;case U._$Qs:for(var o=this._$d0-1;o>=0;--o){var n=o<<1,s=o*U._$No,_=this._$Qi[n],a=this._$Qi[n+1];i._$Cr[s]=_,i._$Cr[s+1]=a,i._$Cr[s+4]=0,r&&(i._$hr[s]=_,i._$hr[s+1]=a,i._$hr[s+4]=0)}}return i},$t.prototype._$Nr=function(t,i){var e=i;if(this!=e._$GT()&&console.log("### assert!! ### "),this._$GS._$Ur(t)&&(W.prototype._$Nr.call(this,t,e),!e._$IS[0])){var r=$t._$gT;r[0]=!1,v._$Vr(t,this._$GS,r,this._$d0,this._$Eo,e._$Cr,U._$i2,U._$No)}},$t.prototype._$2b=function(t,i){try{this!=i._$GT()&&console.log("### assert!! ### ");var e=!1;i._$IS[0]&&(e=!0);var r=i;if(!e&&(W.prototype._$2b.call(this,t),this._$32())){var o=this.getTargetBaseDataID();if(r._$8r==W._$ur&&(r._$8r=t.getBaseDataIndex(o)),r._$8r<0)at._$so&&_._$li("_$L _$0P _$G :: %s",o);else{var n=t.getBaseData(r._$8r),s=t._$q2(r._$8r);null==n||s._$x2()?r._$AT=!1:(n._$nb(t,s,r._$Cr,r._$hr,this._$d0,U._$i2,U._$No),r._$AT=!0),r.baseOpacity=s.getTotalOpacity()}}}catch(t){throw t}},$t.prototype.draw=function(t,i,e){if(this!=e._$GT()&&console.log("### assert!! ### "),!e._$IS[0]){var r=e,o=this._$LP;o<0&&(o=1);var n=this.getOpacity(i,r)*e._$VS*e.baseOpacity,s=null!=r._$hr?r._$hr:r._$Cr;t.setClipBufPre_clipContextForDraw(e.clipBufPre_clipContext),t._$WP(this.culling),t._$Uo(o,3*this._$Yo,this._$BP,s,this._$Qi,n,this._$6s,r)}},$t.prototype.dump=function(){console.log("  _$yi( %d ) , _$d0( %d ) , _$Yo( %d ) \\n",this._$LP,this._$d0,this._$Yo),console.log("  _$Oi _$di = { ");for(var t=0;t<this._$BP.length;t++)console.log("%5d ,",this._$BP[t]);console.log("\\n  _$5i _$30");for(var t=0;t<this._$Eo.length;t++){console.log("\\n    _$30[%d] = ",t);for(var i=this._$Eo[t],e=0;e<i.length;e++)console.log("%6.2f, ",i[e])}console.log("\\n")},$t.prototype._$72=function(t){return null==this._$5P?null:this._$5P[t]},$t.prototype.getIndexArray=function(){return this._$BP},ut.prototype=new Mt,ut.prototype.getTransformedPoints=function(){return null!=this._$hr?this._$hr:this._$Cr},pt.prototype._$HT=function(t){this.x=t.x,this.y=t.y},pt.prototype._$HT=function(t,i){this.x=t,this.y=i},ft.prototype=new i,ft.loadModel=function(t){var e=new ft;return i._$62(e,t),e},ft.loadModel=function(t,e){var r=e||0,o=new ft(r);return i._$62(o,t),o},ft._$to=function(){return new ft},ft._$er=function(t){var i=new _$5("../_$_r/_$t0/_$Ri/_$_P._$d");if(0==i.exists())throw new _$ls("_$t0 _$_ _$6 _$Ui :: "+i._$PL());for(var e=["../_$_r/_$t0/_$Ri/_$_P.512/_$CP._$1","../_$_r/_$t0/_$Ri/_$_P.512/_$vP._$1","../_$_r/_$t0/_$Ri/_$_P.512/_$EP._$1","../_$_r/_$t0/_$Ri/_$_P.512/_$pP._$1"],r=ft.loadModel(i._$3b()),o=0;o<e.length;o++){var n=new _$5(e[o]);if(0==n.exists())throw new _$ls("_$t0 _$_ _$6 _$Ui :: "+n._$PL());r.setTexture(o,_$nL._$_o(t,n._$3b()))}return r},ft.prototype.setGL=function(t){at.setGL(t)},ft.prototype.setTransform=function(t){this.drawParamWebGL.setTransform(t)},ft.prototype.update=function(){this._$5S.update(),this._$5S.preDraw(this.drawParamWebGL)},ft.prototype.draw=function(){this._$5S.draw(this.drawParamWebGL)},ft.prototype._$K2=function(){this.drawParamWebGL._$K2()},ft.prototype.setTexture=function(t,i){null==this.drawParamWebGL&&_._$li("_$Yi for QT _$ki / _$XS() is _$6 _$ui!!"),this.drawParamWebGL.setTexture(t,i)},ft.prototype.setTexture=function(t,i){null==this.drawParamWebGL&&_._$li("_$Yi for QT _$ki / _$XS() is _$6 _$ui!!"),this.drawParamWebGL.setTexture(t,i)},ft.prototype._$Rs=function(){return this.drawParamWebGL._$Rs()},ft.prototype._$Ds=function(t){this.drawParamWebGL._$Ds(t)},ft.prototype.getDrawParam=function(){return this.drawParamWebGL},ft.prototype.setMatrix=function(t){this.drawParamWebGL.setMatrix(t)},ft.prototype.setPremultipliedAlpha=function(t){this.drawParamWebGL.setPremultipliedAlpha(t)},ft.prototype.isPremultipliedAlpha=function(){return this.drawParamWebGL.isPremultipliedAlpha()},ft.prototype.setAnisotropy=function(t){this.drawParamWebGL.setAnisotropy(t)},ft.prototype.getAnisotropy=function(){return this.drawParamWebGL.getAnisotropy()},ct.prototype._$tb=function(){return this.motions},ct.prototype.startMotion=function(t,i){for(var e=null,r=this.motions.length,o=0;o<r;++o)null!=(e=this.motions[o])&&(e._$qS(e._$w0.getFadeOut()),this._$eb&&_._$Ji("MotionQueueManager[size:%2d]->startMotion() / start _$K _$3 (m%d)\\n",r,e._$sr));if(null==t)return-1;e=new dt,e._$w0=t,this.motions.push(e);var n=e._$sr;return this._$eb&&_._$Ji("MotionQueueManager[size:%2d]->startMotion() / new _$w0 (m%d)\\n",r,n),n},ct.prototype.updateParam=function(t){try{for(var i=!1,e=0;e<this.motions.length;e++){var r=this.motions[e];if(null!=r){var o=r._$w0;null!=o?(o.updateParam(t,r),i=!0,r.isFinished()&&(this._$eb&&_._$Ji("MotionQueueManager[size:%2d]->updateParam() / _$T0 _$w0 (m%d)\\n",this.motions.length-1,r._$sr),this.motions.splice(e,1),e--)):(this.motions=this.motions.splice(e,1),e--)}else this.motions.splice(e,1),e--}return i}catch(t){return _._$li(t),!0}},ct.prototype.isFinished=function(t){if(arguments.length>=1){for(var i=0;i<this.motions.length;i++){var e=this.motions[i];if(null!=e&&(e._$sr==t&&!e.isFinished()))return!1}return!0}for(var i=0;i<this.motions.length;i++){var e=this.motions[i];if(null!=e){if(null!=e._$w0){if(!e.isFinished())return!1}else this.motions.splice(i,1),i--}else this.motions.splice(i,1),i--}return!0},ct.prototype.stopAllMotions=function(){for(var t=0;t<this.motions.length;t++){var i=this.motions[t];if(null!=i){i._$w0;this.motions.splice(t,1),t--}else this.motions.splice(t,1),t--}},ct.prototype._$Zr=function(t){this._$eb=t},ct.prototype._$e=function(){console.log("-- _$R --\\n");for(var t=0;t<this.motions.length;t++){var i=this.motions[t],e=i._$w0;console.log("MotionQueueEnt[%d] :: %s\\n",this.motions.length,e.toString())}},dt._$Gs=0,dt.prototype.isFinished=function(){return this._$9L},dt.prototype._$qS=function(t){var i=w.getUserTimeMSec(),e=i+t;(this._$Do<0||e<this._$Do)&&(this._$Do=e)},dt.prototype._$Bs=function(){return this._$sr},gt.prototype.setContext=function(t){var i=this.m;t.transform(i[0],i[1],i[3],i[4],i[6],i[7])},gt.prototype.toString=function(){for(var t="LDTransform { ",i=0;i<9;i++)t+=this.m[i].toFixed(2)+" ,";return t+=" }"},gt.prototype.identity=function(){var t=this.m;t[0]=t[4]=t[8]=1,t[1]=t[2]=t[3]=t[5]=t[6]=t[7]=0},gt.prototype._$PS=function(t,i,e){null==e&&(e=new Array(0,0));var r=this.m;return e[0]=r[0]*t+r[3]*i+r[6],e[1]=r[1]*t+r[4]*i+r[7],e},gt.prototype._$P2=function(t){t||(t=new gt);var i=this.m,e=i[0],r=i[1],o=i[2],n=i[3],s=i[4],_=i[5],a=i[6],h=i[7],l=i[8],$=e*s*l+r*_*a+o*n*h-e*_*h-o*s*a-r*n*l;if(0==$)return null;var u=1/$;return t.m[0]=u*(s*l-h*_),t.m[1]=u*(h*o-r*l),t.m[2]=u*(r*_-s*o),t.m[3]=u*(a*_-n*l),t.m[4]=u*(e*l-a*o),t.m[5]=u*(n*o-e*_),t.m[6]=u*(n*h-a*s),t.m[7]=u*(a*r-e*h),t.m[8]=u*(e*s-n*r),t},gt.prototype.transform=function(t,i,e){null==e&&(e=new Array(0,0));var r=this.m;return e[0]=r[0]*t+r[3]*i+r[6],e[1]=r[1]*t+r[4]*i+r[7],e},gt.prototype.translate=function(t,i){var e=this.m;e[6]=e[0]*t+e[3]*i+e[6],e[7]=e[1]*t+e[4]*i+e[7],e[8]=e[2]*t+e[5]*i+e[8]},gt.prototype.scale=function(t,i){var e=this.m;e[0]*=t,e[1]*=t,e[2]*=t,e[3]*=i,e[4]*=i,e[5]*=i},gt.prototype.shear=function(t,i){var e=this.m,r=e[0]+e[3]*i,o=e[1]+e[4]*i,n=e[2]+e[5]*i;e[3]=e[0]*t+e[3],e[4]=e[1]*t+e[4],e[5]=e[2]*t+e[5],e[0]=r,e[1]=o,e[2]=n},gt.prototype.rotate=function(t){var i=this.m,e=Math.cos(t),r=Math.sin(t),o=i[0]*e+i[3]*r,n=i[1]*e+i[4]*r,s=i[2]*e+i[5]*r;i[3]=-i[0]*r+i[3]*e,i[4]=-i[1]*r+i[4]*e,i[5]=-i[2]*r+i[5]*e,i[0]=o,i[1]=n,i[2]=s},gt.prototype.concatenate=function(t){var i=this.m,e=t.m,r=i[0]*e[0]+i[3]*e[1]+i[6]*e[2],o=i[1]*e[0]+i[4]*e[1]+i[7]*e[2],n=i[2]*e[0]+i[5]*e[1]+i[8]*e[2],s=i[0]*e[3]+i[3]*e[4]+i[6]*e[5],_=i[1]*e[3]+i[4]*e[4]+i[7]*e[5],a=i[2]*e[3]+i[5]*e[4]+i[8]*e[5],h=i[0]*e[6]+i[3]*e[7]+i[6]*e[8],l=i[1]*e[6]+i[4]*e[7]+i[7]*e[8],$=i[2]*e[6]+i[5]*e[7]+i[8]*e[8];m[0]=r,m[1]=o,m[2]=n,m[3]=s,m[4]=_,m[5]=a,m[6]=h,m[7]=l,m[8]=$},yt.prototype=new et,yt._$eT=null,yt._$tP=new Object,yt._$2o=function(){return null==yt._$eT&&(yt._$eT=yt.getID("DST_BASE")),yt._$eT},yt._$27=function(){yt._$tP.clear(),yt._$eT=null},yt.getID=function(t){var i=yt._$tP[t];return null==i&&(i=new yt(t),yt._$tP[t]=i),i},yt.prototype._$3s=function(){return new yt},mt.prototype=new E,mt._$9r=function(t){return new Float32Array(t)},mt._$vb=function(t){return new Int16Array(t)},mt._$cr=function(t,i){return null==t||t._$yL()<i.length?(t=mt._$9r(2*i.length),t.put(i),t._$oT(0)):(t.clear(),t.put(i),t._$oT(0)),t},mt._$mb=function(t,i){return null==t||t._$yL()<i.length?(t=mt._$vb(2*i.length),t.put(i),t._$oT(0)):(t.clear(),t.put(i),t._$oT(0)),t},mt._$Hs=function(){return this._$Gr},mt._$as=function(t){this._$Gr=t},mt.prototype.getGL=function(){return this.gl},mt.prototype.setGL=function(t){this.gl=t},mt.prototype.setTransform=function(t){this.transform=t},mt.prototype._$ZT=function(){var t=this.gl;this.firstDraw&&(this.initShader(),this.firstDraw=!1,this.anisotropyExt=t.getExtension("EXT_texture_filter_anisotropic")||t.getExtension("WEBKIT_EXT_texture_filter_anisotropic")||t.getExtension("MOZ_EXT_texture_filter_anisotropic"),this.anisotropyExt&&(this.maxAnisotropy=t.getParameter(this.anisotropyExt.MAX_TEXTURE_MAX_ANISOTROPY_EXT))),t.disable(t.SCISSOR_TEST),t.disable(t.STENCIL_TEST),t.disable(t.DEPTH_TEST),t.frontFace(t.CW),t.enable(t.BLEND),t.colorMask(1,1,1,1),t.bindBuffer(t.ARRAY_BUFFER,null),t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,null)},mt.prototype._$Uo=function(t,i,e,r,o,n,s,_){if(!(n<.01&&null==this.clipBufPre_clipContextMask)){var a=(n>.9&&at.EXPAND_W,this.gl);if(null==this.gl)throw new Error("gl is null");var h=1*this._$C0*n,l=1*this._$tT*n,$=1*this._$WL*n,u=this._$lT*n;if(null!=this.clipBufPre_clipContextMask){a.frontFace(a.CCW),a.useProgram(this.shaderProgram),this._$vS=Tt(a,this._$vS,r),this._$no=Pt(a,this._$no,e),a.enableVertexAttribArray(this.a_position_Loc),a.vertexAttribPointer(this.a_position_Loc,2,a.FLOAT,!1,0,0),this._$NT=Tt(a,this._$NT,o),a.activeTexture(a.TEXTURE1),a.bindTexture(a.TEXTURE_2D,this.textures[t]),a.uniform1i(this.s_texture0_Loc,1),a.enableVertexAttribArray(this.a_texCoord_Loc),a.vertexAttribPointer(this.a_texCoord_Loc,2,a.FLOAT,!1,0,0),a.uniformMatrix4fv(this.u_matrix_Loc,!1,this.getClipBufPre_clipContextMask().matrixForMask);var p=this.getClipBufPre_clipContextMask().layoutChannelNo,f=this.getChannelFlagAsColor(p);a.uniform4f(this.u_channelFlag,f.r,f.g,f.b,f.a);var c=this.getClipBufPre_clipContextMask().layoutBounds;a.uniform4f(this.u_baseColor_Loc,2*c.x-1,2*c.y-1,2*c._$EL()-1,2*c._$5T()-1),a.uniform1i(this.u_maskFlag_Loc,!0)}else if(null!=this.getClipBufPre_clipContextDraw()){a.useProgram(this.shaderProgramOff),this._$vS=Tt(a,this._$vS,r),this._$no=Pt(a,this._$no,e),a.enableVertexAttribArray(this.a_position_Loc_Off),a.vertexAttribPointer(this.a_position_Loc_Off,2,a.FLOAT,!1,0,0),this._$NT=Tt(a,this._$NT,o),a.activeTexture(a.TEXTURE1),a.bindTexture(a.TEXTURE_2D,this.textures[t]),a.uniform1i(this.s_texture0_Loc_Off,1),a.enableVertexAttribArray(this.a_texCoord_Loc_Off),a.vertexAttribPointer(this.a_texCoord_Loc_Off,2,a.FLOAT,!1,0,0),a.uniformMatrix4fv(this.u_clipMatrix_Loc_Off,!1,this.getClipBufPre_clipContextDraw().matrixForDraw),a.uniformMatrix4fv(this.u_matrix_Loc_Off,!1,this.matrix4x4),a.activeTexture(a.TEXTURE2),a.bindTexture(a.TEXTURE_2D,at.fTexture[this.glno]),a.uniform1i(this.s_texture1_Loc_Off,2);var p=this.getClipBufPre_clipContextDraw().layoutChannelNo,f=this.getChannelFlagAsColor(p);a.uniform4f(this.u_channelFlag_Loc_Off,f.r,f.g,f.b,f.a),a.uniform4f(this.u_baseColor_Loc_Off,h,l,$,u)}else a.useProgram(this.shaderProgram),this._$vS=Tt(a,this._$vS,r),this._$no=Pt(a,this._$no,e),a.enableVertexAttribArray(this.a_position_Loc),a.vertexAttribPointer(this.a_position_Loc,2,a.FLOAT,!1,0,0),this._$NT=Tt(a,this._$NT,o),a.activeTexture(a.TEXTURE1),a.bindTexture(a.TEXTURE_2D,this.textures[t]),a.uniform1i(this.s_texture0_Loc,1),a.enableVertexAttribArray(this.a_texCoord_Loc),a.vertexAttribPointer(this.a_texCoord_Loc,2,a.FLOAT,!1,0,0),a.uniformMatrix4fv(this.u_matrix_Loc,!1,this.matrix4x4),a.uniform4f(this.u_baseColor_Loc,h,l,$,u),a.uniform1i(this.u_maskFlag_Loc,!1);this.culling?this.gl.enable(a.CULL_FACE):this.gl.disable(a.CULL_FACE),this.gl.enable(a.BLEND);var d,g,y,m;if(null!=this.clipBufPre_clipContextMask)d=a.ONE,g=a.ONE_MINUS_SRC_ALPHA,y=a.ONE,m=a.ONE_MINUS_SRC_ALPHA;else switch(s){case $t._$ms:d=a.ONE,g=a.ONE_MINUS_SRC_ALPHA,y=a.ONE,m=a.ONE_MINUS_SRC_ALPHA;break;case $t._$ns:d=a.ONE,g=a.ONE,y=a.ZERO,m=a.ONE;break;case $t._$_s:d=a.DST_COLOR,g=a.ONE_MINUS_SRC_ALPHA,y=a.ZERO,m=a.ONE}a.blendEquationSeparate(a.FUNC_ADD,a.FUNC_ADD),a.blendFuncSeparate(d,g,y,m),this.anisotropyExt&&a.texParameteri(a.TEXTURE_2D,this.anisotropyExt.TEXTURE_MAX_ANISOTROPY_EXT,this.maxAnisotropy);var T=e.length;a.drawElements(a.TRIANGLES,T,a.UNSIGNED_SHORT,0),a.bindTexture(a.TEXTURE_2D,null)}},mt.prototype._$Rs=function(){throw new Error("_$Rs")},mt.prototype._$Ds=function(t){throw new Error("_$Ds")},mt.prototype._$K2=function(){for(var t=0;t<this.textures.length;t++){0!=this.textures[t]&&(this.gl._$K2(1,this.textures,t),this.textures[t]=null)}},mt.prototype.setTexture=function(t,i){this.textures[t]=i},mt.prototype.initShader=function(){var t=this.gl;this.loadShaders2(),this.a_position_Loc=t.getAttribLocation(this.shaderProgram,"a_position"),this.a_texCoord_Loc=t.getAttribLocation(this.shaderProgram,"a_texCoord"),this.u_matrix_Loc=t.getUniformLocation(this.shaderProgram,"u_mvpMatrix"),this.s_texture0_Loc=t.getUniformLocation(this.shaderProgram,"s_texture0"),this.u_channelFlag=t.getUniformLocation(this.shaderProgram,"u_channelFlag"),this.u_baseColor_Loc=t.getUniformLocation(this.shaderProgram,"u_baseColor"),this.u_maskFlag_Loc=t.getUniformLocation(this.shaderProgram,"u_maskFlag"),this.a_position_Loc_Off=t.getAttribLocation(this.shaderProgramOff,"a_position"),this.a_texCoord_Loc_Off=t.getAttribLocation(this.shaderProgramOff,"a_texCoord"),this.u_matrix_Loc_Off=t.getUniformLocation(this.shaderProgramOff,"u_mvpMatrix"),this.u_clipMatrix_Loc_Off=t.getUniformLocation(this.shaderProgramOff,"u_ClipMatrix"),this.s_texture0_Loc_Off=t.getUniformLocation(this.shaderProgramOff,"s_texture0"),this.s_texture1_Loc_Off=t.getUniformLocation(this.shaderProgramOff,"s_texture1"),this.u_channelFlag_Loc_Off=t.getUniformLocation(this.shaderProgramOff,"u_channelFlag"),this.u_baseColor_Loc_Off=t.getUniformLocation(this.shaderProgramOff,"u_baseColor")},mt.prototype.disposeShader=function(){var t=this.gl;this.shaderProgram&&(t.deleteProgram(this.shaderProgram),this.shaderProgram=null),this.shaderProgramOff&&(t.deleteProgram(this.shaderProgramOff),this.shaderProgramOff=null)},mt.prototype.compileShader=function(t,i){var e=this.gl,r=i,o=e.createShader(t);if(null==o)return _._$Ji("_$L0 to create shader"),null;if(e.shaderSource(o,r),e.compileShader(o),!e.getShaderParameter(o,e.COMPILE_STATUS)){var n=e.getShaderInfoLog(o);return _._$Ji("_$L0 to compile shader : "+n),e.deleteShader(o),null}return o},mt.prototype.loadShaders2=function(){var t=this.gl;if(this.shaderProgram=t.createProgram(),!this.shaderProgram)return!1;if(this.shaderProgramOff=t.createProgram(),!this.shaderProgramOff)return!1;if(this.vertShader=this.compileShader(t.VERTEX_SHADER,"attribute vec4     a_position;attribute vec2     a_texCoord;varying vec2       v_texCoord;varying vec4       v_ClipPos;uniform mat4       u_mvpMatrix;void main(){    gl_Position = u_mvpMatrix * a_position;    v_ClipPos = u_mvpMatrix * a_position;    v_texCoord = a_texCoord;}"),!this.vertShader)return _._$Ji("Vertex shader compile _$li!"),!1;if(this.vertShaderOff=this.compileShader(t.VERTEX_SHADER,"attribute vec4     a_position;attribute vec2     a_texCoord;varying vec2       v_texCoord;varying vec4       v_ClipPos;uniform mat4       u_mvpMatrix;uniform mat4       u_ClipMatrix;void main(){    gl_Position = u_mvpMatrix * a_position;    v_ClipPos = u_ClipMatrix * a_position;    v_texCoord = a_texCoord ;}"),!this.vertShaderOff)return _._$Ji("OffVertex shader compile _$li!"),!1;if(this.fragShader=this.compileShader(t.FRAGMENT_SHADER,"precision mediump float;varying vec2       v_texCoord;varying vec4       v_ClipPos;uniform sampler2D  s_texture0;uniform vec4       u_channelFlag;uniform vec4       u_baseColor;uniform bool       u_maskFlag;void main(){    vec4 smpColor;     if(u_maskFlag){        float isInside =             step(u_baseColor.x, v_ClipPos.x/v_ClipPos.w)          * step(u_baseColor.y, v_ClipPos.y/v_ClipPos.w)          * step(v_ClipPos.x/v_ClipPos.w, u_baseColor.z)          * step(v_ClipPos.y/v_ClipPos.w, u_baseColor.w);        smpColor = u_channelFlag * texture2D(s_texture0 , v_texCoord).a * isInside;    }else{        smpColor = texture2D(s_texture0 , v_texCoord) * u_baseColor;    }    gl_FragColor = smpColor;}"),!this.fragShader)return _._$Ji("Fragment shader compile _$li!"),!1;if(this.fragShaderOff=this.compileShader(t.FRAGMENT_SHADER,"precision mediump float ;varying vec2       v_texCoord;varying vec4       v_ClipPos;uniform sampler2D  s_texture0;uniform sampler2D  s_texture1;uniform vec4       u_channelFlag;uniform vec4       u_baseColor ;void main(){    vec4 col_formask = texture2D(s_texture0, v_texCoord) * u_baseColor;    vec4 clipMask = texture2D(s_texture1, v_ClipPos.xy / v_ClipPos.w) * u_channelFlag;    float maskVal = clipMask.r + clipMask.g + clipMask.b + clipMask.a;    col_formask = col_formask * maskVal;    gl_FragColor = col_formask;}"),!this.fragShaderOff)return _._$Ji("OffFragment shader compile _$li!"),!1;if(t.attachShader(this.shaderProgram,this.vertShader),t.attachShader(this.shaderProgram,this.fragShader),t.attachShader(this.shaderProgramOff,this.vertShaderOff),t.attachShader(this.shaderProgramOff,this.fragShaderOff),t.linkProgram(this.shaderProgram),t.linkProgram(this.shaderProgramOff),!t.getProgramParameter(this.shaderProgram,t.LINK_STATUS)){var i=t.getProgramInfoLog(this.shaderProgram);return _._$Ji("_$L0 to link program: "+i),this.vertShader&&(t.deleteShader(this.vertShader),this.vertShader=0),this.fragShader&&(t.deleteShader(this.fragShader),this.fragShader=0),this.shaderProgram&&(t.deleteProgram(this.shaderProgram),this.shaderProgram=0),this.vertShaderOff&&(t.deleteShader(this.vertShaderOff),this.vertShaderOff=0),this.fragShaderOff&&(t.deleteShader(this.fragShaderOff),this.fragShaderOff=0),this.shaderProgramOff&&(t.deleteProgram(this.shaderProgramOff),this.shaderProgramOff=0),!1}return!0},mt.prototype.createFramebuffer=function(){var t=this.gl,i=at.clippingMaskBufferSize,e=t.createFramebuffer();t.bindFramebuffer(t.FRAMEBUFFER,e);var r=t.createRenderbuffer();t.bindRenderbuffer(t.RENDERBUFFER,r),t.renderbufferStorage(t.RENDERBUFFER,t.RGBA4,i,i),t.framebufferRenderbuffer(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.RENDERBUFFER,r);var o=t.createTexture();return t.bindTexture(t.TEXTURE_2D,o),t.texImage2D(t.TEXTURE_2D,0,t.RGBA,i,i,0,t.RGBA,t.UNSIGNED_BYTE,null),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MIN_FILTER,t.LINEAR),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MAG_FILTER,t.LINEAR),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_S,t.CLAMP_TO_EDGE),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_T,t.CLAMP_TO_EDGE),t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,o,0),t.bindTexture(t.TEXTURE_2D,null),t.bindRenderbuffer(t.RENDERBUFFER,null),t.bindFramebuffer(t.FRAMEBUFFER,null),at.fTexture[this.glno]=o,{framebuffer:e,renderbuffer:r,texture:at.fTexture[this.glno]}},St.prototype._$fP=function(){var t,i,e,r=this._$ST();if(0==(128&r))return 255&r;if(0==(128&(t=this._$ST())))return(127&r)<<7|127&t;if(0==(128&(i=this._$ST())))return(127&r)<<14|(127&t)<<7|255&i;if(0==(128&(e=this._$ST())))return(127&r)<<21|(127&t)<<14|(127&i)<<7|255&e;throw new lt("_$L _$0P  _")},St.prototype.getFormatVersion=function(){return this._$S2},St.prototype._$gr=function(t){this._$S2=t},St.prototype._$3L=function(){return this._$fP()},St.prototype._$mP=function(){return this._$zT(),this._$F+=8,this._$T.getFloat64(this._$F-8)},St.prototype._$_T=function(){return this._$zT(),this._$F+=4,this._$T.getFloat32(this._$F-4)},St.prototype._$6L=function(){return this._$zT(),this._$F+=4,this._$T.getInt32(this._$F-4)},St.prototype._$ST=function(){return this._$zT(),this._$T.getInt8(this._$F++)},St.prototype._$9T=function(){return this._$zT(),this._$F+=2,this._$T.getInt16(this._$F-2)},St.prototype._$2T=function(){throw this._$zT(),this._$F+=8,new lt("_$L _$q read long")},St.prototype._$po=function(){return this._$zT(),0!=this._$T.getInt8(this._$F++)};var xt=!0;St.prototype._$bT=function(){this._$zT();var t=this._$3L(),i=null;if(xt)try{var e=new ArrayBuffer(2*t);i=new Uint16Array(e);for(var r=0;r<t;++r)i[r]=this._$T.getUint8(this._$F++);return String.fromCharCode.apply(null,i)}catch(t){xt=!1}try{var o=new Array;if(null==i)for(var r=0;r<t;++r)o[r]=this._$T.getUint8(this._$F++);else for(var r=0;r<t;++r)o[r]=i[r];return String.fromCharCode.apply(null,o)}catch(t){console.log("read utf8 / _$rT _$L0 !! : "+t)}},St.prototype._$cS=function(){this._$zT();for(var t=this._$3L(),i=new Int32Array(t),e=0;e<t;e++)i[e]=this._$T.getInt32(this._$F),this._$F+=4;return i},St.prototype._$Tb=function(){this._$zT();for(var t=this._$3L(),i=new Float32Array(t),e=0;e<t;e++)i[e]=this._$T.getFloat32(this._$F),this._$F+=4;return i},St.prototype._$5b=function(){this._$zT();for(var t=this._$3L(),i=new Float64Array(t),e=0;e<t;e++)i[e]=this._$T.getFloat64(this._$F),this._$F+=8;return i},St.prototype._$nP=function(){return this._$Jb(-1)},St.prototype._$Jb=function(t){if(this._$zT(),t<0&&(t=this._$3L()),t==G._$7P){var i=this._$6L();if(0<=i&&i<this._$Ko.length)return this._$Ko[i];throw new lt("_$sL _$4i @_$m0")}var e=this._$4b(t);return this._$Ko.push(e),e},St.prototype._$4b=function(t){if(0==t)return null;if(50==t){var i=this._$bT(),e=b.getID(i);return e}if(51==t){var i=this._$bT(),e=yt.getID(i);return e}if(134==t){var i=this._$bT(),e=l.getID(i);return e}if(60==t){var i=this._$bT(),e=u.getID(i);return e}if(t>=48){var r=G._$9o(t);return null!=r?(r._$F0(this),r):null}switch(t){case 1:return this._$bT();case 10:return new n(this._$6L(),!0);case 11:return new S(this._$mP(),this._$mP(),this._$mP(),this._$mP());case 12:return new S(this._$_T(),this._$_T(),this._$_T(),this._$_T());case 13:return new L(this._$mP(),this._$mP());case 14:return new L(this._$_T(),this._$_T());case 15:for(var o=this._$3L(),e=new Array(o),s=0;s<o;s++)e[s]=this._$nP();return e;case 17:var e=new F(this._$mP(),this._$mP(),this._$mP(),this._$mP(),this._$mP(),this._$mP());return e;case 21:return new h(this._$6L(),this._$6L(),this._$6L(),this._$6L());case 22:return new pt(this._$6L(),this._$6L());case 23:throw new Error("_$L _$ro ");case 16:case 25:return this._$cS();case 26:return this._$5b();case 27:return this._$Tb();case 2:case 3:case 4:case 5:case 6:case 7:case 8:case 9:case 18:case 19:case 20:case 24:case 28:throw new lt("_$6 _$q : _$nP() of 2-9 ,18,19,20,24,28 : "+t);default:throw new lt("_$6 _$q : _$nP() NO _$i : "+t)}},St.prototype._$8L=function(){return 0==this._$hL?this._$v0=this._$ST():8==this._$hL&&(this._$v0=this._$ST(),this._$hL=0),1==(this._$v0>>7-this._$hL++&1)},St.prototype._$zT=function(){0!=this._$hL&&(this._$hL=0)},vt.prototype._$wP=function(t,i,e){for(var r=0;r<e;r++){for(var o=0;o<i;o++){var n=2*(o+r*i);console.log("(% 7.3f , % 7.3f) , ",t[n],t[n+1])}console.log("\\n")}console.log("\\n")},Lt._$2S=Math.PI/180,Lt._$bS=Math.PI/180,Lt._$wS=180/Math.PI,Lt._$NS=180/Math.PI,Lt.PI_F=Math.PI,Lt._$kT=[0,.012368,.024734,.037097,.049454,.061803,.074143,.086471,.098786,.111087,.12337,.135634,.147877,.160098,.172295,.184465,.196606,.208718,.220798,.232844,.244854,.256827,.268761,.280654,.292503,.304308,.316066,.327776,.339436,.351044,.362598,.374097,.385538,.396921,.408243,.419502,.430697,.441826,.452888,.463881,.474802,.485651,.496425,.507124,.517745,.528287,.538748,.549126,.559421,.56963,.579752,.589785,.599728,.609579,.619337,.629,.638567,.648036,.657406,.666676,.675843,.684908,.693867,.70272,.711466,.720103,.72863,.737045,.745348,.753536,.76161,.769566,.777405,.785125,.792725,.800204,.807561,.814793,.821901,.828884,.835739,.842467,.849066,.855535,.861873,.868079,.874153,.880093,.885898,.891567,.897101,.902497,.907754,.912873,.917853,.922692,.92739,.931946,.936359,.940629,.944755,.948737,.952574,.956265,.959809,.963207,.966457,.96956,.972514,.97532,.977976,.980482,.982839,.985045,.987101,.989006,.990759,.992361,.993811,.995109,.996254,.997248,.998088,.998776,.999312,.999694,.999924,1],Lt._$92=function(t,i){var e=Math.atan2(t[1],t[0]),r=Math.atan2(i[1],i[0]);return Lt._$tS(e,r)},Lt._$tS=function(t,i){for(var e=t-i;e<-Math.PI;)e+=2*Math.PI;for(;e>Math.PI;)e-=2*Math.PI;return e},Lt._$9=function(t){return Math.sin(t)},Lt.fcos=function(t){return Math.cos(t)},Mt.prototype._$u2=function(){return this._$IS[0]},Mt.prototype._$yo=function(){return this._$AT&&!this._$IS[0]},Mt.prototype._$GT=function(){return this._$e0},Et._$W2=0,Et.SYSTEM_INFO=null,Et.USER_AGENT=navigator.userAgent,Et.isIPhone=function(){return Et.SYSTEM_INFO||Et.setup(),Et.SYSTEM_INFO._isIPhone},Et.isIOS=function(){return Et.SYSTEM_INFO||Et.setup(),Et.SYSTEM_INFO._isIPhone||Et.SYSTEM_INFO._isIPad},Et.isAndroid=function(){return Et.SYSTEM_INFO||Et.setup(),Et.SYSTEM_INFO._isAndroid},Et.getOSVersion=function(){return Et.SYSTEM_INFO||Et.setup(),Et.SYSTEM_INFO.version},Et.getOS=function(){return Et.SYSTEM_INFO||Et.setup(),Et.SYSTEM_INFO._isIPhone||Et.SYSTEM_INFO._isIPad?"iOS":Et.SYSTEM_INFO._isAndroid?"Android":"_$Q0 OS"},Et.setup=function(){function t(t,i){for(var e=t.substring(i).split(/[ _,;\\.]/),r=0,o=0;o<=2&&!isNaN(e[o]);o++){var n=parseInt(e[o]);if(n<0||n>999){_._$li("err : "+n+" @UtHtml5.setup()"),r=0;break}r+=n*Math.pow(1e3,2-o)}return r}var i,e=Et.USER_AGENT,r=Et.SYSTEM_INFO={userAgent:e};if((i=e.indexOf("iPhone OS "))>=0)r.os="iPhone",r._isIPhone=!0,r.version=t(e,i+"iPhone OS ".length);else if((i=e.indexOf("iPad"))>=0){if((i=e.indexOf("CPU OS"))<0)return void _._$li(" err : "+e+" @UtHtml5.setup()");r.os="iPad",r._isIPad=!0,r.version=t(e,i+"CPU OS ".length)}else(i=e.indexOf("Android"))>=0?(r.os="Android",r._isAndroid=!0,r.version=t(e,i+"Android ".length)):(r.os="-",r.version=-1)},window.UtSystem=w,window.UtDebug=_,window.LDTransform=gt,window.LDGL=nt,window.Live2D=at,window.Live2DModelWebGL=ft,window.Live2DModelJS=q,window.Live2DMotion=J,window.MotionQueueManager=ct,window.PhysicsHair=f,window.AMotion=s,window.PartsDataID=l,window.DrawDataID=b,window.BaseDataID=yt,window.ParamID=u,at.init();var At=!1}()}).call(i,e(7))},function(t,i){t.exports={import:function(){throw new Error("System.import cannot be used indirectly")}}},function(t,i,e){"use strict";function r(t){return t&&t.__esModule?t:{default:t}}function o(){this.models=[],this.count=-1,this.reloadFlg=!1,Live2D.init(),n.Live2DFramework.setPlatformManager(new _.default)}Object.defineProperty(i,"__esModule",{value:!0}),i.default=o;var n=e(0),s=e(9),_=r(s),a=e(10),h=r(a),l=e(1),$=r(l);o.prototype.createModel=function(){var t=new h.default;return this.models.push(t),t},o.prototype.changeModel=function(t,i){if(this.reloadFlg){this.reloadFlg=!1;this.releaseModel(0,t),this.createModel(),this.models[0].load(t,i)}},o.prototype.getModel=function(t){return t>=this.models.length?null:this.models[t]},o.prototype.releaseModel=function(t,i){this.models.length<=t||(this.models[t].release(i),delete this.models[t],this.models.splice(t,1))},o.prototype.numModels=function(){return this.models.length},o.prototype.setDrag=function(t,i){for(var e=0;e<this.models.length;e++)this.models[e].setDrag(t,i)},o.prototype.maxScaleEvent=function(){$.default.DEBUG_LOG&&console.log("Max scale event.");for(var t=0;t<this.models.length;t++)this.models[t].startRandomMotion($.default.MOTION_GROUP_PINCH_IN,$.default.PRIORITY_NORMAL)},o.prototype.minScaleEvent=function(){$.default.DEBUG_LOG&&console.log("Min scale event.");for(var t=0;t<this.models.length;t++)this.models[t].startRandomMotion($.default.MOTION_GROUP_PINCH_OUT,$.default.PRIORITY_NORMAL)},o.prototype.tapEvent=function(t,i){$.default.DEBUG_LOG&&console.log("tapEvent view x:"+t+" y:"+i);for(var e=0;e<this.models.length;e++)this.models[e].hitTest($.default.HIT_AREA_HEAD,t,i)?($.default.DEBUG_LOG&&console.log("Tap face."),this.models[e].setRandomExpression()):this.models[e].hitTest($.default.HIT_AREA_BODY,t,i)?($.default.DEBUG_LOG&&console.log("Tap body. models["+e+"]"),this.models[e].startRandomMotion($.default.MOTION_GROUP_TAP_BODY,$.default.PRIORITY_NORMAL)):this.models[e].hitTestCustom("head",t,i)?($.default.DEBUG_LOG&&console.log("Tap face."),this.models[e].startRandomMotion($.default.MOTION_GROUP_FLICK_HEAD,$.default.PRIORITY_NORMAL)):this.models[e].hitTestCustom("body",t,i)&&($.default.DEBUG_LOG&&console.log("Tap body. models["+e+"]"),this.models[e].startRandomMotion($.default.MOTION_GROUP_TAP_BODY,$.default.PRIORITY_NORMAL));return!0}},function(t,i,e){"use strict";function r(){}Object.defineProperty(i,"__esModule",{value:!0}),i.default=r;var o=e(2);r.prototype.loadBytes=function(t,i){var e=new XMLHttpRequest;e.open("GET",t,!0),e.responseType="arraybuffer",e.onload=function(){switch(e.status){case 200:i(e.response);break;default:console.error("Failed to load ("+e.status+") : "+t)}},e.send(null)},r.prototype.loadString=function(t){this.loadBytes(t,function(t){return t})},r.prototype.loadLive2DModel=function(t,i){var e=null;this.loadBytes(t,function(t){e=Live2DModelWebGL.loadModel(t),i(e)})},r.prototype.loadTexture=function(t,i,e,r){var n=new Image;n.crossOrigin="Anonymous",n.src=e;n.onload=function(){var e=(0,o.getContext)(),s=e.createTexture();if(!s)return console.error("Failed to generate gl texture name."),-1;0==t.isPremultipliedAlpha()&&e.pixelStorei(e.UNPACK_PREMULTIPLY_ALPHA_WEBGL,1),e.pixelStorei(e.UNPACK_FLIP_Y_WEBGL,1),e.activeTexture(e.TEXTURE0),e.bindTexture(e.TEXTURE_2D,s),e.texImage2D(e.TEXTURE_2D,0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,n),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MAG_FILTER,e.LINEAR),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MIN_FILTER,e.LINEAR_MIPMAP_NEAREST),e.generateMipmap(e.TEXTURE_2D),t.setTexture(i,s),s=null,"function"==typeof r&&r()},n.onerror=function(){console.error("Failed to load image : "+e)}},r.prototype.jsonParseFromBytes=function(t){var i,e=new Uint8Array(t,0,3);return i=239==e[0]&&187==e[1]&&191==e[2]?String.fromCharCode.apply(null,new Uint8Array(t,3)):String.fromCharCode.apply(null,new Uint8Array(t)),JSON.parse(i)},r.prototype.log=function(t){}},function(t,i,e){"use strict";function r(t){return t&&t.__esModule?t:{default:t}}function o(){n.L2DBaseModel.prototype.constructor.call(this),this.modelHomeDir="",this.modelSetting=null,this.tmpMatrix=[]}Object.defineProperty(i,"__esModule",{value:!0}),i.default=o;var n=e(0),s=e(11),_=r(s),a=e(1),h=r(a),l=e(3),$=r(l);o.prototype=new n.L2DBaseModel,o.prototype.load=function(t,i,e){this.setUpdating(!0),this.setInitialized(!1),this.modelHomeDir=i.substring(0,i.lastIndexOf("/")+1),this.modelSetting=new _.default;var r=this;this.modelSetting.loadModelSetting(i,function(){var t=r.modelHomeDir+r.modelSetting.getModelFile();r.loadModelData(t,function(t){for(var i=0;i<r.modelSetting.getTextureNum();i++){if(/^https?:\\/\\/|^\\/\\//i.test(r.modelSetting.getTextureFile(i)))var o=r.modelSetting.getTextureFile(i);else var o=r.modelHomeDir+r.modelSetting.getTextureFile(i);r.loadTexture(i,o,function(){if(r.isTexLoaded){if(r.modelSetting.getExpressionNum()>0){r.expressions={};for(var t=0;t<r.modelSetting.getExpressionNum();t++){var i=r.modelSetting.getExpressionName(t),o=r.modelHomeDir+r.modelSetting.getExpressionFile(t);r.loadExpression(i,o)}}else r.expressionManager=null,r.expressions={};if(r.eyeBlink,null!=r.modelSetting.getPhysicsFile()?r.loadPhysics(r.modelHomeDir+r.modelSetting.getPhysicsFile()):r.physics=null,null!=r.modelSetting.getPoseFile()?r.loadPose(r.modelHomeDir+r.modelSetting.getPoseFile(),function(){r.pose.updateParam(r.live2DModel)}):r.pose=null,null!=r.modelSetting.getLayout()){var n=r.modelSetting.getLayout();null!=n.width&&r.modelMatrix.setWidth(n.width),null!=n.height&&r.modelMatrix.setHeight(n.height),null!=n.x&&r.modelMatrix.setX(n.x),null!=n.y&&r.modelMatrix.setY(n.y),null!=n.center_x&&r.modelMatrix.centerX(n.center_x),null!=n.center_y&&r.modelMatrix.centerY(n.center_y),null!=n.top&&r.modelMatrix.top(n.top),null!=n.bottom&&r.modelMatrix.bottom(n.bottom),null!=n.left&&r.modelMatrix.left(n.left),null!=n.right&&r.modelMatrix.right(n.right)}if(null!=r.modelSetting.getHitAreasCustom()){var s=r.modelSetting.getHitAreasCustom();null!=s.head_x&&(h.default.hit_areas_custom_head_x=s.head_x),null!=s.head_y&&(h.default.hit_areas_custom_head_y=s.head_y),null!=s.body_x&&(h.default.hit_areas_custom_body_x=s.body_x),null!=s.body_y&&(h.default.hit_areas_custom_body_y=s.body_y)}for(var t=0;t<r.modelSetting.getInitParamNum();t++)r.live2DModel.setParamFloat(r.modelSetting.getInitParamID(t),r.modelSetting.getInitParamValue(t));for(var t=0;t<r.modelSetting.getInitPartsVisibleNum();t++)r.live2DModel.setPartsOpacity(r.modelSetting.getInitPartsVisibleID(t),r.modelSetting.getInitPartsVisibleValue(t));r.live2DModel.saveParam(),r.preloadMotionGroup(h.default.MOTION_GROUP_IDLE),r.preloadMotionGroup(h.default.MOTION_GROUP_SLEEPY),r.mainMotionManager.stopAllMotions(),r.setUpdating(!1),r.setInitialized(!0),"function"==typeof e&&e()}})}})})},o.prototype.release=function(t){var i=n.Live2DFramework.getPlatformManager();t.deleteTexture(i.texture)},o.prototype.preloadMotionGroup=function(t){for(var i=this,e=0;e<this.modelSetting.getMotionNum(t);e++){var r=this.modelSetting.getMotionFile(t,e);this.loadMotion(r,this.modelHomeDir+r,function(r){r.setFadeIn(i.modelSetting.getMotionFadeIn(t,e)),r.setFadeOut(i.modelSetting.getMotionFadeOut(t,e))})}},o.prototype.update=function(){if(null==this.live2DModel)return void(h.default.DEBUG_LOG&&console.error("Failed to update."));var t=UtSystem.getUserTimeMSec()-this.startTimeMSec,i=t/1e3,e=2*i*Math.PI;if(this.mainMotionManager.isFinished()){"1"===sessionStorage.getItem("Sleepy")?this.startRandomMotion(h.default.MOTION_GROUP_SLEEPY,h.default.PRIORITY_SLEEPY):this.startRandomMotion(h.default.MOTION_GROUP_IDLE,h.default.PRIORITY_IDLE)}this.live2DModel.loadParam(),this.mainMotionManager.updateParam(this.live2DModel)||null!=this.eyeBlink&&this.eyeBlink.updateParam(this.live2DModel),this.live2DModel.saveParam(),null==this.expressionManager||null==this.expressions||this.expressionManager.isFinished()||this.expressionManager.updateParam(this.live2DModel),this.live2DModel.addToParamFloat("PARAM_ANGLE_X",30*this.dragX,1),this.live2DModel.addToParamFloat("PARAM_ANGLE_Y",30*this.dragY,1),this.live2DModel.addToParamFloat("PARAM_ANGLE_Z",this.dragX*this.dragY*-30,1),this.live2DModel.addToParamFloat("PARAM_BODY_ANGLE_X",10*this.dragX,1),this.live2DModel.addToParamFloat("PARAM_EYE_BALL_X",this.dragX,1),this.live2DModel.addToParamFloat("PARAM_EYE_BALL_Y",this.dragY,1),this.live2DModel.addToParamFloat("PARAM_ANGLE_X",Number(15*Math.sin(e/6.5345)),.5),this.live2DModel.addToParamFloat("PARAM_ANGLE_Y",Number(8*Math.sin(e/3.5345)),.5),this.live2DModel.addToParamFloat("PARAM_ANGLE_Z",Number(10*Math.sin(e/5.5345)),.5),this.live2DModel.addToParamFloat("PARAM_BODY_ANGLE_X",Number(4*Math.sin(e/15.5345)),.5),this.live2DModel.setParamFloat("PARAM_BREATH",Number(.5+.5*Math.sin(e/3.2345)),1),null!=this.physics&&this.physics.updateParam(this.live2DModel),null==this.lipSync&&this.live2DModel.setParamFloat("PARAM_MOUTH_OPEN_Y",this.lipSyncValue),null!=this.pose&&this.pose.updateParam(this.live2DModel),this.live2DModel.update()},o.prototype.setRandomExpression=function(){var t=[];for(var i in this.expressions)t.push(i);var e=parseInt(Math.random()*t.length);this.setExpression(t[e])},o.prototype.startRandomMotion=function(t,i){var e=this.modelSetting.getMotionNum(t),r=parseInt(Math.random()*e);this.startMotion(t,r,i)},o.prototype.startMotion=function(t,i,e){var r=this.modelSetting.getMotionFile(t,i);if(null==r||""==r)return void(h.default.DEBUG_LOG&&console.error("Failed to motion."));if(e==h.default.PRIORITY_FORCE)this.mainMotionManager.setReservePriority(e);else if(!this.mainMotionManager.reserveMotion(e))return void(h.default.DEBUG_LOG&&console.log("Motion is running."));var o,n=this;null==this.motions[t]?this.loadMotion(null,this.modelHomeDir+r,function(r){o=r,n.setFadeInFadeOut(t,i,e,o)}):(o=this.motions[t],n.setFadeInFadeOut(t,i,e,o))},o.prototype.setFadeInFadeOut=function(t,i,e,r){var o=this.modelSetting.getMotionFile(t,i);if(r.setFadeIn(this.modelSetting.getMotionFadeIn(t,i)),r.setFadeOut(this.modelSetting.getMotionFadeOut(t,i)),h.default.DEBUG_LOG&&console.log("Start motion : "+o),null==this.modelSetting.getMotionSound(t,i))this.mainMotionManager.startMotionPrio(r,e);else{var n=this.modelSetting.getMotionSound(t,i),s=document.createElement("audio");s.src=this.modelHomeDir+n,h.default.DEBUG_LOG&&console.log("Start sound : "+n),s.play(),this.mainMotionManager.startMotionPrio(r,e)}},o.prototype.setExpression=function(t){var i=this.expressions[t];h.default.DEBUG_LOG&&console.log("Expression : "+t),this.expressionManager.startMotion(i,!1)},o.prototype.draw=function(t){$.default.push(),$.default.multMatrix(this.modelMatrix.getArray()),this.tmpMatrix=$.default.getMatrix(),this.live2DModel.setMatrix(this.tmpMatrix),this.live2DModel.draw(),$.default.pop()},o.prototype.hitTest=function(t,i,e){for(var r=this.modelSetting.getHitAreaNum(),o=0;o<r;o++)if(t==this.modelSetting.getHitAreaName(o)){var n=this.modelSetting.getHitAreaID(o);return this.hitTestSimple(n,i,e)}return!1},o.prototype.hitTestCustom=function(t,i,e){return"head"==t?this.hitTestSimpleCustom(h.default.hit_areas_custom_head_x,h.default.hit_areas_custom_head_y,i,e):"body"==t&&this.hitTestSimpleCustom(h.default.hit_areas_custom_body_x,h.default.hit_areas_custom_body_y,i,e)}},function(t,i,e){"use strict";function r(){this.NAME="name",this.ID="id",this.MODEL="model",this.TEXTURES="textures",this.HIT_AREAS="hit_areas",this.PHYSICS="physics",this.POSE="pose",this.EXPRESSIONS="expressions",this.MOTION_GROUPS="motions",this.SOUND="sound",this.FADE_IN="fade_in",this.FADE_OUT="fade_out",this.LAYOUT="layout",this.HIT_AREAS_CUSTOM="hit_areas_custom",this.INIT_PARAM="init_param",this.INIT_PARTS_VISIBLE="init_parts_visible",this.VALUE="val",this.FILE="file",this.json={}}Object.defineProperty(i,"__esModule",{value:!0}),i.default=r;var o=e(0);r.prototype.loadModelSetting=function(t,i){var e=this;o.Live2DFramework.getPlatformManager().loadBytes(t,function(t){var r=String.fromCharCode.apply(null,new Uint8Array(t));e.json=JSON.parse(r),i()})},r.prototype.getTextureFile=function(t){return null==this.json[this.TEXTURES]||null==this.json[this.TEXTURES][t]?null:this.json[this.TEXTURES][t]},r.prototype.getModelFile=function(){return this.json[this.MODEL]},r.prototype.getTextureNum=function(){return null==this.json[this.TEXTURES]?0:this.json[this.TEXTURES].length},r.prototype.getHitAreaNum=function(){return null==this.json[this.HIT_AREAS]?0:this.json[this.HIT_AREAS].length},r.prototype.getHitAreaID=function(t){return null==this.json[this.HIT_AREAS]||null==this.json[this.HIT_AREAS][t]?null:this.json[this.HIT_AREAS][t][this.ID]},r.prototype.getHitAreaName=function(t){return null==this.json[this.HIT_AREAS]||null==this.json[this.HIT_AREAS][t]?null:this.json[this.HIT_AREAS][t][this.NAME]},r.prototype.getPhysicsFile=function(){return this.json[this.PHYSICS]},r.prototype.getPoseFile=function(){return this.json[this.POSE]},r.prototype.getExpressionNum=function(){return null==this.json[this.EXPRESSIONS]?0:this.json[this.EXPRESSIONS].length},r.prototype.getExpressionFile=function(t){return null==this.json[this.EXPRESSIONS]?null:this.json[this.EXPRESSIONS][t][this.FILE]},r.prototype.getExpressionName=function(t){return null==this.json[this.EXPRESSIONS]?null:this.json[this.EXPRESSIONS][t][this.NAME]},r.prototype.getLayout=function(){return this.json[this.LAYOUT]},r.prototype.getHitAreasCustom=function(){return this.json[this.HIT_AREAS_CUSTOM]},r.prototype.getInitParamNum=function(){return null==this.json[this.INIT_PARAM]?0:this.json[this.INIT_PARAM].length},r.prototype.getMotionNum=function(t){return null==this.json[this.MOTION_GROUPS]||null==this.json[this.MOTION_GROUPS][t]?0:this.json[this.MOTION_GROUPS][t].length},r.prototype.getMotionFile=function(t,i){return null==this.json[this.MOTION_GROUPS]||null==this.json[this.MOTION_GROUPS][t]||null==this.json[this.MOTION_GROUPS][t][i]?null:this.json[this.MOTION_GROUPS][t][i][this.FILE]},r.prototype.getMotionSound=function(t,i){return null==this.json[this.MOTION_GROUPS]||null==this.json[this.MOTION_GROUPS][t]||null==this.json[this.MOTION_GROUPS][t][i]||null==this.json[this.MOTION_GROUPS][t][i][this.SOUND]?null:this.json[this.MOTION_GROUPS][t][i][this.SOUND]},r.prototype.getMotionFadeIn=function(t,i){return null==this.json[this.MOTION_GROUPS]||null==this.json[this.MOTION_GROUPS][t]||null==this.json[this.MOTION_GROUPS][t][i]||null==this.json[this.MOTION_GROUPS][t][i][this.FADE_IN]?1e3:this.json[this.MOTION_GROUPS][t][i][this.FADE_IN]},r.prototype.getMotionFadeOut=function(t,i){return null==this.json[this.MOTION_GROUPS]||null==this.json[this.MOTION_GROUPS][t]||null==this.json[this.MOTION_GROUPS][t][i]||null==this.json[this.MOTION_GROUPS][t][i][this.FADE_OUT]?1e3:this.json[this.MOTION_GROUPS][t][i][this.FADE_OUT]},r.prototype.getInitParamID=function(t){return null==this.json[this.INIT_PARAM]||null==this.json[this.INIT_PARAM][t]?null:this.json[this.INIT_PARAM][t][this.ID]},r.prototype.getInitParamValue=function(t){return null==this.json[this.INIT_PARAM]||null==this.json[this.INIT_PARAM][t]?NaN:this.json[this.INIT_PARAM][t][this.VALUE]},r.prototype.getInitPartsVisibleNum=function(){return null==this.json[this.INIT_PARTS_VISIBLE]?0:this.json[this.INIT_PARTS_VISIBLE].length},r.prototype.getInitPartsVisibleID=function(t){return null==this.json[this.INIT_PARTS_VISIBLE]||null==this.json[this.INIT_PARTS_VISIBLE][t]?null:this.json[this.INIT_PARTS_VISIBLE][t][this.ID]},r.prototype.getInitPartsVisibleValue=function(t){return null==this.json[this.INIT_PARTS_VISIBLE]||null==this.json[this.INIT_PARTS_VISIBLE][t]?NaN:this.json[this.INIT_PARTS_VISIBLE][t][this.VALUE]}}]);\n',document.body.appendChild(t)}var e=new XMLHttpRequest;e.open("get",this.model[this.currentTheme]),e.send(),e.onreadystatechange=function(){200!==e.status&&(console.log("看板娘的CDN资源加载失败了，请稍后刷新页面重试！"),document.querySelector(".kanbanniang").style.display="none")},window.loadlive2d("banniang",this.model[this.currentTheme])}}},$i=(n(422),Object(He.a)(Oi,(function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("div",{staticClass:"kanbanniang"},[n("div",{directives:[{name:"show",rawName:"v-show",value:t.isLoaded,expression:"isLoaded"}],staticClass:"banniang-container"},[n("div",{directives:[{name:"show",rawName:"v-show",value:t.isShowMessageBox,expression:"isShowMessageBox"}],staticClass:"messageBox",style:t.messageStyle},[t._v("\n      "+t._s(t.messages.message||"欢迎来到 "+t.$site.title)+"\n    ")]),t._v(" "),n("div",{directives:[{name:"show",rawName:"v-show",value:!t.isShowBtns,expression:"!isShowBtns"}],staticClass:"operation",style:t.btnStyle,on:{mouseenter:function(e){t.isShowMessageBox=!0},mouseleave:function(e){t.isShowMessageBox=!1}}},[n("i",{staticClass:"kbnfont kbn-ban-home ban-home",on:{click:t.goHome,mouseenter:t.hoverGoHome,mouseleave:t.resetMessage}}),t._v(" "),t._m(0),t._v(" "),n("i",{staticClass:"kbnfont kbn-ban-close close",on:{click:t.closeBanNiang,mouseenter:t.hoverCloseBanNiang,mouseleave:t.resetMessage}}),t._v(" "),n("a",{attrs:{href:"/about/"}},[n("i",{staticClass:"kbnfont kbn-ban-info info",on:{mouseenter:t.hoverMoreInfo,mouseleave:t.resetMessage}})]),t._v(" "),n("i",{directives:[{name:"show",rawName:"v-show",value:t.myTheme.length>1,expression:"myTheme.length > 1"}],staticClass:"kbnfont kbn-ban-theme skin",on:{click:t.changeTheme,mouseenter:t.hoverChangeTheme,mouseleave:t.resetMessage}})]),t._v(" "),n("canvas",{staticClass:"live2d",style:t.modelStyle,attrs:{id:"banniang",width:t.style.width,height:t.style.height}})]),t._v(" "),n("div",{directives:[{name:"show",rawName:"v-show",value:t.displayBanNiang,expression:"displayBanNiang"}],staticClass:"showBanNiang",on:{click:t.showBanNiang}},[t._v("\n    江明\n  ")])])}),[function(){var t=this.$createElement,e=this._self._c||t;return e("a",{attrs:{href:"/comment/"}},[e("i",{staticClass:"kbnfont kbn-ban-message message"})])}],!1,null,"1980b978",null).exports),Ti={name:"SponsorSimple",props:{options:{required:!1,type:Object}},data:function(){return{alipayQR:this.options.alipay,wechatQR:this.options.wechat,qqQR:this.options.qq,paypalURL:this.options.paypal,messageDuration:this.options.duration,currentQRCode:"",currentMessageName:"",isShowMessage:!1,isBlurry:!1,isShowQRContainer:!1,isShowQRCode:!1}},computed:{message:function(){return"主人忘记设置".concat(this.currentMessageName,"啦")}},methods:{showQRCode:function(t,e){if(!t)return this.showMessage(e);this.isShowMessage=!1,this.isBlurry=!0,this.currentQRCode=t,this.isShowQRContainer=!0,this.isShowQRCode=!0},jumpToNewTab:function(t,e){if(!t)return this.showMessage(e);window.open(t,"_blank")},showMessage:function(t){var e=this;this.currentMessageName=t,this.isShowMessage||(this.isShowMessage=!0,setTimeout((function(){e.isShowMessage=!1}),this.messageDuration))},closeQRCode:function(){var t=this;this.isShowQRCode=!1,setTimeout((function(){t.isShowQRContainer=!1,t.isBlurry=!1}),600)}}},Ei=(n(423),{name:"Sponsor",components:{SponsorSimple:Object(He.a)(Ti,(function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("div",{staticClass:"sponsor-container"},[n("div",{staticClass:"sponsor-love position-absolute transition-3ms",class:{blurry:t.isBlurry}},[t._v("\n    Sponsor\n  ")]),t._v(" "),n("a",{staticClass:"sponsor-github position-absolute transition-3ms",class:{blurry:t.isBlurry},attrs:{href:"https://github.com/yokefellow/vuepress-plugin-sponsor",target:"_blank",title:"Github"}}),t._v(" "),n("ul",{staticClass:"sponsor-payment-options transition-3ms",class:{blurry:t.isBlurry}},[n("li",{staticClass:"transition-3ms",attrs:{id:"alipay-option"},on:{click:function(e){return t.showQRCode(t.alipayQR,"支付宝")}}}),t._v(" "),n("li",{staticClass:"transition-3ms",attrs:{id:"wechat-option"},on:{click:function(e){return t.showQRCode(t.wechatQR,"微信支付")}}}),t._v(" "),n("li",{staticClass:"transition-3ms",attrs:{id:"qq-option"},on:{click:function(e){return t.showQRCode(t.qqQR,"QQ支付")}}}),t._v(" "),n("li",{staticClass:"transition-3ms",attrs:{id:"paypal-option"},on:{click:function(e){return t.jumpToNewTab(t.paypalURL,"PayPal")}}})]),t._v(" "),n("transition",{attrs:{name:"fade-qrcode-container"}},[n("div",{directives:[{name:"show",rawName:"v-show",value:t.isShowQRContainer,expression:"isShowQRContainer"}],staticClass:"sponsor-qrcode-container position-absolute"},[n("transition",{attrs:{name:"fade-qrcode"}},[n("div",{directives:[{name:"show",rawName:"v-show",value:t.isShowQRCode,expression:"isShowQRCode"}],staticClass:"sponsor-qrcode-info",style:{backgroundImage:"url("+t.currentQRCode+")",pointerEvents:t.isShowQRCode?"auto":"none"},on:{click:function(e){return t.closeQRCode()}}})])],1)]),t._v(" "),n("transition",{attrs:{name:"fade-message"}},[n("div",{directives:[{name:"show",rawName:"v-show",value:t.isShowMessage,expression:"isShowMessage"}],staticClass:"sponsor-message position-absolute"},[t._v("\n      "+t._s(t.message)+"\n    ")])])],1)}),[],!1,null,"a142c76a",null).exports},data:function(){return{theme:"simple",alipay:"/img/qr/qr-alipay.jpg",wechat:"/img/qr/qr-chat.png",qq:"/img/qr/qr-qq.png",paypal:null,duration:1500}},computed:{options:function(){var t={alipay:this.alipay,wechat:this.wechat,qq:this.qq,paypal:this.paypal,duration:this.duration};return t},componentName:function(){return"simple"===this.theme?"SponsorSimple":"SponsorDrinks"}}}),Ci=Object(He.a)(Ei,(function(){var t=this.$createElement,e=this._self._c||t;return this.$frontmatter.showSponsor?e("div",[e(this.componentName,{tag:"component",attrs:{options:this.options}})],1):this._e()}),[],!1,null,null,null).exports,Ii={name:"DynamicTitle",data:function(){return{originTitle:"",recoverTimeout:null,config:{showIcon:"/img/icon/favicon.ico",showText:"(≧▽≦)欢迎~",hideIcon:"/img/icon/favicon.ico",hideText:"(●—●)要记得回来哦~",recoverTime:1200}}},mounted:function(){var t=this;this.originTitle=document.title,""!==this.config.showIcon&&this.getIconElm().setAttribute("href",this.config.showIcon),document.addEventListener("visibilitychange",(function(){document.hidden?t.hidden():t.visible()}))},methods:{hidden:function(){""!==this.config.hideIcon&&this.getIconElm().setAttribute("href",this.config.hideIcon),document.title=this.config.hideText,clearTimeout(this.recoverTimeout)},visible:function(){var t=this;""!==this.config.showIcon&&this.getIconElm().setAttribute("href",this.config.showIcon),document.title=this.config.showText+this.originTitle,this.recoverTimeout=setTimeout((function(){document.title=t.originTitle}),this.config.recoverTime)},getIconElm:function(){var t=document.querySelector("link[rel=icon]");return null===t&&((t=document.createElement("link")).setAttribute("rel","icon"),document.head.appendChild(t)),t}},watch:{$route:function(t,e){t.path!==e.path&&(this.originTitle=document.title,clearTimeout(this.recoverTimeout))}}},Ai=Object(He.a)(Ii,(function(){var t=this.$createElement;return(this._self._c||t)("div")}),[],!1,null,null,null).exports,ki=[function(t){t.router.beforeEach((function(t,e,n){console.log("switch route to: ",t.fullPath),"undefined"!=typeof _hmt&&t.path&&(_hmt.push(["_trackPageview",t.fullPath]),console.log("report Baidu statistics: ",t.fullPath)),n()}))},function(t){var e=t.Vue,n=t.siteData,r=t.isServer,o=t.router;Object(un.d)(e),e.mixin(Qe),e.mixin(sn),r||(Object(cn.a)("//at.alicdn.com/t/font_1030519_2ciwdtb4x65.css"),Object(cn.b)("//kit.fontawesome.com/51b01de608.js"),Object(ln.d)(n.themeConfig.codeTheme)),Object(ln.c)(o),Object(ln.a)(o)},{},function(t){t.Vue.mixin({computed:{$dataBlock:function(){return this.$options.__data__block__}}})},{},function(t){t.Vue.component("BackToTop",dn)},function(t){t.Vue.component("LoadingPage",hn)},function(t){t.Vue.component("Pagation",_n)},function(t){t.Vue.mixin({computed:{$perPage:function(){return 10}}})},function(t){var e=t.Vue;e.component("Comments",qo),e.component("AccessNumber",Xo)},{},function(t){var e=t.Vue,n=Object.keys(ti).map((function(t){var e,n=ti[t],r="$".concat(t);return e={},Object(Qo.a)(e,r,(function(){var t=this.$site.pages;return new ei(n,t)})),Object(Qo.a)(e,"$current".concat(t.charAt(0).toUpperCase()+t.slice(1)),(function(){var t=this.$route.meta.id;return this[r].getItemByName(t)})),e})).reduce((function(t,e){return Object.assign(t,e),t}),{});n.$frontmatterKey=function(){var t=this["$".concat(this.$route.meta.id)];return t||null},e.mixin({computed:n})},function(t){t.Vue.mixin({computed:{$pagination:function(){return this.$route.meta.pid&&this.$route.meta.id?this.$getPagination(this.$route.meta.pid,this.$route.meta.id):null}},methods:{$getPagination:function(t,e){return e=e||t,ci.getPagination(t,e,this.$route)}}})},function(t){var e={$service:function(){return li}};t.Vue.mixin({computed:e})},ui,function(t){t.Vue.component("CursorEffects",gi)},function(t){t.Vue.component("Boxx",Si)},function(t){t.Vue.component("KanBanNiang",$i)},function(t){t.Vue.component("Sponsor",Ci)},function(t){t.Vue.component("DynamicTitle",Ai)}],Li=["BackToTop","CursorEffects","KanBanNiang","Sponsor","DynamicTitle"];var Pi=function(t){Object(pi.a)(n,t);var e=Object(di.a)(n);function n(){return Object(Ko.a)(this,n),e.apply(this,arguments)}return n}(function(){function t(){Object(Ko.a)(this,t),this.store=new i.default({data:{state:{}}})}return Object(Zo.a)(t,[{key:"$get",value:function(t){return this.store.state[t]}},{key:"$set",value:function(t,e){i.default.set(this.store.state,t,e)}},{key:"$emit",value:function(){var t;(t=this.store).$emit.apply(t,arguments)}},{key:"$on",value:function(){var t;(t=this.store).$on.apply(t,arguments)}}]),t}());Object.assign(Pi.prototype,{getPageAsyncComponent:de,getLayoutAsyncComponent:he,getAsyncComponent:fe,getVueComponent:ve});var Mi={install:function(t){var e=new Pi;t.$vuepress=e,t.prototype.$vuepress=e}};function Ni(t){t.beforeEach((function(e,n,r){if(Di(t,e.path))r();else if(/(\/|\.html)$/.test(e.path))if(/\/$/.test(e.path)){var o=e.path.replace(/\/$/,"")+".html";Di(t,o)?r(o):r()}else r();else{var i=e.path+"/",a=e.path+".html";Di(t,a)?r(a):Di(t,i)?r(i):r()}}))}function Di(t,e){var n=e.toLowerCase();return t.options.routes.some((function(t){return t.path.toLowerCase()===n}))}var ji={props:{pageKey:String,slotKey:{type:String,default:"default"}},render:function(t){var e=this.pageKey||this.$parent.$page.key;return me("pageKey",e),i.default.component(e)||i.default.component(e,de(e)),i.default.component(e)?t(e):t("")}},Ri={functional:!0,props:{slotKey:String,required:!0},render:function(t,e){var n=e.props,r=e.slots;return t("div",{class:["content__".concat(n.slotKey)]},r()[n.slotKey])}},Fi={computed:{openInNewWindowTitle:function(){return this.$themeLocaleConfig.openNewWindowText||"(opens new window)"}}},Ui=(n(424),n(425),Object(He.a)(Fi,(function(){var t=this.$createElement,e=this._self._c||t;return e("span",[e("svg",{staticClass:"icon outbound",attrs:{xmlns:"http://www.w3.org/2000/svg","aria-hidden":"true",focusable:"false",x:"0px",y:"0px",viewBox:"0 0 100 100",width:"15",height:"15"}},[e("path",{attrs:{fill:"currentColor",d:"M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"}}),this._v(" "),e("polygon",{attrs:{fill:"currentColor",points:"45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"}})]),this._v(" "),e("span",{staticClass:"sr-only"},[this._v(this._s(this.openInNewWindowTitle))])])}),[],!1,null,null,null).exports);function Bi(){return(Bi=o(regeneratorRuntime.mark((function t(e){var n,r,o,a;return regeneratorRuntime.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return n="undefined"!=typeof window&&window.__VUEPRESS_ROUTER_BASE__?window.__VUEPRESS_ROUTER_BASE__:Ye.routerBase||Ye.base,Ni(r=new Yt({base:n,mode:"history",fallback:!1,routes:qe,scrollBehavior:function(t,e,n){return n||(t.hash?!i.default.$vuepress.$get("disableScrollBehavior")&&{selector:decodeURIComponent(t.hash)}:{x:0,y:0})}})),o={},t.prev=4,t.next=7,Promise.all(ki.filter((function(t){return"function"==typeof t})).map((function(t){return t({Vue:i.default,options:o,router:r,siteData:Ye,isServer:e})})));case 7:t.next=12;break;case 9:t.prev=9,t.t0=t.catch(4),console.error(t.t0);case 12:return a=new i.default(Object.assign(o,{router:r,render:function(t){return t("div",{attrs:{id:"app"}},[t("RouterView",{ref:"layout"}),t("div",{class:"global-ui"},Li.map((function(e){return t(e)})))])}})),t.abrupt("return",{app:a,router:r});case 14:case"end":return t.stop()}}),t,null,[[4,9]])})))).apply(this,arguments)}i.default.config.productionTip=!1,i.default.use(Yt),i.default.use(Mi),i.default.mixin(function(t,e){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:i.default;Xt(e),n.$vuepress.$set("siteData",e);var r=t(n.$vuepress.$get("siteData")),o=new r,a=Object.getOwnPropertyDescriptors(Object.getPrototypeOf(o)),s={};return Object.keys(a).reduce((function(t,e){return e.startsWith("$")&&(t[e]=a[e].get),t}),s),{computed:s}}((function(t){return function(){function e(){Object(Ko.a)(this,e)}return Object(Zo.a)(e,[{key:"setPage",value:function(t){this.__page=t}},{key:"$site",get:function(){return t}},{key:"$themeConfig",get:function(){return this.$site.themeConfig}},{key:"$frontmatter",get:function(){return this.$page.frontmatter}},{key:"$localeConfig",get:function(){var t,e,n=this.$site.locales,r=void 0===n?{}:n;for(var o in r)"/"===o?e=r[o]:0===this.$page.path.indexOf(o)&&(t=r[o]);return t||e||{}}},{key:"$siteTitle",get:function(){return this.$localeConfig.title||this.$site.title||""}},{key:"$canonicalUrl",get:function(){var t=this.$page.frontmatter.canonicalUrl;return"string"==typeof t&&t}},{key:"$title",get:function(){var t=this.$page,e=this.$page.frontmatter.metaTitle;if("string"==typeof e)return e;var n=this.$siteTitle,r=t.frontmatter.home?null:t.frontmatter.title||t.title;return n?r?r+" | "+n:n:r||"VuePress"}},{key:"$description",get:function(){var t=function(t){if(t){var e=t.filter((function(t){return"description"===t.name}))[0];if(e)return e.content}}(this.$page.frontmatter.meta);return t||(this.$page.frontmatter.description||this.$localeConfig.description||this.$site.description||"")}},{key:"$lang",get:function(){return this.$page.frontmatter.lang||this.$localeConfig.lang||"en-US"}},{key:"$localePath",get:function(){return this.$localeConfig.path||"/"}},{key:"$themeLocaleConfig",get:function(){return(this.$site.themeConfig.locales||{})[this.$localePath]||{}}},{key:"$page",get:function(){return this.__page?this.__page:function(t,e){for(var n=0;n<t.length;n++){var r=t[n];if(r.path.toLowerCase()===e.toLowerCase())return r}return{path:"",frontmatter:{}}}(this.$site.pages,this.$route.path)}}]),e}()}),Ye)),i.default.component("Content",ji),i.default.component("ContentSlotsDistributor",Ri),i.default.component("OutboundLink",Ui),i.default.component("ClientOnly",{functional:!0,render:function(t,e){var n=e.parent,r=e.children;if(n._isMounted)return r;n.$once("hook:mounted",(function(){n.$forceUpdate()}))}}),i.default.component("Layout",he("Layout")),i.default.component("NotFound",he("NotFound")),i.default.prototype.$withBase=function(t){var e=this.$site.base;return"/"===t.charAt(0)?e+t.slice(1):t},window.__VUEPRESS__={version:"1.8.2",hash:"f07e8be"},function(t){return Bi.apply(this,arguments)}(!1).then((function(t){var e=t.app;t.router.onReady((function(){e.$mount("#app")}))}))}]);