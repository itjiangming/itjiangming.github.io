(window.webpackJsonp=window.webpackJsonp||[]).push([[50],{664:function(t,_,v){"use strict";v.r(_);var e=v(5),r=Object(e.a)({},(function(){var t=this,_=t.$createElement,v=t._self._c||_;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("p",[v("code",[t._v("Socket")]),t._v(" 的中文描述是"),v("strong",[t._v("套接字")]),t._v("，所谓套接字，就是对网络中不同主机上的应用进程之间进行双向通信的端点的抽象。一个套接字就是网络上进程通信的一端，提供了应用层进程利用网络协议交换数据的机制。从所处的地位来讲，套接字上联应用进程，下联网络协议栈，是应用程序通过网络协议进行通信的接口，是应用程序与网络协议根进行交互的接口。")]),t._v(" "),v("div",{staticClass:"custom-block tip"},[v("p",{staticClass:"title"}),v("p",[t._v("实现Socket的方式有很多，不同的系统平台，不同的编程语言等都有不同的实现方式，本教程将针对 "),v("code",[t._v("Java")]),t._v(" 语言进行一个 "),v("code",[t._v("JavaSocket")]),t._v(" 系列的相关使用的实践教程。")])]),v("p",[t._v("接下来，一起了解一下 "),v("code",[t._v("Socket")]),t._v(" 的相关的概念和介绍吧~")]),t._v(" "),v("h2",{attrs:{id:"简单介绍"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#简单介绍"}},[t._v("#")]),t._v(" 简单介绍")]),t._v(" "),v("p",[t._v("套接字是通信的基石，是支持"),v("a",{attrs:{href:"https://baike.baidu.com/item/TCP%2FIP%E5%8D%8F%E8%AE%AE/212915",target:"_blank",rel:"noopener noreferrer"}},[t._v("TCP/IP协议"),v("OutboundLink")],1),t._v("的路通信的基本操作单元。可以将套接字看作不同主机间的进程进行双间通信的端点，它构成了单个主机内及整个网络间的编程界面。套接字存在于通信域中，通信域是为了处理一般的线程通过套接字通信而引进的一种抽象概念。套接字通常和同一个域中的套接字交换数据(数据交换也可能穿越域的界限，但这时一定要执行某种解释程序)，各种进程使用这个相同的域互相之间用Internet协议簇来进行通信。")]),t._v(" "),v("p",[t._v("Socket(套接字)可以看成是两个网络应用程序进行通信时，各自通信连接中的端点，这是一个逻辑上的概念。它是网络环境中"),v("a",{attrs:{href:"https://baike.baidu.com/item/%E8%BF%9B%E7%A8%8B%E9%97%B4%E9%80%9A%E4%BF%A1/1235923",target:"_blank",rel:"noopener noreferrer"}},[t._v("进程间通信"),v("OutboundLink")],1),t._v("的API(应用程序编程接口)，也是可以被命名和寻址的通信端点，使用中的每一个套接字都有其类型和一个与之相连进程。通信时其中一个网络应用程序将要传输的一段信息写入它所在主机的 Socket中，该 Socket通过与"),v("a",{attrs:{href:"https://baike.baidu.com/item/%E7%BD%91%E7%BB%9C%E6%8E%A5%E5%8F%A3%E5%8D%A1/9764230",target:"_blank",rel:"noopener noreferrer"}},[t._v("网络接口卡"),v("OutboundLink")],1),t._v("(NIC)相连的传输介质将这段信息送到另外一台主机的 Socket中，使对方能够接收到这段信息。 Socket是由IP地址和端口结合的，提供向应用层进程传送数据包的机制 。")]),t._v(" "),v("h2",{attrs:{id:"表示形式"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#表示形式"}},[t._v("#")]),t._v(" 表示形式")]),t._v(" "),v("p",[t._v("套接字 Socket=（IP地址：端口号），套接字的表示方法是点分十进制的lP地址后面写上端口号，中间用冒号或逗号隔开。每一个传输层连接唯一地被通信两端的两个端点（即两个套接字）所确定。")]),t._v(" "),v("p",[t._v("例如：如果IP地址是192.168.1.1，端口号是22，那么得到套接字就是：192.168.1.1:22")]),t._v(" "),v("h2",{attrs:{id:"主要类型"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#主要类型"}},[t._v("#")]),t._v(" 主要类型")]),t._v(" "),v("p",[v("strong",[t._v("1. 流套接字 (SOCK_STREAM)")])]),t._v(" "),v("p",[t._v("流套接字用于提供面向连接、可靠的数据传输服务。该服务将保证数据能够实现无差错、无重复送，并按顺序接收。流套接字之所以能够实现可靠的数据服务，原因在于其使用了"),v("a",{attrs:{href:"https://baike.baidu.com/item/%E4%BC%A0%E8%BE%93%E6%8E%A7%E5%88%B6%E5%8D%8F%E8%AE%AE/9727741",target:"_blank",rel:"noopener noreferrer"}},[t._v("传输控制协议"),v("OutboundLink")],1),t._v("，即 TCP (The Transmission Control Protocol) 协议 。")]),t._v(" "),v("p",[v("strong",[t._v("2. 数据报套接字 (SOCK_DGRAM)")])]),t._v(" "),v("p",[t._v("数据报套接字提供一种无连接的服务。该服务并不能保证数据传输的可靠性,数据有可能在传输过程中丢失或出现数据重复，且无法保证顺序地接收到数据。数据报套接字使用UDP( User DatagramProtocol)协议进行数据的传输。由于数据报套接字不能保证数据传输的可靠性，对于有可能出现的数据丢失情况，需要在程序中做相应的处理。")]),t._v(" "),v("p",[v("strong",[t._v("3. 原始套接字 (SOCK_RAW)")])]),t._v(" "),v("p",[t._v("原始套接字与标准套接字(标准套接字指的是前面介绍的流套接字和数据报套接字)的区别在于：原始套接字可以读写内核没有处理的IP数据包，而流套接字只能读取TCP协议的数据，数据报套接字只能读取UDP协议的数据。因此，如果要访问其他协议发送的数据必须使用原始套接。")]),t._v(" "),v("h2",{attrs:{id:"工作流程"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#工作流程"}},[t._v("#")]),t._v(" 工作流程")]),t._v(" "),v("p",[t._v("要通过互联网进行通信，至少需要一对套接字，其中一个运行于客户端，我们称之为 Client Socket，另一个运行于服务器端，我们称之为 Server Socket。")]),t._v(" "),v("p",[t._v("根据连接启动的方式以及本地套接字要连接的目标，套接字之间的连接过程可以分为三个步骤：")]),t._v(" "),v("p",[v("strong",[t._v("1. 服务器监听")])]),t._v(" "),v("p",[t._v("所谓服务器监听，是指服务器端套接字并不定位具体的客户端套接字，而是处于等待连接的状态，实时监控网络状态。")]),t._v(" "),v("p",[v("strong",[t._v("2. 客户端请求")])]),t._v(" "),v("p",[t._v("所谓客户端请求，是指由客户端的套接字提出连接请求，要连接的目标是服务器端的套接字。为此，客户端的套接字必须首先描述它要连接的服务器的套接字，指出服务器端套接字的地址和端口号，然后就向服务器端接字提出连接请求。")]),t._v(" "),v("p",[v("strong",[t._v("3. 连接确认")])]),t._v(" "),v("p",[t._v("所谓连接确认，是指当服务器端套接字监听到或者说接收到客户端套接字的连接请求，就会响应客户端套接字的请求，建立一个新的线程，并把服务器端套接字的描述发送给客户端。一旦客户端确认了此描述，连接就建立好了。而服务器端套接字继续处于监听状态，接收其他客户端套接字的连接请求 。")]),t._v(" "),v("h2",{attrs:{id:"主要特点"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#主要特点"}},[t._v("#")]),t._v(" 主要特点")]),t._v(" "),v("p",[t._v("根据套接字的不同类型，可以将套接字调用分为"),v("code",[t._v("面向连接服务")]),t._v("和"),v("code",[t._v("无连接服务")]),t._v("。")]),t._v(" "),v("p",[v("strong",[t._v("面向连接服务的主要特点如下：")])]),t._v(" "),v("p",[t._v("(1) 数据传输过程必须经过建立连接、维护连接和释放连接3个阶段；")]),t._v(" "),v("p",[t._v("(2) 在传输过程中，各分组不需要携带目的主机的地址；")]),t._v(" "),v("p",[t._v("(3) 可靠性好，但由于协议复杂，通信效率不高。")]),t._v(" "),v("p",[v("strong",[t._v("面向无连接服务的主要特点如下：")])]),t._v(" "),v("p",[t._v("(1) 不需要连接的各个阶段；")]),t._v(" "),v("p",[t._v("(2) 每个分组都携带完整的目的主机地址，在系统中独立传送；")]),t._v(" "),v("p",[t._v("(3) 由于没有顺序控制，所以接收方的分组可能出现乱序、重复和丢失现象；")]),t._v(" "),v("p",[t._v("(4) 通信效率高，但可靠性不能确保。")])])}),[],!1,null,null,null);_.default=r.exports}}]);